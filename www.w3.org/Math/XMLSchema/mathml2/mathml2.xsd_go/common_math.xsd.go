//	Auto-generated by the "go-xsd" package located at:
//		github.com/metaleap/go-xsd
//	Comments on types and fields (if any) are from the XSD file located at:
//		www.w3.org/Math/XMLSchema/mathml2/common/math.xsd
package gopkg_WwwW3OrgMathXMLSchemaMathml2Mathml2Xsd

//	This is an XML Schema module defining the "math" element of MathML.
//	Author: St√©phane Dalmas, INRIA.
import (
	xsdt "github.com/metaleap/go-xsd/types"
)

type XsdGoPkgHasAttr_Baseline_XsdtString_ struct {
	Baseline xsdt.String `xml:"http://www.w3.org/1998/Math/MathML baseline,attr"`
}

type TxsdBrowserInterfaceAttribOverflow xsdt.String

//	Since TxsdBrowserInterfaceAttribOverflow is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdBrowserInterfaceAttribOverflow) SetFromString (s string) { (*xsdt.String)(me).SetFromString(s) }

//	Since TxsdBrowserInterfaceAttribOverflow is just a simple String type, this merely returns the current string value.
func (me TxsdBrowserInterfaceAttribOverflow) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TxsdBrowserInterfaceAttribOverflow's alias type xsdt.String
func (me TxsdBrowserInterfaceAttribOverflow) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TxsdBrowserInterfaceAttribOverflow is "scroll".
func (me TxsdBrowserInterfaceAttribOverflow) IsScroll () bool { return me == "scroll" }

//	Returns true if the value of this enumerated TxsdBrowserInterfaceAttribOverflow is "elide".
func (me TxsdBrowserInterfaceAttribOverflow) IsElide () bool { return me == "elide" }

//	Returns true if the value of this enumerated TxsdBrowserInterfaceAttribOverflow is "truncate".
func (me TxsdBrowserInterfaceAttribOverflow) IsTruncate () bool { return me == "truncate" }

//	Returns true if the value of this enumerated TxsdBrowserInterfaceAttribOverflow is "scale".
func (me TxsdBrowserInterfaceAttribOverflow) IsScale () bool { return me == "scale" }

type XsdGoPkgHasAttr_Overflow_TxsdBrowserInterfaceAttribOverflow_Scroll struct {
	Overflow TxsdBrowserInterfaceAttribOverflow `xml:"http://www.w3.org/1998/Math/MathML overflow,attr"`
}

//	Returns the Default value for Overflow -- "scroll"
func (me *XsdGoPkgHasAttr_Overflow_TxsdBrowserInterfaceAttribOverflow_Scroll) OverflowDefault () TxsdBrowserInterfaceAttribOverflow { return TxsdBrowserInterfaceAttribOverflow("scroll") }

type XsdGoPkgHasAttr_Altimg_XsdtAnyURI_ struct {
	Altimg xsdt.AnyURI `xml:"http://www.w3.org/1998/Math/MathML altimg,attr"`
}

type XsdGoPkgHasAttr_Alttext_XsdtString_ struct {
	Alttext xsdt.String `xml:"http://www.w3.org/1998/Math/MathML alttext,attr"`
}

type XsdGoPkgHasAttr_Type_XsdtString_ struct {
	Type xsdt.String `xml:"http://www.w3.org/1998/Math/MathML type,attr"`
}

type XsdGoPkgHasAttr_Name_XsdtString_ struct {
	Name xsdt.String `xml:"http://www.w3.org/1998/Math/MathML name,attr"`
}

type XsdGoPkgHasAttr_Height_XsdtString_ struct {
	Height xsdt.String `xml:"http://www.w3.org/1998/Math/MathML height,attr"`
}

type XsdGoPkgHasAttr_Width_XsdtString_ struct {
	Width xsdt.String `xml:"http://www.w3.org/1998/Math/MathML width,attr"`
}

type XsdGoPkgHasAtts_BrowserInterfaceAttrib struct {
	XsdGoPkgHasAttr_Baseline_XsdtString_
	XsdGoPkgHasAttr_Overflow_TxsdBrowserInterfaceAttribOverflow_Scroll
	XsdGoPkgHasAttr_Altimg_XsdtAnyURI_
	XsdGoPkgHasAttr_Alttext_XsdtString_
	XsdGoPkgHasAttr_Type_XsdtString_
	XsdGoPkgHasAttr_Name_XsdtString_
	XsdGoPkgHasAttr_Height_XsdtString_
	XsdGoPkgHasAttr_Width_XsdtString_
}

type XsdGoPkgHasAttr_Macros_XsdtString_ struct {
	Macros xsdt.String `xml:"http://www.w3.org/1998/Math/MathML macros,attr"`
}

type TxsdMathAttlistDisplay xsdt.String

//	Since TxsdMathAttlistDisplay is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdMathAttlistDisplay) SetFromString (s string) { (*xsdt.String)(me).SetFromString(s) }

//	Since TxsdMathAttlistDisplay is just a simple String type, this merely returns the current string value.
func (me TxsdMathAttlistDisplay) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TxsdMathAttlistDisplay's alias type xsdt.String
func (me TxsdMathAttlistDisplay) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TxsdMathAttlistDisplay is "block".
func (me TxsdMathAttlistDisplay) IsBlock () bool { return me == "block" }

//	Returns true if the value of this enumerated TxsdMathAttlistDisplay is "inline".
func (me TxsdMathAttlistDisplay) IsInline () bool { return me == "inline" }

type XsdGoPkgHasAttr_Display_TxsdMathAttlistDisplay_Inline struct {
	Display TxsdMathAttlistDisplay `xml:"http://www.w3.org/1998/Math/MathML display,attr"`
}

//	Returns the Default value for Display -- "inline"
func (me *XsdGoPkgHasAttr_Display_TxsdMathAttlistDisplay_Inline) DisplayDefault () TxsdMathAttlistDisplay { return TxsdMathAttlistDisplay("inline") }

type XsdGoPkgHasAtts_MathAttlist struct {
	XsdGoPkgHasAtts_BrowserInterfaceAttrib

	XsdGoPkgHasAtts_CommonAttrib

	XsdGoPkgHasAttr_Macros_XsdtString_
	XsdGoPkgHasAttr_Display_TxsdMathAttlistDisplay_Inline
}

type TmathType struct {
	XsdGoPkgHasGroup_MathContent

	XsdGoPkgHasAtts_MathAttlist

}

type XsdGoPkgHasElem_Math struct {
	Math *TmathType `xml:"http://www.w3.org/1998/Math/MathML math"`
}

type XsdGoPkgHasElems_Math struct {
	Maths []*TmathType `xml:"http://www.w3.org/1998/Math/MathML math"`
}

type XsdGoPkgHasGroup_PresentationExprClass struct {
	XsdGoPkgHasGroup_PresExprClass

	XsdGoPkgHasGroup_ContExprClass

}

type XsdGoPkgHasGroup_ContentExprClass struct {
	XsdGoPkgHasGroup_ContExprClass

	XsdGoPkgHasGroup_PresExprClass

}

type XsdGoPkgHasGroup_PresExprClass struct {
	XsdGoPkgHasElem_Mspace

	XsdGoPkgHasElem_Maction

	XsdGoPkgHasElem_Merror

	XsdGoPkgHasElem_Mstyle

	XsdGoPkgHasGroup_PresentationTokenClass

	XsdGoPkgHasGroup_PresentationLayoutClass

	XsdGoPkgHasGroup_PresentationScriptClass

	XsdGoPkgHasGroup_PresentationTableClass

}

type XsdGoPkgHasGroup_ContExprClass struct {
	XsdGoPkgHasElem_Semantics

	XsdGoPkgHasGroup_ContentTokensClass

	XsdGoPkgHasGroup_ContentArithClass

	XsdGoPkgHasGroup_ContentFunctionsClass

	XsdGoPkgHasGroup_ContentLogicClass

	XsdGoPkgHasGroup_ContentConstantsClass

	XsdGoPkgHasGroup_ContentSetsClass

	XsdGoPkgHasGroup_ContentRelationsClass

	XsdGoPkgHasGroup_ContentElementaryFunctionsClass

	XsdGoPkgHasGroup_ContentCalculusClass

	XsdGoPkgHasGroup_ContentLinearAlgebraClass

	XsdGoPkgHasGroup_ContentVectorCalculusClass

	XsdGoPkgHasGroup_ContentStatisticsClass

	XsdGoPkgHasGroup_ContentConstructsClass

}

type XsdGoPkgHasGroup_MathContent struct {
	XsdGoPkgHasGroup_PresExprClass

	XsdGoPkgHasGroup_ContExprClass

}
