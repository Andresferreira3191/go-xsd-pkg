//	Auto-generated by the "go-xsd" package located at:
//		github.com/metaleap/go-xsd
//	Comments on types and fields (if any) are from the XSD file located at:
//		www.w3.org/Math/XMLSchema/mathml2/content/arith.xsd
package gopkg_WwwW3OrgMathXMLSchemaMathml2Mathml2Xsd

//	This is an XML Schema module for the "arithmetic" operators of content
//	MathML.
//	Author: St√©phane Dalmas, INRIA.
import (
)

type TArithType struct {
	XsdGoPkgHasAtts_DefinitionAttrib

	XsdGoPkgHasAtts_CommonAttrib

}

type XsdGoPkgHasElems_Abs struct {
	Abses []*TArithType `xml:"http://www.w3.org/1998/Math/MathML abs"`
}

type XsdGoPkgHasElem_Abs struct {
	Abs *TArithType `xml:"http://www.w3.org/1998/Math/MathML abs"`
}

type XsdGoPkgHasElems_Conjugate struct {
	Conjugates []*TArithType `xml:"http://www.w3.org/1998/Math/MathML conjugate"`
}

type XsdGoPkgHasElem_Conjugate struct {
	Conjugate *TArithType `xml:"http://www.w3.org/1998/Math/MathML conjugate"`
}

type XsdGoPkgHasElems_Arg struct {
	Args []*TArithType `xml:"http://www.w3.org/1998/Math/MathML arg"`
}

type XsdGoPkgHasElem_Arg struct {
	Arg *TArithType `xml:"http://www.w3.org/1998/Math/MathML arg"`
}

type XsdGoPkgHasElem_Real struct {
	Real *TArithType `xml:"http://www.w3.org/1998/Math/MathML real"`
}

type XsdGoPkgHasElems_Real struct {
	Reals []*TArithType `xml:"http://www.w3.org/1998/Math/MathML real"`
}

type XsdGoPkgHasElem_Imaginary struct {
	Imaginary *TArithType `xml:"http://www.w3.org/1998/Math/MathML imaginary"`
}

type XsdGoPkgHasElems_Imaginary struct {
	Imaginaries []*TArithType `xml:"http://www.w3.org/1998/Math/MathML imaginary"`
}

type XsdGoPkgHasElem_Floor struct {
	Floor *TArithType `xml:"http://www.w3.org/1998/Math/MathML floor"`
}

type XsdGoPkgHasElems_Floor struct {
	Floors []*TArithType `xml:"http://www.w3.org/1998/Math/MathML floor"`
}

type XsdGoPkgHasElems_Ceiling struct {
	Ceilings []*TArithType `xml:"http://www.w3.org/1998/Math/MathML ceiling"`
}

type XsdGoPkgHasElem_Ceiling struct {
	Ceiling *TArithType `xml:"http://www.w3.org/1998/Math/MathML ceiling"`
}

type XsdGoPkgHasElems_Power struct {
	Powers []*TArithType `xml:"http://www.w3.org/1998/Math/MathML power"`
}

type XsdGoPkgHasElem_Power struct {
	Power *TArithType `xml:"http://www.w3.org/1998/Math/MathML power"`
}

type XsdGoPkgHasElem_Root struct {
	Root *TArithType `xml:"http://www.w3.org/1998/Math/MathML root"`
}

type XsdGoPkgHasElems_Root struct {
	Roots []*TArithType `xml:"http://www.w3.org/1998/Math/MathML root"`
}

type XsdGoPkgHasElems_Minus struct {
	Minuses []*TArithType `xml:"http://www.w3.org/1998/Math/MathML minus"`
}

type XsdGoPkgHasElem_Minus struct {
	Minus *TArithType `xml:"http://www.w3.org/1998/Math/MathML minus"`
}

type XsdGoPkgHasElems_Plus struct {
	Pluses []*TArithType `xml:"http://www.w3.org/1998/Math/MathML plus"`
}

type XsdGoPkgHasElem_Plus struct {
	Plus *TArithType `xml:"http://www.w3.org/1998/Math/MathML plus"`
}

type XsdGoPkgHasElems_Sum struct {
	Sums []*TArithType `xml:"http://www.w3.org/1998/Math/MathML sum"`
}

type XsdGoPkgHasElem_Sum struct {
	Sum *TArithType `xml:"http://www.w3.org/1998/Math/MathML sum"`
}

type XsdGoPkgHasElem_Times struct {
	Times *TArithType `xml:"http://www.w3.org/1998/Math/MathML times"`
}

type XsdGoPkgHasElems_Times struct {
	Timeses []*TArithType `xml:"http://www.w3.org/1998/Math/MathML times"`
}

type XsdGoPkgHasElems_Product struct {
	Products []*TArithType `xml:"http://www.w3.org/1998/Math/MathML product"`
}

type XsdGoPkgHasElem_Product struct {
	Product *TArithType `xml:"http://www.w3.org/1998/Math/MathML product"`
}

type XsdGoPkgHasElems_Max struct {
	Maxs []*TArithType `xml:"http://www.w3.org/1998/Math/MathML max"`
}

type XsdGoPkgHasElem_Max struct {
	Max *TArithType `xml:"http://www.w3.org/1998/Math/MathML max"`
}

type XsdGoPkgHasElem_Min struct {
	Min *TArithType `xml:"http://www.w3.org/1998/Math/MathML min"`
}

type XsdGoPkgHasElems_Min struct {
	Mins []*TArithType `xml:"http://www.w3.org/1998/Math/MathML min"`
}

type XsdGoPkgHasElem_Factorial struct {
	Factorial *TArithType `xml:"http://www.w3.org/1998/Math/MathML factorial"`
}

type XsdGoPkgHasElems_Factorial struct {
	Factorials []*TArithType `xml:"http://www.w3.org/1998/Math/MathML factorial"`
}

type XsdGoPkgHasElem_Quotient struct {
	Quotient *TArithType `xml:"http://www.w3.org/1998/Math/MathML quotient"`
}

type XsdGoPkgHasElems_Quotient struct {
	Quotients []*TArithType `xml:"http://www.w3.org/1998/Math/MathML quotient"`
}

type XsdGoPkgHasElems_Divide struct {
	Divides []*TArithType `xml:"http://www.w3.org/1998/Math/MathML divide"`
}

type XsdGoPkgHasElem_Divide struct {
	Divide *TArithType `xml:"http://www.w3.org/1998/Math/MathML divide"`
}

type XsdGoPkgHasElem_Rem struct {
	Rem *TArithType `xml:"http://www.w3.org/1998/Math/MathML rem"`
}

type XsdGoPkgHasElems_Rem struct {
	Rems []*TArithType `xml:"http://www.w3.org/1998/Math/MathML rem"`
}

type XsdGoPkgHasElem_Gcd struct {
	Gcd *TArithType `xml:"http://www.w3.org/1998/Math/MathML gcd"`
}

type XsdGoPkgHasElems_Gcd struct {
	Gcds []*TArithType `xml:"http://www.w3.org/1998/Math/MathML gcd"`
}

type XsdGoPkgHasElem_Lcm struct {
	Lcm *TArithType `xml:"http://www.w3.org/1998/Math/MathML lcm"`
}

type XsdGoPkgHasElems_Lcm struct {
	Lcms []*TArithType `xml:"http://www.w3.org/1998/Math/MathML lcm"`
}

type XsdGoPkgHasGroup_ContentArithClass struct {
	XsdGoPkgHasElem_Abs

	XsdGoPkgHasElem_Conjugate

	XsdGoPkgHasElem_Factorial

	XsdGoPkgHasElem_Arg

	XsdGoPkgHasElem_Real

	XsdGoPkgHasElem_Imaginary

	XsdGoPkgHasElem_Floor

	XsdGoPkgHasElem_Ceiling

	XsdGoPkgHasElem_Quotient

	XsdGoPkgHasElem_Divide

	XsdGoPkgHasElem_Rem

	XsdGoPkgHasElem_Minus

	XsdGoPkgHasElem_Plus

	XsdGoPkgHasElem_Times

	XsdGoPkgHasElem_Power

	XsdGoPkgHasElem_Root

	XsdGoPkgHasElem_Max

	XsdGoPkgHasElem_Min

	XsdGoPkgHasElem_Gcd

	XsdGoPkgHasElem_Lcm

	XsdGoPkgHasElem_Sum

	XsdGoPkgHasElem_Product

}
