//	Auto-generated by the "go-xsd" package located at:
//		github.com/metaleap/go-xsd
//	Comments on types and fields (if any) are from the XSD file located at:
//		docbook.org/xml/5.0/xsd/docbook.xsd
package go_Docbook



import (
	xml "github.com/metaleap/go-xsd-pkg/docbook.org/xml/5.0/xsd/xml.xsd_go"
	xsdt "github.com/metaleap/go-xsd/types"
	xlink "github.com/metaleap/go-xsd-pkg/docbook.org/xml/5.0/xsd/xlink.xsd_go"
)

type XsdGoPkgHasAttr_Xreflabel_XsdtString_ struct {
	Xreflabel xsdt.String `xml:"http://docbook.org/ns/docbook xreflabel,attr"`

}

type XsdGoPkgHasAttr_Os_XsdtString_ struct {
	Os xsdt.String `xml:"http://docbook.org/ns/docbook os,attr"`

}

type XsdGoPkgHasAttr_Annotations_XsdtString_ struct {
	Annotations xsdt.String `xml:"http://docbook.org/ns/docbook annotations,attr"`

}

type TxsdDbCommonAttributesDir xsdt.Token

//	Returns true if the value of this enumerated TxsdDbCommonAttributesDir is "rlo".
func (me TxsdDbCommonAttributesDir) IsRlo () bool { return me == "rlo" }

//	Returns true if the value of this enumerated TxsdDbCommonAttributesDir is "ltr".
func (me TxsdDbCommonAttributesDir) IsLtr () bool { return me == "ltr" }

//	Since TxsdDbCommonAttributesDir is just a simple String type, this merely returns the current string value.
func (me TxsdDbCommonAttributesDir) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdDbCommonAttributesDir is "rtl".
func (me TxsdDbCommonAttributesDir) IsRtl () bool { return me == "rtl" }

//	This convenience method just performs a simple type conversion to TxsdDbCommonAttributesDir's alias type xsdt.Token.
func (me TxsdDbCommonAttributesDir) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdDbCommonAttributesDir is "lro".
func (me TxsdDbCommonAttributesDir) IsLro () bool { return me == "lro" }

//	Since TxsdDbCommonAttributesDir is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdDbCommonAttributesDir) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Dir_TxsdDbCommonAttributesDir_ struct {
	Dir TxsdDbCommonAttributesDir `xml:"http://docbook.org/ns/docbook dir,attr"`

}

type XsdGoPkgHasAttr_Wordsize_XsdtString_ struct {
	Wordsize xsdt.String `xml:"http://docbook.org/ns/docbook wordsize,attr"`

}

type XsdGoPkgHasAttr_Arch_XsdtString_ struct {
	Arch xsdt.String `xml:"http://docbook.org/ns/docbook arch,attr"`

}

type TxsdDbCommonAttributesRevisionflag xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdDbCommonAttributesRevisionflag's alias type xsdt.Token.
func (me TxsdDbCommonAttributesRevisionflag) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdDbCommonAttributesRevisionflag is "added".
func (me TxsdDbCommonAttributesRevisionflag) IsAdded () bool { return me == "added" }

//	Since TxsdDbCommonAttributesRevisionflag is just a simple String type, this merely returns the current string value.
func (me TxsdDbCommonAttributesRevisionflag) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdDbCommonAttributesRevisionflag is "off".
func (me TxsdDbCommonAttributesRevisionflag) IsOff () bool { return me == "off" }

//	Since TxsdDbCommonAttributesRevisionflag is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdDbCommonAttributesRevisionflag) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdDbCommonAttributesRevisionflag is "changed".
func (me TxsdDbCommonAttributesRevisionflag) IsChanged () bool { return me == "changed" }

//	Returns true if the value of this enumerated TxsdDbCommonAttributesRevisionflag is "deleted".
func (me TxsdDbCommonAttributesRevisionflag) IsDeleted () bool { return me == "deleted" }

type XsdGoPkgHasAttr_Revisionflag_TxsdDbCommonAttributesRevisionflag_ struct {
	Revisionflag TxsdDbCommonAttributesRevisionflag `xml:"http://docbook.org/ns/docbook revisionflag,attr"`

}

type XsdGoPkgHasAttr_Remap_XsdtString_ struct {
	Remap xsdt.String `xml:"http://docbook.org/ns/docbook remap,attr"`

}

type XsdGoPkgHasAttr_Security_XsdtString_ struct {
	Security xsdt.String `xml:"http://docbook.org/ns/docbook security,attr"`

}

type XsdGoPkgHasAttr_Version_XsdtString_ struct {
	Version xsdt.String `xml:"http://docbook.org/ns/docbook version,attr"`

}

type XsdGoPkgHasAttr_Conformance_XsdtString_ struct {
	Conformance xsdt.String `xml:"http://docbook.org/ns/docbook conformance,attr"`

}

type XsdGoPkgHasAttr_Revision_XsdtString_ struct {
	Revision xsdt.String `xml:"http://docbook.org/ns/docbook revision,attr"`

}

type XsdGoPkgHasAttr_Userlevel_XsdtString_ struct {
	Userlevel xsdt.String `xml:"http://docbook.org/ns/docbook userlevel,attr"`

}

type XsdGoPkgHasAttr_Audience_XsdtString_ struct {
	Audience xsdt.String `xml:"http://docbook.org/ns/docbook audience,attr"`

}

type XsdGoPkgHasAttr_Condition_XsdtString_ struct {
	Condition xsdt.String `xml:"http://docbook.org/ns/docbook condition,attr"`

}

type XsdGoPkgHasAttr_Vendor_XsdtString_ struct {
	Vendor xsdt.String `xml:"http://docbook.org/ns/docbook vendor,attr"`

}

type XsdGoPkgHasAtts_DbCommonAttributes struct {
	XsdGoPkgHasAttr_Xreflabel_XsdtString_

	XsdGoPkgHasAttr_Os_XsdtString_

	xml.XsdGoPkgHasAttr_Lang

	XsdGoPkgHasAttr_Annotations_XsdtString_

	xml.XsdGoPkgHasAttr_Id

	XsdGoPkgHasAttr_Dir_TxsdDbCommonAttributesDir_

	XsdGoPkgHasAttr_Wordsize_XsdtString_

	XsdGoPkgHasAttr_Arch_XsdtString_

	XsdGoPkgHasAttr_Revisionflag_TxsdDbCommonAttributesRevisionflag_

	XsdGoPkgHasAttr_Remap_XsdtString_

	XsdGoPkgHasAttr_Security_XsdtString_

	XsdGoPkgHasAttr_Version_XsdtString_

	XsdGoPkgHasAttr_Conformance_XsdtString_

	XsdGoPkgHasAttr_Revision_XsdtString_

	XsdGoPkgHasAttr_Userlevel_XsdtString_

	xml.XsdGoPkgHasAttr_Base

	XsdGoPkgHasAttr_Audience_XsdtString_

	XsdGoPkgHasAttr_Condition_XsdtString_

	XsdGoPkgHasAttr_Vendor_XsdtString_

}

type XsdGoPkgHasAttr_Linkend_XsdtIdref_ struct {
	Linkend xsdt.Idref `xml:"http://docbook.org/ns/docbook linkend,attr"`

}

type XsdGoPkgHasAtts_DbCommonLinkingAttributes struct {
	xlink.XsdGoPkgHasAttr_Href

	xlink.XsdGoPkgHasAttr_Actuate

	xlink.XsdGoPkgHasAttr_Show

	xlink.XsdGoPkgHasAttr_Role

	xlink.XsdGoPkgHasAttr_Arcrole

	xlink.XsdGoPkgHasAttr_Title

	xlink.XsdGoPkgHasAttr_Type

	XsdGoPkgHasAttr_Linkend_XsdtIdref_

}

type XsdGoPkgHasAttr_Targetptr_XsdtString_ struct {
	Targetptr xsdt.String `xml:"http://docbook.org/ns/docbook targetptr,attr"`

}

type XsdGoPkgHasCdata struct {
	XsdGoPkgCDATA string `xml:",chardata"`

}

//	If the WalkHandlers.XsdGoPkgHasCdata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasCdata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasCdata instance.
func (me *XsdGoPkgHasCdata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasCdata; fn != nil { fn(me) }
 }

type XsdGoPkgHasAttr_Role_XsdtString_ struct {
	Role xsdt.String `xml:"http://docbook.org/ns/docbook role,attr"`

}

type XsdGoPkgHasElem_Alt struct {
	Alt *TxsdAlt `xml:"http://docbook.org/ns/docbook alt"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Alt function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Alt instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_Alt instance.
func (me *XsdGoPkgHasElem_Alt) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Alt; fn != nil { fn(me) }
 }

type TxsdVideodataAlign xsdt.Token

//	Returns true if the value of this enumerated TxsdVideodataAlign is "char".
func (me TxsdVideodataAlign) IsChar () bool { return me == "char" }

//	Returns true if the value of this enumerated TxsdVideodataAlign is "left".
func (me TxsdVideodataAlign) IsLeft () bool { return me == "left" }

//	This convenience method just performs a simple type conversion to TxsdVideodataAlign's alias type xsdt.Token.
func (me TxsdVideodataAlign) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdVideodataAlign is "center".
func (me TxsdVideodataAlign) IsCenter () bool { return me == "center" }

//	Since TxsdVideodataAlign is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdVideodataAlign) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdVideodataAlign is "justify".
func (me TxsdVideodataAlign) IsJustify () bool { return me == "justify" }

//	Since TxsdVideodataAlign is just a simple String type, this merely returns the current string value.
func (me TxsdVideodataAlign) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdVideodataAlign is "right".
func (me TxsdVideodataAlign) IsRight () bool { return me == "right" }

type XsdGoPkgHasAttr_Align_TxsdVideodataAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Contentdepth_XsdtString_ struct {
	Contentdepth xsdt.String `xml:"http://docbook.org/ns/docbook contentdepth,attr"`

}

type XsdGoPkgHasAttr_Depth_XsdtString_ struct {
	Depth xsdt.String `xml:"http://docbook.org/ns/docbook depth,attr"`

}

type XsdGoPkgHasAttr_Fileref_XsdtString_ struct {
	Fileref xsdt.String `xml:"http://docbook.org/ns/docbook fileref,attr"`

}

type TxsdVideodataValign xsdt.Token

//	Returns true if the value of this enumerated TxsdVideodataValign is "middle".
func (me TxsdVideodataValign) IsMiddle () bool { return me == "middle" }

//	Returns true if the value of this enumerated TxsdVideodataValign is "bottom".
func (me TxsdVideodataValign) IsBottom () bool { return me == "bottom" }

//	Since TxsdVideodataValign is just a simple String type, this merely returns the current string value.
func (me TxsdVideodataValign) String () string { return xsdt.Token(me).String() }

//	Since TxsdVideodataValign is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdVideodataValign) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdVideodataValign is "top".
func (me TxsdVideodataValign) IsTop () bool { return me == "top" }

//	This convenience method just performs a simple type conversion to TxsdVideodataValign's alias type xsdt.Token.
func (me TxsdVideodataValign) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Valign_TxsdVideodataValign_ struct {
	Valign TxsdVideodataValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type XsdGoPkgHasAttr_Format_XsdtString_ struct {
	Format xsdt.String `xml:"http://docbook.org/ns/docbook format,attr"`

}

type TxsdVideodataScalefit xsdt.Token

//	Since TxsdVideodataScalefit is just a simple String type, this merely returns the current string value.
func (me TxsdVideodataScalefit) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdVideodataScalefit's alias type xsdt.Token.
func (me TxsdVideodataScalefit) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdVideodataScalefit is "0".
func (me TxsdVideodataScalefit) Is0 () bool { return me == "0" }

//	Since TxsdVideodataScalefit is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdVideodataScalefit) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdVideodataScalefit is "1".
func (me TxsdVideodataScalefit) Is1 () bool { return me == "1" }

type XsdGoPkgHasAttr_Scalefit_TxsdVideodataScalefit_ struct {
	Scalefit TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook scalefit,attr"`

}

type XsdGoPkgHasAttr_Width_XsdtString_ struct {
	Width xsdt.String `xml:"http://docbook.org/ns/docbook width,attr"`

}

type XsdGoPkgHasAttr_Contentwidth_XsdtString_ struct {
	Contentwidth xsdt.String `xml:"http://docbook.org/ns/docbook contentwidth,attr"`

}

type XsdGoPkgHasAttr_Scale_XsdtNmtoken_ struct {
	Scale xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook scale,attr"`

}

type XsdGoPkgHasAttr_Entityref_XsdtEntity_ struct {
	Entityref xsdt.Entity `xml:"http://docbook.org/ns/docbook entityref,attr"`

}

type TxsdVideodata struct {
	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Contentdepth_XsdtString_

	XsdGoPkgHasAttr_Depth_XsdtString_

	XsdGoPkgHasAttr_Fileref_XsdtString_

	XsdGoPkgHasAttr_Valign_TxsdVideodataValign_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Format_XsdtString_

	XsdGoPkgHasAttr_Scalefit_TxsdVideodataScalefit_

	XsdGoPkgHasAttr_Width_XsdtString_

	XsdGoPkgHasAttr_Contentwidth_XsdtString_

	XsdGoPkgHasAttr_Scale_XsdtNmtoken_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Entityref_XsdtEntity_

	XsdGoPkgHasAttr_Align_TxsdVideodataAlign_

}

//	If the WalkHandlers.TxsdVideodata function is not nil (ie. was set by outside code), calls it with this TxsdVideodata instance as the single argument. Then calls the Walk() method on 0/14 embed(s) and 0/0 field(s) belonging to this TxsdVideodata instance.
func (me *TxsdVideodata) Walk ()  { 
	if fn := WalkHandlers.TxsdVideodata; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Videodata struct {
	Videodata *TxsdVideodata `xml:"http://docbook.org/ns/docbook videodata"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Videodata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Videodata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Videodata instance.
func (me *XsdGoPkgHasElem_Videodata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Videodata; fn != nil { fn(me) }
	me.Videodata.Walk()
 }

type TxsdVideoobject struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Videodata

}

//	If the WalkHandlers.TxsdVideoobject function is not nil (ie. was set by outside code), calls it with this TxsdVideoobject instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TxsdVideoobject instance.
func (me *TxsdVideoobject) Walk ()  { 
	if fn := WalkHandlers.TxsdVideoobject; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Videodata.Walk()
 }

type XsdGoPkgHasElems_Videoobject struct {
	Videoobjects []*TxsdVideoobject `xml:"http://docbook.org/ns/docbook videoobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Videoobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Videoobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Videoobject instance.
func (me *XsdGoPkgHasElems_Videoobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Videoobject; fn != nil { fn(me) }
	for _, x := range me.Videoobjects { x.Walk() }
 }

type TxsdAudiodata struct {
	XsdGoPkgHasAttr_Fileref_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Format_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Entityref_XsdtEntity_

}

//	If the WalkHandlers.TxsdAudiodata function is not nil (ie. was set by outside code), calls it with this TxsdAudiodata instance as the single argument. Then calls the Walk() method on 0/6 embed(s) and 0/0 field(s) belonging to this TxsdAudiodata instance.
func (me *TxsdAudiodata) Walk ()  { 
	if fn := WalkHandlers.TxsdAudiodata; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Audiodata struct {
	Audiodata *TxsdAudiodata `xml:"http://docbook.org/ns/docbook audiodata"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Audiodata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Audiodata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Audiodata instance.
func (me *XsdGoPkgHasElem_Audiodata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Audiodata; fn != nil { fn(me) }
	me.Audiodata.Walk()
 }

type TxsdAudioobject struct {
	XsdGoPkgHasElem_Audiodata

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdAudioobject function is not nil (ie. was set by outside code), calls it with this TxsdAudioobject instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TxsdAudioobject instance.
func (me *TxsdAudioobject) Walk ()  { 
	if fn := WalkHandlers.TxsdAudioobject; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Audiodata.Walk()
 }

type XsdGoPkgHasElems_Audioobject struct {
	Audioobjects []*TxsdAudioobject `xml:"http://docbook.org/ns/docbook audioobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Audioobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Audioobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Audioobject instance.
func (me *XsdGoPkgHasElems_Audioobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Audioobject; fn != nil { fn(me) }
	for _, x := range me.Audioobjects { x.Walk() }
 }

type XsdGoPkgHasAttr_Begin_XsdtNmtoken_ struct {
	Begin xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook begin,attr"`

}

type XsdGoPkgHasAttr_Units_XsdtNmtoken_ struct {
	Units xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook units,attr"`

}

type XsdGoPkgHasAttr_End_XsdtNmtoken_ struct {
	End xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook end,attr"`

}

type XsdGoPkgHasAttr_Endterm_XsdtIdref_ struct {
	Endterm xsdt.Idref `xml:"http://docbook.org/ns/docbook endterm,attr"`

}

type XsdGoPkgHasAttr_Xrefstyle_XsdtString_ struct {
	Xrefstyle xsdt.String `xml:"http://docbook.org/ns/docbook xrefstyle,attr"`

}

type TxsdBiblioref struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Begin_XsdtNmtoken_

	XsdGoPkgHasAttr_Units_XsdtNmtoken_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_End_XsdtNmtoken_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Endterm_XsdtIdref_

	XsdGoPkgHasAttr_Xrefstyle_XsdtString_

}

//	If the WalkHandlers.TxsdBiblioref function is not nil (ie. was set by outside code), calls it with this TxsdBiblioref instance as the single argument. Then calls the Walk() method on 0/8 embed(s) and 0/0 field(s) belonging to this TxsdBiblioref instance.
func (me *TxsdBiblioref) Walk ()  { 
	if fn := WalkHandlers.TxsdBiblioref; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Biblioref struct {
	Bibliorefs []*TxsdBiblioref `xml:"http://docbook.org/ns/docbook biblioref"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Biblioref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Biblioref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Biblioref instance.
func (me *XsdGoPkgHasElems_Biblioref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Biblioref; fn != nil { fn(me) }
	for _, x := range me.Bibliorefs { x.Walk() }
 }

type TxsdAnchor struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdAnchor function is not nil (ie. was set by outside code), calls it with this TxsdAnchor instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdAnchor instance.
func (me *TxsdAnchor) Walk ()  { 
	if fn := WalkHandlers.TxsdAnchor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Anchor struct {
	Anchors []*TxsdAnchor `xml:"http://docbook.org/ns/docbook anchor"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Anchor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Anchor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Anchor instance.
func (me *XsdGoPkgHasElems_Anchor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Anchor; fn != nil { fn(me) }
	for _, x := range me.Anchors { x.Walk() }
 }

type TxsdXref struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Endterm_XsdtIdref_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Xrefstyle_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdXref function is not nil (ie. was set by outside code), calls it with this TxsdXref instance as the single argument. Then calls the Walk() method on 0/5 embed(s) and 0/0 field(s) belonging to this TxsdXref instance.
func (me *TxsdXref) Walk ()  { 
	if fn := WalkHandlers.TxsdXref; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Xref struct {
	Xrefs []*TxsdXref `xml:"http://docbook.org/ns/docbook xref"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Xref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Xref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Xref instance.
func (me *XsdGoPkgHasElems_Xref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Xref; fn != nil { fn(me) }
	for _, x := range me.Xrefs { x.Walk() }
 }

type TxsdInterfacename struct {
	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasCdata

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdInterfacename function is not nil (ie. was set by outside code), calls it with this TxsdInterfacename instance as the single argument. Then calls the Walk() method on 4/18 embed(s) and 0/0 field(s) belonging to this TxsdInterfacename instance.
func (me *TxsdInterfacename) Walk ()  { 
	if fn := WalkHandlers.TxsdInterfacename; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElem_Interfacename struct {
	Interfacename *TxsdInterfacename `xml:"http://docbook.org/ns/docbook interfacename"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Interfacename function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Interfacename instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Interfacename instance.
func (me *XsdGoPkgHasElem_Interfacename) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Interfacename; fn != nil { fn(me) }
	me.Interfacename.Walk()
 }

type XsdGoPkgHasElems_Package struct {
	Packages []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook package"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Package function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Package instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Package instance.
func (me *XsdGoPkgHasElems_Package) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Package; fn != nil { fn(me) }
	for _, x := range me.Packages { x.Walk() }
 }

type TxsdModifier struct {
	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Olink

	xml.XsdGoPkgHasAttr_Space

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Phrase

}

//	If the WalkHandlers.TxsdModifier function is not nil (ie. was set by outside code), calls it with this TxsdModifier instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdModifier instance.
func (me *TxsdModifier) Walk ()  { 
	if fn := WalkHandlers.TxsdModifier; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElems_Modifier struct {
	Modifiers []*TxsdModifier `xml:"http://docbook.org/ns/docbook modifier"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Modifier function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Modifier instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Modifier instance.
func (me *XsdGoPkgHasElems_Modifier) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Modifier; fn != nil { fn(me) }
	for _, x := range me.Modifiers { x.Walk() }
 }

type TxsdOointerface struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElem_Interfacename

}

//	If the WalkHandlers.TxsdOointerface function is not nil (ie. was set by outside code), calls it with this TxsdOointerface instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TxsdOointerface instance.
func (me *TxsdOointerface) Walk ()  { 
	if fn := WalkHandlers.TxsdOointerface; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElem_Interfacename.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
 }

type XsdGoPkgHasElems_Oointerface struct {
	Oointerfaces []*TxsdOointerface `xml:"http://docbook.org/ns/docbook oointerface"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Oointerface function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Oointerface instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Oointerface instance.
func (me *XsdGoPkgHasElems_Oointerface) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Oointerface; fn != nil { fn(me) }
	for _, x := range me.Oointerfaces { x.Walk() }
 }

type XsdGoPkgHasElems_Errorname struct {
	Errornames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook errorname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Errorname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Errorname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Errorname instance.
func (me *XsdGoPkgHasElems_Errorname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Errorname; fn != nil { fn(me) }
	for _, x := range me.Errornames { x.Walk() }
 }

type XsdGoPkgHasElems_Mousebutton struct {
	Mousebuttons []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook mousebutton"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Mousebutton function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Mousebutton instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Mousebutton instance.
func (me *XsdGoPkgHasElems_Mousebutton) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Mousebutton; fn != nil { fn(me) }
	for _, x := range me.Mousebuttons { x.Walk() }
 }

type XsdGoPkgHasAttr_Otherclass_XsdtString_ struct {
	Otherclass xsdt.String `xml:"http://docbook.org/ns/docbook otherclass,attr"`

}

type TxsdOrgnameClass xsdt.Token

//	Returns true if the value of this enumerated TxsdOrgnameClass is "consortium".
func (me TxsdOrgnameClass) IsConsortium () bool { return me == "consortium" }

//	Returns true if the value of this enumerated TxsdOrgnameClass is "nonprofit".
func (me TxsdOrgnameClass) IsNonprofit () bool { return me == "nonprofit" }

//	This convenience method just performs a simple type conversion to TxsdOrgnameClass's alias type xsdt.Token.
func (me TxsdOrgnameClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdOrgnameClass is "corporation".
func (me TxsdOrgnameClass) IsCorporation () bool { return me == "corporation" }

//	Since TxsdOrgnameClass is just a simple String type, this merely returns the current string value.
func (me TxsdOrgnameClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdOrgnameClass is "informal".
func (me TxsdOrgnameClass) IsInformal () bool { return me == "informal" }

//	Returns true if the value of this enumerated TxsdOrgnameClass is "other".
func (me TxsdOrgnameClass) IsOther () bool { return me == "other" }

//	Since TxsdOrgnameClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdOrgnameClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Class_TxsdOrgnameClass_ struct {
	Class TxsdOrgnameClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdOrgname struct {
	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAttr_Otherclass_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasAttr_Class_TxsdOrgnameClass_

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Link

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Annotation

}

//	If the WalkHandlers.TxsdOrgname function is not nil (ie. was set by outside code), calls it with this TxsdOrgname instance as the single argument. Then calls the Walk() method on 4/20 embed(s) and 0/0 field(s) belonging to this TxsdOrgname instance.
func (me *TxsdOrgname) Walk ()  { 
	if fn := WalkHandlers.TxsdOrgname; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElems_Orgname struct {
	Orgnames []*TxsdOrgname `xml:"http://docbook.org/ns/docbook orgname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Orgname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Orgname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Orgname instance.
func (me *XsdGoPkgHasElems_Orgname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Orgname; fn != nil { fn(me) }
	for _, x := range me.Orgnames { x.Walk() }
 }

type XsdGoPkgHasElems_Accel struct {
	Accels []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook accel"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Accel function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Accel instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Accel instance.
func (me *XsdGoPkgHasElems_Accel) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Accel; fn != nil { fn(me) }
	for _, x := range me.Accels { x.Walk() }
 }

type TxsdGuilabel struct {
	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Indexterm

}

//	If the WalkHandlers.TxsdGuilabel function is not nil (ie. was set by outside code), calls it with this TxsdGuilabel instance as the single argument. Then calls the Walk() method on 5/19 embed(s) and 0/0 field(s) belonging to this TxsdGuilabel instance.
func (me *TxsdGuilabel) Walk ()  { 
	if fn := WalkHandlers.TxsdGuilabel; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
 }

type XsdGoPkgHasElems_Guilabel struct {
	Guilabels []*TxsdGuilabel `xml:"http://docbook.org/ns/docbook guilabel"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Guilabel function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Guilabel instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Guilabel instance.
func (me *XsdGoPkgHasElems_Guilabel) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Guilabel; fn != nil { fn(me) }
	for _, x := range me.Guilabels { x.Walk() }
 }

type XsdGoPkgHasElems_Guibutton struct {
	Guibuttons []*TxsdGuilabel `xml:"http://docbook.org/ns/docbook guibutton"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Guibutton function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Guibutton instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Guibutton instance.
func (me *XsdGoPkgHasElems_Guibutton) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Guibutton; fn != nil { fn(me) }
	for _, x := range me.Guibuttons { x.Walk() }
 }

type XsdGoPkgHasElems_Guisubmenu struct {
	Guisubmenus []*TxsdGuilabel `xml:"http://docbook.org/ns/docbook guisubmenu"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Guisubmenu function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Guisubmenu instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Guisubmenu instance.
func (me *XsdGoPkgHasElems_Guisubmenu) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Guisubmenu; fn != nil { fn(me) }
	for _, x := range me.Guisubmenus { x.Walk() }
 }

type XsdGoPkgHasAttr_Otheraction_XsdtString_ struct {
	Otheraction xsdt.String `xml:"http://docbook.org/ns/docbook otheraction,attr"`

}

type XsdGoPkgHasAttr_Otherfunction_XsdtString_ struct {
	Otherfunction xsdt.String `xml:"http://docbook.org/ns/docbook otherfunction,attr"`

}

type TxsdKeycapFunction xsdt.Token

//	Returns true if the value of this enumerated TxsdKeycapFunction is "option".
func (me TxsdKeycapFunction) IsOption () bool { return me == "option" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "left".
func (me TxsdKeycapFunction) IsLeft () bool { return me == "left" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "enter".
func (me TxsdKeycapFunction) IsEnter () bool { return me == "enter" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "right".
func (me TxsdKeycapFunction) IsRight () bool { return me == "right" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "control".
func (me TxsdKeycapFunction) IsControl () bool { return me == "control" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "alt".
func (me TxsdKeycapFunction) IsAlt () bool { return me == "alt" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "delete".
func (me TxsdKeycapFunction) IsDelete () bool { return me == "delete" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "meta".
func (me TxsdKeycapFunction) IsMeta () bool { return me == "meta" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "other".
func (me TxsdKeycapFunction) IsOther () bool { return me == "other" }

//	This convenience method just performs a simple type conversion to TxsdKeycapFunction's alias type xsdt.Token.
func (me TxsdKeycapFunction) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "command".
func (me TxsdKeycapFunction) IsCommand () bool { return me == "command" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "up".
func (me TxsdKeycapFunction) IsUp () bool { return me == "up" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "shift".
func (me TxsdKeycapFunction) IsShift () bool { return me == "shift" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "pagedown".
func (me TxsdKeycapFunction) IsPagedown () bool { return me == "pagedown" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "insert".
func (me TxsdKeycapFunction) IsInsert () bool { return me == "insert" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "backspace".
func (me TxsdKeycapFunction) IsBackspace () bool { return me == "backspace" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "space".
func (me TxsdKeycapFunction) IsSpace () bool { return me == "space" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "home".
func (me TxsdKeycapFunction) IsHome () bool { return me == "home" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "end".
func (me TxsdKeycapFunction) IsEnd () bool { return me == "end" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "escape".
func (me TxsdKeycapFunction) IsEscape () bool { return me == "escape" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "pageup".
func (me TxsdKeycapFunction) IsPageup () bool { return me == "pageup" }

//	Since TxsdKeycapFunction is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdKeycapFunction) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "down".
func (me TxsdKeycapFunction) IsDown () bool { return me == "down" }

//	Returns true if the value of this enumerated TxsdKeycapFunction is "tab".
func (me TxsdKeycapFunction) IsTab () bool { return me == "tab" }

//	Since TxsdKeycapFunction is just a simple String type, this merely returns the current string value.
func (me TxsdKeycapFunction) String () string { return xsdt.Token(me).String() }

type XsdGoPkgHasAttr_Function_TxsdKeycapFunction_ struct {
	Function TxsdKeycapFunction `xml:"http://docbook.org/ns/docbook function,attr"`

}

type TxsdKeycap struct {
	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAttr_Otherfunction_XsdtString_

	XsdGoPkgHasAttr_Function_TxsdKeycapFunction_

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Link

}

//	If the WalkHandlers.TxsdKeycap function is not nil (ie. was set by outside code), calls it with this TxsdKeycap instance as the single argument. Then calls the Walk() method on 4/20 embed(s) and 0/0 field(s) belonging to this TxsdKeycap instance.
func (me *TxsdKeycap) Walk ()  { 
	if fn := WalkHandlers.TxsdKeycap; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Keycap struct {
	Keycaps []*TxsdKeycap `xml:"http://docbook.org/ns/docbook keycap"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Keycap function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Keycap instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Keycap instance.
func (me *XsdGoPkgHasElems_Keycap) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Keycap; fn != nil { fn(me) }
	for _, x := range me.Keycaps { x.Walk() }
 }

type XsdGoPkgHasElems_Keysym struct {
	Keysyms []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook keysym"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Keysym function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Keysym instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Keysym instance.
func (me *XsdGoPkgHasElems_Keysym) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Keysym; fn != nil { fn(me) }
	for _, x := range me.Keysyms { x.Walk() }
 }

type TxsdShortcutAction xsdt.Token

//	Since TxsdShortcutAction is just a simple String type, this merely returns the current string value.
func (me TxsdShortcutAction) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdShortcutAction is "press".
func (me TxsdShortcutAction) IsPress () bool { return me == "press" }

//	Returns true if the value of this enumerated TxsdShortcutAction is "click".
func (me TxsdShortcutAction) IsClick () bool { return me == "click" }

//	This convenience method just performs a simple type conversion to TxsdShortcutAction's alias type xsdt.Token.
func (me TxsdShortcutAction) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdShortcutAction is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdShortcutAction) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdShortcutAction is "simul".
func (me TxsdShortcutAction) IsSimul () bool { return me == "simul" }

//	Returns true if the value of this enumerated TxsdShortcutAction is "other".
func (me TxsdShortcutAction) IsOther () bool { return me == "other" }

//	Returns true if the value of this enumerated TxsdShortcutAction is "seq".
func (me TxsdShortcutAction) IsSeq () bool { return me == "seq" }

//	Returns true if the value of this enumerated TxsdShortcutAction is "double-click".
func (me TxsdShortcutAction) IsDoubleClick () bool { return me == "double-click" }

type XsdGoPkgHasAttr_Action_TxsdShortcutAction_ struct {
	Action TxsdShortcutAction `xml:"http://docbook.org/ns/docbook action,attr"`

}

type XsdGoPkgHasAttr_Action_TxsdKeycomboAction_ struct {
	Action TxsdShortcutAction `xml:"http://docbook.org/ns/docbook action,attr"`

}

type TxsdKeycombo struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Action_TxsdKeycomboAction_

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasAttr_Otheraction_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Mousebutton

}

//	If the WalkHandlers.TxsdKeycombo function is not nil (ie. was set by outside code), calls it with this TxsdKeycombo instance as the single argument. Then calls the Walk() method on 3/9 embed(s) and 0/0 field(s) belonging to this TxsdKeycombo instance.
func (me *TxsdKeycombo) Walk ()  { 
	if fn := WalkHandlers.TxsdKeycombo; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
 }

type XsdGoPkgHasElems_Keycombo struct {
	Keycombos []*TxsdKeycombo `xml:"http://docbook.org/ns/docbook keycombo"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Keycombo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Keycombo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Keycombo instance.
func (me *XsdGoPkgHasElems_Keycombo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Keycombo; fn != nil { fn(me) }
	for _, x := range me.Keycombos { x.Walk() }
 }

type TxsdShortcut struct {
	XsdGoPkgHasAttr_Otheraction_XsdtString_

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasAttr_Action_TxsdShortcutAction_

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdShortcut function is not nil (ie. was set by outside code), calls it with this TxsdShortcut instance as the single argument. Then calls the Walk() method on 4/9 embed(s) and 0/0 field(s) belonging to this TxsdShortcut instance.
func (me *TxsdShortcut) Walk ()  { 
	if fn := WalkHandlers.TxsdShortcut; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
 }

type XsdGoPkgHasElem_Shortcut struct {
	Shortcut *TxsdShortcut `xml:"http://docbook.org/ns/docbook shortcut"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Shortcut function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Shortcut instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Shortcut instance.
func (me *XsdGoPkgHasElem_Shortcut) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Shortcut; fn != nil { fn(me) }
	me.Shortcut.Walk()
 }

type XsdGoPkgHasElems_Guimenuitem struct {
	Guimenuitems []*TxsdGuilabel `xml:"http://docbook.org/ns/docbook guimenuitem"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Guimenuitem function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Guimenuitem instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Guimenuitem instance.
func (me *XsdGoPkgHasElems_Guimenuitem) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Guimenuitem; fn != nil { fn(me) }
	for _, x := range me.Guimenuitems { x.Walk() }
 }

type XsdGoPkgHasElems_Guiicon struct {
	Guiicons []*TxsdGuilabel `xml:"http://docbook.org/ns/docbook guiicon"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Guiicon function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Guiicon instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Guiicon instance.
func (me *XsdGoPkgHasElems_Guiicon) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Guiicon; fn != nil { fn(me) }
	for _, x := range me.Guiicons { x.Walk() }
 }

type XsdGoPkgHasElems_Guimenu struct {
	Guimenus []*TxsdGuilabel `xml:"http://docbook.org/ns/docbook guimenu"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Guimenu function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Guimenu instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Guimenu instance.
func (me *XsdGoPkgHasElems_Guimenu) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Guimenu; fn != nil { fn(me) }
	for _, x := range me.Guimenus { x.Walk() }
 }

type TxsdMenuchoice struct {
	XsdGoPkgHasElem_Shortcut

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Guisubmenu

}

//	If the WalkHandlers.TxsdMenuchoice function is not nil (ie. was set by outside code), calls it with this TxsdMenuchoice instance as the single argument. Then calls the Walk() method on 7/10 embed(s) and 0/0 field(s) belonging to this TxsdMenuchoice instance.
func (me *TxsdMenuchoice) Walk ()  { 
	if fn := WalkHandlers.TxsdMenuchoice; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElem_Shortcut.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
 }

type XsdGoPkgHasElems_Menuchoice struct {
	Menuchoices []*TxsdMenuchoice `xml:"http://docbook.org/ns/docbook menuchoice"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Menuchoice function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Menuchoice instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Menuchoice instance.
func (me *XsdGoPkgHasElems_Menuchoice) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Menuchoice; fn != nil { fn(me) }
	for _, x := range me.Menuchoices { x.Walk() }
 }

type XsdGoPkgHasAttr_Label_XsdtString_ struct {
	Label xsdt.String `xml:"http://docbook.org/ns/docbook label,attr"`

}

type TxsdCoref struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Label_XsdtString_

}

//	If the WalkHandlers.TxsdCoref function is not nil (ie. was set by outside code), calls it with this TxsdCoref instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TxsdCoref instance.
func (me *TxsdCoref) Walk ()  { 
	if fn := WalkHandlers.TxsdCoref; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Coref struct {
	Corefs []*TxsdCoref `xml:"http://docbook.org/ns/docbook coref"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Coref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Coref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Coref instance.
func (me *XsdGoPkgHasElems_Coref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Coref; fn != nil { fn(me) }
	for _, x := range me.Corefs { x.Walk() }
 }

type XsdGoPkgHasElems_Keycode struct {
	Keycodes []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook keycode"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Keycode function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Keycode instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Keycode instance.
func (me *XsdGoPkgHasElems_Keycode) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Keycode; fn != nil { fn(me) }
	for _, x := range me.Keycodes { x.Walk() }
 }

type XsdGoPkgHasElems_Initializer struct {
	Initializers []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook initializer"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Initializer function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Initializer instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Initializer instance.
func (me *XsdGoPkgHasElems_Initializer) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Initializer; fn != nil { fn(me) }
	for _, x := range me.Initializers { x.Walk() }
 }

type TxsdAbbrev struct {
	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Superscript

}

//	If the WalkHandlers.TxsdAbbrev function is not nil (ie. was set by outside code), calls it with this TxsdAbbrev instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdAbbrev instance.
func (me *TxsdAbbrev) Walk ()  { 
	if fn := WalkHandlers.TxsdAbbrev; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
 }

type XsdGoPkgHasElems_Abbrev struct {
	Abbrevs []*TxsdAbbrev `xml:"http://docbook.org/ns/docbook abbrev"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Abbrev function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Abbrev instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Abbrev instance.
func (me *XsdGoPkgHasElems_Abbrev) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Abbrev; fn != nil { fn(me) }
	for _, x := range me.Abbrevs { x.Walk() }
 }

type XsdGoPkgHasElems_Option struct {
	Options []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook option"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Option function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Option instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Option instance.
func (me *XsdGoPkgHasElems_Option) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Option; fn != nil { fn(me) }
	for _, x := range me.Options { x.Walk() }
 }

type XsdGoPkgHasAttr_Otherrenderas_XsdtNmtoken_ struct {
	Otherrenderas xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook otherrenderas,attr"`

}

type TxsdDatabaseClass xsdt.Token

//	Returns true if the value of this enumerated TxsdDatabaseClass is "field".
func (me TxsdDatabaseClass) IsField () bool { return me == "field" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "secondarykey".
func (me TxsdDatabaseClass) IsSecondarykey () bool { return me == "secondarykey" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "record".
func (me TxsdDatabaseClass) IsRecord () bool { return me == "record" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "procedure".
func (me TxsdDatabaseClass) IsProcedure () bool { return me == "procedure" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "foreignkey".
func (me TxsdDatabaseClass) IsForeignkey () bool { return me == "foreignkey" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "rule".
func (me TxsdDatabaseClass) IsRule () bool { return me == "rule" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "primarykey".
func (me TxsdDatabaseClass) IsPrimarykey () bool { return me == "primarykey" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "group".
func (me TxsdDatabaseClass) IsGroup () bool { return me == "group" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "key1".
func (me TxsdDatabaseClass) IsKey1 () bool { return me == "key1" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "view".
func (me TxsdDatabaseClass) IsView () bool { return me == "view" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "constraint".
func (me TxsdDatabaseClass) IsConstraint () bool { return me == "constraint" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "index".
func (me TxsdDatabaseClass) IsIndex () bool { return me == "index" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "table".
func (me TxsdDatabaseClass) IsTable () bool { return me == "table" }

//	This convenience method just performs a simple type conversion to TxsdDatabaseClass's alias type xsdt.Token.
func (me TxsdDatabaseClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "key2".
func (me TxsdDatabaseClass) IsKey2 () bool { return me == "key2" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "user".
func (me TxsdDatabaseClass) IsUser () bool { return me == "user" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "datatype".
func (me TxsdDatabaseClass) IsDatatype () bool { return me == "datatype" }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "altkey".
func (me TxsdDatabaseClass) IsAltkey () bool { return me == "altkey" }

//	Since TxsdDatabaseClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdDatabaseClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdDatabaseClass is "name".
func (me TxsdDatabaseClass) IsName () bool { return me == "name" }

//	Since TxsdDatabaseClass is just a simple String type, this merely returns the current string value.
func (me TxsdDatabaseClass) String () string { return xsdt.Token(me).String() }

type XsdGoPkgHasAttr_Class_TxsdDatabaseClass_ struct {
	Class TxsdDatabaseClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdDatabase struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAttr_Class_TxsdDatabaseClass_

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Anchor

}

//	If the WalkHandlers.TxsdDatabase function is not nil (ie. was set by outside code), calls it with this TxsdDatabase instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdDatabase instance.
func (me *TxsdDatabase) Walk ()  { 
	if fn := WalkHandlers.TxsdDatabase; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Database struct {
	Databases []*TxsdDatabase `xml:"http://docbook.org/ns/docbook database"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Database function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Database instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Database instance.
func (me *XsdGoPkgHasElems_Database) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Database; fn != nil { fn(me) }
	for _, x := range me.Databases { x.Walk() }
 }

type XsdGoPkgHasElems_Hardware struct {
	Hardwares []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook hardware"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Hardware function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Hardware instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Hardware instance.
func (me *XsdGoPkgHasElems_Hardware) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Hardware; fn != nil { fn(me) }
	for _, x := range me.Hardwares { x.Walk() }
 }

type XsdGoPkgHasElems_Varname struct {
	Varnames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook varname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Varname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Varname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Varname instance.
func (me *XsdGoPkgHasElems_Varname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Varname; fn != nil { fn(me) }
	for _, x := range me.Varnames { x.Walk() }
 }

type XsdGoPkgHasElems_Markup struct {
	Markups []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook markup"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Markup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Markup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Markup instance.
func (me *XsdGoPkgHasElems_Markup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Markup; fn != nil { fn(me) }
	for _, x := range me.Markups { x.Walk() }
 }

type XsdGoPkgHasElems_Productnumber struct {
	Productnumbers []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook productnumber"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Productnumber function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Productnumber instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Productnumber instance.
func (me *XsdGoPkgHasElems_Productnumber) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Productnumber; fn != nil { fn(me) }
	for _, x := range me.Productnumbers { x.Walk() }
 }

type XsdGoPkgHasElems_Acronym struct {
	Acronyms []*TxsdAbbrev `xml:"http://docbook.org/ns/docbook acronym"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Acronym function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Acronym instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Acronym instance.
func (me *XsdGoPkgHasElems_Acronym) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Acronym; fn != nil { fn(me) }
	for _, x := range me.Acronyms { x.Walk() }
 }

type TxsdBridgeheadRenderas xsdt.Token

//	Returns true if the value of this enumerated TxsdBridgeheadRenderas is "sect2".
func (me TxsdBridgeheadRenderas) IsSect2 () bool { return me == "sect2" }

//	Returns true if the value of this enumerated TxsdBridgeheadRenderas is "sect1".
func (me TxsdBridgeheadRenderas) IsSect1 () bool { return me == "sect1" }

//	Returns true if the value of this enumerated TxsdBridgeheadRenderas is "other".
func (me TxsdBridgeheadRenderas) IsOther () bool { return me == "other" }

//	Returns true if the value of this enumerated TxsdBridgeheadRenderas is "sect5".
func (me TxsdBridgeheadRenderas) IsSect5 () bool { return me == "sect5" }

//	Since TxsdBridgeheadRenderas is just a simple String type, this merely returns the current string value.
func (me TxsdBridgeheadRenderas) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdBridgeheadRenderas is "sect3".
func (me TxsdBridgeheadRenderas) IsSect3 () bool { return me == "sect3" }

//	Returns true if the value of this enumerated TxsdBridgeheadRenderas is "sect4".
func (me TxsdBridgeheadRenderas) IsSect4 () bool { return me == "sect4" }

//	This convenience method just performs a simple type conversion to TxsdBridgeheadRenderas's alias type xsdt.Token.
func (me TxsdBridgeheadRenderas) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdBridgeheadRenderas is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdBridgeheadRenderas) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Renderas_TxsdBridgeheadRenderas_ struct {
	Renderas TxsdBridgeheadRenderas `xml:"http://docbook.org/ns/docbook renderas,attr"`

}

type XsdGoPkgHasElems_Optional struct {
	Optionals []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook optional"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Optional function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Optional instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Optional instance.
func (me *XsdGoPkgHasElems_Optional) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Optional; fn != nil { fn(me) }
	for _, x := range me.Optionals { x.Walk() }
 }

type XsdGoPkgHasElems_Interfacename struct {
	Interfacenames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook interfacename"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Interfacename function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Interfacename instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Interfacename instance.
func (me *XsdGoPkgHasElems_Interfacename) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Interfacename; fn != nil { fn(me) }
	for _, x := range me.Interfacenames { x.Walk() }
 }

type TxsdProductnameClass xsdt.Token

//	Returns true if the value of this enumerated TxsdProductnameClass is "copyright".
func (me TxsdProductnameClass) IsCopyright () bool { return me == "copyright" }

//	Since TxsdProductnameClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdProductnameClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdProductnameClass is "trade".
func (me TxsdProductnameClass) IsTrade () bool { return me == "trade" }

//	Returns true if the value of this enumerated TxsdProductnameClass is "service".
func (me TxsdProductnameClass) IsService () bool { return me == "service" }

//	Returns true if the value of this enumerated TxsdProductnameClass is "registered".
func (me TxsdProductnameClass) IsRegistered () bool { return me == "registered" }

//	Since TxsdProductnameClass is just a simple String type, this merely returns the current string value.
func (me TxsdProductnameClass) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdProductnameClass's alias type xsdt.Token.
func (me TxsdProductnameClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Class_TxsdProductnameClass_ struct {
	Class TxsdProductnameClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdProductname struct {
	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Class_TxsdProductnameClass_

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Link

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Indexterm

}

//	If the WalkHandlers.TxsdProductname function is not nil (ie. was set by outside code), calls it with this TxsdProductname instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdProductname instance.
func (me *TxsdProductname) Walk ()  { 
	if fn := WalkHandlers.TxsdProductname; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
 }

type XsdGoPkgHasElems_Productname struct {
	Productnames []*TxsdProductname `xml:"http://docbook.org/ns/docbook productname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Productname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Productname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Productname instance.
func (me *XsdGoPkgHasElems_Productname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Productname; fn != nil { fn(me) }
	for _, x := range me.Productnames { x.Walk() }
 }

type XsdGoPkgHasElems_Literal struct {
	Literals []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook literal"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Literal function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Literal instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Literal instance.
func (me *XsdGoPkgHasElems_Literal) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Literal; fn != nil { fn(me) }
	for _, x := range me.Literals { x.Walk() }
 }

type XsdGoPkgHasElem_Classname struct {
	Classname *TxsdInterfacename `xml:"http://docbook.org/ns/docbook classname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Classname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Classname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Classname instance.
func (me *XsdGoPkgHasElem_Classname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Classname; fn != nil { fn(me) }
	me.Classname.Walk()
 }

type TxsdOoclass struct {
	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElem_Classname

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Package

}

//	If the WalkHandlers.TxsdOoclass function is not nil (ie. was set by outside code), calls it with this TxsdOoclass instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TxsdOoclass instance.
func (me *TxsdOoclass) Walk ()  { 
	if fn := WalkHandlers.TxsdOoclass; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElem_Classname.Walk()
 }

type XsdGoPkgHasElems_Ooclass struct {
	Ooclasses []*TxsdOoclass `xml:"http://docbook.org/ns/docbook ooclass"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Ooclass function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Ooclass instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Ooclass instance.
func (me *XsdGoPkgHasElems_Ooclass) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Ooclass; fn != nil { fn(me) }
	for _, x := range me.Ooclasses { x.Walk() }
 }

type XsdGoPkgHasAttr_Language_XsdtString_ struct {
	Language xsdt.String `xml:"http://docbook.org/ns/docbook language,attr"`

}

type XsdGoPkgHasElems_Classname struct {
	Classnames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook classname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Classname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Classname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Classname instance.
func (me *XsdGoPkgHasElems_Classname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Classname; fn != nil { fn(me) }
	for _, x := range me.Classnames { x.Walk() }
 }

type XsdGoPkgHasElems_Methodname struct {
	Methodnames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook methodname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Methodname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Methodname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Methodname instance.
func (me *XsdGoPkgHasElems_Methodname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Methodname; fn != nil { fn(me) }
	for _, x := range me.Methodnames { x.Walk() }
 }

type XsdGoPkgHasElems_Type struct {
	Types []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook type"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Type function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Type instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Type instance.
func (me *XsdGoPkgHasElems_Type) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Type; fn != nil { fn(me) }
	for _, x := range me.Types { x.Walk() }
 }

type XsdGoPkgHasElems_Returnvalue struct {
	Returnvalues []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook returnvalue"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Returnvalue function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Returnvalue instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Returnvalue instance.
func (me *XsdGoPkgHasElems_Returnvalue) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Returnvalue; fn != nil { fn(me) }
	for _, x := range me.Returnvalues { x.Walk() }
 }

type XsdGoPkgHasElem_Exceptionname struct {
	Exceptionname *TxsdInterfacename `xml:"http://docbook.org/ns/docbook exceptionname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Exceptionname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Exceptionname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Exceptionname instance.
func (me *XsdGoPkgHasElem_Exceptionname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Exceptionname; fn != nil { fn(me) }
	me.Exceptionname.Walk()
 }

type TxsdOoexception struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Package

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElem_Exceptionname

}

//	If the WalkHandlers.TxsdOoexception function is not nil (ie. was set by outside code), calls it with this TxsdOoexception instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TxsdOoexception instance.
func (me *TxsdOoexception) Walk ()  { 
	if fn := WalkHandlers.TxsdOoexception; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElem_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
 }

type XsdGoPkgHasElems_Ooexception struct {
	Ooexceptions []*TxsdOoexception `xml:"http://docbook.org/ns/docbook ooexception"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Ooexception function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Ooexception instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Ooexception instance.
func (me *XsdGoPkgHasElems_Ooexception) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Ooexception; fn != nil { fn(me) }
	for _, x := range me.Ooexceptions { x.Walk() }
 }

type XsdGoPkgHasElems_Exceptionname struct {
	Exceptionnames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook exceptionname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Exceptionname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Exceptionname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Exceptionname instance.
func (me *XsdGoPkgHasElems_Exceptionname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Exceptionname; fn != nil { fn(me) }
	for _, x := range me.Exceptionnames { x.Walk() }
 }

type TxsdParameterClass xsdt.Token

//	Returns true if the value of this enumerated TxsdParameterClass is "command".
func (me TxsdParameterClass) IsCommand () bool { return me == "command" }

//	Since TxsdParameterClass is just a simple String type, this merely returns the current string value.
func (me TxsdParameterClass) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdParameterClass's alias type xsdt.Token.
func (me TxsdParameterClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdParameterClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdParameterClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdParameterClass is "option".
func (me TxsdParameterClass) IsOption () bool { return me == "option" }

//	Returns true if the value of this enumerated TxsdParameterClass is "function".
func (me TxsdParameterClass) IsFunction () bool { return me == "function" }

type XsdGoPkgHasAttr_Class_TxsdParameterClass_ struct {
	Class TxsdParameterClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdParameter struct {
	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAttr_Class_TxsdParameterClass_

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Anchor

}

//	If the WalkHandlers.TxsdParameter function is not nil (ie. was set by outside code), calls it with this TxsdParameter instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdParameter instance.
func (me *TxsdParameter) Walk ()  { 
	if fn := WalkHandlers.TxsdParameter; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElems_Parameter struct {
	Parameters []*TxsdParameter `xml:"http://docbook.org/ns/docbook parameter"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Parameter function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Parameter instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Parameter instance.
func (me *XsdGoPkgHasElems_Parameter) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Parameter; fn != nil { fn(me) }
	for _, x := range me.Parameters { x.Walk() }
 }

type TxsdCode struct {
	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Exceptionname

}

//	If the WalkHandlers.TxsdCode function is not nil (ie. was set by outside code), calls it with this TxsdCode instance as the single argument. Then calls the Walk() method on 17/33 embed(s) and 0/0 field(s) belonging to this TxsdCode instance.
func (me *TxsdCode) Walk ()  { 
	if fn := WalkHandlers.TxsdCode; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
 }

type XsdGoPkgHasElems_Code struct {
	Codes []*TxsdCode `xml:"http://docbook.org/ns/docbook code"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Code function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Code instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Code instance.
func (me *XsdGoPkgHasElems_Code) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Code; fn != nil { fn(me) }
	for _, x := range me.Codes { x.Walk() }
 }

type XsdGoPkgHasElems_Wordasword struct {
	Wordaswords []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook wordasword"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Wordasword function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Wordasword instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Wordasword instance.
func (me *XsdGoPkgHasElems_Wordasword) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Wordasword; fn != nil { fn(me) }
	for _, x := range me.Wordaswords { x.Walk() }
 }

type TxsdApplicationClass xsdt.Token

//	Since TxsdApplicationClass is just a simple String type, this merely returns the current string value.
func (me TxsdApplicationClass) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdApplicationClass's alias type xsdt.Token.
func (me TxsdApplicationClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdApplicationClass is "software".
func (me TxsdApplicationClass) IsSoftware () bool { return me == "software" }

//	Returns true if the value of this enumerated TxsdApplicationClass is "hardware".
func (me TxsdApplicationClass) IsHardware () bool { return me == "hardware" }

//	Since TxsdApplicationClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdApplicationClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Class_TxsdApplicationClass_ struct {
	Class TxsdApplicationClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdApplication struct {
	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasAttr_Class_TxsdApplicationClass_

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Indexterm

}

//	If the WalkHandlers.TxsdApplication function is not nil (ie. was set by outside code), calls it with this TxsdApplication instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdApplication instance.
func (me *TxsdApplication) Walk ()  { 
	if fn := WalkHandlers.TxsdApplication; fn != nil { fn(me) }
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
 }

type XsdGoPkgHasElems_Application struct {
	Applications []*TxsdApplication `xml:"http://docbook.org/ns/docbook application"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Application function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Application instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Application instance.
func (me *XsdGoPkgHasElems_Application) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Application; fn != nil { fn(me) }
	for _, x := range me.Applications { x.Walk() }
 }

type XsdGoPkgHasElems_Footnoteref struct {
	Footnoterefs []*TxsdCoref `xml:"http://docbook.org/ns/docbook footnoteref"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Footnoteref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Footnoteref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Footnoteref instance.
func (me *XsdGoPkgHasElems_Footnoteref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Footnoteref; fn != nil { fn(me) }
	for _, x := range me.Footnoterefs { x.Walk() }
 }

type TxsdCitebiblioidClass xsdt.Token

//	Since TxsdCitebiblioidClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdCitebiblioidClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdCitebiblioidClass is "doi".
func (me TxsdCitebiblioidClass) IsDoi () bool { return me == "doi" }

//	Returns true if the value of this enumerated TxsdCitebiblioidClass is "issn".
func (me TxsdCitebiblioidClass) IsIssn () bool { return me == "issn" }

//	Returns true if the value of this enumerated TxsdCitebiblioidClass is "other".
func (me TxsdCitebiblioidClass) IsOther () bool { return me == "other" }

//	This convenience method just performs a simple type conversion to TxsdCitebiblioidClass's alias type xsdt.Token.
func (me TxsdCitebiblioidClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdCitebiblioidClass is "uri".
func (me TxsdCitebiblioidClass) IsUri () bool { return me == "uri" }

//	Since TxsdCitebiblioidClass is just a simple String type, this merely returns the current string value.
func (me TxsdCitebiblioidClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdCitebiblioidClass is "libraryofcongress".
func (me TxsdCitebiblioidClass) IsLibraryofcongress () bool { return me == "libraryofcongress" }

//	Returns true if the value of this enumerated TxsdCitebiblioidClass is "isbn".
func (me TxsdCitebiblioidClass) IsIsbn () bool { return me == "isbn" }

//	Returns true if the value of this enumerated TxsdCitebiblioidClass is "isrn".
func (me TxsdCitebiblioidClass) IsIsrn () bool { return me == "isrn" }

//	Returns true if the value of this enumerated TxsdCitebiblioidClass is "pubsnumber".
func (me TxsdCitebiblioidClass) IsPubsnumber () bool { return me == "pubsnumber" }

type XsdGoPkgHasAttr_Class_TxsdCitebiblioidClass_ struct {
	Class TxsdCitebiblioidClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type XsdGoPkgHasAttr_Otherclass_XsdtNmtoken_ struct {
	Otherclass xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook otherclass,attr"`

}

type TxsdCitebiblioid struct {
	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAttr_Class_TxsdCitebiblioidClass_

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Otherclass_XsdtNmtoken_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Annotation

}

//	If the WalkHandlers.TxsdCitebiblioid function is not nil (ie. was set by outside code), calls it with this TxsdCitebiblioid instance as the single argument. Then calls the Walk() method on 4/20 embed(s) and 0/0 field(s) belonging to this TxsdCitebiblioid instance.
func (me *TxsdCitebiblioid) Walk ()  { 
	if fn := WalkHandlers.TxsdCitebiblioid; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Citebiblioid struct {
	Citebiblioids []*TxsdCitebiblioid `xml:"http://docbook.org/ns/docbook citebiblioid"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Citebiblioid function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Citebiblioid instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Citebiblioid instance.
func (me *XsdGoPkgHasElems_Citebiblioid) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Citebiblioid; fn != nil { fn(me) }
	for _, x := range me.Citebiblioids { x.Walk() }
 }

type TxsdDate struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasCdata

}

//	If the WalkHandlers.TxsdDate function is not nil (ie. was set by outside code), calls it with this TxsdDate instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TxsdDate instance.
func (me *TxsdDate) Walk ()  { 
	if fn := WalkHandlers.TxsdDate; fn != nil { fn(me) }
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Date struct {
	Dates []*TxsdDate `xml:"http://docbook.org/ns/docbook date"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Date function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Date instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Date instance.
func (me *XsdGoPkgHasElems_Date) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Date; fn != nil { fn(me) }
	for _, x := range me.Dates { x.Walk() }
 }

type XsdGoPkgHasElems_Firstname struct {
	Firstnames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook firstname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Firstname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Firstname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Firstname instance.
func (me *XsdGoPkgHasElems_Firstname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Firstname; fn != nil { fn(me) }
	for _, x := range me.Firstnames { x.Walk() }
 }

type XsdGoPkgHasElems_Surname struct {
	Surnames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook surname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Surname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Surname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Surname instance.
func (me *XsdGoPkgHasElems_Surname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Surname; fn != nil { fn(me) }
	for _, x := range me.Surnames { x.Walk() }
 }

type XsdGoPkgHasElems_Honorific struct {
	Honorifics []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook honorific"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Honorific function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Honorific instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Honorific instance.
func (me *XsdGoPkgHasElems_Honorific) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Honorific; fn != nil { fn(me) }
	for _, x := range me.Honorifics { x.Walk() }
 }

type XsdGoPkgHasElems_Othername struct {
	Othernames []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook othername"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Othername function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Othername instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Othername instance.
func (me *XsdGoPkgHasElems_Othername) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Othername; fn != nil { fn(me) }
	for _, x := range me.Othernames { x.Walk() }
 }

type XsdGoPkgHasElems_Lineage struct {
	Lineages []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook lineage"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Lineage function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Lineage instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Lineage instance.
func (me *XsdGoPkgHasElems_Lineage) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Lineage; fn != nil { fn(me) }
	for _, x := range me.Lineages { x.Walk() }
 }

type TxsdPersonname struct {
	XsdGoPkgHasElems_Othername

	XsdGoPkgHasElems_Lineage

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Firstname

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Surname

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Honorific

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdPersonname function is not nil (ie. was set by outside code), calls it with this TxsdPersonname instance as the single argument. Then calls the Walk() method on 9/23 embed(s) and 0/0 field(s) belonging to this TxsdPersonname instance.
func (me *TxsdPersonname) Walk ()  { 
	if fn := WalkHandlers.TxsdPersonname; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Surname.Walk()
	me.XsdGoPkgHasElems_Honorific.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Othername.Walk()
	me.XsdGoPkgHasElems_Lineage.Walk()
	me.XsdGoPkgHasElems_Firstname.Walk()
 }

type XsdGoPkgHasElems_Personname struct {
	Personnames []*TxsdPersonname `xml:"http://docbook.org/ns/docbook personname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Personname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Personname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Personname instance.
func (me *XsdGoPkgHasElems_Personname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Personname; fn != nil { fn(me) }
	for _, x := range me.Personnames { x.Walk() }
 }

type XsdGoPkgHasElem_Orgname struct {
	Orgname *TxsdOrgname `xml:"http://docbook.org/ns/docbook orgname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Orgname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Orgname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Orgname instance.
func (me *XsdGoPkgHasElem_Orgname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Orgname; fn != nil { fn(me) }
	me.Orgname.Walk()
 }

type XsdGoPkgHasElem_Org struct {
	Org *TxsdOrg `xml:"http://docbook.org/ns/docbook org"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Org function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Org instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_Org instance.
func (me *XsdGoPkgHasElem_Org) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Org; fn != nil { fn(me) }
 }

type XsdGoPkgHasAttr_Startinglinenumber_XsdtNmtoken_ struct {
	Startinglinenumber xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook startinglinenumber,attr"`

}

type TxsdAddressLinenumbering xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdAddressLinenumbering's alias type xsdt.Token.
func (me TxsdAddressLinenumbering) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdAddressLinenumbering is just a simple String type, this merely returns the current string value.
func (me TxsdAddressLinenumbering) String () string { return xsdt.Token(me).String() }

//	Since TxsdAddressLinenumbering is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdAddressLinenumbering) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdAddressLinenumbering is "numbered".
func (me TxsdAddressLinenumbering) IsNumbered () bool { return me == "numbered" }

//	Returns true if the value of this enumerated TxsdAddressLinenumbering is "unnumbered".
func (me TxsdAddressLinenumbering) IsUnnumbered () bool { return me == "unnumbered" }

type XsdGoPkgHasAttr_Linenumbering_TxsdAddressLinenumbering_ struct {
	Linenumbering TxsdAddressLinenumbering `xml:"http://docbook.org/ns/docbook linenumbering,attr"`

}

type XsdGoPkgHasElems_Phone struct {
	Phones []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook phone"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Phone function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Phone instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Phone instance.
func (me *XsdGoPkgHasElems_Phone) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Phone; fn != nil { fn(me) }
	for _, x := range me.Phones { x.Walk() }
 }

type XsdGoPkgHasElems_Fax struct {
	Faxs []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook fax"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Fax function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Fax instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Fax instance.
func (me *XsdGoPkgHasElems_Fax) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Fax; fn != nil { fn(me) }
	for _, x := range me.Faxs { x.Walk() }
 }

type XsdGoPkgHasElems_Country struct {
	Countries []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook country"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Country function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Country instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Country instance.
func (me *XsdGoPkgHasElems_Country) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Country; fn != nil { fn(me) }
	for _, x := range me.Countries { x.Walk() }
 }

type XsdGoPkgHasElems_City struct {
	Cities []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook city"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_City function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_City instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_City instance.
func (me *XsdGoPkgHasElems_City) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_City; fn != nil { fn(me) }
	for _, x := range me.Cities { x.Walk() }
 }

type XsdGoPkgHasElems_State struct {
	States []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook state"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_State function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_State instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_State instance.
func (me *XsdGoPkgHasElems_State) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_State; fn != nil { fn(me) }
	for _, x := range me.States { x.Walk() }
 }

type XsdGoPkgHasElems_Postcode struct {
	Postcodes []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook postcode"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Postcode function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Postcode instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Postcode instance.
func (me *XsdGoPkgHasElems_Postcode) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Postcode; fn != nil { fn(me) }
	for _, x := range me.Postcodes { x.Walk() }
 }

type XsdGoPkgHasElems_Otheraddr struct {
	Otheraddrs []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook otheraddr"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Otheraddr function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Otheraddr instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Otheraddr instance.
func (me *XsdGoPkgHasElems_Otheraddr) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Otheraddr; fn != nil { fn(me) }
	for _, x := range me.Otheraddrs { x.Walk() }
 }

type XsdGoPkgHasElems_Email struct {
	Emails []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook email"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Email function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Email instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Email instance.
func (me *XsdGoPkgHasElems_Email) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Email; fn != nil { fn(me) }
	for _, x := range me.Emails { x.Walk() }
 }

type TxsdAddressContinuation xsdt.Token

//	Since TxsdAddressContinuation is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdAddressContinuation) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TxsdAddressContinuation's alias type xsdt.Token.
func (me TxsdAddressContinuation) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdAddressContinuation is just a simple String type, this merely returns the current string value.
func (me TxsdAddressContinuation) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdAddressContinuation is "restarts".
func (me TxsdAddressContinuation) IsRestarts () bool { return me == "restarts" }

//	Returns true if the value of this enumerated TxsdAddressContinuation is "continues".
func (me TxsdAddressContinuation) IsContinues () bool { return me == "continues" }

type XsdGoPkgHasAttr_Continuation_TxsdAddressContinuation_ struct {
	Continuation TxsdAddressContinuation `xml:"http://docbook.org/ns/docbook continuation,attr"`

}

type XsdGoPkgHasElems_Pob struct {
	Pobs []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook pob"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Pob function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Pob instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Pob instance.
func (me *XsdGoPkgHasElems_Pob) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Pob; fn != nil { fn(me) }
	for _, x := range me.Pobs { x.Walk() }
 }

type XsdGoPkgHasElems_Street struct {
	Streets []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook street"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Street function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Street instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Street instance.
func (me *XsdGoPkgHasElems_Street) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Street; fn != nil { fn(me) }
	for _, x := range me.Streets { x.Walk() }
 }

type TxsdAddress struct {
	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Country

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_City

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_State

	xml.XsdGoPkgHasAttr_Space

	XsdGoPkgHasElems_Postcode

	XsdGoPkgHasElems_Otheraddr

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAttr_Continuation_TxsdAddressContinuation_

	XsdGoPkgHasElems_Pob

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Street

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAttr_Startinglinenumber_XsdtNmtoken_

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Linenumbering_TxsdAddressLinenumbering_

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Phone

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Fax

}

//	If the WalkHandlers.TxsdAddress function is not nil (ie. was set by outside code), calls it with this TxsdAddress instance as the single argument. Then calls the Walk() method on 15/35 embed(s) and 0/0 field(s) belonging to this TxsdAddress instance.
func (me *TxsdAddress) Walk ()  { 
	if fn := WalkHandlers.TxsdAddress; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Phone.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Fax.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Country.Walk()
	me.XsdGoPkgHasElems_City.Walk()
	me.XsdGoPkgHasElems_State.Walk()
	me.XsdGoPkgHasElems_Postcode.Walk()
	me.XsdGoPkgHasElems_Otheraddr.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Pob.Walk()
	me.XsdGoPkgHasElems_Street.Walk()
 }

type XsdGoPkgHasElems_Address struct {
	Addresses []*TxsdAddress `xml:"http://docbook.org/ns/docbook address"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Address function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Address instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Address instance.
func (me *XsdGoPkgHasElems_Address) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Address; fn != nil { fn(me) }
	for _, x := range me.Addresses { x.Walk() }
 }

type XsdGoPkgHasElem_Shortaffil struct {
	Shortaffil *TxsdInterfacename `xml:"http://docbook.org/ns/docbook shortaffil"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Shortaffil function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Shortaffil instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Shortaffil instance.
func (me *XsdGoPkgHasElem_Shortaffil) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Shortaffil; fn != nil { fn(me) }
	me.Shortaffil.Walk()
 }

type XsdGoPkgHasElems_Jobtitle struct {
	Jobtitles []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook jobtitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Jobtitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Jobtitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Jobtitle instance.
func (me *XsdGoPkgHasElems_Jobtitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Jobtitle; fn != nil { fn(me) }
	for _, x := range me.Jobtitles { x.Walk() }
 }

type XsdGoPkgHasElems_Errortype struct {
	Errortypes []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook errortype"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Errortype function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Errortype instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Errortype instance.
func (me *XsdGoPkgHasElems_Errortype) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Errortype; fn != nil { fn(me) }
	for _, x := range me.Errortypes { x.Walk() }
 }

type TxsdSystemitemClass xsdt.Token

//	Returns true if the value of this enumerated TxsdSystemitemClass is "netmask".
func (me TxsdSystemitemClass) IsNetmask () bool { return me == "netmask" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "fqdomainname".
func (me TxsdSystemitemClass) IsFqdomainname () bool { return me == "fqdomainname" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "systemname".
func (me TxsdSystemitemClass) IsSystemname () bool { return me == "systemname" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "filesystem".
func (me TxsdSystemitemClass) IsFilesystem () bool { return me == "filesystem" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "resource".
func (me TxsdSystemitemClass) IsResource () bool { return me == "resource" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "server".
func (me TxsdSystemitemClass) IsServer () bool { return me == "server" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "groupname".
func (me TxsdSystemitemClass) IsGroupname () bool { return me == "groupname" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "etheraddress".
func (me TxsdSystemitemClass) IsEtheraddress () bool { return me == "etheraddress" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "newsgroup".
func (me TxsdSystemitemClass) IsNewsgroup () bool { return me == "newsgroup" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "domainname".
func (me TxsdSystemitemClass) IsDomainname () bool { return me == "domainname" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "process".
func (me TxsdSystemitemClass) IsProcess () bool { return me == "process" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "daemon".
func (me TxsdSystemitemClass) IsDaemon () bool { return me == "daemon" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "protocol".
func (me TxsdSystemitemClass) IsProtocol () bool { return me == "protocol" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "osname".
func (me TxsdSystemitemClass) IsOsname () bool { return me == "osname" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "library".
func (me TxsdSystemitemClass) IsLibrary () bool { return me == "library" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "macro".
func (me TxsdSystemitemClass) IsMacro () bool { return me == "macro" }

//	This convenience method just performs a simple type conversion to TxsdSystemitemClass's alias type xsdt.Token.
func (me TxsdSystemitemClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdSystemitemClass is just a simple String type, this merely returns the current string value.
func (me TxsdSystemitemClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "ipaddress".
func (me TxsdSystemitemClass) IsIpaddress () bool { return me == "ipaddress" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "username".
func (me TxsdSystemitemClass) IsUsername () bool { return me == "username" }

//	Since TxsdSystemitemClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdSystemitemClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "event".
func (me TxsdSystemitemClass) IsEvent () bool { return me == "event" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "eventhandler".
func (me TxsdSystemitemClass) IsEventhandler () bool { return me == "eventhandler" }

//	Returns true if the value of this enumerated TxsdSystemitemClass is "service".
func (me TxsdSystemitemClass) IsService () bool { return me == "service" }

type XsdGoPkgHasAttr_Class_TxsdSystemitemClass_ struct {
	Class TxsdSystemitemClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type XsdGoPkgHasAttr_Linkends_XsdtIdrefs_ struct {
	Linkends xsdt.Idrefs `xml:"http://docbook.org/ns/docbook linkends,attr"`

}

type TxsdCo struct {
	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Linkends_XsdtIdrefs_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdCo function is not nil (ie. was set by outside code), calls it with this TxsdCo instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TxsdCo instance.
func (me *TxsdCo) Walk ()  { 
	if fn := WalkHandlers.TxsdCo; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Co struct {
	Cos []*TxsdCo `xml:"http://docbook.org/ns/docbook co"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Co function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Co instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Co instance.
func (me *XsdGoPkgHasElems_Co) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Co; fn != nil { fn(me) }
	for _, x := range me.Cos { x.Walk() }
 }

type TxsdSystemitem struct {
	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAttr_Class_TxsdSystemitemClass_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Subscript

}

//	If the WalkHandlers.TxsdSystemitem function is not nil (ie. was set by outside code), calls it with this TxsdSystemitem instance as the single argument. Then calls the Walk() method on 5/20 embed(s) and 0/0 field(s) belonging to this TxsdSystemitem instance.
func (me *TxsdSystemitem) Walk ()  { 
	if fn := WalkHandlers.TxsdSystemitem; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
 }

type XsdGoPkgHasElems_Systemitem struct {
	Systemitems []*TxsdSystemitem `xml:"http://docbook.org/ns/docbook systemitem"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Systemitem function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Systemitem instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Systemitem instance.
func (me *XsdGoPkgHasElems_Systemitem) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Systemitem; fn != nil { fn(me) }
	for _, x := range me.Systemitems { x.Walk() }
 }

type XsdGoPkgHasAttr_Def_XsdtString_ struct {
	Def xsdt.String `xml:"http://docbook.org/ns/docbook def,attr"`

}

type TxsdNonterminal struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Def_XsdtString_

}

//	If the WalkHandlers.TxsdNonterminal function is not nil (ie. was set by outside code), calls it with this TxsdNonterminal instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TxsdNonterminal instance.
func (me *TxsdNonterminal) Walk ()  { 
	if fn := WalkHandlers.TxsdNonterminal; fn != nil { fn(me) }
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Nonterminal struct {
	Nonterminals []*TxsdNonterminal `xml:"http://docbook.org/ns/docbook nonterminal"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Nonterminal function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Nonterminal instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Nonterminal instance.
func (me *XsdGoPkgHasElems_Nonterminal) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Nonterminal; fn != nil { fn(me) }
	for _, x := range me.Nonterminals { x.Walk() }
 }

type TxsdPrompt struct {
	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Co

}

//	If the WalkHandlers.TxsdPrompt function is not nil (ie. was set by outside code), calls it with this TxsdPrompt instance as the single argument. Then calls the Walk() method on 5/19 embed(s) and 0/0 field(s) belonging to this TxsdPrompt instance.
func (me *TxsdPrompt) Walk ()  { 
	if fn := WalkHandlers.TxsdPrompt; fn != nil { fn(me) }
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElems_Prompt struct {
	Prompts []*TxsdPrompt `xml:"http://docbook.org/ns/docbook prompt"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Prompt function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Prompt instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Prompt instance.
func (me *XsdGoPkgHasElems_Prompt) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Prompt; fn != nil { fn(me) }
	for _, x := range me.Prompts { x.Walk() }
 }

type TxsdTagClass xsdt.Token

//	Returns true if the value of this enumerated TxsdTagClass is "localname".
func (me TxsdTagClass) IsLocalname () bool { return me == "localname" }

//	This convenience method just performs a simple type conversion to TxsdTagClass's alias type xsdt.Token.
func (me TxsdTagClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdTagClass is just a simple String type, this merely returns the current string value.
func (me TxsdTagClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdTagClass is "element".
func (me TxsdTagClass) IsElement () bool { return me == "element" }

//	Since TxsdTagClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdTagClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdTagClass is "numcharref".
func (me TxsdTagClass) IsNumcharref () bool { return me == "numcharref" }

//	Returns true if the value of this enumerated TxsdTagClass is "xmlpi".
func (me TxsdTagClass) IsXmlpi () bool { return me == "xmlpi" }

//	Returns true if the value of this enumerated TxsdTagClass is "endtag".
func (me TxsdTagClass) IsEndtag () bool { return me == "endtag" }

//	Returns true if the value of this enumerated TxsdTagClass is "emptytag".
func (me TxsdTagClass) IsEmptytag () bool { return me == "emptytag" }

//	Returns true if the value of this enumerated TxsdTagClass is "prefix".
func (me TxsdTagClass) IsPrefix () bool { return me == "prefix" }

//	Returns true if the value of this enumerated TxsdTagClass is "paramentity".
func (me TxsdTagClass) IsParamentity () bool { return me == "paramentity" }

//	Returns true if the value of this enumerated TxsdTagClass is "comment".
func (me TxsdTagClass) IsComment () bool { return me == "comment" }

//	Returns true if the value of this enumerated TxsdTagClass is "attribute".
func (me TxsdTagClass) IsAttribute () bool { return me == "attribute" }

//	Returns true if the value of this enumerated TxsdTagClass is "namespace".
func (me TxsdTagClass) IsNamespace () bool { return me == "namespace" }

//	Returns true if the value of this enumerated TxsdTagClass is "starttag".
func (me TxsdTagClass) IsStarttag () bool { return me == "starttag" }

//	Returns true if the value of this enumerated TxsdTagClass is "genentity".
func (me TxsdTagClass) IsGenentity () bool { return me == "genentity" }

//	Returns true if the value of this enumerated TxsdTagClass is "pi".
func (me TxsdTagClass) IsPi () bool { return me == "pi" }

//	Returns true if the value of this enumerated TxsdTagClass is "attvalue".
func (me TxsdTagClass) IsAttvalue () bool { return me == "attvalue" }

type XsdGoPkgHasAttr_Class_TxsdTagClass_ struct {
	Class TxsdTagClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type XsdGoPkgHasAttr_Namespace_XsdtString_ struct {
	Namespace xsdt.String `xml:"http://docbook.org/ns/docbook namespace,attr"`

}

type TxsdTag struct {
	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAttr_Class_TxsdTagClass_

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Namespace_XsdtString_

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Link

}

//	If the WalkHandlers.TxsdTag function is not nil (ie. was set by outside code), calls it with this TxsdTag instance as the single argument. Then calls the Walk() method on 4/20 embed(s) and 0/0 field(s) belonging to this TxsdTag instance.
func (me *TxsdTag) Walk ()  { 
	if fn := WalkHandlers.TxsdTag; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
 }

type XsdGoPkgHasElems_Tag struct {
	Tags []*TxsdTag `xml:"http://docbook.org/ns/docbook tag"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tag function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tag instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tag instance.
func (me *XsdGoPkgHasElems_Tag) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tag; fn != nil { fn(me) }
	for _, x := range me.Tags { x.Walk() }
 }

type XsdGoPkgHasElems_Property struct {
	Properties []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook property"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Property function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Property instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Property instance.
func (me *XsdGoPkgHasElems_Property) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Property; fn != nil { fn(me) }
	for _, x := range me.Properties { x.Walk() }
 }

type XsdGoPkgHasElems_Token struct {
	Tokens []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook token"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Token function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Token instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Token instance.
func (me *XsdGoPkgHasElems_Token) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Token; fn != nil { fn(me) }
	for _, x := range me.Tokens { x.Walk() }
 }

type XsdGoPkgHasAttr_Path_XsdtString_ struct {
	Path xsdt.String `xml:"http://docbook.org/ns/docbook path,attr"`

}

type TxsdFilenameClass xsdt.Token

//	Since TxsdFilenameClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdFilenameClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdFilenameClass is "extension".
func (me TxsdFilenameClass) IsExtension () bool { return me == "extension" }

//	Returns true if the value of this enumerated TxsdFilenameClass is "partition".
func (me TxsdFilenameClass) IsPartition () bool { return me == "partition" }

//	Returns true if the value of this enumerated TxsdFilenameClass is "devicefile".
func (me TxsdFilenameClass) IsDevicefile () bool { return me == "devicefile" }

//	Returns true if the value of this enumerated TxsdFilenameClass is "symlink".
func (me TxsdFilenameClass) IsSymlink () bool { return me == "symlink" }

//	Returns true if the value of this enumerated TxsdFilenameClass is "libraryfile".
func (me TxsdFilenameClass) IsLibraryfile () bool { return me == "libraryfile" }

//	Returns true if the value of this enumerated TxsdFilenameClass is "directory".
func (me TxsdFilenameClass) IsDirectory () bool { return me == "directory" }

//	This convenience method just performs a simple type conversion to TxsdFilenameClass's alias type xsdt.Token.
func (me TxsdFilenameClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdFilenameClass is "headerfile".
func (me TxsdFilenameClass) IsHeaderfile () bool { return me == "headerfile" }

//	Since TxsdFilenameClass is just a simple String type, this merely returns the current string value.
func (me TxsdFilenameClass) String () string { return xsdt.Token(me).String() }

type XsdGoPkgHasAttr_Class_TxsdFilenameClass_ struct {
	Class TxsdFilenameClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdFilename struct {
	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Class_TxsdFilenameClass_

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasAttr_Path_XsdtString_

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Inlinemediaobject

}

//	If the WalkHandlers.TxsdFilename function is not nil (ie. was set by outside code), calls it with this TxsdFilename instance as the single argument. Then calls the Walk() method on 4/20 embed(s) and 0/0 field(s) belonging to this TxsdFilename instance.
func (me *TxsdFilename) Walk ()  { 
	if fn := WalkHandlers.TxsdFilename; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
 }

type XsdGoPkgHasElems_Filename struct {
	Filenames []*TxsdFilename `xml:"http://docbook.org/ns/docbook filename"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Filename function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Filename instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Filename instance.
func (me *XsdGoPkgHasElems_Filename) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Filename; fn != nil { fn(me) }
	for _, x := range me.Filenames { x.Walk() }
 }

type XsdGoPkgHasElems_Shortcut struct {
	Shortcuts []*TxsdShortcut `xml:"http://docbook.org/ns/docbook shortcut"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Shortcut function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Shortcut instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Shortcut instance.
func (me *XsdGoPkgHasElems_Shortcut) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Shortcut; fn != nil { fn(me) }
	for _, x := range me.Shortcuts { x.Walk() }
 }

type XsdGoPkgHasElems_Command struct {
	Commands []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook command"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Command function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Command instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Command instance.
func (me *XsdGoPkgHasElems_Command) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Command; fn != nil { fn(me) }
	for _, x := range me.Commands { x.Walk() }
 }

type TxsdSymbolClass xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdSymbolClass's alias type xsdt.Token.
func (me TxsdSymbolClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdSymbolClass is just a simple String type, this merely returns the current string value.
func (me TxsdSymbolClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdSymbolClass is "limit".
func (me TxsdSymbolClass) IsLimit () bool { return me == "limit" }

//	Since TxsdSymbolClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdSymbolClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Class_TxsdSymbolClass_ struct {
	Class TxsdSymbolClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdSymbol struct {
	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasAttr_Class_TxsdSymbolClass_

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Superscript

}

//	If the WalkHandlers.TxsdSymbol function is not nil (ie. was set by outside code), calls it with this TxsdSymbol instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdSymbol instance.
func (me *TxsdSymbol) Walk ()  { 
	if fn := WalkHandlers.TxsdSymbol; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
 }

type XsdGoPkgHasElems_Symbol struct {
	Symbols []*TxsdSymbol `xml:"http://docbook.org/ns/docbook symbol"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Symbol function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Symbol instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Symbol instance.
func (me *XsdGoPkgHasElems_Symbol) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Symbol; fn != nil { fn(me) }
	for _, x := range me.Symbols { x.Walk() }
 }

type XsdGoPkgHasAttr_Class_TxsdConstantClass_ struct {
	Class TxsdSymbolClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdConstant struct {
	XsdGoPkgHasAttr_Class_TxsdConstantClass_

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Link

}

//	If the WalkHandlers.TxsdConstant function is not nil (ie. was set by outside code), calls it with this TxsdConstant instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdConstant instance.
func (me *TxsdConstant) Walk ()  { 
	if fn := WalkHandlers.TxsdConstant; fn != nil { fn(me) }
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElems_Constant struct {
	Constants []*TxsdConstant `xml:"http://docbook.org/ns/docbook constant"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Constant function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Constant instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Constant instance.
func (me *XsdGoPkgHasElems_Constant) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Constant; fn != nil { fn(me) }
	for _, x := range me.Constants { x.Walk() }
 }

type TxsdUserinput struct {
	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Code

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Prompt

}

//	If the WalkHandlers.TxsdUserinput function is not nil (ie. was set by outside code), calls it with this TxsdUserinput instance as the single argument. Then calls the Walk() method on 37/55 embed(s) and 0/0 field(s) belonging to this TxsdUserinput instance.
func (me *TxsdUserinput) Walk ()  { 
	if fn := WalkHandlers.TxsdUserinput; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
 }

type XsdGoPkgHasElems_Userinput struct {
	Userinputs []*TxsdUserinput `xml:"http://docbook.org/ns/docbook userinput"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Userinput function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Userinput instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Userinput instance.
func (me *XsdGoPkgHasElems_Userinput) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Userinput; fn != nil { fn(me) }
	for _, x := range me.Userinputs { x.Walk() }
 }

type TxsdComputeroutput struct {
	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasCdata

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Command

}

//	If the WalkHandlers.TxsdComputeroutput function is not nil (ie. was set by outside code), calls it with this TxsdComputeroutput instance as the single argument. Then calls the Walk() method on 24/41 embed(s) and 0/0 field(s) belonging to this TxsdComputeroutput instance.
func (me *TxsdComputeroutput) Walk ()  { 
	if fn := WalkHandlers.TxsdComputeroutput; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Computeroutput struct {
	Computeroutputs []*TxsdComputeroutput `xml:"http://docbook.org/ns/docbook computeroutput"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Computeroutput function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Computeroutput instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Computeroutput instance.
func (me *XsdGoPkgHasElems_Computeroutput) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Computeroutput; fn != nil { fn(me) }
	for _, x := range me.Computeroutputs { x.Walk() }
 }

type XsdGoPkgHasAttr_Baseform_XsdtString_ struct {
	Baseform xsdt.String `xml:"http://docbook.org/ns/docbook baseform,attr"`

}

type XsdGoPkgHasElems_Errorcode struct {
	Errorcodes []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook errorcode"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Errorcode function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Errorcode instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Errorcode instance.
func (me *XsdGoPkgHasElems_Errorcode) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Errorcode; fn != nil { fn(me) }
	for _, x := range me.Errorcodes { x.Walk() }
 }

type XsdGoPkgHasElem_Personname struct {
	Personname *TxsdPersonname `xml:"http://docbook.org/ns/docbook personname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Personname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Personname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Personname instance.
func (me *XsdGoPkgHasElem_Personname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Personname; fn != nil { fn(me) }
	me.Personname.Walk()
 }

type XsdGoPkgHasElems_Errortext struct {
	Errortexts []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook errortext"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Errortext function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Errortext instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Errortext instance.
func (me *XsdGoPkgHasElems_Errortext) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Errortext; fn != nil { fn(me) }
	for _, x := range me.Errortexts { x.Walk() }
 }

type TxsdEditor struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Affiliation

	XsdGoPkgHasElem_Orgname

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Personblurb

	XsdGoPkgHasElems_Orgdiv

	XsdGoPkgHasElem_Personname

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Contrib

}

//	If the WalkHandlers.TxsdEditor function is not nil (ie. was set by outside code), calls it with this TxsdEditor instance as the single argument. Then calls the Walk() method on 4/12 embed(s) and 0/0 field(s) belonging to this TxsdEditor instance.
func (me *TxsdEditor) Walk ()  { 
	if fn := WalkHandlers.TxsdEditor; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Personname.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElem_Orgname.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
 }

type XsdGoPkgHasElems_Editor struct {
	Editors []*TxsdEditor `xml:"http://docbook.org/ns/docbook editor"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Editor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Editor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Editor instance.
func (me *XsdGoPkgHasElems_Editor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Editor; fn != nil { fn(me) }
	for _, x := range me.Editors { x.Walk() }
 }

type TxsdMathphrase struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Superscript

}

//	If the WalkHandlers.TxsdMathphrase function is not nil (ie. was set by outside code), calls it with this TxsdMathphrase instance as the single argument. Then calls the Walk() method on 4/19 embed(s) and 0/0 field(s) belonging to this TxsdMathphrase instance.
func (me *TxsdMathphrase) Walk ()  { 
	if fn := WalkHandlers.TxsdMathphrase; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
 }

type XsdGoPkgHasElems_Mathphrase struct {
	Mathphrases []*TxsdMathphrase `xml:"http://docbook.org/ns/docbook mathphrase"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Mathphrase function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Mathphrase instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Mathphrase instance.
func (me *XsdGoPkgHasElems_Mathphrase) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Mathphrase; fn != nil { fn(me) }
	for _, x := range me.Mathphrases { x.Walk() }
 }

type TxsdInlineequation struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Alt

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Mathphrase

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdInlineequation function is not nil (ie. was set by outside code), calls it with this TxsdInlineequation instance as the single argument. Then calls the Walk() method on 2/6 embed(s) and 0/0 field(s) belonging to this TxsdInlineequation instance.
func (me *TxsdInlineequation) Walk ()  { 
	if fn := WalkHandlers.TxsdInlineequation; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Alt.Walk()
	me.XsdGoPkgHasElems_Mathphrase.Walk()
 }

type XsdGoPkgHasElems_Inlineequation struct {
	Inlineequations []*TxsdInlineequation `xml:"http://docbook.org/ns/docbook inlineequation"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Inlineequation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Inlineequation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Inlineequation instance.
func (me *XsdGoPkgHasElems_Inlineequation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Inlineequation; fn != nil { fn(me) }
	for _, x := range me.Inlineequations { x.Walk() }
 }

type TxsdTitleabbrev struct {
	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Code

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Menuchoice

}

//	If the WalkHandlers.TxsdTitleabbrev function is not nil (ie. was set by outside code), calls it with this TxsdTitleabbrev instance as the single argument. Then calls the Walk() method on 71/102 embed(s) and 0/0 field(s) belonging to this TxsdTitleabbrev instance.
func (me *TxsdTitleabbrev) Walk ()  { 
	if fn := WalkHandlers.TxsdTitleabbrev; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
 }

type XsdGoPkgHasElems_Titleabbrev struct {
	Titleabbrevs []*TxsdTitleabbrev `xml:"http://docbook.org/ns/docbook titleabbrev"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Titleabbrev function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Titleabbrev instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Titleabbrev instance.
func (me *XsdGoPkgHasElems_Titleabbrev) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Titleabbrev; fn != nil { fn(me) }
	for _, x := range me.Titleabbrevs { x.Walk() }
 }

type XsdGoPkgHasElems_Info struct {
	Infos []*TxsdInfo `xml:"http://docbook.org/ns/docbook info"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Info function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Info instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Info instance.
func (me *XsdGoPkgHasElems_Info) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Info; fn != nil { fn(me) }
 }

type TxsdSimpara struct {
	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Date

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Info

	XsdGoPkgHasElems_Accel

}

//	If the WalkHandlers.TxsdSimpara function is not nil (ie. was set by outside code), calls it with this TxsdSimpara instance as the single argument. Then calls the Walk() method on 72/103 embed(s) and 0/0 field(s) belonging to this TxsdSimpara instance.
func (me *TxsdSimpara) Walk ()  { 
	if fn := WalkHandlers.TxsdSimpara; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Info.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
 }

type XsdGoPkgHasElems_Simpara struct {
	Simparas []*TxsdSimpara `xml:"http://docbook.org/ns/docbook simpara"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Simpara function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Simpara instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Simpara instance.
func (me *XsdGoPkgHasElems_Simpara) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Simpara; fn != nil { fn(me) }
	for _, x := range me.Simparas { x.Walk() }
 }

type XsdGoPkgHasElems_Title struct {
	Titles []*TxsdTitle `xml:"http://docbook.org/ns/docbook title"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Title function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Title instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Title instance.
func (me *XsdGoPkgHasElems_Title) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Title; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Para struct {
	Para *TxsdPara `xml:"http://docbook.org/ns/docbook para"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Para function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Para instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_Para instance.
func (me *XsdGoPkgHasElem_Para) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Para; fn != nil { fn(me) }
 }

type TxsdFormalpara struct {
	XsdGoPkgHasElem_Para

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Title

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdFormalpara function is not nil (ie. was set by outside code), calls it with this TxsdFormalpara instance as the single argument. Then calls the Walk() method on 3/8 embed(s) and 0/0 field(s) belonging to this TxsdFormalpara instance.
func (me *TxsdFormalpara) Walk ()  { 
	if fn := WalkHandlers.TxsdFormalpara; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Para.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
 }

type XsdGoPkgHasElems_Formalpara struct {
	Formalparas []*TxsdFormalpara `xml:"http://docbook.org/ns/docbook formalpara"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Formalpara function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Formalpara instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Formalpara instance.
func (me *XsdGoPkgHasElems_Formalpara) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Formalpara; fn != nil { fn(me) }
	for _, x := range me.Formalparas { x.Walk() }
 }

type TxsdPersonblurb struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdPersonblurb function is not nil (ie. was set by outside code), calls it with this TxsdPersonblurb instance as the single argument. Then calls the Walk() method on 5/10 embed(s) and 0/0 field(s) belonging to this TxsdPersonblurb instance.
func (me *TxsdPersonblurb) Walk ()  { 
	if fn := WalkHandlers.TxsdPersonblurb; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
 }

type XsdGoPkgHasElems_Personblurb struct {
	Personblurbs []*TxsdPersonblurb `xml:"http://docbook.org/ns/docbook personblurb"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Personblurb function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Personblurb instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Personblurb instance.
func (me *XsdGoPkgHasElems_Personblurb) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Personblurb; fn != nil { fn(me) }
	for _, x := range me.Personblurbs { x.Walk() }
 }

type TxsdPerson struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElem_Personname

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Affiliation

	XsdGoPkgHasElems_Personblurb

	XsdGoPkgHasElems_Address

}

//	If the WalkHandlers.TxsdPerson function is not nil (ie. was set by outside code), calls it with this TxsdPerson instance as the single argument. Then calls the Walk() method on 4/9 embed(s) and 0/0 field(s) belonging to this TxsdPerson instance.
func (me *TxsdPerson) Walk ()  { 
	if fn := WalkHandlers.TxsdPerson; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Personblurb.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElem_Personname.Walk()
 }

type XsdGoPkgHasElems_Person struct {
	Persons []*TxsdPerson `xml:"http://docbook.org/ns/docbook person"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Person function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Person instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Person instance.
func (me *XsdGoPkgHasElems_Person) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Person; fn != nil { fn(me) }
	for _, x := range me.Persons { x.Walk() }
 }

type TxsdFirstterm struct {
	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Email

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Baseform_XsdtString_

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Menuchoice

}

//	If the WalkHandlers.TxsdFirstterm function is not nil (ie. was set by outside code), calls it with this TxsdFirstterm instance as the single argument. Then calls the Walk() method on 72/103 embed(s) and 0/0 field(s) belonging to this TxsdFirstterm instance.
func (me *TxsdFirstterm) Walk ()  { 
	if fn := WalkHandlers.TxsdFirstterm; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
 }

type XsdGoPkgHasElems_Firstterm struct {
	Firstterms []*TxsdFirstterm `xml:"http://docbook.org/ns/docbook firstterm"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Firstterm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Firstterm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Firstterm instance.
func (me *XsdGoPkgHasElems_Firstterm) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Firstterm; fn != nil { fn(me) }
	for _, x := range me.Firstterms { x.Walk() }
 }

type TxsdGlossterm struct {
	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasAttr_Baseform_XsdtString_

	XsdGoPkgHasElems_Function

}

//	If the WalkHandlers.TxsdGlossterm function is not nil (ie. was set by outside code), calls it with this TxsdGlossterm instance as the single argument. Then calls the Walk() method on 73/103 embed(s) and 0/0 field(s) belonging to this TxsdGlossterm instance.
func (me *TxsdGlossterm) Walk ()  { 
	if fn := WalkHandlers.TxsdGlossterm; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
 }

type XsdGoPkgHasElems_Glossterm struct {
	Glossterms []*TxsdGlossterm `xml:"http://docbook.org/ns/docbook glossterm"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Glossterm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Glossterm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Glossterm instance.
func (me *XsdGoPkgHasElems_Glossterm) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Glossterm; fn != nil { fn(me) }
	for _, x := range me.Glossterms { x.Walk() }
 }

type TxsdCitation struct {
	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Person

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasCdata

}

//	If the WalkHandlers.TxsdCitation function is not nil (ie. was set by outside code), calls it with this TxsdCitation instance as the single argument. Then calls the Walk() method on 74/102 embed(s) and 0/0 field(s) belonging to this TxsdCitation instance.
func (me *TxsdCitation) Walk ()  { 
	if fn := WalkHandlers.TxsdCitation; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
 }

type XsdGoPkgHasElems_Citation struct {
	Citations []*TxsdCitation `xml:"http://docbook.org/ns/docbook citation"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Citation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Citation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Citation instance.
func (me *XsdGoPkgHasElems_Citation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Citation; fn != nil { fn(me) }
	for _, x := range me.Citations { x.Walk() }
 }

type TxsdOrgdiv struct {
	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Token

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Orgname

}

//	If the WalkHandlers.TxsdOrgdiv function is not nil (ie. was set by outside code), calls it with this TxsdOrgdiv instance as the single argument. Then calls the Walk() method on 75/102 embed(s) and 0/0 field(s) belonging to this TxsdOrgdiv instance.
func (me *TxsdOrgdiv) Walk ()  { 
	if fn := WalkHandlers.TxsdOrgdiv; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
 }

type XsdGoPkgHasElems_Orgdiv struct {
	Orgdivs []*TxsdOrgdiv `xml:"http://docbook.org/ns/docbook orgdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Orgdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Orgdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Orgdiv instance.
func (me *XsdGoPkgHasElems_Orgdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Orgdiv; fn != nil { fn(me) }
	for _, x := range me.Orgdivs { x.Walk() }
 }

type TxsdAffiliation struct {
	XsdGoPkgHasElems_Address

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Shortaffil

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Orgdiv

	XsdGoPkgHasElem_Orgname

	XsdGoPkgHasElem_Org

}

//	If the WalkHandlers.TxsdAffiliation function is not nil (ie. was set by outside code), calls it with this TxsdAffiliation instance as the single argument. Then calls the Walk() method on 6/9 embed(s) and 0/0 field(s) belonging to this TxsdAffiliation instance.
func (me *TxsdAffiliation) Walk ()  { 
	if fn := WalkHandlers.TxsdAffiliation; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Orgdiv.Walk()
	me.XsdGoPkgHasElem_Orgname.Walk()
	me.XsdGoPkgHasElem_Org.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElem_Shortaffil.Walk()
 }

type XsdGoPkgHasElems_Affiliation struct {
	Affiliations []*TxsdAffiliation `xml:"http://docbook.org/ns/docbook affiliation"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Affiliation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Affiliation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Affiliation instance.
func (me *XsdGoPkgHasElems_Affiliation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Affiliation; fn != nil { fn(me) }
	for _, x := range me.Affiliations { x.Walk() }
 }

type TxsdOrg struct {
	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Orgdiv

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Orgname

	XsdGoPkgHasElems_Affiliation

	XsdGoPkgHasElems_Email

}

//	If the WalkHandlers.TxsdOrg function is not nil (ie. was set by outside code), calls it with this TxsdOrg instance as the single argument. Then calls the Walk() method on 5/9 embed(s) and 0/0 field(s) belonging to this TxsdOrg instance.
func (me *TxsdOrg) Walk ()  { 
	if fn := WalkHandlers.TxsdOrg; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Orgdiv.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElem_Orgname.Walk()
	me.XsdGoPkgHasElems_Affiliation.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
 }

type XsdGoPkgHasElems_Org struct {
	Orgs []*TxsdOrg `xml:"http://docbook.org/ns/docbook org"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Org function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Org instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Org instance.
func (me *XsdGoPkgHasElems_Org) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Org; fn != nil { fn(me) }
	for _, x := range me.Orgs { x.Walk() }
 }

type TxsdQuote struct {
	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Exceptionname

}

//	If the WalkHandlers.TxsdQuote function is not nil (ie. was set by outside code), calls it with this TxsdQuote instance as the single argument. Then calls the Walk() method on 76/102 embed(s) and 0/0 field(s) belonging to this TxsdQuote instance.
func (me *TxsdQuote) Walk ()  { 
	if fn := WalkHandlers.TxsdQuote; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Quote struct {
	Quotes []*TxsdQuote `xml:"http://docbook.org/ns/docbook quote"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Quote function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Quote instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Quote instance.
func (me *XsdGoPkgHasElems_Quote) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Quote; fn != nil { fn(me) }
	for _, x := range me.Quotes { x.Walk() }
 }

type TxsdForeignphrase struct {
	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Link

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

}

//	If the WalkHandlers.TxsdForeignphrase function is not nil (ie. was set by outside code), calls it with this TxsdForeignphrase instance as the single argument. Then calls the Walk() method on 26/43 embed(s) and 0/0 field(s) belonging to this TxsdForeignphrase instance.
func (me *TxsdForeignphrase) Walk ()  { 
	if fn := WalkHandlers.TxsdForeignphrase; fn != nil { fn(me) }
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
 }

type XsdGoPkgHasElems_Foreignphrase struct {
	Foreignphrases []*TxsdForeignphrase `xml:"http://docbook.org/ns/docbook foreignphrase"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Foreignphrase function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Foreignphrase instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Foreignphrase instance.
func (me *XsdGoPkgHasElems_Foreignphrase) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Foreignphrase; fn != nil { fn(me) }
	for _, x := range me.Foreignphrases { x.Walk() }
 }

type TxsdEmphasis struct {
	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Command

}

//	If the WalkHandlers.TxsdEmphasis function is not nil (ie. was set by outside code), calls it with this TxsdEmphasis instance as the single argument. Then calls the Walk() method on 78/102 embed(s) and 0/0 field(s) belonging to this TxsdEmphasis instance.
func (me *TxsdEmphasis) Walk ()  { 
	if fn := WalkHandlers.TxsdEmphasis; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
 }

type XsdGoPkgHasElems_Emphasis struct {
	Emphasises []*TxsdEmphasis `xml:"http://docbook.org/ns/docbook emphasis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Emphasis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Emphasis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Emphasis instance.
func (me *XsdGoPkgHasElems_Emphasis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Emphasis; fn != nil { fn(me) }
	for _, x := range me.Emphasises { x.Walk() }
 }

type TxsdCitetitlePubwork xsdt.Token

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "gopher".
func (me TxsdCitetitlePubwork) IsGopher () bool { return me == "gopher" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "series".
func (me TxsdCitetitlePubwork) IsSeries () bool { return me == "series" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "emailmessage".
func (me TxsdCitetitlePubwork) IsEmailmessage () bool { return me == "emailmessage" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "manuscript".
func (me TxsdCitetitlePubwork) IsManuscript () bool { return me == "manuscript" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "bbs".
func (me TxsdCitetitlePubwork) IsBbs () bool { return me == "bbs" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "book".
func (me TxsdCitetitlePubwork) IsBook () bool { return me == "book" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "journal".
func (me TxsdCitetitlePubwork) IsJournal () bool { return me == "journal" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "section".
func (me TxsdCitetitlePubwork) IsSection () bool { return me == "section" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "webpage".
func (me TxsdCitetitlePubwork) IsWebpage () bool { return me == "webpage" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "set".
func (me TxsdCitetitlePubwork) IsSet () bool { return me == "set" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "dvd".
func (me TxsdCitetitlePubwork) IsDvd () bool { return me == "dvd" }

//	Since TxsdCitetitlePubwork is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdCitetitlePubwork) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "cdrom".
func (me TxsdCitetitlePubwork) IsCdrom () bool { return me == "cdrom" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "article".
func (me TxsdCitetitlePubwork) IsArticle () bool { return me == "article" }

//	This convenience method just performs a simple type conversion to TxsdCitetitlePubwork's alias type xsdt.Token.
func (me TxsdCitetitlePubwork) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdCitetitlePubwork is just a simple String type, this merely returns the current string value.
func (me TxsdCitetitlePubwork) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "part".
func (me TxsdCitetitlePubwork) IsPart () bool { return me == "part" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "chapter".
func (me TxsdCitetitlePubwork) IsChapter () bool { return me == "chapter" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "refentry".
func (me TxsdCitetitlePubwork) IsRefentry () bool { return me == "refentry" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "newsposting".
func (me TxsdCitetitlePubwork) IsNewsposting () bool { return me == "newsposting" }

//	Returns true if the value of this enumerated TxsdCitetitlePubwork is "wiki".
func (me TxsdCitetitlePubwork) IsWiki () bool { return me == "wiki" }

type XsdGoPkgHasAttr_Pubwork_TxsdCitetitlePubwork_ struct {
	Pubwork TxsdCitetitlePubwork `xml:"http://docbook.org/ns/docbook pubwork,attr"`

}

type TxsdCitetitle struct {
	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Code

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasAttr_Pubwork_TxsdCitetitlePubwork_

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Constant

}

//	If the WalkHandlers.TxsdCitetitle function is not nil (ie. was set by outside code), calls it with this TxsdCitetitle instance as the single argument. Then calls the Walk() method on 79/103 embed(s) and 0/0 field(s) belonging to this TxsdCitetitle instance.
func (me *TxsdCitetitle) Walk ()  { 
	if fn := WalkHandlers.TxsdCitetitle; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
 }

type XsdGoPkgHasElems_Citetitle struct {
	Citetitles []*TxsdCitetitle `xml:"http://docbook.org/ns/docbook citetitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Citetitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Citetitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Citetitle instance.
func (me *XsdGoPkgHasElems_Citetitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Citetitle; fn != nil { fn(me) }
	for _, x := range me.Citetitles { x.Walk() }
 }

type TxsdRefentrytitle struct {
	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Database

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Org

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Function

}

//	If the WalkHandlers.TxsdRefentrytitle function is not nil (ie. was set by outside code), calls it with this TxsdRefentrytitle instance as the single argument. Then calls the Walk() method on 80/102 embed(s) and 0/0 field(s) belonging to this TxsdRefentrytitle instance.
func (me *TxsdRefentrytitle) Walk ()  { 
	if fn := WalkHandlers.TxsdRefentrytitle; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
 }

type XsdGoPkgHasElem_Refentrytitle struct {
	Refentrytitle *TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook refentrytitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refentrytitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refentrytitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refentrytitle instance.
func (me *XsdGoPkgHasElem_Refentrytitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refentrytitle; fn != nil { fn(me) }
	me.Refentrytitle.Walk()
 }

type XsdGoPkgHasElem_Manvolnum struct {
	Manvolnum *TxsdInterfacename `xml:"http://docbook.org/ns/docbook manvolnum"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Manvolnum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Manvolnum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Manvolnum instance.
func (me *XsdGoPkgHasElem_Manvolnum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Manvolnum; fn != nil { fn(me) }
	me.Manvolnum.Walk()
 }

type TxsdCiterefentry struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Refentrytitle

	XsdGoPkgHasElem_Manvolnum

}

//	If the WalkHandlers.TxsdCiterefentry function is not nil (ie. was set by outside code), calls it with this TxsdCiterefentry instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TxsdCiterefentry instance.
func (me *TxsdCiterefentry) Walk ()  { 
	if fn := WalkHandlers.TxsdCiterefentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Refentrytitle.Walk()
	me.XsdGoPkgHasElem_Manvolnum.Walk()
 }

type XsdGoPkgHasElems_Citerefentry struct {
	Citerefentries []*TxsdCiterefentry `xml:"http://docbook.org/ns/docbook citerefentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Citerefentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Citerefentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Citerefentry instance.
func (me *XsdGoPkgHasElems_Citerefentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Citerefentry; fn != nil { fn(me) }
	for _, x := range me.Citerefentries { x.Walk() }
 }

type TxsdBridgehead struct {
	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasAttr_Renderas_TxsdBridgeheadRenderas_

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Date

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasAttr_Otherrenderas_XsdtNmtoken_

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Coref

}

//	If the WalkHandlers.TxsdBridgehead function is not nil (ie. was set by outside code), calls it with this TxsdBridgehead instance as the single argument. Then calls the Walk() method on 81/104 embed(s) and 0/0 field(s) belonging to this TxsdBridgehead instance.
func (me *TxsdBridgehead) Walk ()  { 
	if fn := WalkHandlers.TxsdBridgehead; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElems_Bridgehead struct {
	Bridgeheads []*TxsdBridgehead `xml:"http://docbook.org/ns/docbook bridgehead"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bridgehead function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bridgehead instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bridgehead instance.
func (me *XsdGoPkgHasElems_Bridgehead) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bridgehead; fn != nil { fn(me) }
	for _, x := range me.Bridgeheads { x.Walk() }
 }

type XsdGoPkgHasAttr_Align_TxsdTfootAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Onkeypress_XsdtString_ struct {
	Onkeypress xsdt.String `xml:"http://docbook.org/ns/docbook onkeypress,attr"`

}

type XsdGoPkgHasAttr_Onmouseup_XsdtString_ struct {
	Onmouseup xsdt.String `xml:"http://docbook.org/ns/docbook onmouseup,attr"`

}

type XsdGoPkgHasAttr_Char_XsdtString_ struct {
	Char xsdt.String `xml:"http://docbook.org/ns/docbook char,attr"`

}

type XsdGoPkgHasAttr_Title_XsdtString_ struct {
	Title xsdt.String `xml:"http://docbook.org/ns/docbook title,attr"`

}

type XsdGoPkgHasAttr_Style_XsdtString_ struct {
	Style xsdt.String `xml:"http://docbook.org/ns/docbook style,attr"`

}

type XsdGoPkgHasAttr_Charoff_XsdtString_ struct {
	Charoff xsdt.String `xml:"http://docbook.org/ns/docbook charoff,attr"`

}

type XsdGoPkgHasAttr_Colwidth_XsdtString_ struct {
	Colwidth xsdt.String `xml:"http://docbook.org/ns/docbook colwidth,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdColspecAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Colnum_XsdtNmtoken_ struct {
	Colnum xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook colnum,attr"`

}

type XsdGoPkgHasAttr_Rowsep_TxsdColspecRowsep_ struct {
	Rowsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rowsep,attr"`

}

type XsdGoPkgHasAttr_Colname_XsdtString_ struct {
	Colname xsdt.String `xml:"http://docbook.org/ns/docbook colname,attr"`

}

type XsdGoPkgHasAttr_Colsep_TxsdColspecColsep_ struct {
	Colsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook colsep,attr"`

}

type TxsdColspec struct {
	XsdGoPkgHasAttr_Rowsep_TxsdColspecRowsep_

	XsdGoPkgHasAttr_Colname_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Colsep_TxsdColspecColsep_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAttr_Colwidth_XsdtString_

	XsdGoPkgHasAttr_Align_TxsdColspecAlign_

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasAttr_Colnum_XsdtNmtoken_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdColspec function is not nil (ie. was set by outside code), calls it with this TxsdColspec instance as the single argument. Then calls the Walk() method on 0/11 embed(s) and 0/0 field(s) belonging to this TxsdColspec instance.
func (me *TxsdColspec) Walk ()  { 
	if fn := WalkHandlers.TxsdColspec; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Colspec struct {
	Colspecs []*TxsdColspec `xml:"http://docbook.org/ns/docbook colspec"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Colspec function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Colspec instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Colspec instance.
func (me *XsdGoPkgHasElems_Colspec) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Colspec; fn != nil { fn(me) }
	for _, x := range me.Colspecs { x.Walk() }
 }

type XsdGoPkgHasAttr_Onmouseover_XsdtString_ struct {
	Onmouseover xsdt.String `xml:"http://docbook.org/ns/docbook onmouseover,attr"`

}

type XsdGoPkgHasElems_Seg struct {
	Segs []*TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook seg"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Seg function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Seg instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Seg instance.
func (me *XsdGoPkgHasElems_Seg) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Seg; fn != nil { fn(me) }
	for _, x := range me.Segs { x.Walk() }
 }

type TxsdSeglistitem struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Seg

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdSeglistitem function is not nil (ie. was set by outside code), calls it with this TxsdSeglistitem instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TxsdSeglistitem instance.
func (me *TxsdSeglistitem) Walk ()  { 
	if fn := WalkHandlers.TxsdSeglistitem; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Seg.Walk()
 }

type XsdGoPkgHasElems_Seglistitem struct {
	Seglistitems []*TxsdSeglistitem `xml:"http://docbook.org/ns/docbook seglistitem"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Seglistitem function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Seglistitem instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Seglistitem instance.
func (me *XsdGoPkgHasElems_Seglistitem) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Seglistitem; fn != nil { fn(me) }
	for _, x := range me.Seglistitems { x.Walk() }
 }

type XsdGoPkgHasElems_Segtitle struct {
	Segtitles []*TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook segtitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Segtitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Segtitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Segtitle instance.
func (me *XsdGoPkgHasElems_Segtitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Segtitle; fn != nil { fn(me) }
	for _, x := range me.Segtitles { x.Walk() }
 }

type TxsdSegmentedlist struct {
	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Seglistitem

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Segtitle

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

}

//	If the WalkHandlers.TxsdSegmentedlist function is not nil (ie. was set by outside code), calls it with this TxsdSegmentedlist instance as the single argument. Then calls the Walk() method on 4/8 embed(s) and 0/0 field(s) belonging to this TxsdSegmentedlist instance.
func (me *TxsdSegmentedlist) Walk ()  { 
	if fn := WalkHandlers.TxsdSegmentedlist; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Segtitle.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Seglistitem.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
 }

type XsdGoPkgHasElems_Segmentedlist struct {
	Segmentedlists []*TxsdSegmentedlist `xml:"http://docbook.org/ns/docbook segmentedlist"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Segmentedlist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Segmentedlist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Segmentedlist instance.
func (me *XsdGoPkgHasElems_Segmentedlist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Segmentedlist; fn != nil { fn(me) }
	for _, x := range me.Segmentedlists { x.Walk() }
 }

type XsdGoPkgHasElems_Lineannotation struct {
	Lineannotations []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook lineannotation"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Lineannotation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Lineannotation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Lineannotation instance.
func (me *XsdGoPkgHasElems_Lineannotation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Lineannotation; fn != nil { fn(me) }
	for _, x := range me.Lineannotations { x.Walk() }
 }

type XsdGoPkgHasAttr_Continuation_TxsdScreenContinuation_ struct {
	Continuation TxsdAddressContinuation `xml:"http://docbook.org/ns/docbook continuation,attr"`

}

type XsdGoPkgHasAttr_Width_XsdtNmtoken_ struct {
	Width xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook width,attr"`

}

type XsdGoPkgHasAttr_Linenumbering_TxsdScreenLinenumbering_ struct {
	Linenumbering TxsdAddressLinenumbering `xml:"http://docbook.org/ns/docbook linenumbering,attr"`

}

type TxsdScreen struct {
	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Function

	xml.XsdGoPkgHasAttr_Space

	XsdGoPkgHasElems_Lineannotation

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasAttr_Continuation_TxsdScreenContinuation_

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Width_XsdtNmtoken_

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasAttr_Startinglinenumber_XsdtNmtoken_

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasAttr_Linenumbering_TxsdScreenLinenumbering_

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Info

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Quote

}

//	If the WalkHandlers.TxsdScreen function is not nil (ie. was set by outside code), calls it with this TxsdScreen instance as the single argument. Then calls the Walk() method on 84/112 embed(s) and 0/0 field(s) belonging to this TxsdScreen instance.
func (me *TxsdScreen) Walk ()  { 
	if fn := WalkHandlers.TxsdScreen; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Info.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Lineannotation.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
 }

type XsdGoPkgHasElem_Screen struct {
	Screen *TxsdScreen `xml:"http://docbook.org/ns/docbook screen"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Screen function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Screen instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Screen instance.
func (me *XsdGoPkgHasElem_Screen) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Screen; fn != nil { fn(me) }
	me.Screen.Walk()
 }

type TxsdAreaUnits xsdt.Token

//	Returns true if the value of this enumerated TxsdAreaUnits is "calspair".
func (me TxsdAreaUnits) IsCalspair () bool { return me == "calspair" }

//	Returns true if the value of this enumerated TxsdAreaUnits is "linerange".
func (me TxsdAreaUnits) IsLinerange () bool { return me == "linerange" }

//	Returns true if the value of this enumerated TxsdAreaUnits is "linecolumnpair".
func (me TxsdAreaUnits) IsLinecolumnpair () bool { return me == "linecolumnpair" }

//	Since TxsdAreaUnits is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdAreaUnits) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Since TxsdAreaUnits is just a simple String type, this merely returns the current string value.
func (me TxsdAreaUnits) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdAreaUnits is "other".
func (me TxsdAreaUnits) IsOther () bool { return me == "other" }

//	Returns true if the value of this enumerated TxsdAreaUnits is "linecolumn".
func (me TxsdAreaUnits) IsLinecolumn () bool { return me == "linecolumn" }

//	This convenience method just performs a simple type conversion to TxsdAreaUnits's alias type xsdt.Token.
func (me TxsdAreaUnits) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Units_TxsdAreaUnits_ struct {
	Units TxsdAreaUnits `xml:"http://docbook.org/ns/docbook units,attr"`

}

type XsdGoPkgHasAttr_Otherunits_XsdtNmtoken_ struct {
	Otherunits xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook otherunits,attr"`

}

type XsdGoPkgHasAttr_Coords_XsdtString_ struct {
	Coords xsdt.String `xml:"http://docbook.org/ns/docbook coords,attr"`

}

type TxsdArea struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Linkends_XsdtIdrefs_

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAttr_Units_TxsdAreaUnits_

	XsdGoPkgHasElem_Alt

	XsdGoPkgHasAttr_Otherunits_XsdtNmtoken_

	XsdGoPkgHasAttr_Coords_XsdtString_

}

//	If the WalkHandlers.TxsdArea function is not nil (ie. was set by outside code), calls it with this TxsdArea instance as the single argument. Then calls the Walk() method on 1/8 embed(s) and 0/0 field(s) belonging to this TxsdArea instance.
func (me *TxsdArea) Walk ()  { 
	if fn := WalkHandlers.TxsdArea; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Alt.Walk()
 }

type XsdGoPkgHasElems_Area struct {
	Areas []*TxsdArea `xml:"http://docbook.org/ns/docbook area"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Area function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Area instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Area instance.
func (me *XsdGoPkgHasElems_Area) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Area; fn != nil { fn(me) }
	for _, x := range me.Areas { x.Walk() }
 }

type XsdGoPkgHasAttr_Units_TxsdAreaspecUnits_ struct {
	Units TxsdAreaUnits `xml:"http://docbook.org/ns/docbook units,attr"`

}

type XsdGoPkgHasAttr_Units_TxsdAreasetUnits_ struct {
	Units TxsdAreaUnits `xml:"http://docbook.org/ns/docbook units,attr"`

}

type TxsdAreaset struct {
	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAttr_Units_TxsdAreasetUnits_

	XsdGoPkgHasAttr_Otherunits_XsdtNmtoken_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Linkends_XsdtIdrefs_

	XsdGoPkgHasElems_Area

}

//	If the WalkHandlers.TxsdAreaset function is not nil (ie. was set by outside code), calls it with this TxsdAreaset instance as the single argument. Then calls the Walk() method on 1/7 embed(s) and 0/0 field(s) belonging to this TxsdAreaset instance.
func (me *TxsdAreaset) Walk ()  { 
	if fn := WalkHandlers.TxsdAreaset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Area.Walk()
 }

type XsdGoPkgHasElems_Areaset struct {
	Areasets []*TxsdAreaset `xml:"http://docbook.org/ns/docbook areaset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Areaset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Areaset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Areaset instance.
func (me *XsdGoPkgHasElems_Areaset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Areaset; fn != nil { fn(me) }
	for _, x := range me.Areasets { x.Walk() }
 }

type TxsdAreaspec struct {
	XsdGoPkgHasElems_Areaset

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Area

	XsdGoPkgHasAttr_Otherunits_XsdtNmtoken_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Units_TxsdAreaspecUnits_

}

//	If the WalkHandlers.TxsdAreaspec function is not nil (ie. was set by outside code), calls it with this TxsdAreaspec instance as the single argument. Then calls the Walk() method on 2/7 embed(s) and 0/0 field(s) belonging to this TxsdAreaspec instance.
func (me *TxsdAreaspec) Walk ()  { 
	if fn := WalkHandlers.TxsdAreaspec; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Areaset.Walk()
	me.XsdGoPkgHasElems_Area.Walk()
 }

type XsdGoPkgHasElem_Areaspec struct {
	Areaspec *TxsdAreaspec `xml:"http://docbook.org/ns/docbook areaspec"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Areaspec function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Areaspec instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Areaspec instance.
func (me *XsdGoPkgHasElem_Areaspec) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Areaspec; fn != nil { fn(me) }
	me.Areaspec.Walk()
 }

type XsdGoPkgHasElem_Initializer struct {
	Initializer *TxsdInterfacename `xml:"http://docbook.org/ns/docbook initializer"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Initializer function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Initializer instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Initializer instance.
func (me *XsdGoPkgHasElem_Initializer) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Initializer; fn != nil { fn(me) }
	me.Initializer.Walk()
 }

type XsdGoPkgHasElem_Varname struct {
	Varname *TxsdInterfacename `xml:"http://docbook.org/ns/docbook varname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Varname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Varname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Varname instance.
func (me *XsdGoPkgHasElem_Varname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Varname; fn != nil { fn(me) }
	me.Varname.Walk()
 }

type XsdGoPkgHasElem_Type struct {
	Type *TxsdInterfacename `xml:"http://docbook.org/ns/docbook type"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Type function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Type instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Type instance.
func (me *XsdGoPkgHasElem_Type) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Type; fn != nil { fn(me) }
	me.Type.Walk()
 }

type TxsdFieldsynopsis struct {
	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Initializer

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Varname

	XsdGoPkgHasElem_Type

}

//	If the WalkHandlers.TxsdFieldsynopsis function is not nil (ie. was set by outside code), calls it with this TxsdFieldsynopsis instance as the single argument. Then calls the Walk() method on 4/8 embed(s) and 0/0 field(s) belonging to this TxsdFieldsynopsis instance.
func (me *TxsdFieldsynopsis) Walk ()  { 
	if fn := WalkHandlers.TxsdFieldsynopsis; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Initializer.Walk()
	me.XsdGoPkgHasElem_Varname.Walk()
	me.XsdGoPkgHasElem_Type.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
 }

type XsdGoPkgHasElems_Fieldsynopsis struct {
	Fieldsynopsises []*TxsdFieldsynopsis `xml:"http://docbook.org/ns/docbook fieldsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Fieldsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Fieldsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Fieldsynopsis instance.
func (me *XsdGoPkgHasElems_Fieldsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Fieldsynopsis; fn != nil { fn(me) }
	for _, x := range me.Fieldsynopsises { x.Walk() }
 }

type XsdGoPkgHasAttr_Linenumbering_TxsdFuncsynopsisinfoLinenumbering_ struct {
	Linenumbering TxsdAddressLinenumbering `xml:"http://docbook.org/ns/docbook linenumbering,attr"`

}

type XsdGoPkgHasAttr_Continuation_TxsdFuncsynopsisinfoContinuation_ struct {
	Continuation TxsdAddressContinuation `xml:"http://docbook.org/ns/docbook continuation,attr"`

}

type TxsdFuncsynopsisinfo struct {
	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAttr_Startinglinenumber_XsdtNmtoken_

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasAttr_Linenumbering_TxsdFuncsynopsisinfoLinenumbering_

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasAttr_Continuation_TxsdFuncsynopsisinfoContinuation_

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Lineannotation

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Info

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Xref

	xml.XsdGoPkgHasAttr_Space

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Keycode

}

//	If the WalkHandlers.TxsdFuncsynopsisinfo function is not nil (ie. was set by outside code), calls it with this TxsdFuncsynopsisinfo instance as the single argument. Then calls the Walk() method on 84/111 embed(s) and 0/0 field(s) belonging to this TxsdFuncsynopsisinfo instance.
func (me *TxsdFuncsynopsisinfo) Walk ()  { 
	if fn := WalkHandlers.TxsdFuncsynopsisinfo; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Lineannotation.Walk()
	me.XsdGoPkgHasElems_Info.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
 }

type XsdGoPkgHasElems_Funcsynopsisinfo struct {
	Funcsynopsisinfos []*TxsdFuncsynopsisinfo `xml:"http://docbook.org/ns/docbook funcsynopsisinfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Funcsynopsisinfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Funcsynopsisinfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Funcsynopsisinfo instance.
func (me *XsdGoPkgHasElems_Funcsynopsisinfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Funcsynopsisinfo; fn != nil { fn(me) }
	for _, x := range me.Funcsynopsisinfos { x.Walk() }
 }

type TxsdParamdefChoice xsdt.Token

//	Returns true if the value of this enumerated TxsdParamdefChoice is "opt".
func (me TxsdParamdefChoice) IsOpt () bool { return me == "opt" }

//	Returns true if the value of this enumerated TxsdParamdefChoice is "req".
func (me TxsdParamdefChoice) IsReq () bool { return me == "req" }

//	Since TxsdParamdefChoice is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdParamdefChoice) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Since TxsdParamdefChoice is just a simple String type, this merely returns the current string value.
func (me TxsdParamdefChoice) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdParamdefChoice's alias type xsdt.Token.
func (me TxsdParamdefChoice) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Choice_TxsdParamdefChoice_Opt struct {
	Choice TxsdParamdefChoice `xml:"http://docbook.org/ns/docbook choice,attr"`

}

//	Returns the default value for Choice -- "opt"
func (me XsdGoPkgHasAttr_Choice_TxsdParamdefChoice_Opt) ChoiceDefault () TxsdParamdefChoice { return TxsdParamdefChoice("opt") }

type XsdGoPkgHasElems_Funcparams struct {
	Funcparamses []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook funcparams"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Funcparams function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Funcparams instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Funcparams instance.
func (me *XsdGoPkgHasElems_Funcparams) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Funcparams; fn != nil { fn(me) }
	for _, x := range me.Funcparamses { x.Walk() }
 }

type TxsdParamdef struct {
	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Funcparams

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Choice_TxsdParamdefChoice_Opt

}

//	If the WalkHandlers.TxsdParamdef function is not nil (ie. was set by outside code), calls it with this TxsdParamdef instance as the single argument. Then calls the Walk() method on 8/23 embed(s) and 0/0 field(s) belonging to this TxsdParamdef instance.
func (me *TxsdParamdef) Walk ()  { 
	if fn := WalkHandlers.TxsdParamdef; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Funcparams.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
 }

type XsdGoPkgHasElems_Paramdef struct {
	Paramdefs []*TxsdParamdef `xml:"http://docbook.org/ns/docbook paramdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Paramdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Paramdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Paramdef instance.
func (me *XsdGoPkgHasElems_Paramdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Paramdef; fn != nil { fn(me) }
	for _, x := range me.Paramdefs { x.Walk() }
 }

type TxsdVoid struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdVoid function is not nil (ie. was set by outside code), calls it with this TxsdVoid instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdVoid instance.
func (me *TxsdVoid) Walk ()  { 
	if fn := WalkHandlers.TxsdVoid; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Void struct {
	Void *TxsdVoid `xml:"http://docbook.org/ns/docbook void"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Void function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Void instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Void instance.
func (me *XsdGoPkgHasElem_Void) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Void; fn != nil { fn(me) }
	me.Void.Walk()
 }

type TxsdFuncdef struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdFuncdef function is not nil (ie. was set by outside code), calls it with this TxsdFuncdef instance as the single argument. Then calls the Walk() method on 5/20 embed(s) and 0/0 field(s) belonging to this TxsdFuncdef instance.
func (me *TxsdFuncdef) Walk ()  { 
	if fn := WalkHandlers.TxsdFuncdef; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
 }

type XsdGoPkgHasElem_Funcdef struct {
	Funcdef *TxsdFuncdef `xml:"http://docbook.org/ns/docbook funcdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Funcdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Funcdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Funcdef instance.
func (me *XsdGoPkgHasElem_Funcdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Funcdef; fn != nil { fn(me) }
	me.Funcdef.Walk()
 }

type XsdGoPkgHasElem_Varargs struct {
	Varargs *TxsdVoid `xml:"http://docbook.org/ns/docbook varargs"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Varargs function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Varargs instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Varargs instance.
func (me *XsdGoPkgHasElem_Varargs) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Varargs; fn != nil { fn(me) }
	me.Varargs.Walk()
 }

type TxsdFuncprototype struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Paramdef

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Void

	XsdGoPkgHasElem_Funcdef

	XsdGoPkgHasElem_Varargs

}

//	If the WalkHandlers.TxsdFuncprototype function is not nil (ie. was set by outside code), calls it with this TxsdFuncprototype instance as the single argument. Then calls the Walk() method on 5/8 embed(s) and 0/0 field(s) belonging to this TxsdFuncprototype instance.
func (me *TxsdFuncprototype) Walk ()  { 
	if fn := WalkHandlers.TxsdFuncprototype; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Paramdef.Walk()
	me.XsdGoPkgHasElem_Void.Walk()
	me.XsdGoPkgHasElem_Funcdef.Walk()
	me.XsdGoPkgHasElem_Varargs.Walk()
 }

type XsdGoPkgHasElems_Funcprototype struct {
	Funcprototypes []*TxsdFuncprototype `xml:"http://docbook.org/ns/docbook funcprototype"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Funcprototype function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Funcprototype instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Funcprototype instance.
func (me *XsdGoPkgHasElems_Funcprototype) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Funcprototype; fn != nil { fn(me) }
	for _, x := range me.Funcprototypes { x.Walk() }
 }

type TxsdFuncsynopsis struct {
	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Funcsynopsisinfo

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Funcprototype

}

//	If the WalkHandlers.TxsdFuncsynopsis function is not nil (ie. was set by outside code), calls it with this TxsdFuncsynopsis instance as the single argument. Then calls the Walk() method on 2/7 embed(s) and 0/0 field(s) belonging to this TxsdFuncsynopsis instance.
func (me *TxsdFuncsynopsis) Walk ()  { 
	if fn := WalkHandlers.TxsdFuncsynopsis; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Funcsynopsisinfo.Walk()
	me.XsdGoPkgHasElems_Funcprototype.Walk()
 }

type XsdGoPkgHasElems_Funcsynopsis struct {
	Funcsynopsises []*TxsdFuncsynopsis `xml:"http://docbook.org/ns/docbook funcsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Funcsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Funcsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Funcsynopsis instance.
func (me *XsdGoPkgHasElems_Funcsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Funcsynopsis; fn != nil { fn(me) }
	for _, x := range me.Funcsynopsises { x.Walk() }
 }

type TxsdClasssynopsisClass xsdt.Token

//	Since TxsdClasssynopsisClass is just a simple String type, this merely returns the current string value.
func (me TxsdClasssynopsisClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdClasssynopsisClass is "interface".
func (me TxsdClasssynopsisClass) IsInterface () bool { return me == "interface" }

//	Since TxsdClasssynopsisClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdClasssynopsisClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdClasssynopsisClass is "class".
func (me TxsdClasssynopsisClass) IsClass () bool { return me == "class" }

//	This convenience method just performs a simple type conversion to TxsdClasssynopsisClass's alias type xsdt.Token.
func (me TxsdClasssynopsisClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Class_TxsdClasssynopsisClass_ struct {
	Class TxsdClasssynopsisClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type XsdGoPkgHasAttr_Linenumbering_TxsdClasssynopsisinfoLinenumbering_ struct {
	Linenumbering TxsdAddressLinenumbering `xml:"http://docbook.org/ns/docbook linenumbering,attr"`

}

type XsdGoPkgHasAttr_Continuation_TxsdClasssynopsisinfoContinuation_ struct {
	Continuation TxsdAddressContinuation `xml:"http://docbook.org/ns/docbook continuation,attr"`

}

type TxsdClasssynopsisinfo struct {
	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasAttr_Continuation_TxsdClasssynopsisinfoContinuation_

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasAttr_Startinglinenumber_XsdtNmtoken_

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Person

	XsdGoPkgHasAttr_Linenumbering_TxsdClasssynopsisinfoLinenumbering_

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Lineannotation

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Info

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Literal

	xml.XsdGoPkgHasAttr_Space

	XsdGoPkgHasElems_Xref

}

//	If the WalkHandlers.TxsdClasssynopsisinfo function is not nil (ie. was set by outside code), calls it with this TxsdClasssynopsisinfo instance as the single argument. Then calls the Walk() method on 84/111 embed(s) and 0/0 field(s) belonging to this TxsdClasssynopsisinfo instance.
func (me *TxsdClasssynopsisinfo) Walk ()  { 
	if fn := WalkHandlers.TxsdClasssynopsisinfo; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Lineannotation.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Info.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
 }

type XsdGoPkgHasElems_Classsynopsisinfo struct {
	Classsynopsisinfos []*TxsdClasssynopsisinfo `xml:"http://docbook.org/ns/docbook classsynopsisinfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Classsynopsisinfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Classsynopsisinfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Classsynopsisinfo instance.
func (me *XsdGoPkgHasElems_Classsynopsisinfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Classsynopsisinfo; fn != nil { fn(me) }
	for _, x := range me.Classsynopsisinfos { x.Walk() }
 }

type XsdGoPkgHasElem_Parameter struct {
	Parameter *TxsdParameter `xml:"http://docbook.org/ns/docbook parameter"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Parameter function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Parameter instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Parameter instance.
func (me *XsdGoPkgHasElem_Parameter) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Parameter; fn != nil { fn(me) }
	me.Parameter.Walk()
 }

type TxsdMethodparamRep xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdMethodparamRep's alias type xsdt.Token.
func (me TxsdMethodparamRep) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdMethodparamRep is "norepeat".
func (me TxsdMethodparamRep) IsNorepeat () bool { return me == "norepeat" }

//	Since TxsdMethodparamRep is just a simple String type, this merely returns the current string value.
func (me TxsdMethodparamRep) String () string { return xsdt.Token(me).String() }

//	Since TxsdMethodparamRep is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdMethodparamRep) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdMethodparamRep is "repeat".
func (me TxsdMethodparamRep) IsRepeat () bool { return me == "repeat" }

type XsdGoPkgHasAttr_Rep_TxsdMethodparamRep_Norepeat struct {
	Rep TxsdMethodparamRep `xml:"http://docbook.org/ns/docbook rep,attr"`

}

//	Returns the default value for Rep -- "norepeat"
func (me XsdGoPkgHasAttr_Rep_TxsdMethodparamRep_Norepeat) RepDefault () TxsdMethodparamRep { return TxsdMethodparamRep("norepeat") }

type TxsdMethodparamChoice xsdt.Token

//	Since TxsdMethodparamChoice is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdMethodparamChoice) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdMethodparamChoice is "req".
func (me TxsdMethodparamChoice) IsReq () bool { return me == "req" }

//	Returns true if the value of this enumerated TxsdMethodparamChoice is "opt".
func (me TxsdMethodparamChoice) IsOpt () bool { return me == "opt" }

//	Since TxsdMethodparamChoice is just a simple String type, this merely returns the current string value.
func (me TxsdMethodparamChoice) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdMethodparamChoice's alias type xsdt.Token.
func (me TxsdMethodparamChoice) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdMethodparamChoice is "plain".
func (me TxsdMethodparamChoice) IsPlain () bool { return me == "plain" }

type XsdGoPkgHasAttr_Choice_TxsdMethodparamChoice_Req struct {
	Choice TxsdMethodparamChoice `xml:"http://docbook.org/ns/docbook choice,attr"`

}

//	Returns the default value for Choice -- "req"
func (me XsdGoPkgHasAttr_Choice_TxsdMethodparamChoice_Req) ChoiceDefault () TxsdMethodparamChoice { return TxsdMethodparamChoice("req") }

type XsdGoPkgHasElem_Funcparams struct {
	Funcparams *TxsdInterfacename `xml:"http://docbook.org/ns/docbook funcparams"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Funcparams function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Funcparams instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Funcparams instance.
func (me *XsdGoPkgHasElem_Funcparams) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Funcparams; fn != nil { fn(me) }
	me.Funcparams.Walk()
 }

type TxsdMethodparam struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Parameter

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Rep_TxsdMethodparamRep_Norepeat

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Type

	XsdGoPkgHasAttr_Choice_TxsdMethodparamChoice_Req

	XsdGoPkgHasElem_Initializer

	XsdGoPkgHasElem_Funcparams

}

//	If the WalkHandlers.TxsdMethodparam function is not nil (ie. was set by outside code), calls it with this TxsdMethodparam instance as the single argument. Then calls the Walk() method on 5/10 embed(s) and 0/0 field(s) belonging to this TxsdMethodparam instance.
func (me *TxsdMethodparam) Walk ()  { 
	if fn := WalkHandlers.TxsdMethodparam; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElem_Initializer.Walk()
	me.XsdGoPkgHasElem_Funcparams.Walk()
	me.XsdGoPkgHasElem_Parameter.Walk()
 }

type XsdGoPkgHasElems_Methodparam struct {
	Methodparams []*TxsdMethodparam `xml:"http://docbook.org/ns/docbook methodparam"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Methodparam function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Methodparam instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Methodparam instance.
func (me *XsdGoPkgHasElems_Methodparam) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Methodparam; fn != nil { fn(me) }
	for _, x := range me.Methodparams { x.Walk() }
 }

type XsdGoPkgHasElem_Methodname struct {
	Methodname *TxsdInterfacename `xml:"http://docbook.org/ns/docbook methodname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Methodname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Methodname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Methodname instance.
func (me *XsdGoPkgHasElem_Methodname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Methodname; fn != nil { fn(me) }
	me.Methodname.Walk()
 }

type TxsdMethodsynopsis struct {
	XsdGoPkgHasElem_Void

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElem_Type

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Methodparam

	XsdGoPkgHasElem_Methodname

	XsdGoPkgHasElems_Exceptionname

}

//	If the WalkHandlers.TxsdMethodsynopsis function is not nil (ie. was set by outside code), calls it with this TxsdMethodsynopsis instance as the single argument. Then calls the Walk() method on 6/10 embed(s) and 0/0 field(s) belonging to this TxsdMethodsynopsis instance.
func (me *TxsdMethodsynopsis) Walk ()  { 
	if fn := WalkHandlers.TxsdMethodsynopsis; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Void.Walk()
	me.XsdGoPkgHasElem_Type.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Methodparam.Walk()
	me.XsdGoPkgHasElem_Methodname.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
 }

type XsdGoPkgHasElems_Methodsynopsis struct {
	Methodsynopsises []*TxsdMethodsynopsis `xml:"http://docbook.org/ns/docbook methodsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Methodsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Methodsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Methodsynopsis instance.
func (me *XsdGoPkgHasElems_Methodsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Methodsynopsis; fn != nil { fn(me) }
	for _, x := range me.Methodsynopsises { x.Walk() }
 }

type TxsdDestructorsynopsis struct {
	XsdGoPkgHasElem_Methodname

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElem_Void

	XsdGoPkgHasElems_Methodparam

}

//	If the WalkHandlers.TxsdDestructorsynopsis function is not nil (ie. was set by outside code), calls it with this TxsdDestructorsynopsis instance as the single argument. Then calls the Walk() method on 5/9 embed(s) and 0/0 field(s) belonging to this TxsdDestructorsynopsis instance.
func (me *TxsdDestructorsynopsis) Walk ()  { 
	if fn := WalkHandlers.TxsdDestructorsynopsis; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElem_Void.Walk()
	me.XsdGoPkgHasElems_Methodparam.Walk()
	me.XsdGoPkgHasElem_Methodname.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
 }

type XsdGoPkgHasElems_Destructorsynopsis struct {
	Destructorsynopsises []*TxsdDestructorsynopsis `xml:"http://docbook.org/ns/docbook destructorsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Destructorsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Destructorsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Destructorsynopsis instance.
func (me *XsdGoPkgHasElems_Destructorsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Destructorsynopsis; fn != nil { fn(me) }
	for _, x := range me.Destructorsynopsises { x.Walk() }
 }

type XsdGoPkgHasElems_Constructorsynopsis struct {
	Constructorsynopsises []*TxsdDestructorsynopsis `xml:"http://docbook.org/ns/docbook constructorsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Constructorsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Constructorsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Constructorsynopsis instance.
func (me *XsdGoPkgHasElems_Constructorsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Constructorsynopsis; fn != nil { fn(me) }
	for _, x := range me.Constructorsynopsises { x.Walk() }
 }

type TxsdClasssynopsis struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Class_TxsdClasssynopsisClass_

	XsdGoPkgHasElems_Classsynopsisinfo

}

//	If the WalkHandlers.TxsdClasssynopsis function is not nil (ie. was set by outside code), calls it with this TxsdClasssynopsis instance as the single argument. Then calls the Walk() method on 8/13 embed(s) and 0/0 field(s) belonging to this TxsdClasssynopsis instance.
func (me *TxsdClasssynopsis) Walk ()  { 
	if fn := WalkHandlers.TxsdClasssynopsis; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Classsynopsisinfo.Walk()
 }

type XsdGoPkgHasElems_Classsynopsis struct {
	Classsynopsises []*TxsdClasssynopsis `xml:"http://docbook.org/ns/docbook classsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Classsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Classsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Classsynopsis instance.
func (me *XsdGoPkgHasElems_Classsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Classsynopsis; fn != nil { fn(me) }
	for _, x := range me.Classsynopsises { x.Walk() }
 }

type XsdGoPkgHasAttr_Scalefit_TxsdImagedataScalefit_ struct {
	Scalefit TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook scalefit,attr"`

}

type XsdGoPkgHasAttr_Valign_TxsdImagedataValign_ struct {
	Valign TxsdVideodataValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdImagedataAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type TxsdImagedata struct {
	XsdGoPkgHasAttr_Align_TxsdImagedataAlign_

	XsdGoPkgHasAttr_Depth_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Format_XsdtString_

	XsdGoPkgHasAttr_Width_XsdtString_

	XsdGoPkgHasAttr_Entityref_XsdtEntity_

	XsdGoPkgHasAttr_Scalefit_TxsdImagedataScalefit_

	XsdGoPkgHasAttr_Contentdepth_XsdtString_

	XsdGoPkgHasAttr_Valign_TxsdImagedataValign_

	XsdGoPkgHasAttr_Contentwidth_XsdtString_

	XsdGoPkgHasAttr_Fileref_XsdtString_

	XsdGoPkgHasAttr_Scale_XsdtNmtoken_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdImagedata function is not nil (ie. was set by outside code), calls it with this TxsdImagedata instance as the single argument. Then calls the Walk() method on 0/14 embed(s) and 0/0 field(s) belonging to this TxsdImagedata instance.
func (me *TxsdImagedata) Walk ()  { 
	if fn := WalkHandlers.TxsdImagedata; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Imagedata struct {
	Imagedata *TxsdImagedata `xml:"http://docbook.org/ns/docbook imagedata"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Imagedata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Imagedata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Imagedata instance.
func (me *XsdGoPkgHasElem_Imagedata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Imagedata; fn != nil { fn(me) }
	me.Imagedata.Walk()
 }

type TxsdImageobject struct {
	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Imagedata

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdImageobject function is not nil (ie. was set by outside code), calls it with this TxsdImageobject instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TxsdImageobject instance.
func (me *TxsdImageobject) Walk ()  { 
	if fn := WalkHandlers.TxsdImageobject; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Imagedata.Walk()
 }

type XsdGoPkgHasElems_Imageobject struct {
	Imageobjects []*TxsdImageobject `xml:"http://docbook.org/ns/docbook imageobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Imageobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Imageobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Imageobject instance.
func (me *XsdGoPkgHasElems_Imageobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Imageobject; fn != nil { fn(me) }
	for _, x := range me.Imageobjects { x.Walk() }
 }

type TxsdImageobjectco struct {
	XsdGoPkgHasElems_Imageobject

	XsdGoPkgHasElem_Areaspec

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdImageobjectco function is not nil (ie. was set by outside code), calls it with this TxsdImageobjectco instance as the single argument. Then calls the Walk() method on 2/7 embed(s) and 0/0 field(s) belonging to this TxsdImageobjectco instance.
func (me *TxsdImageobjectco) Walk ()  { 
	if fn := WalkHandlers.TxsdImageobjectco; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Imageobject.Walk()
	me.XsdGoPkgHasElem_Areaspec.Walk()
 }

type XsdGoPkgHasElems_Imageobjectco struct {
	Imageobjectcos []*TxsdImageobjectco `xml:"http://docbook.org/ns/docbook imageobjectco"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Imageobjectco function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Imageobjectco instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Imageobjectco instance.
func (me *XsdGoPkgHasElems_Imageobjectco) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Imageobjectco; fn != nil { fn(me) }
	for _, x := range me.Imageobjectcos { x.Walk() }
 }

type XsdGoPkgHasAttr_Onclick_XsdtString_ struct {
	Onclick xsdt.String `xml:"http://docbook.org/ns/docbook onclick,attr"`

}

type XsdGoPkgHasAttr_Onkeyup_XsdtString_ struct {
	Onkeyup xsdt.String `xml:"http://docbook.org/ns/docbook onkeyup,attr"`

}

type XsdGoPkgHasAttr_Continuation_TxsdProgramlistingContinuation_ struct {
	Continuation TxsdAddressContinuation `xml:"http://docbook.org/ns/docbook continuation,attr"`

}

type XsdGoPkgHasAttr_Linenumbering_TxsdProgramlistingLinenumbering_ struct {
	Linenumbering TxsdAddressLinenumbering `xml:"http://docbook.org/ns/docbook linenumbering,attr"`

}

type TxsdProgramlisting struct {
	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasAttr_Continuation_TxsdProgramlistingContinuation_

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Linenumbering_TxsdProgramlistingLinenumbering_

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Lineannotation

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Width_XsdtNmtoken_

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Guisubmenu

	xml.XsdGoPkgHasAttr_Space

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Info

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasCdata

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Startinglinenumber_XsdtNmtoken_

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Oointerface

}

//	If the WalkHandlers.TxsdProgramlisting function is not nil (ie. was set by outside code), calls it with this TxsdProgramlisting instance as the single argument. Then calls the Walk() method on 84/112 embed(s) and 0/0 field(s) belonging to this TxsdProgramlisting instance.
func (me *TxsdProgramlisting) Walk ()  { 
	if fn := WalkHandlers.TxsdProgramlisting; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Lineannotation.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Info.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
 }

type XsdGoPkgHasElem_Programlisting struct {
	Programlisting *TxsdProgramlisting `xml:"http://docbook.org/ns/docbook programlisting"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Programlisting function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Programlisting instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Programlisting instance.
func (me *XsdGoPkgHasElem_Programlisting) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Programlisting; fn != nil { fn(me) }
	me.Programlisting.Walk()
 }

type TxsdProgramlistingco struct {
	XsdGoPkgHasElem_Areaspec

	XsdGoPkgHasElem_Programlisting

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdProgramlistingco function is not nil (ie. was set by outside code), calls it with this TxsdProgramlistingco instance as the single argument. Then calls the Walk() method on 2/7 embed(s) and 0/0 field(s) belonging to this TxsdProgramlistingco instance.
func (me *TxsdProgramlistingco) Walk ()  { 
	if fn := WalkHandlers.TxsdProgramlistingco; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Areaspec.Walk()
	me.XsdGoPkgHasElem_Programlisting.Walk()
 }

type XsdGoPkgHasElems_Programlistingco struct {
	Programlistingcos []*TxsdProgramlistingco `xml:"http://docbook.org/ns/docbook programlistingco"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Programlistingco function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Programlistingco instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Programlistingco instance.
func (me *XsdGoPkgHasElems_Programlistingco) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Programlistingco; fn != nil { fn(me) }
	for _, x := range me.Programlistingcos { x.Walk() }
 }

type TxsdSimplelistType xsdt.Token

//	Since TxsdSimplelistType is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdSimplelistType) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdSimplelistType is "horiz".
func (me TxsdSimplelistType) IsHoriz () bool { return me == "horiz" }

//	This convenience method just performs a simple type conversion to TxsdSimplelistType's alias type xsdt.Token.
func (me TxsdSimplelistType) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdSimplelistType is "vert".
func (me TxsdSimplelistType) IsVert () bool { return me == "vert" }

//	Since TxsdSimplelistType is just a simple String type, this merely returns the current string value.
func (me TxsdSimplelistType) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdSimplelistType is "inline".
func (me TxsdSimplelistType) IsInline () bool { return me == "inline" }

type XsdGoPkgHasAttr_Type_TxsdSimplelistType_Vert struct {
	Type TxsdSimplelistType `xml:"http://docbook.org/ns/docbook type,attr"`

}

//	Returns the default value for Type -- "vert"
func (me XsdGoPkgHasAttr_Type_TxsdSimplelistType_Vert) TypeDefault () TxsdSimplelistType { return TxsdSimplelistType("vert") }

type XsdGoPkgHasAttr_Columns_XsdtNmtoken_ struct {
	Columns xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook columns,attr"`

}

type XsdGoPkgHasElems_Member struct {
	Members []*TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook member"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Member function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Member instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Member instance.
func (me *XsdGoPkgHasElems_Member) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Member; fn != nil { fn(me) }
	for _, x := range me.Members { x.Walk() }
 }

type TxsdSimplelist struct {
	XsdGoPkgHasElems_Member

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Type_TxsdSimplelistType_Vert

	XsdGoPkgHasAttr_Columns_XsdtNmtoken_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdSimplelist function is not nil (ie. was set by outside code), calls it with this TxsdSimplelist instance as the single argument. Then calls the Walk() method on 1/6 embed(s) and 0/0 field(s) belonging to this TxsdSimplelist instance.
func (me *TxsdSimplelist) Walk ()  { 
	if fn := WalkHandlers.TxsdSimplelist; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Member.Walk()
 }

type XsdGoPkgHasElems_Simplelist struct {
	Simplelists []*TxsdSimplelist `xml:"http://docbook.org/ns/docbook simplelist"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Simplelist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Simplelist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Simplelist instance.
func (me *XsdGoPkgHasElems_Simplelist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Simplelist; fn != nil { fn(me) }
	for _, x := range me.Simplelists { x.Walk() }
 }

type TxsdInformalequation struct {
	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Mathphrase

	XsdGoPkgHasElem_Caption

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Alt

}

//	If the WalkHandlers.TxsdInformalequation function is not nil (ie. was set by outside code), calls it with this TxsdInformalequation instance as the single argument. Then calls the Walk() method on 2/8 embed(s) and 0/0 field(s) belonging to this TxsdInformalequation instance.
func (me *TxsdInformalequation) Walk ()  { 
	if fn := WalkHandlers.TxsdInformalequation; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Mathphrase.Walk()
	me.XsdGoPkgHasElem_Alt.Walk()
 }

type XsdGoPkgHasElems_Informalequation struct {
	Informalequations []*TxsdInformalequation `xml:"http://docbook.org/ns/docbook informalequation"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Informalequation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Informalequation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Informalequation instance.
func (me *XsdGoPkgHasElems_Informalequation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Informalequation; fn != nil { fn(me) }
	for _, x := range me.Informalequations { x.Walk() }
 }

type XsdGoPkgHasElem_Mediaobject struct {
	Mediaobject *TxsdMediaobject `xml:"http://docbook.org/ns/docbook mediaobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Mediaobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Mediaobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_Mediaobject instance.
func (me *XsdGoPkgHasElem_Mediaobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Mediaobject; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Subtitle struct {
	Subtitles []*TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook subtitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Subtitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Subtitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Subtitle instance.
func (me *XsdGoPkgHasElems_Subtitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Subtitle; fn != nil { fn(me) }
	for _, x := range me.Subtitles { x.Walk() }
 }

type TxsdScreenshot struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElem_Mediaobject

	XsdGoPkgHasElems_Subtitle

}

//	If the WalkHandlers.TxsdScreenshot function is not nil (ie. was set by outside code), calls it with this TxsdScreenshot instance as the single argument. Then calls the Walk() method on 4/8 embed(s) and 0/0 field(s) belonging to this TxsdScreenshot instance.
func (me *TxsdScreenshot) Walk ()  { 
	if fn := WalkHandlers.TxsdScreenshot; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElem_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
 }

type XsdGoPkgHasElems_Screenshot struct {
	Screenshots []*TxsdScreenshot `xml:"http://docbook.org/ns/docbook screenshot"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Screenshot function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Screenshot instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Screenshot instance.
func (me *XsdGoPkgHasElems_Screenshot) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Screenshot; fn != nil { fn(me) }
	for _, x := range me.Screenshots { x.Walk() }
 }

type XsdGoPkgHasElems_Productionrecap struct {
	Productionrecaps []*TxsdVoid `xml:"http://docbook.org/ns/docbook productionrecap"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Productionrecap function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Productionrecap instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Productionrecap instance.
func (me *XsdGoPkgHasElems_Productionrecap) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Productionrecap; fn != nil { fn(me) }
	for _, x := range me.Productionrecaps { x.Walk() }
 }

type XsdGoPkgHasElems_Sbr struct {
	Sbrs []*TxsdAnchor `xml:"http://docbook.org/ns/docbook sbr"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Sbr function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Sbr instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Sbr instance.
func (me *XsdGoPkgHasElems_Sbr) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Sbr; fn != nil { fn(me) }
	for _, x := range me.Sbrs { x.Walk() }
 }

type TxsdRhs struct {
	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Lineannotation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Sbr

}

//	If the WalkHandlers.TxsdRhs function is not nil (ie. was set by outside code), calls it with this TxsdRhs instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TxsdRhs instance.
func (me *TxsdRhs) Walk ()  { 
	if fn := WalkHandlers.TxsdRhs; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Lineannotation.Walk()
	me.XsdGoPkgHasElems_Sbr.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElem_Rhs struct {
	Rhs *TxsdRhs `xml:"http://docbook.org/ns/docbook rhs"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Rhs function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Rhs instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Rhs instance.
func (me *XsdGoPkgHasElem_Rhs) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Rhs; fn != nil { fn(me) }
	me.Rhs.Walk()
 }

type XsdGoPkgHasElems_Constraint struct {
	Constraints []*TxsdVoid `xml:"http://docbook.org/ns/docbook constraint"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Constraint function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Constraint instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Constraint instance.
func (me *XsdGoPkgHasElems_Constraint) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Constraint; fn != nil { fn(me) }
	for _, x := range me.Constraints { x.Walk() }
 }

type XsdGoPkgHasElem_Lhs struct {
	Lhs *TxsdDate `xml:"http://docbook.org/ns/docbook lhs"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Lhs function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Lhs instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Lhs instance.
func (me *XsdGoPkgHasElem_Lhs) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Lhs; fn != nil { fn(me) }
	me.Lhs.Walk()
 }

type TxsdProduction struct {
	XsdGoPkgHasElem_Rhs

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Constraint

	XsdGoPkgHasElem_Lhs

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdProduction function is not nil (ie. was set by outside code), calls it with this TxsdProduction instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TxsdProduction instance.
func (me *TxsdProduction) Walk ()  { 
	if fn := WalkHandlers.TxsdProduction; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Rhs.Walk()
	me.XsdGoPkgHasElems_Constraint.Walk()
	me.XsdGoPkgHasElem_Lhs.Walk()
 }

type XsdGoPkgHasElems_Production struct {
	Productions []*TxsdProduction `xml:"http://docbook.org/ns/docbook production"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Production function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Production instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Production instance.
func (me *XsdGoPkgHasElems_Production) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Production; fn != nil { fn(me) }
	for _, x := range me.Productions { x.Walk() }
 }

type TxsdProductionset struct {
	XsdGoPkgHasElems_Productionrecap

	XsdGoPkgHasElems_Production

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Title

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Titleabbrev

}

//	If the WalkHandlers.TxsdProductionset function is not nil (ie. was set by outside code), calls it with this TxsdProductionset instance as the single argument. Then calls the Walk() method on 4/8 embed(s) and 0/0 field(s) belonging to this TxsdProductionset instance.
func (me *TxsdProductionset) Walk ()  { 
	if fn := WalkHandlers.TxsdProductionset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Productionrecap.Walk()
	me.XsdGoPkgHasElems_Production.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
 }

type XsdGoPkgHasElems_Productionset struct {
	Productionsets []*TxsdProductionset `xml:"http://docbook.org/ns/docbook productionset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Productionset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Productionset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Productionset instance.
func (me *XsdGoPkgHasElems_Productionset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Productionset; fn != nil { fn(me) }
	for _, x := range me.Productionsets { x.Walk() }
 }

type TxsdLiterallayoutClass xsdt.Token

//	Returns true if the value of this enumerated TxsdLiterallayoutClass is "normal".
func (me TxsdLiterallayoutClass) IsNormal () bool { return me == "normal" }

//	Returns true if the value of this enumerated TxsdLiterallayoutClass is "monospaced".
func (me TxsdLiterallayoutClass) IsMonospaced () bool { return me == "monospaced" }

//	This convenience method just performs a simple type conversion to TxsdLiterallayoutClass's alias type xsdt.Token.
func (me TxsdLiterallayoutClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdLiterallayoutClass is just a simple String type, this merely returns the current string value.
func (me TxsdLiterallayoutClass) String () string { return xsdt.Token(me).String() }

//	Since TxsdLiterallayoutClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdLiterallayoutClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Class_TxsdLiterallayoutClass_ struct {
	Class TxsdLiterallayoutClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type XsdGoPkgHasAttr_Linenumbering_TxsdLiterallayoutLinenumbering_ struct {
	Linenumbering TxsdAddressLinenumbering `xml:"http://docbook.org/ns/docbook linenumbering,attr"`

}

type XsdGoPkgHasAttr_Continuation_TxsdLiterallayoutContinuation_ struct {
	Continuation TxsdAddressContinuation `xml:"http://docbook.org/ns/docbook continuation,attr"`

}

type TxsdLiterallayout struct {
	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Glossterm

	xml.XsdGoPkgHasAttr_Space

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasAttr_Linenumbering_TxsdLiterallayoutLinenumbering_

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Lineannotation

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Type

	XsdGoPkgHasAttr_Startinglinenumber_XsdtNmtoken_

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Command

	XsdGoPkgHasAttr_Continuation_TxsdLiterallayoutContinuation_

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Info

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Class_TxsdLiterallayoutClass_

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Tag

}

//	If the WalkHandlers.TxsdLiterallayout function is not nil (ie. was set by outside code), calls it with this TxsdLiterallayout instance as the single argument. Then calls the Walk() method on 84/112 embed(s) and 0/0 field(s) belonging to this TxsdLiterallayout instance.
func (me *TxsdLiterallayout) Walk ()  { 
	if fn := WalkHandlers.TxsdLiterallayout; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Lineannotation.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Info.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
 }

type XsdGoPkgHasElems_Literallayout struct {
	Literallayouts []*TxsdLiterallayout `xml:"http://docbook.org/ns/docbook literallayout"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Literallayout function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Literallayout instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Literallayout instance.
func (me *XsdGoPkgHasElems_Literallayout) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Literallayout; fn != nil { fn(me) }
	for _, x := range me.Literallayouts { x.Walk() }
 }

type XsdGoPkgHasElem_Date struct {
	Date *TxsdDate `xml:"http://docbook.org/ns/docbook date"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Date function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Date instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Date instance.
func (me *XsdGoPkgHasElem_Date) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Date; fn != nil { fn(me) }
	me.Date.Walk()
 }

type XsdGoPkgHasElems_Authorinitials struct {
	Authorinitialses []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook authorinitials"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Authorinitials function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Authorinitials instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Authorinitials instance.
func (me *XsdGoPkgHasElems_Authorinitials) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Authorinitials; fn != nil { fn(me) }
	for _, x := range me.Authorinitialses { x.Walk() }
 }

type XsdGoPkgHasElem_Revnumber struct {
	Revnumber *TxsdInterfacename `xml:"http://docbook.org/ns/docbook revnumber"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Revnumber function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Revnumber instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Revnumber instance.
func (me *XsdGoPkgHasElem_Revnumber) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Revnumber; fn != nil { fn(me) }
	me.Revnumber.Walk()
 }

type XsdGoPkgHasElem_Revremark struct {
	Revremark *TxsdInterfacename `xml:"http://docbook.org/ns/docbook revremark"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Revremark function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Revremark instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Revremark instance.
func (me *XsdGoPkgHasElem_Revremark) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Revremark; fn != nil { fn(me) }
	me.Revremark.Walk()
 }

type XsdGoPkgHasElems_Programlisting struct {
	Programlistings []*TxsdProgramlisting `xml:"http://docbook.org/ns/docbook programlisting"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Programlisting function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Programlisting instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Programlisting instance.
func (me *XsdGoPkgHasElems_Programlisting) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Programlisting; fn != nil { fn(me) }
	for _, x := range me.Programlistings { x.Walk() }
 }

type XsdGoPkgHasAttr_Class_XsdtString_ struct {
	Class xsdt.String `xml:"http://docbook.org/ns/docbook class,attr"`

}

type XsdGoPkgHasAttr_Pgwide_TxsdInformaltablePgwide_ struct {
	Pgwide TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook pgwide,attr"`

}

type XsdGoPkgHasAttr_Cellspacing_XsdtString_ struct {
	Cellspacing xsdt.String `xml:"http://docbook.org/ns/docbook cellspacing,attr"`

}

type TxsdInformaltableRowheader xsdt.Token

//	Returns true if the value of this enumerated TxsdInformaltableRowheader is "norowheader".
func (me TxsdInformaltableRowheader) IsNorowheader () bool { return me == "norowheader" }

//	Since TxsdInformaltableRowheader is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdInformaltableRowheader) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Since TxsdInformaltableRowheader is just a simple String type, this merely returns the current string value.
func (me TxsdInformaltableRowheader) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdInformaltableRowheader is "firstcol".
func (me TxsdInformaltableRowheader) IsFirstcol () bool { return me == "firstcol" }

//	This convenience method just performs a simple type conversion to TxsdInformaltableRowheader's alias type xsdt.Token.
func (me TxsdInformaltableRowheader) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Rowheader_TxsdInformaltableRowheader_ struct {
	Rowheader TxsdInformaltableRowheader `xml:"http://docbook.org/ns/docbook rowheader,attr"`

}

type XsdGoPkgHasAttr_Rowsep_TxsdInformaltableRowsep_ struct {
	Rowsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rowsep,attr"`

}

type XsdGoPkgHasAttr_Onmouseout_XsdtString_ struct {
	Onmouseout xsdt.String `xml:"http://docbook.org/ns/docbook onmouseout,attr"`

}

type XsdGoPkgHasAttr_Onmousemove_XsdtString_ struct {
	Onmousemove xsdt.String `xml:"http://docbook.org/ns/docbook onmousemove,attr"`

}

type XsdGoPkgHasAttr_Onkeydown_XsdtString_ struct {
	Onkeydown xsdt.String `xml:"http://docbook.org/ns/docbook onkeydown,attr"`

}

type XsdGoPkgHasAttr_Ondblclick_XsdtString_ struct {
	Ondblclick xsdt.String `xml:"http://docbook.org/ns/docbook ondblclick,attr"`

}

type TxsdTbodyValign xsdt.Token

//	Since TxsdTbodyValign is just a simple String type, this merely returns the current string value.
func (me TxsdTbodyValign) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdTbodyValign is "baseline".
func (me TxsdTbodyValign) IsBaseline () bool { return me == "baseline" }

//	Since TxsdTbodyValign is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdTbodyValign) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdTbodyValign is "bottom".
func (me TxsdTbodyValign) IsBottom () bool { return me == "bottom" }

//	This convenience method just performs a simple type conversion to TxsdTbodyValign's alias type xsdt.Token.
func (me TxsdTbodyValign) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdTbodyValign is "top".
func (me TxsdTbodyValign) IsTop () bool { return me == "top" }

//	Returns true if the value of this enumerated TxsdTbodyValign is "middle".
func (me TxsdTbodyValign) IsMiddle () bool { return me == "middle" }

type XsdGoPkgHasAttr_Valign_TxsdTbodyValign_ struct {
	Valign TxsdTbodyValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdTbodyAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdTrAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Lang_XsdtString_ struct {
	Lang xsdt.String `xml:"http://docbook.org/ns/docbook lang,attr"`

}

type XsdGoPkgHasAttr_Floatstyle_XsdtString_ struct {
	Floatstyle xsdt.String `xml:"http://docbook.org/ns/docbook floatstyle,attr"`

}

type XsdGoPkgHasAttr_Pgwide_TxsdEquationPgwide_ struct {
	Pgwide TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook pgwide,attr"`

}

type TxsdEquation struct {
	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Alt

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Mathphrase

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Title

	XsdGoPkgHasAttr_Floatstyle_XsdtString_

	XsdGoPkgHasElem_Caption

	XsdGoPkgHasAttr_Pgwide_TxsdEquationPgwide_

}

//	If the WalkHandlers.TxsdEquation function is not nil (ie. was set by outside code), calls it with this TxsdEquation instance as the single argument. Then calls the Walk() method on 4/13 embed(s) and 0/0 field(s) belonging to this TxsdEquation instance.
func (me *TxsdEquation) Walk ()  { 
	if fn := WalkHandlers.TxsdEquation; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElem_Alt.Walk()
	me.XsdGoPkgHasElems_Mathphrase.Walk()
 }

type XsdGoPkgHasElems_Equation struct {
	Equations []*TxsdEquation `xml:"http://docbook.org/ns/docbook equation"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Equation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Equation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Equation instance.
func (me *XsdGoPkgHasElems_Equation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Equation; fn != nil { fn(me) }
	for _, x := range me.Equations { x.Walk() }
 }

type XsdGoPkgHasAttr_Continuation_TxsdSynopsisContinuation_ struct {
	Continuation TxsdAddressContinuation `xml:"http://docbook.org/ns/docbook continuation,attr"`

}

type XsdGoPkgHasAttr_Linenumbering_TxsdSynopsisLinenumbering_ struct {
	Linenumbering TxsdAddressLinenumbering `xml:"http://docbook.org/ns/docbook linenumbering,attr"`

}

type TxsdSynopsis struct {
	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Info

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAttr_Startinglinenumber_XsdtNmtoken_

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Constant

	xml.XsdGoPkgHasAttr_Space

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Person

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasAttr_Language_XsdtString_

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Lineannotation

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasAttr_Continuation_TxsdSynopsisContinuation_

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Database

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Linenumbering_TxsdSynopsisLinenumbering_

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Keycap

}

//	If the WalkHandlers.TxsdSynopsis function is not nil (ie. was set by outside code), calls it with this TxsdSynopsis instance as the single argument. Then calls the Walk() method on 84/112 embed(s) and 0/0 field(s) belonging to this TxsdSynopsis instance.
func (me *TxsdSynopsis) Walk ()  { 
	if fn := WalkHandlers.TxsdSynopsis; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Lineannotation.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Info.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
 }

type XsdGoPkgHasElems_Synopsis struct {
	Synopsises []*TxsdSynopsis `xml:"http://docbook.org/ns/docbook synopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Synopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Synopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Synopsis instance.
func (me *XsdGoPkgHasElems_Synopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Synopsis; fn != nil { fn(me) }
	for _, x := range me.Synopsises { x.Walk() }
 }

type XsdGoPkgHasAttr_Cmdlength_XsdtString_ struct {
	Cmdlength xsdt.String `xml:"http://docbook.org/ns/docbook cmdlength,attr"`

}

type XsdGoPkgHasAttr_Rep_TxsdGroupRep_Norepeat struct {
	Rep TxsdMethodparamRep `xml:"http://docbook.org/ns/docbook rep,attr"`

}

//	Returns the default value for Rep -- "norepeat"
func (me XsdGoPkgHasAttr_Rep_TxsdGroupRep_Norepeat) RepDefault () TxsdMethodparamRep { return TxsdMethodparamRep("norepeat") }

type XsdGoPkgHasElems_Synopfragmentref struct {
	Synopfragmentrefs []*TxsdDate `xml:"http://docbook.org/ns/docbook synopfragmentref"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Synopfragmentref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Synopfragmentref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Synopfragmentref instance.
func (me *XsdGoPkgHasElems_Synopfragmentref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Synopfragmentref; fn != nil { fn(me) }
	for _, x := range me.Synopfragmentrefs { x.Walk() }
 }

type XsdGoPkgHasAttr_Choice_TxsdArgChoice_Opt struct {
	Choice TxsdMethodparamChoice `xml:"http://docbook.org/ns/docbook choice,attr"`

}

//	Returns the default value for Choice -- "opt"
func (me XsdGoPkgHasAttr_Choice_TxsdArgChoice_Opt) ChoiceDefault () TxsdMethodparamChoice { return TxsdMethodparamChoice("opt") }

type XsdGoPkgHasAttr_Rep_TxsdArgRep_Norepeat struct {
	Rep TxsdMethodparamRep `xml:"http://docbook.org/ns/docbook rep,attr"`

}

//	Returns the default value for Rep -- "norepeat"
func (me XsdGoPkgHasAttr_Rep_TxsdArgRep_Norepeat) RepDefault () TxsdMethodparamRep { return TxsdMethodparamRep("norepeat") }

type TxsdArg struct {
	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAttr_Choice_TxsdArgChoice_Opt

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasAttr_Rep_TxsdArgRep_Norepeat

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Arg

	XsdGoPkgHasElems_Sbr

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Group

	XsdGoPkgHasElems_Synopfragmentref

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Inlinemediaobject

}

//	If the WalkHandlers.TxsdArg function is not nil (ie. was set by outside code), calls it with this TxsdArg instance as the single argument. Then calls the Walk() method on 7/25 embed(s) and 0/0 field(s) belonging to this TxsdArg instance.
func (me *TxsdArg) Walk ()  { 
	if fn := WalkHandlers.TxsdArg; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Sbr.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Synopfragmentref.Walk()
 }

type XsdGoPkgHasElems_Arg struct {
	Args []*TxsdArg `xml:"http://docbook.org/ns/docbook arg"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Arg function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Arg instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Arg instance.
func (me *XsdGoPkgHasElems_Arg) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Arg; fn != nil { fn(me) }
	for _, x := range me.Args { x.Walk() }
 }

type XsdGoPkgHasAttr_Choice_TxsdGroupChoice_Opt struct {
	Choice TxsdMethodparamChoice `xml:"http://docbook.org/ns/docbook choice,attr"`

}

//	Returns the default value for Choice -- "opt"
func (me XsdGoPkgHasAttr_Choice_TxsdGroupChoice_Opt) ChoiceDefault () TxsdMethodparamChoice { return TxsdMethodparamChoice("opt") }

type TxsdGroup struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Group

	XsdGoPkgHasAttr_Rep_TxsdGroupRep_Norepeat

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Synopfragmentref

	XsdGoPkgHasElems_Sbr

	XsdGoPkgHasElems_Arg

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasAttr_Choice_TxsdGroupChoice_Opt

}

//	If the WalkHandlers.TxsdGroup function is not nil (ie. was set by outside code), calls it with this TxsdGroup instance as the single argument. Then calls the Walk() method on 4/11 embed(s) and 0/0 field(s) belonging to this TxsdGroup instance.
func (me *TxsdGroup) Walk ()  { 
	if fn := WalkHandlers.TxsdGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Synopfragmentref.Walk()
	me.XsdGoPkgHasElems_Sbr.Walk()
	me.XsdGoPkgHasElems_Arg.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
 }

type XsdGoPkgHasElems_Group struct {
	Groups []*TxsdGroup `xml:"http://docbook.org/ns/docbook group"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Group function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Group instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Group instance.
func (me *XsdGoPkgHasElems_Group) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Group; fn != nil { fn(me) }
	for _, x := range me.Groups { x.Walk() }
 }

type XsdGoPkgHasAttr_Sepchar_XsdtString_ struct {
	Sepchar xsdt.String `xml:"http://docbook.org/ns/docbook sepchar,attr"`

}

type TxsdSynopfragment struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Arg

	XsdGoPkgHasElems_Group

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

}

//	If the WalkHandlers.TxsdSynopfragment function is not nil (ie. was set by outside code), calls it with this TxsdSynopfragment instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TxsdSynopfragment instance.
func (me *TxsdSynopfragment) Walk ()  { 
	if fn := WalkHandlers.TxsdSynopfragment; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Arg.Walk()
	me.XsdGoPkgHasElems_Group.Walk()
 }

type XsdGoPkgHasElems_Synopfragment struct {
	Synopfragments []*TxsdSynopfragment `xml:"http://docbook.org/ns/docbook synopfragment"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Synopfragment function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Synopfragment instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Synopfragment instance.
func (me *XsdGoPkgHasElems_Synopfragment) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Synopfragment; fn != nil { fn(me) }
	for _, x := range me.Synopfragments { x.Walk() }
 }

type TxsdCmdsynopsis struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Sbr

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Group

	XsdGoPkgHasElems_Arg

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Sepchar_XsdtString_

	XsdGoPkgHasElems_Synopfragment

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Cmdlength_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdCmdsynopsis function is not nil (ie. was set by outside code), calls it with this TxsdCmdsynopsis instance as the single argument. Then calls the Walk() method on 5/12 embed(s) and 0/0 field(s) belonging to this TxsdCmdsynopsis instance.
func (me *TxsdCmdsynopsis) Walk ()  { 
	if fn := WalkHandlers.TxsdCmdsynopsis; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Sbr.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Group.Walk()
	me.XsdGoPkgHasElems_Arg.Walk()
	me.XsdGoPkgHasElems_Synopfragment.Walk()
 }

type XsdGoPkgHasElems_Cmdsynopsis struct {
	Cmdsynopsises []*TxsdCmdsynopsis `xml:"http://docbook.org/ns/docbook cmdsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Cmdsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Cmdsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Cmdsynopsis instance.
func (me *XsdGoPkgHasElems_Cmdsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Cmdsynopsis; fn != nil { fn(me) }
	for _, x := range me.Cmdsynopsises { x.Walk() }
 }

type XsdGoPkgHasElems_Screen struct {
	Screens []*TxsdScreen `xml:"http://docbook.org/ns/docbook screen"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Screen function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Screen instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Screen instance.
func (me *XsdGoPkgHasElems_Screen) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Screen; fn != nil { fn(me) }
	for _, x := range me.Screens { x.Walk() }
 }

type TxsdImportant struct {
	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Note

}

//	If the WalkHandlers.TxsdImportant function is not nil (ie. was set by outside code), calls it with this TxsdImportant instance as the single argument. Then calls the Walk() method on 25/61 embed(s) and 0/0 field(s) belonging to this TxsdImportant instance.
func (me *TxsdImportant) Walk ()  { 
	if fn := WalkHandlers.TxsdImportant; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
 }

type XsdGoPkgHasElems_Important struct {
	Importants []*TxsdImportant `xml:"http://docbook.org/ns/docbook important"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Important function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Important instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Important instance.
func (me *XsdGoPkgHasElems_Important) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Important; fn != nil { fn(me) }
	for _, x := range me.Importants { x.Walk() }
 }

type TxsdWarning struct {
	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Segmentedlist

}

//	If the WalkHandlers.TxsdWarning function is not nil (ie. was set by outside code), calls it with this TxsdWarning instance as the single argument. Then calls the Walk() method on 26/61 embed(s) and 0/0 field(s) belonging to this TxsdWarning instance.
func (me *TxsdWarning) Walk ()  { 
	if fn := WalkHandlers.TxsdWarning; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
 }

type XsdGoPkgHasElems_Warning struct {
	Warnings []*TxsdWarning `xml:"http://docbook.org/ns/docbook warning"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Warning function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Warning instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Warning instance.
func (me *XsdGoPkgHasElems_Warning) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Warning; fn != nil { fn(me) }
	for _, x := range me.Warnings { x.Walk() }
 }

type XsdGoPkgHasElem_Label struct {
	Label *TxsdInterfacename `xml:"http://docbook.org/ns/docbook label"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Label function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Label instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Label instance.
func (me *XsdGoPkgHasElem_Label) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Label; fn != nil { fn(me) }
	me.Label.Walk()
 }

type TxsdAnswer struct {
	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElem_Label

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Informaltable

}

//	If the WalkHandlers.TxsdAnswer function is not nil (ie. was set by outside code), calls it with this TxsdAnswer instance as the single argument. Then calls the Walk() method on 26/59 embed(s) and 0/0 field(s) belonging to this TxsdAnswer instance.
func (me *TxsdAnswer) Walk ()  { 
	if fn := WalkHandlers.TxsdAnswer; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElem_Label.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
 }

type XsdGoPkgHasElems_Answer struct {
	Answers []*TxsdAnswer `xml:"http://docbook.org/ns/docbook answer"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Answer function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Answer instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Answer instance.
func (me *XsdGoPkgHasElems_Answer) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Answer; fn != nil { fn(me) }
	for _, x := range me.Answers { x.Walk() }
 }

type XsdGoPkgHasElem_Question struct {
	Question *TxsdAnswer `xml:"http://docbook.org/ns/docbook question"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Question function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Question instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Question instance.
func (me *XsdGoPkgHasElem_Question) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Question; fn != nil { fn(me) }
	me.Question.Walk()
 }

type TxsdQandaentry struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Question

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Title

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Answer

}

//	If the WalkHandlers.TxsdQandaentry function is not nil (ie. was set by outside code), calls it with this TxsdQandaentry instance as the single argument. Then calls the Walk() method on 4/8 embed(s) and 0/0 field(s) belonging to this TxsdQandaentry instance.
func (me *TxsdQandaentry) Walk ()  { 
	if fn := WalkHandlers.TxsdQandaentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Answer.Walk()
	me.XsdGoPkgHasElem_Question.Walk()
 }

type XsdGoPkgHasElems_Qandaentry struct {
	Qandaentries []*TxsdQandaentry `xml:"http://docbook.org/ns/docbook qandaentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Qandaentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Qandaentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Qandaentry instance.
func (me *XsdGoPkgHasElems_Qandaentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Qandaentry; fn != nil { fn(me) }
	for _, x := range me.Qandaentries { x.Walk() }
 }

type TxsdQandadiv struct {
	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Qandadiv

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Qandaentry

	XsdGoPkgHasElems_Variablelist

}

//	If the WalkHandlers.TxsdQandadiv function is not nil (ie. was set by outside code), calls it with this TxsdQandadiv instance as the single argument. Then calls the Walk() method on 28/63 embed(s) and 0/0 field(s) belonging to this TxsdQandadiv instance.
func (me *TxsdQandadiv) Walk ()  { 
	if fn := WalkHandlers.TxsdQandadiv; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Qandaentry.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
 }

type XsdGoPkgHasElems_Qandadiv struct {
	Qandadivs []*TxsdQandadiv `xml:"http://docbook.org/ns/docbook qandadiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Qandadiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Qandadiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Qandadiv instance.
func (me *XsdGoPkgHasElems_Qandadiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Qandadiv; fn != nil { fn(me) }
	for _, x := range me.Qandadivs { x.Walk() }
 }

type TxsdQandasetDefaultlabel xsdt.Token

//	Returns true if the value of this enumerated TxsdQandasetDefaultlabel is "number".
func (me TxsdQandasetDefaultlabel) IsNumber () bool { return me == "number" }

//	Returns true if the value of this enumerated TxsdQandasetDefaultlabel is "qanda".
func (me TxsdQandasetDefaultlabel) IsQanda () bool { return me == "qanda" }

//	This convenience method just performs a simple type conversion to TxsdQandasetDefaultlabel's alias type xsdt.Token.
func (me TxsdQandasetDefaultlabel) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdQandasetDefaultlabel is "none".
func (me TxsdQandasetDefaultlabel) IsNone () bool { return me == "none" }

//	Since TxsdQandasetDefaultlabel is just a simple String type, this merely returns the current string value.
func (me TxsdQandasetDefaultlabel) String () string { return xsdt.Token(me).String() }

//	Since TxsdQandasetDefaultlabel is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdQandasetDefaultlabel) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Defaultlabel_TxsdQandasetDefaultlabel_ struct {
	Defaultlabel TxsdQandasetDefaultlabel `xml:"http://docbook.org/ns/docbook defaultlabel,attr"`

}

type TxsdQandaset struct {
	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAttr_Defaultlabel_TxsdQandasetDefaultlabel_

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Task

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Qandaentry

	XsdGoPkgHasElems_Qandadiv

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Para

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Bibliolist

}

//	If the WalkHandlers.TxsdQandaset function is not nil (ie. was set by outside code), calls it with this TxsdQandaset instance as the single argument. Then calls the Walk() method on 29/64 embed(s) and 0/0 field(s) belonging to this TxsdQandaset instance.
func (me *TxsdQandaset) Walk ()  { 
	if fn := WalkHandlers.TxsdQandaset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaentry.Walk()
	me.XsdGoPkgHasElems_Qandadiv.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
 }

type XsdGoPkgHasElems_Qandaset struct {
	Qandasets []*TxsdQandaset `xml:"http://docbook.org/ns/docbook qandaset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Qandaset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Qandaset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Qandaset instance.
func (me *XsdGoPkgHasElems_Qandaset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Qandaset; fn != nil { fn(me) }
	for _, x := range me.Qandasets { x.Walk() }
 }

type TxsdCaution struct {
	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Para

}

//	If the WalkHandlers.TxsdCaution function is not nil (ie. was set by outside code), calls it with this TxsdCaution instance as the single argument. Then calls the Walk() method on 28/61 embed(s) and 0/0 field(s) belonging to this TxsdCaution instance.
func (me *TxsdCaution) Walk ()  { 
	if fn := WalkHandlers.TxsdCaution; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
 }

type XsdGoPkgHasElems_Caution struct {
	Cautions []*TxsdCaution `xml:"http://docbook.org/ns/docbook caution"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Caution function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Caution instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Caution instance.
func (me *XsdGoPkgHasElems_Caution) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Caution; fn != nil { fn(me) }
	for _, x := range me.Cautions { x.Walk() }
 }

type TxsdVariablelistSpacing xsdt.Token

//	Returns true if the value of this enumerated TxsdVariablelistSpacing is "normal".
func (me TxsdVariablelistSpacing) IsNormal () bool { return me == "normal" }

//	Since TxsdVariablelistSpacing is just a simple String type, this merely returns the current string value.
func (me TxsdVariablelistSpacing) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdVariablelistSpacing's alias type xsdt.Token.
func (me TxsdVariablelistSpacing) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdVariablelistSpacing is "compact".
func (me TxsdVariablelistSpacing) IsCompact () bool { return me == "compact" }

//	Since TxsdVariablelistSpacing is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdVariablelistSpacing) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Spacing_TxsdVariablelistSpacing_ struct {
	Spacing TxsdVariablelistSpacing `xml:"http://docbook.org/ns/docbook spacing,attr"`

}

type XsdGoPkgHasAttr_Override_XsdtNmtoken_ struct {
	Override xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook override,attr"`

}

type TxsdListitem struct {
	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasAttr_Override_XsdtNmtoken_

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Anchor

}

//	If the WalkHandlers.TxsdListitem function is not nil (ie. was set by outside code), calls it with this TxsdListitem instance as the single argument. Then calls the Walk() method on 27/59 embed(s) and 0/0 field(s) belonging to this TxsdListitem instance.
func (me *TxsdListitem) Walk ()  { 
	if fn := WalkHandlers.TxsdListitem; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
 }

type XsdGoPkgHasElem_Listitem struct {
	Listitem *TxsdListitem `xml:"http://docbook.org/ns/docbook listitem"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Listitem function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Listitem instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Listitem instance.
func (me *XsdGoPkgHasElem_Listitem) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Listitem; fn != nil { fn(me) }
	me.Listitem.Walk()
 }

type XsdGoPkgHasElems_Term struct {
	Terms []*TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook term"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Term function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Term instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Term instance.
func (me *XsdGoPkgHasElems_Term) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Term; fn != nil { fn(me) }
	for _, x := range me.Terms { x.Walk() }
 }

type TxsdVarlistentry struct {
	XsdGoPkgHasElem_Listitem

	XsdGoPkgHasElems_Term

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdVarlistentry function is not nil (ie. was set by outside code), calls it with this TxsdVarlistentry instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TxsdVarlistentry instance.
func (me *TxsdVarlistentry) Walk ()  { 
	if fn := WalkHandlers.TxsdVarlistentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Term.Walk()
	me.XsdGoPkgHasElem_Listitem.Walk()
 }

type XsdGoPkgHasElems_Varlistentry struct {
	Varlistentries []*TxsdVarlistentry `xml:"http://docbook.org/ns/docbook varlistentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Varlistentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Varlistentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Varlistentry instance.
func (me *XsdGoPkgHasElems_Varlistentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Varlistentry; fn != nil { fn(me) }
	for _, x := range me.Varlistentries { x.Walk() }
 }

type XsdGoPkgHasAttr_Termlength_XsdtString_ struct {
	Termlength xsdt.String `xml:"http://docbook.org/ns/docbook termlength,attr"`

}

type TxsdVariablelist struct {
	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasAttr_Spacing_TxsdVariablelistSpacing_

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Varlistentry

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasAttr_Termlength_XsdtString_

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Blockquote

}

//	If the WalkHandlers.TxsdVariablelist function is not nil (ie. was set by outside code), calls it with this TxsdVariablelist instance as the single argument. Then calls the Walk() method on 30/64 embed(s) and 0/0 field(s) belonging to this TxsdVariablelist instance.
func (me *TxsdVariablelist) Walk ()  { 
	if fn := WalkHandlers.TxsdVariablelist; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Varlistentry.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
 }

type XsdGoPkgHasElems_Variablelist struct {
	Variablelists []*TxsdVariablelist `xml:"http://docbook.org/ns/docbook variablelist"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Variablelist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Variablelist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Variablelist instance.
func (me *XsdGoPkgHasElems_Variablelist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Variablelist; fn != nil { fn(me) }
	for _, x := range me.Variablelists { x.Walk() }
 }

type TxsdInformalexample struct {
	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Floatstyle_XsdtString_

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElem_Caption

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasAttr_Width_XsdtNmtoken_

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Caution

}

//	If the WalkHandlers.TxsdInformalexample function is not nil (ie. was set by outside code), calls it with this TxsdInformalexample instance as the single argument. Then calls the Walk() method on 28/62 embed(s) and 0/0 field(s) belonging to this TxsdInformalexample instance.
func (me *TxsdInformalexample) Walk ()  { 
	if fn := WalkHandlers.TxsdInformalexample; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
 }

type XsdGoPkgHasElems_Informalexample struct {
	Informalexamples []*TxsdInformalexample `xml:"http://docbook.org/ns/docbook informalexample"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Informalexample function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Informalexample instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Informalexample instance.
func (me *XsdGoPkgHasElems_Informalexample) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Informalexample; fn != nil { fn(me) }
	for _, x := range me.Informalexamples { x.Walk() }
 }

type XsdGoPkgHasAttr_Pgwide_TxsdExamplePgwide_ struct {
	Pgwide TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook pgwide,attr"`

}

type TxsdExample struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasAttr_Pgwide_TxsdExamplePgwide_

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElem_Caption

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasAttr_Floatstyle_XsdtString_

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasAttr_Width_XsdtNmtoken_

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdExample function is not nil (ie. was set by outside code), calls it with this TxsdExample instance as the single argument. Then calls the Walk() method on 31/66 embed(s) and 0/0 field(s) belonging to this TxsdExample instance.
func (me *TxsdExample) Walk ()  { 
	if fn := WalkHandlers.TxsdExample; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
 }

type XsdGoPkgHasElems_Example struct {
	Examples []*TxsdExample `xml:"http://docbook.org/ns/docbook example"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Example function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Example instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Example instance.
func (me *XsdGoPkgHasElems_Example) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Example; fn != nil { fn(me) }
	for _, x := range me.Examples { x.Walk() }
 }

type TxsdTip struct {
	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Important

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Msgset

}

//	If the WalkHandlers.TxsdTip function is not nil (ie. was set by outside code), calls it with this TxsdTip instance as the single argument. Then calls the Walk() method on 32/61 embed(s) and 0/0 field(s) belonging to this TxsdTip instance.
func (me *TxsdTip) Walk ()  { 
	if fn := WalkHandlers.TxsdTip; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
 }

type XsdGoPkgHasElems_Tip struct {
	Tips []*TxsdTip `xml:"http://docbook.org/ns/docbook tip"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tip function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tip instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tip instance.
func (me *XsdGoPkgHasElems_Tip) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tip; fn != nil { fn(me) }
	for _, x := range me.Tips { x.Walk() }
 }

type XsdGoPkgHasAttr_Axis_XsdtString_ struct {
	Axis xsdt.String `xml:"http://docbook.org/ns/docbook axis,attr"`

}

type XsdGoPkgHasAttr_Colspan_XsdtNmtoken_ struct {
	Colspan xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook colspan,attr"`

}

type XsdGoPkgHasAttr_Rowspan_XsdtNmtoken_ struct {
	Rowspan xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook rowspan,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdThAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Headers_XsdtString_ struct {
	Headers xsdt.String `xml:"http://docbook.org/ns/docbook headers,attr"`

}

type XsdGoPkgHasAttr_Abbr_XsdtString_ struct {
	Abbr xsdt.String `xml:"http://docbook.org/ns/docbook abbr,attr"`

}

type TxsdThScope xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdThScope's alias type xsdt.Token.
func (me TxsdThScope) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdThScope is just a simple String type, this merely returns the current string value.
func (me TxsdThScope) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdThScope is "row".
func (me TxsdThScope) IsRow () bool { return me == "row" }

//	Returns true if the value of this enumerated TxsdThScope is "col".
func (me TxsdThScope) IsCol () bool { return me == "col" }

//	Returns true if the value of this enumerated TxsdThScope is "colgroup".
func (me TxsdThScope) IsColgroup () bool { return me == "colgroup" }

//	Since TxsdThScope is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdThScope) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdThScope is "rowgroup".
func (me TxsdThScope) IsRowgroup () bool { return me == "rowgroup" }

type XsdGoPkgHasAttr_Scope_TxsdThScope_ struct {
	Scope TxsdThScope `xml:"http://docbook.org/ns/docbook scope,attr"`

}

type XsdGoPkgHasAttr_Onmousedown_XsdtString_ struct {
	Onmousedown xsdt.String `xml:"http://docbook.org/ns/docbook onmousedown,attr"`

}

type XsdGoPkgHasAttr_Valign_TxsdThValign_ struct {
	Valign TxsdTbodyValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type TxsdTh struct {
	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasAttr_Rowspan_XsdtNmtoken_

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAttr_Align_TxsdThAlign_

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasAttr_Headers_XsdtString_

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasAttr_Abbr_XsdtString_

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasAttr_Scope_TxsdThScope_

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasAttr_Valign_TxsdThValign_

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Email

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Application

	XsdGoPkgHasAttr_Axis_XsdtString_

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasAttr_Colspan_XsdtNmtoken_

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Envar

}

//	If the WalkHandlers.TxsdTh function is not nil (ie. was set by outside code), calls it with this TxsdTh instance as the single argument. Then calls the Walk() method on 111/175 embed(s) and 0/0 field(s) belonging to this TxsdTh instance.
func (me *TxsdTh) Walk ()  { 
	if fn := WalkHandlers.TxsdTh; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
 }

type XsdGoPkgHasElems_Th struct {
	Ths []*TxsdTh `xml:"http://docbook.org/ns/docbook th"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Th function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Th instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Th instance.
func (me *XsdGoPkgHasElems_Th) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Th; fn != nil { fn(me) }
	for _, x := range me.Ths { x.Walk() }
 }

type XsdGoPkgHasAttr_Valign_TxsdTrValign_ struct {
	Valign TxsdTbodyValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type XsdGoPkgHasAttr_Scope_TxsdTdScope_ struct {
	Scope TxsdThScope `xml:"http://docbook.org/ns/docbook scope,attr"`

}

type XsdGoPkgHasAttr_Valign_TxsdTdValign_ struct {
	Valign TxsdTbodyValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdTdAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type TxsdTd struct {
	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasAttr_Headers_XsdtString_

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasAttr_Scope_TxsdTdScope_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasAttr_Colspan_XsdtNmtoken_

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasAttr_Valign_TxsdTdValign_

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAttr_Rowspan_XsdtNmtoken_

	XsdGoPkgHasAttr_Axis_XsdtString_

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasAttr_Align_TxsdTdAlign_

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasAttr_Abbr_XsdtString_

}

//	If the WalkHandlers.TxsdTd function is not nil (ie. was set by outside code), calls it with this TxsdTd instance as the single argument. Then calls the Walk() method on 111/175 embed(s) and 0/0 field(s) belonging to this TxsdTd instance.
func (me *TxsdTd) Walk ()  { 
	if fn := WalkHandlers.TxsdTd; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
 }

type XsdGoPkgHasElems_Td struct {
	Tds []*TxsdTd `xml:"http://docbook.org/ns/docbook td"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Td function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Td instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Td instance.
func (me *XsdGoPkgHasElems_Td) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Td; fn != nil { fn(me) }
	for _, x := range me.Tds { x.Walk() }
 }

type TxsdTr struct {
	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Td

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasAttr_Align_TxsdTrAlign_

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasElems_Th

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAttr_Valign_TxsdTrValign_

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

}

//	If the WalkHandlers.TxsdTr function is not nil (ie. was set by outside code), calls it with this TxsdTr instance as the single argument. Then calls the Walk() method on 2/21 embed(s) and 0/0 field(s) belonging to this TxsdTr instance.
func (me *TxsdTr) Walk ()  { 
	if fn := WalkHandlers.TxsdTr; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Th.Walk()
	me.XsdGoPkgHasElems_Td.Walk()
 }

type XsdGoPkgHasElems_Tr struct {
	Trs []*TxsdTr `xml:"http://docbook.org/ns/docbook tr"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tr function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tr instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tr instance.
func (me *XsdGoPkgHasElems_Tr) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tr; fn != nil { fn(me) }
	for _, x := range me.Trs { x.Walk() }
 }

type TxsdTbody struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasAttr_Align_TxsdTbodyAlign_

	XsdGoPkgHasElems_Tr

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasElems_Row

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Valign_TxsdTbodyValign_

}

//	If the WalkHandlers.TxsdTbody function is not nil (ie. was set by outside code), calls it with this TxsdTbody instance as the single argument. Then calls the Walk() method on 1/23 embed(s) and 0/0 field(s) belonging to this TxsdTbody instance.
func (me *TxsdTbody) Walk ()  { 
	if fn := WalkHandlers.TxsdTbody; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Tr.Walk()
 }

type XsdGoPkgHasElem_Tbody struct {
	Tbody *TxsdTbody `xml:"http://docbook.org/ns/docbook tbody"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tbody function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tbody instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tbody instance.
func (me *XsdGoPkgHasElem_Tbody) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tbody; fn != nil { fn(me) }
	me.Tbody.Walk()
 }

type XsdGoPkgHasAttr_Colsep_TxsdSpanspecColsep_ struct {
	Colsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook colsep,attr"`

}

type XsdGoPkgHasAttr_Spanname_XsdtString_ struct {
	Spanname xsdt.String `xml:"http://docbook.org/ns/docbook spanname,attr"`

}

type XsdGoPkgHasAttr_Nameend_XsdtString_ struct {
	Nameend xsdt.String `xml:"http://docbook.org/ns/docbook nameend,attr"`

}

type XsdGoPkgHasAttr_Namest_XsdtString_ struct {
	Namest xsdt.String `xml:"http://docbook.org/ns/docbook namest,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdSpanspecAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Rowsep_TxsdSpanspecRowsep_ struct {
	Rowsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rowsep,attr"`

}

type TxsdSpanspec struct {
	XsdGoPkgHasAttr_Spanname_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Nameend_XsdtString_

	XsdGoPkgHasAttr_Namest_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Align_TxsdSpanspecAlign_

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAttr_Rowsep_TxsdSpanspecRowsep_

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasAttr_Colsep_TxsdSpanspecColsep_

}

//	If the WalkHandlers.TxsdSpanspec function is not nil (ie. was set by outside code), calls it with this TxsdSpanspec instance as the single argument. Then calls the Walk() method on 0/11 embed(s) and 0/0 field(s) belonging to this TxsdSpanspec instance.
func (me *TxsdSpanspec) Walk ()  { 
	if fn := WalkHandlers.TxsdSpanspec; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Spanspec struct {
	Spanspecs []*TxsdSpanspec `xml:"http://docbook.org/ns/docbook spanspec"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Spanspec function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Spanspec instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Spanspec instance.
func (me *XsdGoPkgHasElems_Spanspec) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Spanspec; fn != nil { fn(me) }
	for _, x := range me.Spanspecs { x.Walk() }
 }

type XsdGoPkgHasAttr_Cols_XsdtNmtoken_ struct {
	Cols xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook cols,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdTheadAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Valign_TxsdTheadValign_ struct {
	Valign TxsdTbodyValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type TxsdThead struct {
	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasAttr_Align_TxsdTheadAlign_

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasAttr_Valign_TxsdTheadValign_

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Colspec

	XsdGoPkgHasElems_Tr

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasElems_Row

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

}

//	If the WalkHandlers.TxsdThead function is not nil (ie. was set by outside code), calls it with this TxsdThead instance as the single argument. Then calls the Walk() method on 2/24 embed(s) and 0/0 field(s) belonging to this TxsdThead instance.
func (me *TxsdThead) Walk ()  { 
	if fn := WalkHandlers.TxsdThead; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Colspec.Walk()
	me.XsdGoPkgHasElems_Tr.Walk()
 }

type XsdGoPkgHasElem_Thead struct {
	Thead *TxsdThead `xml:"http://docbook.org/ns/docbook thead"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Thead function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Thead instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Thead instance.
func (me *XsdGoPkgHasElem_Thead) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Thead; fn != nil { fn(me) }
	me.Thead.Walk()
 }

type XsdGoPkgHasAttr_Align_TxsdTgroupAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Tgroupstyle_XsdtString_ struct {
	Tgroupstyle xsdt.String `xml:"http://docbook.org/ns/docbook tgroupstyle,attr"`

}

type XsdGoPkgHasAttr_Rowsep_TxsdTgroupRowsep_ struct {
	Rowsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rowsep,attr"`

}

type XsdGoPkgHasAttr_Colsep_TxsdTgroupColsep_ struct {
	Colsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook colsep,attr"`

}

type TxsdTgroup struct {
	XsdGoPkgHasAttr_Colsep_TxsdTgroupColsep_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasElem_Tbody

	XsdGoPkgHasElem_Tfoot

	XsdGoPkgHasElems_Spanspec

	XsdGoPkgHasElems_Colspec

	XsdGoPkgHasAttr_Cols_XsdtNmtoken_

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasElem_Thead

	XsdGoPkgHasAttr_Align_TxsdTgroupAlign_

	XsdGoPkgHasAttr_Tgroupstyle_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Rowsep_TxsdTgroupRowsep_

}

//	If the WalkHandlers.TxsdTgroup function is not nil (ie. was set by outside code), calls it with this TxsdTgroup instance as the single argument. Then calls the Walk() method on 4/15 embed(s) and 0/0 field(s) belonging to this TxsdTgroup instance.
func (me *TxsdTgroup) Walk ()  { 
	if fn := WalkHandlers.TxsdTgroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Tbody.Walk()
	me.XsdGoPkgHasElems_Spanspec.Walk()
	me.XsdGoPkgHasElems_Colspec.Walk()
	me.XsdGoPkgHasElem_Thead.Walk()
 }

type XsdGoPkgHasElems_Tgroup struct {
	Tgroups []*TxsdTgroup `xml:"http://docbook.org/ns/docbook tgroup"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tgroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tgroup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tgroup instance.
func (me *XsdGoPkgHasElems_Tgroup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tgroup; fn != nil { fn(me) }
	for _, x := range me.Tgroups { x.Walk() }
 }

type TxsdInformaltableOrient xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdInformaltableOrient's alias type xsdt.Token.
func (me TxsdInformaltableOrient) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdInformaltableOrient is just a simple String type, this merely returns the current string value.
func (me TxsdInformaltableOrient) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdInformaltableOrient is "port".
func (me TxsdInformaltableOrient) IsPort () bool { return me == "port" }

//	Since TxsdInformaltableOrient is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdInformaltableOrient) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdInformaltableOrient is "land".
func (me TxsdInformaltableOrient) IsLand () bool { return me == "land" }

type XsdGoPkgHasAttr_Orient_TxsdInformaltableOrient_ struct {
	Orient TxsdInformaltableOrient `xml:"http://docbook.org/ns/docbook orient,attr"`

}

type XsdGoPkgHasAttr_Valign_TxsdColgroupValign_ struct {
	Valign TxsdTbodyValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdColAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Valign_TxsdColValign_ struct {
	Valign TxsdTbodyValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type XsdGoPkgHasAttr_Span_XsdtNmtoken_ struct {
	Span xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook span,attr"`

}

type TxsdCol struct {
	XsdGoPkgHasAttr_Valign_TxsdColValign_

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasAttr_Width_XsdtString_

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasAttr_Span_XsdtNmtoken_

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasAttr_Align_TxsdColAlign_

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasAttr_Title_XsdtString_

}

//	If the WalkHandlers.TxsdCol function is not nil (ie. was set by outside code), calls it with this TxsdCol instance as the single argument. Then calls the Walk() method on 0/21 embed(s) and 0/0 field(s) belonging to this TxsdCol instance.
func (me *TxsdCol) Walk ()  { 
	if fn := WalkHandlers.TxsdCol; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Col struct {
	Cols []*TxsdCol `xml:"http://docbook.org/ns/docbook col"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Col function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Col instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Col instance.
func (me *XsdGoPkgHasElems_Col) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Col; fn != nil { fn(me) }
	for _, x := range me.Cols { x.Walk() }
 }

type XsdGoPkgHasAttr_Align_TxsdColgroupAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type TxsdColgroup struct {
	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasElems_Col

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasAttr_Width_XsdtString_

	XsdGoPkgHasAttr_Span_XsdtNmtoken_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAttr_Align_TxsdColgroupAlign_

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasAttr_Valign_TxsdColgroupValign_

}

//	If the WalkHandlers.TxsdColgroup function is not nil (ie. was set by outside code), calls it with this TxsdColgroup instance as the single argument. Then calls the Walk() method on 1/22 embed(s) and 0/0 field(s) belonging to this TxsdColgroup instance.
func (me *TxsdColgroup) Walk ()  { 
	if fn := WalkHandlers.TxsdColgroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Col.Walk()
 }

type XsdGoPkgHasElems_Colgroup struct {
	Colgroups []*TxsdColgroup `xml:"http://docbook.org/ns/docbook colgroup"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Colgroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Colgroup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Colgroup instance.
func (me *XsdGoPkgHasElems_Colgroup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Colgroup; fn != nil { fn(me) }
	for _, x := range me.Colgroups { x.Walk() }
 }

type TxsdInformaltableRules xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdInformaltableRules's alias type xsdt.Token.
func (me TxsdInformaltableRules) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdInformaltableRules is "all".
func (me TxsdInformaltableRules) IsAll () bool { return me == "all" }

//	Returns true if the value of this enumerated TxsdInformaltableRules is "groups".
func (me TxsdInformaltableRules) IsGroups () bool { return me == "groups" }

//	Returns true if the value of this enumerated TxsdInformaltableRules is "cols".
func (me TxsdInformaltableRules) IsCols () bool { return me == "cols" }

//	Since TxsdInformaltableRules is just a simple String type, this merely returns the current string value.
func (me TxsdInformaltableRules) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdInformaltableRules is "rows".
func (me TxsdInformaltableRules) IsRows () bool { return me == "rows" }

//	Since TxsdInformaltableRules is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdInformaltableRules) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdInformaltableRules is "none".
func (me TxsdInformaltableRules) IsNone () bool { return me == "none" }

type XsdGoPkgHasAttr_Rules_TxsdInformaltableRules_ struct {
	Rules TxsdInformaltableRules `xml:"http://docbook.org/ns/docbook rules,attr"`

}

type XsdGoPkgHasAttr_Summary_XsdtString_ struct {
	Summary xsdt.String `xml:"http://docbook.org/ns/docbook summary,attr"`

}

type XsdGoPkgHasAttr_Tabstyle_XsdtString_ struct {
	Tabstyle xsdt.String `xml:"http://docbook.org/ns/docbook tabstyle,attr"`

}

type XsdGoPkgHasAttr_Colsep_TxsdInformaltableColsep_ struct {
	Colsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook colsep,attr"`

}

type XsdGoPkgHasElems_Tbody struct {
	Tbodies []*TxsdTbody `xml:"http://docbook.org/ns/docbook tbody"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tbody function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tbody instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tbody instance.
func (me *XsdGoPkgHasElems_Tbody) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tbody; fn != nil { fn(me) }
	for _, x := range me.Tbodies { x.Walk() }
 }

type XsdGoPkgHasAttr_Border_XsdtNmtoken_ struct {
	Border xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook border,attr"`

}

type TxsdInformaltableFrame xsdt.Token

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "topbot".
func (me TxsdInformaltableFrame) IsTopbot () bool { return me == "topbot" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "void".
func (me TxsdInformaltableFrame) IsVoid () bool { return me == "void" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "none".
func (me TxsdInformaltableFrame) IsNone () bool { return me == "none" }

//	This convenience method just performs a simple type conversion to TxsdInformaltableFrame's alias type xsdt.Token.
func (me TxsdInformaltableFrame) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "above".
func (me TxsdInformaltableFrame) IsAbove () bool { return me == "above" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "top".
func (me TxsdInformaltableFrame) IsTop () bool { return me == "top" }

//	Since TxsdInformaltableFrame is just a simple String type, this merely returns the current string value.
func (me TxsdInformaltableFrame) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "vsides".
func (me TxsdInformaltableFrame) IsVsides () bool { return me == "vsides" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "lhs".
func (me TxsdInformaltableFrame) IsLhs () bool { return me == "lhs" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "border".
func (me TxsdInformaltableFrame) IsBorder () bool { return me == "border" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "sides".
func (me TxsdInformaltableFrame) IsSides () bool { return me == "sides" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "hsides".
func (me TxsdInformaltableFrame) IsHsides () bool { return me == "hsides" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "box".
func (me TxsdInformaltableFrame) IsBox () bool { return me == "box" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "bottom".
func (me TxsdInformaltableFrame) IsBottom () bool { return me == "bottom" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "rhs".
func (me TxsdInformaltableFrame) IsRhs () bool { return me == "rhs" }

//	Since TxsdInformaltableFrame is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdInformaltableFrame) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "all".
func (me TxsdInformaltableFrame) IsAll () bool { return me == "all" }

//	Returns true if the value of this enumerated TxsdInformaltableFrame is "below".
func (me TxsdInformaltableFrame) IsBelow () bool { return me == "below" }

type XsdGoPkgHasAttr_Frame_TxsdInformaltableFrame_ struct {
	Frame TxsdInformaltableFrame `xml:"http://docbook.org/ns/docbook frame,attr"`

}

type XsdGoPkgHasAttr_Cellpadding_XsdtString_ struct {
	Cellpadding xsdt.String `xml:"http://docbook.org/ns/docbook cellpadding,attr"`

}

type TxsdInformaltable struct {
	XsdGoPkgHasAttr_Frame_TxsdInformaltableFrame_

	XsdGoPkgHasAttr_Cellpadding_XsdtString_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Pgwide_TxsdInformaltablePgwide_

	XsdGoPkgHasAttr_Cellspacing_XsdtString_

	XsdGoPkgHasAttr_Rowheader_TxsdInformaltableRowheader_

	XsdGoPkgHasAttr_Rowsep_TxsdInformaltableRowsep_

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasElems_Tgroup

	XsdGoPkgHasElems_Tr

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAttr_Orient_TxsdInformaltableOrient_

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasElems_Colgroup

	XsdGoPkgHasAttr_Rules_TxsdInformaltableRules_

	XsdGoPkgHasAttr_Summary_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasElem_Tfoot

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasAttr_Width_XsdtString_

	XsdGoPkgHasAttr_Tabstyle_XsdtString_

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasAttr_Floatstyle_XsdtString_

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasElems_Col

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Thead

	XsdGoPkgHasAttr_Colsep_TxsdInformaltableColsep_

	XsdGoPkgHasElems_Tbody

	XsdGoPkgHasAttr_Border_XsdtNmtoken_

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

}

//	If the WalkHandlers.TxsdInformaltable function is not nil (ie. was set by outside code), calls it with this TxsdInformaltable instance as the single argument. Then calls the Walk() method on 6/41 embed(s) and 0/0 field(s) belonging to this TxsdInformaltable instance.
func (me *TxsdInformaltable) Walk ()  { 
	if fn := WalkHandlers.TxsdInformaltable; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Col.Walk()
	me.XsdGoPkgHasElem_Thead.Walk()
	me.XsdGoPkgHasElems_Tbody.Walk()
	me.XsdGoPkgHasElems_Tgroup.Walk()
	me.XsdGoPkgHasElems_Tr.Walk()
	me.XsdGoPkgHasElems_Colgroup.Walk()
 }

type XsdGoPkgHasElems_Informaltable struct {
	Informaltables []*TxsdInformaltable `xml:"http://docbook.org/ns/docbook informaltable"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Informaltable function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Informaltable instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Informaltable instance.
func (me *XsdGoPkgHasElems_Informaltable) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Informaltable; fn != nil { fn(me) }
	for _, x := range me.Informaltables { x.Walk() }
 }

type TxsdNote struct {
	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Classsynopsis

}

//	If the WalkHandlers.TxsdNote function is not nil (ie. was set by outside code), calls it with this TxsdNote instance as the single argument. Then calls the Walk() method on 34/61 embed(s) and 0/0 field(s) belonging to this TxsdNote instance.
func (me *TxsdNote) Walk ()  { 
	if fn := WalkHandlers.TxsdNote; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
 }

type XsdGoPkgHasElems_Note struct {
	Notes []*TxsdNote `xml:"http://docbook.org/ns/docbook note"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Note function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Note instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Note instance.
func (me *XsdGoPkgHasElems_Note) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Note; fn != nil { fn(me) }
	for _, x := range me.Notes { x.Walk() }
 }

type XsdGoPkgHasAttr_Pgwide_TxsdInformalfigurePgwide_ struct {
	Pgwide TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook pgwide,attr"`

}

type TxsdInformalfigure struct {
	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElem_Caption

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAttr_Floatstyle_XsdtString_

	XsdGoPkgHasElems_Important

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAttr_Pgwide_TxsdInformalfigurePgwide_

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Formalpara

}

//	If the WalkHandlers.TxsdInformalfigure function is not nil (ie. was set by outside code), calls it with this TxsdInformalfigure instance as the single argument. Then calls the Walk() method on 33/63 embed(s) and 0/0 field(s) belonging to this TxsdInformalfigure instance.
func (me *TxsdInformalfigure) Walk ()  { 
	if fn := WalkHandlers.TxsdInformalfigure; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
 }

type XsdGoPkgHasElems_Informalfigure struct {
	Informalfigures []*TxsdInformalfigure `xml:"http://docbook.org/ns/docbook informalfigure"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Informalfigure function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Informalfigure instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Informalfigure instance.
func (me *XsdGoPkgHasElems_Informalfigure) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Informalfigure; fn != nil { fn(me) }
	for _, x := range me.Informalfigures { x.Walk() }
 }

type TxsdRevdescription struct {
	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Task

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Screen

}

//	If the WalkHandlers.TxsdRevdescription function is not nil (ie. was set by outside code), calls it with this TxsdRevdescription instance as the single argument. Then calls the Walk() method on 34/58 embed(s) and 0/0 field(s) belonging to this TxsdRevdescription instance.
func (me *TxsdRevdescription) Walk ()  { 
	if fn := WalkHandlers.TxsdRevdescription; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
 }

type XsdGoPkgHasElem_Revdescription struct {
	Revdescription *TxsdRevdescription `xml:"http://docbook.org/ns/docbook revdescription"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Revdescription function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Revdescription instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Revdescription instance.
func (me *XsdGoPkgHasElem_Revdescription) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Revdescription; fn != nil { fn(me) }
	me.Revdescription.Walk()
 }

type TxsdRevision struct {
	XsdGoPkgHasElems_Author

	XsdGoPkgHasElem_Revremark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Revdescription

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Date

	XsdGoPkgHasElems_Authorinitials

	XsdGoPkgHasElem_Revnumber

}

//	If the WalkHandlers.TxsdRevision function is not nil (ie. was set by outside code), calls it with this TxsdRevision instance as the single argument. Then calls the Walk() method on 5/9 embed(s) and 0/0 field(s) belonging to this TxsdRevision instance.
func (me *TxsdRevision) Walk ()  { 
	if fn := WalkHandlers.TxsdRevision; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Revdescription.Walk()
	me.XsdGoPkgHasElem_Date.Walk()
	me.XsdGoPkgHasElems_Authorinitials.Walk()
	me.XsdGoPkgHasElem_Revnumber.Walk()
	me.XsdGoPkgHasElem_Revremark.Walk()
 }

type XsdGoPkgHasElems_Revision struct {
	Revisions []*TxsdRevision `xml:"http://docbook.org/ns/docbook revision"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Revision function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Revision instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Revision instance.
func (me *XsdGoPkgHasElems_Revision) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Revision; fn != nil { fn(me) }
	for _, x := range me.Revisions { x.Walk() }
 }

type TxsdRevhistory struct {
	XsdGoPkgHasElems_Revision

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdRevhistory function is not nil (ie. was set by outside code), calls it with this TxsdRevhistory instance as the single argument. Then calls the Walk() method on 3/7 embed(s) and 0/0 field(s) belonging to this TxsdRevhistory instance.
func (me *TxsdRevhistory) Walk ()  { 
	if fn := WalkHandlers.TxsdRevhistory; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Revision.Walk()
 }

type XsdGoPkgHasElems_Revhistory struct {
	Revhistories []*TxsdRevhistory `xml:"http://docbook.org/ns/docbook revhistory"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Revhistory function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Revhistory instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Revhistory instance.
func (me *XsdGoPkgHasElems_Revhistory) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Revhistory; fn != nil { fn(me) }
	for _, x := range me.Revhistories { x.Walk() }
 }

type TxsdStepPerformance xsdt.Token

//	Returns true if the value of this enumerated TxsdStepPerformance is "required".
func (me TxsdStepPerformance) IsRequired () bool { return me == "required" }

//	Returns true if the value of this enumerated TxsdStepPerformance is "optional".
func (me TxsdStepPerformance) IsOptional () bool { return me == "optional" }

//	Since TxsdStepPerformance is just a simple String type, this merely returns the current string value.
func (me TxsdStepPerformance) String () string { return xsdt.Token(me).String() }

//	Since TxsdStepPerformance is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdStepPerformance) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TxsdStepPerformance's alias type xsdt.Token.
func (me TxsdStepPerformance) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Performance_TxsdStepPerformance_ struct {
	Performance TxsdStepPerformance `xml:"http://docbook.org/ns/docbook performance,attr"`

}

type XsdGoPkgHasAttr_Performance_TxsdStepalternativesPerformance_ struct {
	Performance TxsdStepPerformance `xml:"http://docbook.org/ns/docbook performance,attr"`

}

type TxsdStepalternatives struct {
	XsdGoPkgHasAttr_Performance_TxsdStepalternativesPerformance_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Step

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

}

//	If the WalkHandlers.TxsdStepalternatives function is not nil (ie. was set by outside code), calls it with this TxsdStepalternatives instance as the single argument. Then calls the Walk() method on 0/6 embed(s) and 0/0 field(s) belonging to this TxsdStepalternatives instance.
func (me *TxsdStepalternatives) Walk ()  { 
	if fn := WalkHandlers.TxsdStepalternatives; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Stepalternatives struct {
	Stepalternatives *TxsdStepalternatives `xml:"http://docbook.org/ns/docbook stepalternatives"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Stepalternatives function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Stepalternatives instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Stepalternatives instance.
func (me *XsdGoPkgHasElem_Stepalternatives) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Stepalternatives; fn != nil { fn(me) }
	me.Stepalternatives.Walk()
 }

type XsdGoPkgHasAttr_Performance_TxsdSubstepsPerformance_ struct {
	Performance TxsdStepPerformance `xml:"http://docbook.org/ns/docbook performance,attr"`

}

type TxsdSubsteps struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Performance_TxsdSubstepsPerformance_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Step

}

//	If the WalkHandlers.TxsdSubsteps function is not nil (ie. was set by outside code), calls it with this TxsdSubsteps instance as the single argument. Then calls the Walk() method on 0/5 embed(s) and 0/0 field(s) belonging to this TxsdSubsteps instance.
func (me *TxsdSubsteps) Walk ()  { 
	if fn := WalkHandlers.TxsdSubsteps; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Substeps struct {
	Substeps *TxsdSubsteps `xml:"http://docbook.org/ns/docbook substeps"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Substeps function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Substeps instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Substeps instance.
func (me *XsdGoPkgHasElem_Substeps) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Substeps; fn != nil { fn(me) }
	me.Substeps.Walk()
 }

type TxsdStep struct {
	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElem_Stepalternatives

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElem_Substeps

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasAttr_Performance_TxsdStepPerformance_

	XsdGoPkgHasElems_Mediaobject

}

//	If the WalkHandlers.TxsdStep function is not nil (ie. was set by outside code), calls it with this TxsdStep instance as the single argument. Then calls the Walk() method on 39/64 embed(s) and 0/0 field(s) belonging to this TxsdStep instance.
func (me *TxsdStep) Walk ()  { 
	if fn := WalkHandlers.TxsdStep; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElem_Substeps.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElem_Stepalternatives.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
 }

type XsdGoPkgHasElems_Step struct {
	Steps []*TxsdStep `xml:"http://docbook.org/ns/docbook step"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Step function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Step instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Step instance.
func (me *XsdGoPkgHasElems_Step) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Step; fn != nil { fn(me) }
	for _, x := range me.Steps { x.Walk() }
 }

type TxsdProcedure struct {
	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Step

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Address

}

//	If the WalkHandlers.TxsdProcedure function is not nil (ie. was set by outside code), calls it with this TxsdProcedure instance as the single argument. Then calls the Walk() method on 38/62 embed(s) and 0/0 field(s) belonging to this TxsdProcedure instance.
func (me *TxsdProcedure) Walk ()  { 
	if fn := WalkHandlers.TxsdProcedure; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Step.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
 }

type XsdGoPkgHasElems_Procedure struct {
	Procedures []*TxsdProcedure `xml:"http://docbook.org/ns/docbook procedure"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Procedure function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Procedure instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Procedure instance.
func (me *XsdGoPkgHasElems_Procedure) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Procedure; fn != nil { fn(me) }
	for _, x := range me.Procedures { x.Walk() }
 }

type TxsdSidebar struct {
	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Note

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Informalequation

}

//	If the WalkHandlers.TxsdSidebar function is not nil (ie. was set by outside code), calls it with this TxsdSidebar instance as the single argument. Then calls the Walk() method on 38/61 embed(s) and 0/0 field(s) belonging to this TxsdSidebar instance.
func (me *TxsdSidebar) Walk ()  { 
	if fn := WalkHandlers.TxsdSidebar; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
 }

type XsdGoPkgHasElems_Sidebar struct {
	Sidebars []*TxsdSidebar `xml:"http://docbook.org/ns/docbook sidebar"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Sidebar function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Sidebar instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Sidebar instance.
func (me *XsdGoPkgHasElems_Sidebar) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Sidebar; fn != nil { fn(me) }
	for _, x := range me.Sidebars { x.Walk() }
 }

type XsdGoPkgHasAttr_Spacing_TxsdItemizedlistSpacing_ struct {
	Spacing TxsdVariablelistSpacing `xml:"http://docbook.org/ns/docbook spacing,attr"`

}

type XsdGoPkgHasElems_Listitem struct {
	Listitems []*TxsdListitem `xml:"http://docbook.org/ns/docbook listitem"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Listitem function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Listitem instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Listitem instance.
func (me *XsdGoPkgHasElems_Listitem) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Listitem; fn != nil { fn(me) }
	for _, x := range me.Listitems { x.Walk() }
 }

type XsdGoPkgHasAttr_Mark_XsdtNmtoken_ struct {
	Mark xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook mark,attr"`

}

type TxsdItemizedlist struct {
	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Spacing_TxsdItemizedlistSpacing_

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Listitem

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasAttr_Mark_XsdtNmtoken_

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Task

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Remark

}

//	If the WalkHandlers.TxsdItemizedlist function is not nil (ie. was set by outside code), calls it with this TxsdItemizedlist instance as the single argument. Then calls the Walk() method on 40/64 embed(s) and 0/0 field(s) belonging to this TxsdItemizedlist instance.
func (me *TxsdItemizedlist) Walk ()  { 
	if fn := WalkHandlers.TxsdItemizedlist; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Listitem.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
 }

type XsdGoPkgHasElems_Itemizedlist struct {
	Itemizedlists []*TxsdItemizedlist `xml:"http://docbook.org/ns/docbook itemizedlist"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Itemizedlist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Itemizedlist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Itemizedlist instance.
func (me *XsdGoPkgHasElems_Itemizedlist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Itemizedlist; fn != nil { fn(me) }
	for _, x := range me.Itemizedlists { x.Walk() }
 }

type TxsdCaption struct {
	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Example

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Table

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Important

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

}

//	If the WalkHandlers.TxsdCaption function is not nil (ie. was set by outside code), calls it with this TxsdCaption instance as the single argument. Then calls the Walk() method on 39/73 embed(s) and 0/0 field(s) belonging to this TxsdCaption instance.
func (me *TxsdCaption) Walk ()  { 
	if fn := WalkHandlers.TxsdCaption; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
 }

type XsdGoPkgHasElem_Caption struct {
	Caption *TxsdCaption `xml:"http://docbook.org/ns/docbook caption"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Caption function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Caption instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Caption instance.
func (me *XsdGoPkgHasElem_Caption) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Caption; fn != nil { fn(me) }
	me.Caption.Walk()
 }

type TxsdMediaobject struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasElems_Imageobjectco

	XsdGoPkgHasElem_Caption

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElem_Alt

	XsdGoPkgHasElems_Imageobject

	XsdGoPkgHasElems_Audioobject

	XsdGoPkgHasElems_Videoobject

}

//	If the WalkHandlers.TxsdMediaobject function is not nil (ie. was set by outside code), calls it with this TxsdMediaobject instance as the single argument. Then calls the Walk() method on 6/11 embed(s) and 0/0 field(s) belonging to this TxsdMediaobject instance.
func (me *TxsdMediaobject) Walk ()  { 
	if fn := WalkHandlers.TxsdMediaobject; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Imageobject.Walk()
	me.XsdGoPkgHasElems_Audioobject.Walk()
	me.XsdGoPkgHasElems_Videoobject.Walk()
	me.XsdGoPkgHasElems_Imageobjectco.Walk()
	me.XsdGoPkgHasElem_Caption.Walk()
	me.XsdGoPkgHasElem_Alt.Walk()
 }

type XsdGoPkgHasElems_Mediaobject struct {
	Mediaobjects []*TxsdMediaobject `xml:"http://docbook.org/ns/docbook mediaobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Mediaobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Mediaobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Mediaobject instance.
func (me *XsdGoPkgHasElems_Mediaobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Mediaobject; fn != nil { fn(me) }
	for _, x := range me.Mediaobjects { x.Walk() }
 }

type TxsdTaskrelated struct {
	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Example

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Caution

}

//	If the WalkHandlers.TxsdTaskrelated function is not nil (ie. was set by outside code), calls it with this TxsdTaskrelated instance as the single argument. Then calls the Walk() method on 41/61 embed(s) and 0/0 field(s) belonging to this TxsdTaskrelated instance.
func (me *TxsdTaskrelated) Walk ()  { 
	if fn := WalkHandlers.TxsdTaskrelated; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
 }

type XsdGoPkgHasElem_Taskrelated struct {
	Taskrelated *TxsdTaskrelated `xml:"http://docbook.org/ns/docbook taskrelated"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Taskrelated function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Taskrelated instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Taskrelated instance.
func (me *XsdGoPkgHasElem_Taskrelated) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Taskrelated; fn != nil { fn(me) }
	me.Taskrelated.Walk()
 }

type XsdGoPkgHasElem_Procedure struct {
	Procedure *TxsdProcedure `xml:"http://docbook.org/ns/docbook procedure"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Procedure function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Procedure instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Procedure instance.
func (me *XsdGoPkgHasElem_Procedure) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Procedure; fn != nil { fn(me) }
	me.Procedure.Walk()
 }

type XsdGoPkgHasElem_Taskprerequisites struct {
	Taskprerequisites *TxsdTaskrelated `xml:"http://docbook.org/ns/docbook taskprerequisites"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Taskprerequisites function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Taskprerequisites instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Taskprerequisites instance.
func (me *XsdGoPkgHasElem_Taskprerequisites) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Taskprerequisites; fn != nil { fn(me) }
	me.Taskprerequisites.Walk()
 }

type XsdGoPkgHasElem_Tasksummary struct {
	Tasksummary *TxsdTaskrelated `xml:"http://docbook.org/ns/docbook tasksummary"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tasksummary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tasksummary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tasksummary instance.
func (me *XsdGoPkgHasElem_Tasksummary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tasksummary; fn != nil { fn(me) }
	me.Tasksummary.Walk()
 }

type TxsdTask struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Procedure

	XsdGoPkgHasElem_Taskprerequisites

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Example

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElem_Tasksummary

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElem_Taskrelated

}

//	If the WalkHandlers.TxsdTask function is not nil (ie. was set by outside code), calls it with this TxsdTask instance as the single argument. Then calls the Walk() method on 8/12 embed(s) and 0/0 field(s) belonging to this TxsdTask instance.
func (me *TxsdTask) Walk ()  { 
	if fn := WalkHandlers.TxsdTask; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Procedure.Walk()
	me.XsdGoPkgHasElem_Taskprerequisites.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElem_Tasksummary.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElem_Taskrelated.Walk()
 }

type XsdGoPkgHasElems_Task struct {
	Tasks []*TxsdTask `xml:"http://docbook.org/ns/docbook task"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Task function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Task instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Task instance.
func (me *XsdGoPkgHasElems_Task) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Task; fn != nil { fn(me) }
	for _, x := range me.Tasks { x.Walk() }
 }

type TxsdConstraintdef struct {
	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Example

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Anchor

}

//	If the WalkHandlers.TxsdConstraintdef function is not nil (ie. was set by outside code), calls it with this TxsdConstraintdef instance as the single argument. Then calls the Walk() method on 42/61 embed(s) and 0/0 field(s) belonging to this TxsdConstraintdef instance.
func (me *TxsdConstraintdef) Walk ()  { 
	if fn := WalkHandlers.TxsdConstraintdef; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
 }

type XsdGoPkgHasElems_Constraintdef struct {
	Constraintdefs []*TxsdConstraintdef `xml:"http://docbook.org/ns/docbook constraintdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Constraintdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Constraintdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Constraintdef instance.
func (me *XsdGoPkgHasElems_Constraintdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Constraintdef; fn != nil { fn(me) }
	for _, x := range me.Constraintdefs { x.Walk() }
 }

type XsdGoPkgHasElem_Abbrev struct {
	Abbrev *TxsdAbbrev `xml:"http://docbook.org/ns/docbook abbrev"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Abbrev function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Abbrev instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Abbrev instance.
func (me *XsdGoPkgHasElem_Abbrev) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Abbrev; fn != nil { fn(me) }
	me.Abbrev.Walk()
 }

type XsdGoPkgHasElem_Glossterm struct {
	Glossterm *TxsdGlossterm `xml:"http://docbook.org/ns/docbook glossterm"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Glossterm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Glossterm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Glossterm instance.
func (me *XsdGoPkgHasElem_Glossterm) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Glossterm; fn != nil { fn(me) }
	me.Glossterm.Walk()
 }

type XsdGoPkgHasElem_Acronym struct {
	Acronym *TxsdAbbrev `xml:"http://docbook.org/ns/docbook acronym"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Acronym function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Acronym instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Acronym instance.
func (me *XsdGoPkgHasElem_Acronym) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Acronym; fn != nil { fn(me) }
	me.Acronym.Walk()
 }

type XsdGoPkgHasAttr_Otherterm_XsdtIdref_ struct {
	Otherterm xsdt.Idref `xml:"http://docbook.org/ns/docbook otherterm,attr"`

}

type TxsdGlossseealso struct {
	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Property

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasAttr_Otherterm_XsdtIdref_

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Parameter

}

//	If the WalkHandlers.TxsdGlossseealso function is not nil (ie. was set by outside code), calls it with this TxsdGlossseealso instance as the single argument. Then calls the Walk() method on 81/103 embed(s) and 0/0 field(s) belonging to this TxsdGlossseealso instance.
func (me *TxsdGlossseealso) Walk ()  { 
	if fn := WalkHandlers.TxsdGlossseealso; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
 }

type XsdGoPkgHasElems_Glossseealso struct {
	Glossseealsos []*TxsdGlossseealso `xml:"http://docbook.org/ns/docbook glossseealso"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Glossseealso function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Glossseealso instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Glossseealso instance.
func (me *XsdGoPkgHasElems_Glossseealso) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Glossseealso; fn != nil { fn(me) }
	for _, x := range me.Glossseealsos { x.Walk() }
 }

type XsdGoPkgHasAttr_Subject_XsdtString_ struct {
	Subject xsdt.String `xml:"http://docbook.org/ns/docbook subject,attr"`

}

type TxsdGlossdef struct {
	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Glossseealso

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Subject_XsdtString_

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Screenshot

}

//	If the WalkHandlers.TxsdGlossdef function is not nil (ie. was set by outside code), calls it with this TxsdGlossdef instance as the single argument. Then calls the Walk() method on 42/60 embed(s) and 0/0 field(s) belonging to this TxsdGlossdef instance.
func (me *TxsdGlossdef) Walk ()  { 
	if fn := WalkHandlers.TxsdGlossdef; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Glossseealso.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
 }

type XsdGoPkgHasElems_Glossdef struct {
	Glossdefs []*TxsdGlossdef `xml:"http://docbook.org/ns/docbook glossdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Glossdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Glossdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Glossdef instance.
func (me *XsdGoPkgHasElems_Glossdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Glossdef; fn != nil { fn(me) }
	for _, x := range me.Glossdefs { x.Walk() }
 }

type XsdGoPkgHasElem_Glosssee struct {
	Glosssee *TxsdGlossseealso `xml:"http://docbook.org/ns/docbook glosssee"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Glosssee function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Glosssee instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Glosssee instance.
func (me *XsdGoPkgHasElem_Glosssee) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Glosssee; fn != nil { fn(me) }
	me.Glosssee.Walk()
 }

type XsdGoPkgHasAttr_Sortas_XsdtString_ struct {
	Sortas xsdt.String `xml:"http://docbook.org/ns/docbook sortas,attr"`

}

type TxsdGlossentry struct {
	XsdGoPkgHasElem_Abbrev

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Glossterm

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Acronym

	XsdGoPkgHasElems_Glossdef

	XsdGoPkgHasElem_Glosssee

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Sortas_XsdtString_

}

//	If the WalkHandlers.TxsdGlossentry function is not nil (ie. was set by outside code), calls it with this TxsdGlossentry instance as the single argument. Then calls the Walk() method on 5/10 embed(s) and 0/0 field(s) belonging to this TxsdGlossentry instance.
func (me *TxsdGlossentry) Walk ()  { 
	if fn := WalkHandlers.TxsdGlossentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Abbrev.Walk()
	me.XsdGoPkgHasElem_Glossterm.Walk()
	me.XsdGoPkgHasElem_Acronym.Walk()
	me.XsdGoPkgHasElems_Glossdef.Walk()
	me.XsdGoPkgHasElem_Glosssee.Walk()
 }

type XsdGoPkgHasElems_Glossentry struct {
	Glossentries []*TxsdGlossentry `xml:"http://docbook.org/ns/docbook glossentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Glossentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Glossentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Glossentry instance.
func (me *XsdGoPkgHasElems_Glossentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Glossentry; fn != nil { fn(me) }
	for _, x := range me.Glossentries { x.Walk() }
 }

type TxsdGlosslist struct {
	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Task

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Glossentry

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Cmdsynopsis

}

//	If the WalkHandlers.TxsdGlosslist function is not nil (ie. was set by outside code), calls it with this TxsdGlosslist instance as the single argument. Then calls the Walk() method on 44/62 embed(s) and 0/0 field(s) belonging to this TxsdGlosslist instance.
func (me *TxsdGlosslist) Walk ()  { 
	if fn := WalkHandlers.TxsdGlosslist; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Glossentry.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
 }

type XsdGoPkgHasElems_Glosslist struct {
	Glosslists []*TxsdGlosslist `xml:"http://docbook.org/ns/docbook glosslist"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Glosslist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Glosslist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Glosslist instance.
func (me *XsdGoPkgHasElems_Glosslist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Glosslist; fn != nil { fn(me) }
	for _, x := range me.Glosslists { x.Walk() }
 }

type XsdGoPkgHasAttr_Arearefs_XsdtIdrefs_ struct {
	Arearefs xsdt.Idrefs `xml:"http://docbook.org/ns/docbook arearefs,attr"`

}

type TxsdCallout struct {
	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAttr_Arearefs_XsdtIdrefs_

	XsdGoPkgHasElems_Formalpara

}

//	If the WalkHandlers.TxsdCallout function is not nil (ie. was set by outside code), calls it with this TxsdCallout instance as the single argument. Then calls the Walk() method on 42/58 embed(s) and 0/0 field(s) belonging to this TxsdCallout instance.
func (me *TxsdCallout) Walk ()  { 
	if fn := WalkHandlers.TxsdCallout; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
 }

type XsdGoPkgHasElems_Callout struct {
	Callouts []*TxsdCallout `xml:"http://docbook.org/ns/docbook callout"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Callout function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Callout instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Callout instance.
func (me *XsdGoPkgHasElems_Callout) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Callout; fn != nil { fn(me) }
	for _, x := range me.Callouts { x.Walk() }
 }

type TxsdCalloutlist struct {
	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Task

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Callout

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Important

}

//	If the WalkHandlers.TxsdCalloutlist function is not nil (ie. was set by outside code), calls it with this TxsdCalloutlist instance as the single argument. Then calls the Walk() method on 45/62 embed(s) and 0/0 field(s) belonging to this TxsdCalloutlist instance.
func (me *TxsdCalloutlist) Walk ()  { 
	if fn := WalkHandlers.TxsdCalloutlist; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Callout.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
 }

type XsdGoPkgHasElems_Calloutlist struct {
	Calloutlists []*TxsdCalloutlist `xml:"http://docbook.org/ns/docbook calloutlist"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Calloutlist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Calloutlist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Calloutlist instance.
func (me *XsdGoPkgHasElems_Calloutlist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Calloutlist; fn != nil { fn(me) }
	for _, x := range me.Calloutlists { x.Walk() }
 }

type TxsdScreenco struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElem_Areaspec

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElem_Screen

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdScreenco function is not nil (ie. was set by outside code), calls it with this TxsdScreenco instance as the single argument. Then calls the Walk() method on 3/7 embed(s) and 0/0 field(s) belonging to this TxsdScreenco instance.
func (me *TxsdScreenco) Walk ()  { 
	if fn := WalkHandlers.TxsdScreenco; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Areaspec.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElem_Screen.Walk()
 }

type XsdGoPkgHasElems_Screenco struct {
	Screencos []*TxsdScreenco `xml:"http://docbook.org/ns/docbook screenco"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Screenco function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Screenco instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Screenco instance.
func (me *XsdGoPkgHasElems_Screenco) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Screenco; fn != nil { fn(me) }
	for _, x := range me.Screencos { x.Walk() }
 }

type TxsdOrderedlistInheritnum xsdt.Token

//	Returns true if the value of this enumerated TxsdOrderedlistInheritnum is "inherit".
func (me TxsdOrderedlistInheritnum) IsInherit () bool { return me == "inherit" }

//	Since TxsdOrderedlistInheritnum is just a simple String type, this merely returns the current string value.
func (me TxsdOrderedlistInheritnum) String () string { return xsdt.Token(me).String() }

//	Since TxsdOrderedlistInheritnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdOrderedlistInheritnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TxsdOrderedlistInheritnum's alias type xsdt.Token.
func (me TxsdOrderedlistInheritnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdOrderedlistInheritnum is "ignore".
func (me TxsdOrderedlistInheritnum) IsIgnore () bool { return me == "ignore" }

type XsdGoPkgHasAttr_Inheritnum_TxsdOrderedlistInheritnum_ struct {
	Inheritnum TxsdOrderedlistInheritnum `xml:"http://docbook.org/ns/docbook inheritnum,attr"`

}

type TxsdOrderedlistNumeration xsdt.Token

//	Returns true if the value of this enumerated TxsdOrderedlistNumeration is "upperalpha".
func (me TxsdOrderedlistNumeration) IsUpperalpha () bool { return me == "upperalpha" }

//	This convenience method just performs a simple type conversion to TxsdOrderedlistNumeration's alias type xsdt.Token.
func (me TxsdOrderedlistNumeration) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdOrderedlistNumeration is "lowerroman".
func (me TxsdOrderedlistNumeration) IsLowerroman () bool { return me == "lowerroman" }

//	Since TxsdOrderedlistNumeration is just a simple String type, this merely returns the current string value.
func (me TxsdOrderedlistNumeration) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdOrderedlistNumeration is "arabic".
func (me TxsdOrderedlistNumeration) IsArabic () bool { return me == "arabic" }

//	Returns true if the value of this enumerated TxsdOrderedlistNumeration is "loweralpha".
func (me TxsdOrderedlistNumeration) IsLoweralpha () bool { return me == "loweralpha" }

//	Since TxsdOrderedlistNumeration is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdOrderedlistNumeration) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdOrderedlistNumeration is "upperroman".
func (me TxsdOrderedlistNumeration) IsUpperroman () bool { return me == "upperroman" }

type XsdGoPkgHasAttr_Numeration_TxsdOrderedlistNumeration_ struct {
	Numeration TxsdOrderedlistNumeration `xml:"http://docbook.org/ns/docbook numeration,attr"`

}

type XsdGoPkgHasAttr_Startingnumber_XsdtNmtoken_ struct {
	Startingnumber xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook startingnumber,attr"`

}

type XsdGoPkgHasAttr_Spacing_TxsdOrderedlistSpacing_ struct {
	Spacing TxsdVariablelistSpacing `xml:"http://docbook.org/ns/docbook spacing,attr"`

}

type XsdGoPkgHasAttr_Continuation_TxsdOrderedlistContinuation_ struct {
	Continuation TxsdAddressContinuation `xml:"http://docbook.org/ns/docbook continuation,attr"`

}

type TxsdOrderedlist struct {
	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasAttr_Inheritnum_TxsdOrderedlistInheritnum_

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAttr_Numeration_TxsdOrderedlistNumeration_

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasAttr_Startingnumber_XsdtNmtoken_

	XsdGoPkgHasAttr_Spacing_TxsdOrderedlistSpacing_

	XsdGoPkgHasAttr_Continuation_TxsdOrderedlistContinuation_

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Listitem

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Programlisting

}

//	If the WalkHandlers.TxsdOrderedlist function is not nil (ie. was set by outside code), calls it with this TxsdOrderedlist instance as the single argument. Then calls the Walk() method on 47/67 embed(s) and 0/0 field(s) belonging to this TxsdOrderedlist instance.
func (me *TxsdOrderedlist) Walk ()  { 
	if fn := WalkHandlers.TxsdOrderedlist; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Listitem.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
 }

type XsdGoPkgHasElems_Orderedlist struct {
	Orderedlists []*TxsdOrderedlist `xml:"http://docbook.org/ns/docbook orderedlist"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Orderedlist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Orderedlist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Orderedlist instance.
func (me *XsdGoPkgHasElems_Orderedlist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Orderedlist; fn != nil { fn(me) }
	for _, x := range me.Orderedlists { x.Walk() }
 }

type XsdGoPkgHasAttr_Morerows_XsdtNmtoken_ struct {
	Morerows xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook morerows,attr"`

}

type XsdGoPkgHasAttr_Valign_TxsdEntryValign_ struct {
	Valign TxsdVideodataValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type XsdGoPkgHasAttr_Colsep_TxsdEntryColsep_ struct {
	Colsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook colsep,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdEntryAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type XsdGoPkgHasAttr_Rowsep_TxsdEntryRowsep_ struct {
	Rowsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rowsep,attr"`

}

type XsdGoPkgHasAttr_Rotate_TxsdEntryRotate_ struct {
	Rotate TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rotate,attr"`

}

type TxsdEntry struct {
	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasAttr_Nameend_XsdtString_

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasAttr_Morerows_XsdtNmtoken_

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Email

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasAttr_Valign_TxsdEntryValign_

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Database

	XsdGoPkgHasAttr_Namest_XsdtString_

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasAttr_Colsep_TxsdEntryColsep_

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasAttr_Align_TxsdEntryAlign_

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAttr_Spanname_XsdtString_

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasAttr_Rowsep_TxsdEntryRowsep_

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasAttr_Rotate_TxsdEntryRotate_

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasAttr_Colname_XsdtString_

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Abbrev

}

//	If the WalkHandlers.TxsdEntry function is not nil (ie. was set by outside code), calls it with this TxsdEntry instance as the single argument. Then calls the Walk() method on 125/165 embed(s) and 0/0 field(s) belonging to this TxsdEntry instance.
func (me *TxsdEntry) Walk ()  { 
	if fn := WalkHandlers.TxsdEntry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
 }

type XsdGoPkgHasElems_Entry struct {
	Entries []*TxsdEntry `xml:"http://docbook.org/ns/docbook entry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Entry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Entry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Entry instance.
func (me *XsdGoPkgHasElems_Entry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Entry; fn != nil { fn(me) }
	for _, x := range me.Entries { x.Walk() }
 }

type XsdGoPkgHasAttr_Rowsep_TxsdEntrytblRowsep_ struct {
	Rowsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rowsep,attr"`

}

type XsdGoPkgHasAttr_Colsep_TxsdEntrytblColsep_ struct {
	Colsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook colsep,attr"`

}

type XsdGoPkgHasAttr_Align_TxsdEntrytblAlign_ struct {
	Align TxsdVideodataAlign `xml:"http://docbook.org/ns/docbook align,attr"`

}

type TxsdEntrytbl struct {
	XsdGoPkgHasAttr_Align_TxsdEntrytblAlign_

	XsdGoPkgHasElems_Colspec

	XsdGoPkgHasAttr_Spanname_XsdtString_

	XsdGoPkgHasElems_Spanspec

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Cols_XsdtNmtoken_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Nameend_XsdtString_

	XsdGoPkgHasAttr_Colname_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Rowsep_TxsdEntrytblRowsep_

	XsdGoPkgHasAttr_Namest_XsdtString_

	XsdGoPkgHasAttr_Colsep_TxsdEntrytblColsep_

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasElem_Tbody

	XsdGoPkgHasElem_Thead

	XsdGoPkgHasAttr_Tgroupstyle_XsdtString_

}

//	If the WalkHandlers.TxsdEntrytbl function is not nil (ie. was set by outside code), calls it with this TxsdEntrytbl instance as the single argument. Then calls the Walk() method on 4/18 embed(s) and 0/0 field(s) belonging to this TxsdEntrytbl instance.
func (me *TxsdEntrytbl) Walk ()  { 
	if fn := WalkHandlers.TxsdEntrytbl; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Tbody.Walk()
	me.XsdGoPkgHasElem_Thead.Walk()
	me.XsdGoPkgHasElems_Colspec.Walk()
	me.XsdGoPkgHasElems_Spanspec.Walk()
 }

type XsdGoPkgHasElems_Entrytbl struct {
	Entrytbls []*TxsdEntrytbl `xml:"http://docbook.org/ns/docbook entrytbl"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Entrytbl function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Entrytbl instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Entrytbl instance.
func (me *XsdGoPkgHasElems_Entrytbl) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Entrytbl; fn != nil { fn(me) }
	for _, x := range me.Entrytbls { x.Walk() }
 }

type XsdGoPkgHasAttr_Rowsep_TxsdRowRowsep_ struct {
	Rowsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rowsep,attr"`

}

type XsdGoPkgHasAttr_Valign_TxsdRowValign_ struct {
	Valign TxsdVideodataValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type TxsdRow struct {
	XsdGoPkgHasAttr_Valign_TxsdRowValign_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Entry

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Entrytbl

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Rowsep_TxsdRowRowsep_

}

//	If the WalkHandlers.TxsdRow function is not nil (ie. was set by outside code), calls it with this TxsdRow instance as the single argument. Then calls the Walk() method on 2/7 embed(s) and 0/0 field(s) belonging to this TxsdRow instance.
func (me *TxsdRow) Walk ()  { 
	if fn := WalkHandlers.TxsdRow; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Entrytbl.Walk()
	me.XsdGoPkgHasElems_Entry.Walk()
 }

type XsdGoPkgHasElems_Row struct {
	Rows []*TxsdRow `xml:"http://docbook.org/ns/docbook row"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Row function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Row instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Row instance.
func (me *XsdGoPkgHasElems_Row) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Row; fn != nil { fn(me) }
	for _, x := range me.Rows { x.Walk() }
 }

type XsdGoPkgHasAttr_Valign_TxsdTfootValign_ struct {
	Valign TxsdTbodyValign `xml:"http://docbook.org/ns/docbook valign,attr"`

}

type TxsdTfoot struct {
	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasAttr_Align_TxsdTfootAlign_

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasAttr_Char_XsdtString_

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasElems_Colspec

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasElems_Row

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasAttr_Valign_TxsdTfootValign_

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Tr

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasAttr_Charoff_XsdtString_

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

}

//	If the WalkHandlers.TxsdTfoot function is not nil (ie. was set by outside code), calls it with this TxsdTfoot instance as the single argument. Then calls the Walk() method on 3/24 embed(s) and 0/0 field(s) belonging to this TxsdTfoot instance.
func (me *TxsdTfoot) Walk ()  { 
	if fn := WalkHandlers.TxsdTfoot; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Colspec.Walk()
	me.XsdGoPkgHasElems_Row.Walk()
	me.XsdGoPkgHasElems_Tr.Walk()
 }

type XsdGoPkgHasElem_Tfoot struct {
	Tfoot *TxsdTfoot `xml:"http://docbook.org/ns/docbook tfoot"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tfoot function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tfoot instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tfoot instance.
func (me *XsdGoPkgHasElem_Tfoot) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tfoot; fn != nil { fn(me) }
	me.Tfoot.Walk()
 }

type XsdGoPkgHasAttr_Tocentry_TxsdTableTocentry_ struct {
	Tocentry TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook tocentry,attr"`

}

type XsdGoPkgHasAttr_Frame_TxsdTableFrame_ struct {
	Frame TxsdInformaltableFrame `xml:"http://docbook.org/ns/docbook frame,attr"`

}

type XsdGoPkgHasAttr_Rowheader_TxsdTableRowheader_ struct {
	Rowheader TxsdInformaltableRowheader `xml:"http://docbook.org/ns/docbook rowheader,attr"`

}

type XsdGoPkgHasAttr_Shortentry_TxsdTableShortentry_ struct {
	Shortentry TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook shortentry,attr"`

}

type XsdGoPkgHasAttr_Orient_TxsdTableOrient_ struct {
	Orient TxsdInformaltableOrient `xml:"http://docbook.org/ns/docbook orient,attr"`

}

type XsdGoPkgHasAttr_Rowsep_TxsdTableRowsep_ struct {
	Rowsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook rowsep,attr"`

}

type XsdGoPkgHasAttr_Rules_TxsdTableRules_ struct {
	Rules TxsdInformaltableRules `xml:"http://docbook.org/ns/docbook rules,attr"`

}

type XsdGoPkgHasElem_Titleabbrev struct {
	Titleabbrev *TxsdTitleabbrev `xml:"http://docbook.org/ns/docbook titleabbrev"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Titleabbrev function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Titleabbrev instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Titleabbrev instance.
func (me *XsdGoPkgHasElem_Titleabbrev) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Titleabbrev; fn != nil { fn(me) }
	me.Titleabbrev.Walk()
 }

type XsdGoPkgHasAttr_Pgwide_TxsdTablePgwide_ struct {
	Pgwide TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook pgwide,attr"`

}

type XsdGoPkgHasAttr_Colsep_TxsdTableColsep_ struct {
	Colsep TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook colsep,attr"`

}

type TxsdTable struct {
	XsdGoPkgHasAttr_Rowsep_TxsdTableRowsep_

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Tgroup

	XsdGoPkgHasAttr_Rules_TxsdTableRules_

	XsdGoPkgHasElem_Title

	XsdGoPkgHasElem_Titleabbrev

	XsdGoPkgHasElems_Tr

	XsdGoPkgHasAttr_Onmouseup_XsdtString_

	XsdGoPkgHasAttr_Cellpadding_XsdtString_

	XsdGoPkgHasAttr_Lang_XsdtString_

	XsdGoPkgHasAttr_Pgwide_TxsdTablePgwide_

	XsdGoPkgHasAttr_Colsep_TxsdTableColsep_

	XsdGoPkgHasAttr_Summary_XsdtString_

	XsdGoPkgHasElems_Col

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_Style_XsdtString_

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasAttr_Onclick_XsdtString_

	XsdGoPkgHasAttr_Border_XsdtNmtoken_

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Onmouseout_XsdtString_

	XsdGoPkgHasAttr_Onmousemove_XsdtString_

	XsdGoPkgHasAttr_Onmousedown_XsdtString_

	XsdGoPkgHasElems_Tbody

	XsdGoPkgHasElem_Tfoot

	XsdGoPkgHasAttr_Onkeypress_XsdtString_

	XsdGoPkgHasAttr_Tocentry_TxsdTableTocentry_

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAttr_Frame_TxsdTableFrame_

	XsdGoPkgHasElem_Thead

	XsdGoPkgHasAttr_Rowheader_TxsdTableRowheader_

	XsdGoPkgHasElems_Colgroup

	XsdGoPkgHasAttr_Onkeydown_XsdtString_

	XsdGoPkgHasElem_Caption

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Ondblclick_XsdtString_

	XsdGoPkgHasAttr_Shortentry_TxsdTableShortentry_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Floatstyle_XsdtString_

	XsdGoPkgHasAttr_Onkeyup_XsdtString_

	XsdGoPkgHasAttr_Onmouseover_XsdtString_

	XsdGoPkgHasAttr_Orient_TxsdTableOrient_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Width_XsdtString_

	XsdGoPkgHasAttr_Tabstyle_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Cellspacing_XsdtString_

}

//	If the WalkHandlers.TxsdTable function is not nil (ie. was set by outside code), calls it with this TxsdTable instance as the single argument. Then calls the Walk() method on 10/48 embed(s) and 0/0 field(s) belonging to this TxsdTable instance.
func (me *TxsdTable) Walk ()  { 
	if fn := WalkHandlers.TxsdTable; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Tbody.Walk()
	me.XsdGoPkgHasElem_Tfoot.Walk()
	me.XsdGoPkgHasElem_Thead.Walk()
	me.XsdGoPkgHasElems_Colgroup.Walk()
	me.XsdGoPkgHasElem_Caption.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Tgroup.Walk()
	me.XsdGoPkgHasElem_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Tr.Walk()
	me.XsdGoPkgHasElems_Col.Walk()
 }

type XsdGoPkgHasElems_Table struct {
	Tables []*TxsdTable `xml:"http://docbook.org/ns/docbook table"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Table function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Table instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Table instance.
func (me *XsdGoPkgHasElems_Table) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Table; fn != nil { fn(me) }
	for _, x := range me.Tables { x.Walk() }
 }

type XsdGoPkgHasAttr_Label_XsdtNmtoken_ struct {
	Label xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook label,attr"`

}

type TxsdFootnote struct {
	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Example

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasAttr_Label_XsdtNmtoken_

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Constraintdef

}

//	If the WalkHandlers.TxsdFootnote function is not nil (ie. was set by outside code), calls it with this TxsdFootnote instance as the single argument. Then calls the Walk() method on 46/59 embed(s) and 0/0 field(s) belonging to this TxsdFootnote instance.
func (me *TxsdFootnote) Walk ()  { 
	if fn := WalkHandlers.TxsdFootnote; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
 }

type XsdGoPkgHasElems_Footnote struct {
	Footnotes []*TxsdFootnote `xml:"http://docbook.org/ns/docbook footnote"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Footnote function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Footnote instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Footnote instance.
func (me *XsdGoPkgHasElems_Footnote) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Footnote; fn != nil { fn(me) }
	for _, x := range me.Footnotes { x.Walk() }
 }

type TxsdTermdef struct {
	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Baseform_XsdtString_

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasAttr_Sortas_XsdtString_

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Token

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Exceptionname

}

//	If the WalkHandlers.TxsdTermdef function is not nil (ie. was set by outside code), calls it with this TxsdTermdef instance as the single argument. Then calls the Walk() method on 82/104 embed(s) and 0/0 field(s) belonging to this TxsdTermdef instance.
func (me *TxsdTermdef) Walk ()  { 
	if fn := WalkHandlers.TxsdTermdef; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
 }

type XsdGoPkgHasElems_Termdef struct {
	Termdefs []*TxsdTermdef `xml:"http://docbook.org/ns/docbook termdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Termdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Termdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Termdef instance.
func (me *XsdGoPkgHasElems_Termdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Termdef; fn != nil { fn(me) }
	for _, x := range me.Termdefs { x.Walk() }
 }

type TxsdPhrase struct {
	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Nonterminal

}

//	If the WalkHandlers.TxsdPhrase function is not nil (ie. was set by outside code), calls it with this TxsdPhrase instance as the single argument. Then calls the Walk() method on 83/102 embed(s) and 0/0 field(s) belonging to this TxsdPhrase instance.
func (me *TxsdPhrase) Walk ()  { 
	if fn := WalkHandlers.TxsdPhrase; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Termdef.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
 }

type XsdGoPkgHasElems_Phrase struct {
	Phrases []*TxsdPhrase `xml:"http://docbook.org/ns/docbook phrase"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Phrase function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Phrase instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Phrase instance.
func (me *XsdGoPkgHasElems_Phrase) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Phrase; fn != nil { fn(me) }
	for _, x := range me.Phrases { x.Walk() }
 }

type TxsdSuperscript struct {
	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Inlinemediaobject

}

//	If the WalkHandlers.TxsdSuperscript function is not nil (ie. was set by outside code), calls it with this TxsdSuperscript instance as the single argument. Then calls the Walk() method on 5/18 embed(s) and 0/0 field(s) belonging to this TxsdSuperscript instance.
func (me *TxsdSuperscript) Walk ()  { 
	if fn := WalkHandlers.TxsdSuperscript; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
 }

type XsdGoPkgHasElems_Superscript struct {
	Superscripts []*TxsdSuperscript `xml:"http://docbook.org/ns/docbook superscript"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Superscript function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Superscript instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Superscript instance.
func (me *XsdGoPkgHasElems_Superscript) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Superscript; fn != nil { fn(me) }
	for _, x := range me.Superscripts { x.Walk() }
 }

type TxsdRemark struct {
	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasCdata

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Superscript

}

//	If the WalkHandlers.TxsdRemark function is not nil (ie. was set by outside code), calls it with this TxsdRemark instance as the single argument. Then calls the Walk() method on 6/18 embed(s) and 0/0 field(s) belonging to this TxsdRemark instance.
func (me *TxsdRemark) Walk ()  { 
	if fn := WalkHandlers.TxsdRemark; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
 }

type XsdGoPkgHasElems_Remark struct {
	Remarks []*TxsdRemark `xml:"http://docbook.org/ns/docbook remark"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Remark function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Remark instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Remark instance.
func (me *XsdGoPkgHasElems_Remark) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Remark; fn != nil { fn(me) }
	for _, x := range me.Remarks { x.Walk() }
 }

type TxsdReplaceableClass xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdReplaceableClass's alias type xsdt.Token.
func (me TxsdReplaceableClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdReplaceableClass is "function".
func (me TxsdReplaceableClass) IsFunction () bool { return me == "function" }

//	Returns true if the value of this enumerated TxsdReplaceableClass is "option".
func (me TxsdReplaceableClass) IsOption () bool { return me == "option" }

//	Returns true if the value of this enumerated TxsdReplaceableClass is "parameter".
func (me TxsdReplaceableClass) IsParameter () bool { return me == "parameter" }

//	Since TxsdReplaceableClass is just a simple String type, this merely returns the current string value.
func (me TxsdReplaceableClass) String () string { return xsdt.Token(me).String() }

//	Since TxsdReplaceableClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdReplaceableClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdReplaceableClass is "command".
func (me TxsdReplaceableClass) IsCommand () bool { return me == "command" }

type XsdGoPkgHasAttr_Class_TxsdReplaceableClass_ struct {
	Class TxsdReplaceableClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdReplaceable struct {
	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Co

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAttr_Class_TxsdReplaceableClass_

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Link

}

//	If the WalkHandlers.TxsdReplaceable function is not nil (ie. was set by outside code), calls it with this TxsdReplaceable instance as the single argument. Then calls the Walk() method on 8/20 embed(s) and 0/0 field(s) belonging to this TxsdReplaceable instance.
func (me *TxsdReplaceable) Walk ()  { 
	if fn := WalkHandlers.TxsdReplaceable; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Co.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElems_Replaceable struct {
	Replaceables []*TxsdReplaceable `xml:"http://docbook.org/ns/docbook replaceable"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Replaceable function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Replaceable instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Replaceable instance.
func (me *XsdGoPkgHasElems_Replaceable) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Replaceable; fn != nil { fn(me) }
	for _, x := range me.Replaceables { x.Walk() }
 }

type TxsdSubscript struct {
	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdSubscript function is not nil (ie. was set by outside code), calls it with this TxsdSubscript instance as the single argument. Then calls the Walk() method on 8/18 embed(s) and 0/0 field(s) belonging to this TxsdSubscript instance.
func (me *TxsdSubscript) Walk ()  { 
	if fn := WalkHandlers.TxsdSubscript; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
 }

type XsdGoPkgHasElems_Subscript struct {
	Subscripts []*TxsdSubscript `xml:"http://docbook.org/ns/docbook subscript"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Subscript function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Subscript instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Subscript instance.
func (me *XsdGoPkgHasElems_Subscript) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Subscript; fn != nil { fn(me) }
	for _, x := range me.Subscripts { x.Walk() }
 }

type TxsdFunction struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Superscript

}

//	If the WalkHandlers.TxsdFunction function is not nil (ie. was set by outside code), calls it with this TxsdFunction instance as the single argument. Then calls the Walk() method on 9/18 embed(s) and 0/0 field(s) belonging to this TxsdFunction instance.
func (me *TxsdFunction) Walk ()  { 
	if fn := WalkHandlers.TxsdFunction; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
 }

type XsdGoPkgHasElems_Function struct {
	Functions []*TxsdFunction `xml:"http://docbook.org/ns/docbook function"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Function function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Function instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Function instance.
func (me *XsdGoPkgHasElems_Function) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Function; fn != nil { fn(me) }
	for _, x := range me.Functions { x.Walk() }
 }

type TxsdSecondary struct {
	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasAttr_Sortas_XsdtString_

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Replaceable

}

//	If the WalkHandlers.TxsdSecondary function is not nil (ie. was set by outside code), calls it with this TxsdSecondary instance as the single argument. Then calls the Walk() method on 89/103 embed(s) and 0/0 field(s) belonging to this TxsdSecondary instance.
func (me *TxsdSecondary) Walk ()  { 
	if fn := WalkHandlers.TxsdSecondary; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Function.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Termdef.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
 }

type XsdGoPkgHasElem_Secondary struct {
	Secondary *TxsdSecondary `xml:"http://docbook.org/ns/docbook secondary"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Secondary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Secondary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Secondary instance.
func (me *XsdGoPkgHasElem_Secondary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Secondary; fn != nil { fn(me) }
	me.Secondary.Walk()
 }

type XsdGoPkgHasAttr_Startref_XsdtIdref_ struct {
	Startref xsdt.Idref `xml:"http://docbook.org/ns/docbook startref,attr"`

}

type XsdGoPkgHasAttr_Type_XsdtString_ struct {
	Type xsdt.String `xml:"http://docbook.org/ns/docbook type,attr"`

}

type XsdGoPkgHasElems_Seealso struct {
	Seealsos []*TxsdPhrase `xml:"http://docbook.org/ns/docbook seealso"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Seealso function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Seealso instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Seealso instance.
func (me *XsdGoPkgHasElems_Seealso) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Seealso; fn != nil { fn(me) }
	for _, x := range me.Seealsos { x.Walk() }
 }

type TxsdIndextermClass xsdt.Token

//	Returns true if the value of this enumerated TxsdIndextermClass is "endofrange".
func (me TxsdIndextermClass) IsEndofrange () bool { return me == "endofrange" }

//	This convenience method just performs a simple type conversion to TxsdIndextermClass's alias type xsdt.Token.
func (me TxsdIndextermClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdIndextermClass is "singular".
func (me TxsdIndextermClass) IsSingular () bool { return me == "singular" }

//	Since TxsdIndextermClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdIndextermClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdIndextermClass is "startofrange".
func (me TxsdIndextermClass) IsStartofrange () bool { return me == "startofrange" }

//	Since TxsdIndextermClass is just a simple String type, this merely returns the current string value.
func (me TxsdIndextermClass) String () string { return xsdt.Token(me).String() }

type XsdGoPkgHasAttr_Class_TxsdIndextermClass_ struct {
	Class TxsdIndextermClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type XsdGoPkgHasElem_Primary struct {
	Primary *TxsdSecondary `xml:"http://docbook.org/ns/docbook primary"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Primary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Primary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Primary instance.
func (me *XsdGoPkgHasElem_Primary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Primary; fn != nil { fn(me) }
	me.Primary.Walk()
 }

type XsdGoPkgHasElem_See struct {
	See *TxsdPhrase `xml:"http://docbook.org/ns/docbook see"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_See function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_See instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_See instance.
func (me *XsdGoPkgHasElem_See) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_See; fn != nil { fn(me) }
	me.See.Walk()
 }

type XsdGoPkgHasElem_Tertiary struct {
	Tertiary *TxsdSecondary `xml:"http://docbook.org/ns/docbook tertiary"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tertiary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tertiary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tertiary instance.
func (me *XsdGoPkgHasElem_Tertiary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tertiary; fn != nil { fn(me) }
	me.Tertiary.Walk()
 }

type TxsdIndextermSignificance xsdt.Token

//	This convenience method just performs a simple type conversion to TxsdIndextermSignificance's alias type xsdt.Token.
func (me TxsdIndextermSignificance) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdIndextermSignificance is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdIndextermSignificance) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdIndextermSignificance is "normal".
func (me TxsdIndextermSignificance) IsNormal () bool { return me == "normal" }

//	Returns true if the value of this enumerated TxsdIndextermSignificance is "preferred".
func (me TxsdIndextermSignificance) IsPreferred () bool { return me == "preferred" }

//	Since TxsdIndextermSignificance is just a simple String type, this merely returns the current string value.
func (me TxsdIndextermSignificance) String () string { return xsdt.Token(me).String() }

type XsdGoPkgHasAttr_Significance_TxsdIndextermSignificance_ struct {
	Significance TxsdIndextermSignificance `xml:"http://docbook.org/ns/docbook significance,attr"`

}

type TxsdIndextermScope xsdt.Token

//	Since TxsdIndextermScope is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdIndextermScope) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdIndextermScope is "local".
func (me TxsdIndextermScope) IsLocal () bool { return me == "local" }

//	Returns true if the value of this enumerated TxsdIndextermScope is "global".
func (me TxsdIndextermScope) IsGlobal () bool { return me == "global" }

//	Since TxsdIndextermScope is just a simple String type, this merely returns the current string value.
func (me TxsdIndextermScope) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdIndextermScope's alias type xsdt.Token.
func (me TxsdIndextermScope) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdIndextermScope is "all".
func (me TxsdIndextermScope) IsAll () bool { return me == "all" }

type XsdGoPkgHasAttr_Scope_TxsdIndextermScope_ struct {
	Scope TxsdIndextermScope `xml:"http://docbook.org/ns/docbook scope,attr"`

}

type XsdGoPkgHasAttr_Zone_XsdtIdrefs_ struct {
	Zone xsdt.Idrefs `xml:"http://docbook.org/ns/docbook zone,attr"`

}

type XsdGoPkgHasAttr_Pagenum_XsdtString_ struct {
	Pagenum xsdt.String `xml:"http://docbook.org/ns/docbook pagenum,attr"`

}

type TxsdIndexterm struct {
	XsdGoPkgHasElem_Secondary

	XsdGoPkgHasAttr_Startref_XsdtIdref_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Type_XsdtString_

	XsdGoPkgHasElems_Seealso

	XsdGoPkgHasAttr_Class_TxsdIndextermClass_

	XsdGoPkgHasElem_Primary

	XsdGoPkgHasElem_See

	XsdGoPkgHasElem_Tertiary

	XsdGoPkgHasAttr_Significance_TxsdIndextermSignificance_

	XsdGoPkgHasAttr_Scope_TxsdIndextermScope_

	XsdGoPkgHasAttr_Zone_XsdtIdrefs_

	XsdGoPkgHasAttr_Pagenum_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

}

//	If the WalkHandlers.TxsdIndexterm function is not nil (ie. was set by outside code), calls it with this TxsdIndexterm instance as the single argument. Then calls the Walk() method on 5/15 embed(s) and 0/0 field(s) belonging to this TxsdIndexterm instance.
func (me *TxsdIndexterm) Walk ()  { 
	if fn := WalkHandlers.TxsdIndexterm; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Secondary.Walk()
	me.XsdGoPkgHasElems_Seealso.Walk()
	me.XsdGoPkgHasElem_Primary.Walk()
	me.XsdGoPkgHasElem_See.Walk()
	me.XsdGoPkgHasElem_Tertiary.Walk()
 }

type XsdGoPkgHasElems_Indexterm struct {
	Indexterms []*TxsdIndexterm `xml:"http://docbook.org/ns/docbook indexterm"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Indexterm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Indexterm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Indexterm instance.
func (me *XsdGoPkgHasElems_Indexterm) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Indexterm; fn != nil { fn(me) }
	for _, x := range me.Indexterms { x.Walk() }
 }

type TxsdAttribution struct {
	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Citation

}

//	If the WalkHandlers.TxsdAttribution function is not nil (ie. was set by outside code), calls it with this TxsdAttribution instance as the single argument. Then calls the Walk() method on 14/22 embed(s) and 0/0 field(s) belonging to this TxsdAttribution instance.
func (me *TxsdAttribution) Walk ()  { 
	if fn := WalkHandlers.TxsdAttribution; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
 }

type XsdGoPkgHasElem_Attribution struct {
	Attribution *TxsdAttribution `xml:"http://docbook.org/ns/docbook attribution"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Attribution function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Attribution instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Attribution instance.
func (me *XsdGoPkgHasElem_Attribution) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Attribution; fn != nil { fn(me) }
	me.Attribution.Walk()
 }

type TxsdBlockquote struct {
	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElem_Attribution

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdBlockquote function is not nil (ie. was set by outside code), calls it with this TxsdBlockquote instance as the single argument. Then calls the Walk() method on 51/62 embed(s) and 0/0 field(s) belonging to this TxsdBlockquote instance.
func (me *TxsdBlockquote) Walk ()  { 
	if fn := WalkHandlers.TxsdBlockquote; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElem_Attribution.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
 }

type XsdGoPkgHasElems_Blockquote struct {
	Blockquotes []*TxsdBlockquote `xml:"http://docbook.org/ns/docbook blockquote"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Blockquote function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Blockquote instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Blockquote instance.
func (me *XsdGoPkgHasElems_Blockquote) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Blockquote; fn != nil { fn(me) }
	for _, x := range me.Blockquotes { x.Walk() }
 }

type XsdGoPkgHasElems_Volumenum struct {
	Volumenums []*TxsdFunction `xml:"http://docbook.org/ns/docbook volumenum"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Volumenum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Volumenum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Volumenum instance.
func (me *XsdGoPkgHasElems_Volumenum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Volumenum; fn != nil { fn(me) }
	for _, x := range me.Volumenums { x.Walk() }
 }

type XsdGoPkgHasElem_Publishername struct {
	Publishername *TxsdFunction `xml:"http://docbook.org/ns/docbook publishername"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Publishername function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Publishername instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Publishername instance.
func (me *XsdGoPkgHasElem_Publishername) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Publishername; fn != nil { fn(me) }
	me.Publishername.Walk()
 }

type TxsdPublisher struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElem_Publishername

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdPublisher function is not nil (ie. was set by outside code), calls it with this TxsdPublisher instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TxsdPublisher instance.
func (me *TxsdPublisher) Walk ()  { 
	if fn := WalkHandlers.TxsdPublisher; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElem_Publishername.Walk()
 }

type XsdGoPkgHasElems_Publisher struct {
	Publishers []*TxsdPublisher `xml:"http://docbook.org/ns/docbook publisher"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Publisher function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Publisher instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Publisher instance.
func (me *XsdGoPkgHasElems_Publisher) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Publisher; fn != nil { fn(me) }
	for _, x := range me.Publishers { x.Walk() }
 }

type XsdGoPkgHasElems_Issuenum struct {
	Issuenums []*TxsdFunction `xml:"http://docbook.org/ns/docbook issuenum"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Issuenum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Issuenum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Issuenum instance.
func (me *XsdGoPkgHasElems_Issuenum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Issuenum; fn != nil { fn(me) }
	for _, x := range me.Issuenums { x.Walk() }
 }

type TxsdPrinthistory struct {
	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Para

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdPrinthistory function is not nil (ie. was set by outside code), calls it with this TxsdPrinthistory instance as the single argument. Then calls the Walk() method on 3/7 embed(s) and 0/0 field(s) belonging to this TxsdPrinthistory instance.
func (me *TxsdPrinthistory) Walk ()  { 
	if fn := WalkHandlers.TxsdPrinthistory; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
 }

type XsdGoPkgHasElems_Printhistory struct {
	Printhistories []*TxsdPrinthistory `xml:"http://docbook.org/ns/docbook printhistory"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Printhistory function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Printhistory instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Printhistory instance.
func (me *XsdGoPkgHasElems_Printhistory) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Printhistory; fn != nil { fn(me) }
	for _, x := range me.Printhistories { x.Walk() }
 }

type XsdGoPkgHasElems_Releaseinfo struct {
	Releaseinfos []*TxsdFunction `xml:"http://docbook.org/ns/docbook releaseinfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Releaseinfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Releaseinfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Releaseinfo instance.
func (me *XsdGoPkgHasElems_Releaseinfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Releaseinfo; fn != nil { fn(me) }
	for _, x := range me.Releaseinfos { x.Walk() }
 }

type TxsdLocator struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	xlink.XsdGoPkgHasAttr_Label

}

//	If the WalkHandlers.TxsdLocator function is not nil (ie. was set by outside code), calls it with this TxsdLocator instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdLocator instance.
func (me *TxsdLocator) Walk ()  { 
	if fn := WalkHandlers.TxsdLocator; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Locator struct {
	Locators []*TxsdLocator `xml:"http://docbook.org/ns/docbook locator"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Locator function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Locator instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Locator instance.
func (me *XsdGoPkgHasElems_Locator) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Locator; fn != nil { fn(me) }
	for _, x := range me.Locators { x.Walk() }
 }

type TxsdArc struct {
	xlink.XsdGoPkgHasAttr_From

	XsdGoPkgHasAtts_DbCommonAttributes

	xlink.XsdGoPkgHasAttr_To

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdArc function is not nil (ie. was set by outside code), calls it with this TxsdArc instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TxsdArc instance.
func (me *TxsdArc) Walk ()  { 
	if fn := WalkHandlers.TxsdArc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_Arc struct {
	Arcs []*TxsdArc `xml:"http://docbook.org/ns/docbook arc"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Arc function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Arc instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Arc instance.
func (me *XsdGoPkgHasElems_Arc) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Arc; fn != nil { fn(me) }
	for _, x := range me.Arcs { x.Walk() }
 }

type TxsdExtendedlink struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Locator

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Arc

}

//	If the WalkHandlers.TxsdExtendedlink function is not nil (ie. was set by outside code), calls it with this TxsdExtendedlink instance as the single argument. Then calls the Walk() method on 2/4 embed(s) and 0/0 field(s) belonging to this TxsdExtendedlink instance.
func (me *TxsdExtendedlink) Walk ()  { 
	if fn := WalkHandlers.TxsdExtendedlink; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Locator.Walk()
	me.XsdGoPkgHasElems_Arc.Walk()
 }

type XsdGoPkgHasElems_Extendedlink struct {
	Extendedlinks []*TxsdExtendedlink `xml:"http://docbook.org/ns/docbook extendedlink"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Extendedlink function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Extendedlink instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Extendedlink instance.
func (me *XsdGoPkgHasElems_Extendedlink) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Extendedlink; fn != nil { fn(me) }
	for _, x := range me.Extendedlinks { x.Walk() }
 }

type XsdGoPkgHasAttr_Class_TxsdBibliosourceClass_ struct {
	Class TxsdCitebiblioidClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdBibliosource struct {
	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Otherclass_XsdtNmtoken_

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Class_TxsdBibliosourceClass_

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Replaceable

}

//	If the WalkHandlers.TxsdBibliosource function is not nil (ie. was set by outside code), calls it with this TxsdBibliosource instance as the single argument. Then calls the Walk() method on 10/20 embed(s) and 0/0 field(s) belonging to this TxsdBibliosource instance.
func (me *TxsdBibliosource) Walk ()  { 
	if fn := WalkHandlers.TxsdBibliosource; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
 }

type XsdGoPkgHasElems_Bibliosource struct {
	Bibliosources []*TxsdBibliosource `xml:"http://docbook.org/ns/docbook bibliosource"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliosource function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliosource instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliosource instance.
func (me *XsdGoPkgHasElems_Bibliosource) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliosource; fn != nil { fn(me) }
	for _, x := range me.Bibliosources { x.Walk() }
 }

type XsdGoPkgHasElems_Seriesvolnums struct {
	Seriesvolnumses []*TxsdFunction `xml:"http://docbook.org/ns/docbook seriesvolnums"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Seriesvolnums function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Seriesvolnums instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Seriesvolnums instance.
func (me *XsdGoPkgHasElems_Seriesvolnums) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Seriesvolnums; fn != nil { fn(me) }
	for _, x := range me.Seriesvolnumses { x.Walk() }
 }

type XsdGoPkgHasElems_Legalnotice struct {
	Legalnotices []*TxsdConstraintdef `xml:"http://docbook.org/ns/docbook legalnotice"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Legalnotice function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Legalnotice instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Legalnotice instance.
func (me *XsdGoPkgHasElems_Legalnotice) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Legalnotice; fn != nil { fn(me) }
	for _, x := range me.Legalnotices { x.Walk() }
 }

type XsdGoPkgHasAttr_Class_TxsdBiblioidClass_ struct {
	Class TxsdCitebiblioidClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdBiblioid struct {
	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAttr_Otherclass_XsdtNmtoken_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Class_TxsdBiblioidClass_

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdBiblioid function is not nil (ie. was set by outside code), calls it with this TxsdBiblioid instance as the single argument. Then calls the Walk() method on 10/20 embed(s) and 0/0 field(s) belonging to this TxsdBiblioid instance.
func (me *TxsdBiblioid) Walk ()  { 
	if fn := WalkHandlers.TxsdBiblioid; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Biblioid struct {
	Biblioids []*TxsdBiblioid `xml:"http://docbook.org/ns/docbook biblioid"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Biblioid function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Biblioid instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Biblioid instance.
func (me *XsdGoPkgHasElems_Biblioid) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Biblioid; fn != nil { fn(me) }
	for _, x := range me.Biblioids { x.Walk() }
 }

type XsdGoPkgHasElems_Contractsponsor struct {
	Contractsponsors []*TxsdFunction `xml:"http://docbook.org/ns/docbook contractsponsor"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Contractsponsor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Contractsponsor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Contractsponsor instance.
func (me *XsdGoPkgHasElems_Contractsponsor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Contractsponsor; fn != nil { fn(me) }
	for _, x := range me.Contractsponsors { x.Walk() }
 }

type XsdGoPkgHasElems_Contractnum struct {
	Contractnums []*TxsdFunction `xml:"http://docbook.org/ns/docbook contractnum"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Contractnum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Contractnum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Contractnum instance.
func (me *XsdGoPkgHasElems_Contractnum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Contractnum; fn != nil { fn(me) }
	for _, x := range me.Contractnums { x.Walk() }
 }

type XsdGoPkgHasAttr_Weight_XsdtString_ struct {
	Weight xsdt.String `xml:"http://docbook.org/ns/docbook weight,attr"`

}

type XsdGoPkgHasElems_Subjectterm struct {
	Subjectterms []*TxsdDate `xml:"http://docbook.org/ns/docbook subjectterm"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Subjectterm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Subjectterm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Subjectterm instance.
func (me *XsdGoPkgHasElems_Subjectterm) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Subjectterm; fn != nil { fn(me) }
	for _, x := range me.Subjectterms { x.Walk() }
 }

type TxsdSubject struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Subjectterm

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Weight_XsdtString_

}

//	If the WalkHandlers.TxsdSubject function is not nil (ie. was set by outside code), calls it with this TxsdSubject instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TxsdSubject instance.
func (me *TxsdSubject) Walk ()  { 
	if fn := WalkHandlers.TxsdSubject; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Subjectterm.Walk()
 }

type XsdGoPkgHasElems_Subject struct {
	Subjects []*TxsdSubject `xml:"http://docbook.org/ns/docbook subject"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Subject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Subject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Subject instance.
func (me *XsdGoPkgHasElems_Subject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Subject; fn != nil { fn(me) }
	for _, x := range me.Subjects { x.Walk() }
 }

type XsdGoPkgHasAttr_Scheme_XsdtNmtoken_ struct {
	Scheme xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook scheme,attr"`

}

type TxsdSubjectset struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Subject

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Scheme_XsdtNmtoken_

}

//	If the WalkHandlers.TxsdSubjectset function is not nil (ie. was set by outside code), calls it with this TxsdSubjectset instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TxsdSubjectset instance.
func (me *TxsdSubjectset) Walk ()  { 
	if fn := WalkHandlers.TxsdSubjectset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Subject.Walk()
 }

type XsdGoPkgHasElems_Subjectset struct {
	Subjectsets []*TxsdSubjectset `xml:"http://docbook.org/ns/docbook subjectset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Subjectset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Subjectset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Subjectset instance.
func (me *XsdGoPkgHasElems_Subjectset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Subjectset; fn != nil { fn(me) }
	for _, x := range me.Subjectsets { x.Walk() }
 }

type TxsdOthercreditClass xsdt.Token

//	Returns true if the value of this enumerated TxsdOthercreditClass is "productioneditor".
func (me TxsdOthercreditClass) IsProductioneditor () bool { return me == "productioneditor" }

//	Since TxsdOthercreditClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdOthercreditClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TxsdOthercreditClass's alias type xsdt.Token.
func (me TxsdOthercreditClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdOthercreditClass is "technicaleditor".
func (me TxsdOthercreditClass) IsTechnicaleditor () bool { return me == "technicaleditor" }

//	Returns true if the value of this enumerated TxsdOthercreditClass is "translator".
func (me TxsdOthercreditClass) IsTranslator () bool { return me == "translator" }

//	Returns true if the value of this enumerated TxsdOthercreditClass is "other".
func (me TxsdOthercreditClass) IsOther () bool { return me == "other" }

//	Returns true if the value of this enumerated TxsdOthercreditClass is "graphicdesigner".
func (me TxsdOthercreditClass) IsGraphicdesigner () bool { return me == "graphicdesigner" }

//	Since TxsdOthercreditClass is just a simple String type, this merely returns the current string value.
func (me TxsdOthercreditClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdOthercreditClass is "copyeditor".
func (me TxsdOthercreditClass) IsCopyeditor () bool { return me == "copyeditor" }

type XsdGoPkgHasAttr_Class_TxsdOthercreditClass_ struct {
	Class TxsdOthercreditClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdOthercredit struct {
	XsdGoPkgHasElem_Orgname

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Contrib

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Orgdiv

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Affiliation

	XsdGoPkgHasAttr_Otherclass_XsdtNmtoken_

	XsdGoPkgHasElems_Personblurb

	XsdGoPkgHasElem_Personname

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Class_TxsdOthercreditClass_

}

//	If the WalkHandlers.TxsdOthercredit function is not nil (ie. was set by outside code), calls it with this TxsdOthercredit instance as the single argument. Then calls the Walk() method on 7/14 embed(s) and 0/0 field(s) belonging to this TxsdOthercredit instance.
func (me *TxsdOthercredit) Walk ()  { 
	if fn := WalkHandlers.TxsdOthercredit; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Orgname.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Orgdiv.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Affiliation.Walk()
	me.XsdGoPkgHasElems_Personblurb.Walk()
	me.XsdGoPkgHasElem_Personname.Walk()
 }

type XsdGoPkgHasElems_Othercredit struct {
	Othercredits []*TxsdOthercredit `xml:"http://docbook.org/ns/docbook othercredit"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Othercredit function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Othercredit instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Othercredit instance.
func (me *XsdGoPkgHasElems_Othercredit) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Othercredit; fn != nil { fn(me) }
	for _, x := range me.Othercredits { x.Walk() }
 }

type TxsdAuthorgroup struct {
	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Author

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Othercredit

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdAuthorgroup function is not nil (ie. was set by outside code), calls it with this TxsdAuthorgroup instance as the single argument. Then calls the Walk() method on 2/6 embed(s) and 0/0 field(s) belonging to this TxsdAuthorgroup instance.
func (me *TxsdAuthorgroup) Walk ()  { 
	if fn := WalkHandlers.TxsdAuthorgroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Othercredit.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
 }

type XsdGoPkgHasElems_Authorgroup struct {
	Authorgroups []*TxsdAuthorgroup `xml:"http://docbook.org/ns/docbook authorgroup"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Authorgroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Authorgroup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Authorgroup instance.
func (me *XsdGoPkgHasElems_Authorgroup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Authorgroup; fn != nil { fn(me) }
	for _, x := range me.Authorgroups { x.Walk() }
 }

type TxsdBibliorelationType xsdt.Token

//	Returns true if the value of this enumerated TxsdBibliorelationType is "hasversion".
func (me TxsdBibliorelationType) IsHasversion () bool { return me == "hasversion" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "references".
func (me TxsdBibliorelationType) IsReferences () bool { return me == "references" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "isformatof".
func (me TxsdBibliorelationType) IsIsformatof () bool { return me == "isformatof" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "isrequiredby".
func (me TxsdBibliorelationType) IsIsrequiredby () bool { return me == "isrequiredby" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "requires".
func (me TxsdBibliorelationType) IsRequires () bool { return me == "requires" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "replaces".
func (me TxsdBibliorelationType) IsReplaces () bool { return me == "replaces" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "ispartof".
func (me TxsdBibliorelationType) IsIspartof () bool { return me == "ispartof" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "isversionof".
func (me TxsdBibliorelationType) IsIsversionof () bool { return me == "isversionof" }

//	Since TxsdBibliorelationType is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdBibliorelationType) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TxsdBibliorelationType's alias type xsdt.Token.
func (me TxsdBibliorelationType) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "hasformat".
func (me TxsdBibliorelationType) IsHasformat () bool { return me == "hasformat" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "othertype".
func (me TxsdBibliorelationType) IsOthertype () bool { return me == "othertype" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "haspart".
func (me TxsdBibliorelationType) IsHaspart () bool { return me == "haspart" }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "isreplacedby".
func (me TxsdBibliorelationType) IsIsreplacedby () bool { return me == "isreplacedby" }

//	Since TxsdBibliorelationType is just a simple String type, this merely returns the current string value.
func (me TxsdBibliorelationType) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdBibliorelationType is "isreferencedby".
func (me TxsdBibliorelationType) IsIsreferencedby () bool { return me == "isreferencedby" }

type XsdGoPkgHasAttr_Type_TxsdBibliorelationType_ struct {
	Type TxsdBibliorelationType `xml:"http://docbook.org/ns/docbook type,attr"`

}

type XsdGoPkgHasAttr_Class_TxsdBibliorelationClass_ struct {
	Class TxsdCitebiblioidClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type XsdGoPkgHasAttr_Othertype_XsdtNmtoken_ struct {
	Othertype xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook othertype,attr"`

}

type TxsdBibliorelation struct {
	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Otherclass_XsdtNmtoken_

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasAttr_Class_TxsdBibliorelationClass_

	XsdGoPkgHasAttr_Othertype_XsdtNmtoken_

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Type_TxsdBibliorelationType_

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdBibliorelation function is not nil (ie. was set by outside code), calls it with this TxsdBibliorelation instance as the single argument. Then calls the Walk() method on 10/22 embed(s) and 0/0 field(s) belonging to this TxsdBibliorelation instance.
func (me *TxsdBibliorelation) Walk ()  { 
	if fn := WalkHandlers.TxsdBibliorelation; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Bibliorelation struct {
	Bibliorelations []*TxsdBibliorelation `xml:"http://docbook.org/ns/docbook bibliorelation"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliorelation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliorelation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliorelation instance.
func (me *XsdGoPkgHasElems_Bibliorelation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliorelation; fn != nil { fn(me) }
	for _, x := range me.Bibliorelations { x.Walk() }
 }

type XsdGoPkgHasElems_Publishername struct {
	Publishernames []*TxsdFunction `xml:"http://docbook.org/ns/docbook publishername"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Publishername function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Publishername instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Publishername instance.
func (me *XsdGoPkgHasElems_Publishername) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Publishername; fn != nil { fn(me) }
	for _, x := range me.Publishernames { x.Walk() }
 }

type XsdGoPkgHasElems_Pagenums struct {
	Pagenumses []*TxsdFunction `xml:"http://docbook.org/ns/docbook pagenums"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Pagenums function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Pagenums instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Pagenums instance.
func (me *XsdGoPkgHasElems_Pagenums) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Pagenums; fn != nil { fn(me) }
	for _, x := range me.Pagenumses { x.Walk() }
 }

type TxsdItermset struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdItermset function is not nil (ie. was set by outside code), calls it with this TxsdItermset instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TxsdItermset instance.
func (me *TxsdItermset) Walk ()  { 
	if fn := WalkHandlers.TxsdItermset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Indexterm.Walk()
 }

type XsdGoPkgHasElems_Itermset struct {
	Itermsets []*TxsdItermset `xml:"http://docbook.org/ns/docbook itermset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Itermset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Itermset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Itermset instance.
func (me *XsdGoPkgHasElems_Itermset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Itermset; fn != nil { fn(me) }
	for _, x := range me.Itermsets { x.Walk() }
 }

type TxsdBibliocoverageSpatial xsdt.Token

//	Returns true if the value of this enumerated TxsdBibliocoverageSpatial is "otherspatial".
func (me TxsdBibliocoverageSpatial) IsOtherspatial () bool { return me == "otherspatial" }

//	Since TxsdBibliocoverageSpatial is just a simple String type, this merely returns the current string value.
func (me TxsdBibliocoverageSpatial) String () string { return xsdt.Token(me).String() }

//	Since TxsdBibliocoverageSpatial is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdBibliocoverageSpatial) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdBibliocoverageSpatial is "dcmipoint".
func (me TxsdBibliocoverageSpatial) IsDcmipoint () bool { return me == "dcmipoint" }

//	Returns true if the value of this enumerated TxsdBibliocoverageSpatial is "dcmibox".
func (me TxsdBibliocoverageSpatial) IsDcmibox () bool { return me == "dcmibox" }

//	Returns true if the value of this enumerated TxsdBibliocoverageSpatial is "tgn".
func (me TxsdBibliocoverageSpatial) IsTgn () bool { return me == "tgn" }

//	Returns true if the value of this enumerated TxsdBibliocoverageSpatial is "iso3166".
func (me TxsdBibliocoverageSpatial) IsIso3166 () bool { return me == "iso3166" }

//	This convenience method just performs a simple type conversion to TxsdBibliocoverageSpatial's alias type xsdt.Token.
func (me TxsdBibliocoverageSpatial) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Spatial_TxsdBibliocoverageSpatial_ struct {
	Spatial TxsdBibliocoverageSpatial `xml:"http://docbook.org/ns/docbook spatial,attr"`

}

type XsdGoPkgHasAttr_Othertemporal_XsdtNmtoken_ struct {
	Othertemporal xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook othertemporal,attr"`

}

type TxsdBibliocoverageTemporal xsdt.Token

//	Since TxsdBibliocoverageTemporal is just a simple String type, this merely returns the current string value.
func (me TxsdBibliocoverageTemporal) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TxsdBibliocoverageTemporal's alias type xsdt.Token.
func (me TxsdBibliocoverageTemporal) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TxsdBibliocoverageTemporal is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdBibliocoverageTemporal) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdBibliocoverageTemporal is "othertemporal".
func (me TxsdBibliocoverageTemporal) IsOthertemporal () bool { return me == "othertemporal" }

//	Returns true if the value of this enumerated TxsdBibliocoverageTemporal is "w3c-dtf".
func (me TxsdBibliocoverageTemporal) IsW3CDtf () bool { return me == "w3c-dtf" }

//	Returns true if the value of this enumerated TxsdBibliocoverageTemporal is "dcmiperiod".
func (me TxsdBibliocoverageTemporal) IsDcmiperiod () bool { return me == "dcmiperiod" }

type XsdGoPkgHasAttr_Temporal_TxsdBibliocoverageTemporal_ struct {
	Temporal TxsdBibliocoverageTemporal `xml:"http://docbook.org/ns/docbook temporal,attr"`

}

type XsdGoPkgHasAttr_Otherspatial_XsdtNmtoken_ struct {
	Otherspatial xsdt.Nmtoken `xml:"http://docbook.org/ns/docbook otherspatial,attr"`

}

type TxsdBibliocoverage struct {
	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Spatial_TxsdBibliocoverageSpatial_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Othertemporal_XsdtNmtoken_

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Temporal_TxsdBibliocoverageTemporal_

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAttr_Otherspatial_XsdtNmtoken_

	XsdGoPkgHasElems_Biblioref

}

//	If the WalkHandlers.TxsdBibliocoverage function is not nil (ie. was set by outside code), calls it with this TxsdBibliocoverage instance as the single argument. Then calls the Walk() method on 10/22 embed(s) and 0/0 field(s) belonging to this TxsdBibliocoverage instance.
func (me *TxsdBibliocoverage) Walk ()  { 
	if fn := WalkHandlers.TxsdBibliocoverage; fn != nil { fn(me) }
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
 }

type XsdGoPkgHasElems_Bibliocoverage struct {
	Bibliocoverages []*TxsdBibliocoverage `xml:"http://docbook.org/ns/docbook bibliocoverage"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliocoverage function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliocoverage instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliocoverage instance.
func (me *XsdGoPkgHasElems_Bibliocoverage) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliocoverage; fn != nil { fn(me) }
	for _, x := range me.Bibliocoverages { x.Walk() }
 }

type TxsdCover struct {
	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Programlistingco

}

//	If the WalkHandlers.TxsdCover function is not nil (ie. was set by outside code), calls it with this TxsdCover instance as the single argument. Then calls the Walk() method on 40/47 embed(s) and 0/0 field(s) belonging to this TxsdCover instance.
func (me *TxsdCover) Walk ()  { 
	if fn := WalkHandlers.TxsdCover; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
 }

type XsdGoPkgHasElems_Cover struct {
	Covers []*TxsdCover `xml:"http://docbook.org/ns/docbook cover"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Cover function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Cover instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Cover instance.
func (me *XsdGoPkgHasElems_Cover) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Cover; fn != nil { fn(me) }
	for _, x := range me.Covers { x.Walk() }
 }

type XsdGoPkgHasElems_Year struct {
	Years []*TxsdFunction `xml:"http://docbook.org/ns/docbook year"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Year function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Year instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Year instance.
func (me *XsdGoPkgHasElems_Year) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Year; fn != nil { fn(me) }
	for _, x := range me.Years { x.Walk() }
 }

type XsdGoPkgHasElems_Holder struct {
	Holders []*TxsdFunction `xml:"http://docbook.org/ns/docbook holder"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Holder function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Holder instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Holder instance.
func (me *XsdGoPkgHasElems_Holder) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Holder; fn != nil { fn(me) }
	for _, x := range me.Holders { x.Walk() }
 }

type TxsdCopyright struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Holder

	XsdGoPkgHasElems_Year

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdCopyright function is not nil (ie. was set by outside code), calls it with this TxsdCopyright instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TxsdCopyright instance.
func (me *TxsdCopyright) Walk ()  { 
	if fn := WalkHandlers.TxsdCopyright; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Holder.Walk()
	me.XsdGoPkgHasElems_Year.Walk()
 }

type XsdGoPkgHasElems_Copyright struct {
	Copyrights []*TxsdCopyright `xml:"http://docbook.org/ns/docbook copyright"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Copyright function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Copyright instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Copyright instance.
func (me *XsdGoPkgHasElems_Copyright) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Copyright; fn != nil { fn(me) }
	for _, x := range me.Copyrights { x.Walk() }
 }

type XsdGoPkgHasElems_Confdates struct {
	Confdateses []*TxsdFunction `xml:"http://docbook.org/ns/docbook confdates"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Confdates function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Confdates instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Confdates instance.
func (me *XsdGoPkgHasElems_Confdates) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Confdates; fn != nil { fn(me) }
	for _, x := range me.Confdateses { x.Walk() }
 }

type XsdGoPkgHasElems_Confnum struct {
	Confnums []*TxsdFunction `xml:"http://docbook.org/ns/docbook confnum"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Confnum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Confnum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Confnum instance.
func (me *XsdGoPkgHasElems_Confnum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Confnum; fn != nil { fn(me) }
	for _, x := range me.Confnums { x.Walk() }
 }

type XsdGoPkgHasElems_Conftitle struct {
	Conftitles []*TxsdFunction `xml:"http://docbook.org/ns/docbook conftitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Conftitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Conftitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Conftitle instance.
func (me *XsdGoPkgHasElems_Conftitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Conftitle; fn != nil { fn(me) }
	for _, x := range me.Conftitles { x.Walk() }
 }

type XsdGoPkgHasElems_Confsponsor struct {
	Confsponsors []*TxsdFunction `xml:"http://docbook.org/ns/docbook confsponsor"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Confsponsor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Confsponsor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Confsponsor instance.
func (me *XsdGoPkgHasElems_Confsponsor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Confsponsor; fn != nil { fn(me) }
	for _, x := range me.Confsponsors { x.Walk() }
 }

type TxsdConfgroup struct {
	XsdGoPkgHasElems_Confsponsor

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Confdates

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Confnum

	XsdGoPkgHasElems_Conftitle

}

//	If the WalkHandlers.TxsdConfgroup function is not nil (ie. was set by outside code), calls it with this TxsdConfgroup instance as the single argument. Then calls the Walk() method on 5/8 embed(s) and 0/0 field(s) belonging to this TxsdConfgroup instance.
func (me *TxsdConfgroup) Walk ()  { 
	if fn := WalkHandlers.TxsdConfgroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Confsponsor.Walk()
	me.XsdGoPkgHasElems_Confdates.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Confnum.Walk()
	me.XsdGoPkgHasElems_Conftitle.Walk()
 }

type XsdGoPkgHasElems_Confgroup struct {
	Confgroups []*TxsdConfgroup `xml:"http://docbook.org/ns/docbook confgroup"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Confgroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Confgroup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Confgroup instance.
func (me *XsdGoPkgHasElems_Confgroup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Confgroup; fn != nil { fn(me) }
	for _, x := range me.Confgroups { x.Walk() }
 }

type XsdGoPkgHasElems_Pubdate struct {
	Pubdates []*TxsdDate `xml:"http://docbook.org/ns/docbook pubdate"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Pubdate function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Pubdate instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Pubdate instance.
func (me *XsdGoPkgHasElems_Pubdate) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Pubdate; fn != nil { fn(me) }
	for _, x := range me.Pubdates { x.Walk() }
 }

type XsdGoPkgHasElems_Artpagenums struct {
	Artpagenumses []*TxsdFunction `xml:"http://docbook.org/ns/docbook artpagenums"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Artpagenums function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Artpagenums instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Artpagenums instance.
func (me *XsdGoPkgHasElems_Artpagenums) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Artpagenums; fn != nil { fn(me) }
	for _, x := range me.Artpagenumses { x.Walk() }
 }

type TxsdCollab struct {
	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Org

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Affiliation

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Person

}

//	If the WalkHandlers.TxsdCollab function is not nil (ie. was set by outside code), calls it with this TxsdCollab instance as the single argument. Then calls the Walk() method on 5/8 embed(s) and 0/0 field(s) belonging to this TxsdCollab instance.
func (me *TxsdCollab) Walk ()  { 
	if fn := WalkHandlers.TxsdCollab; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Affiliation.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
 }

type XsdGoPkgHasElems_Collab struct {
	Collabs []*TxsdCollab `xml:"http://docbook.org/ns/docbook collab"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Collab function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Collab instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Collab instance.
func (me *XsdGoPkgHasElems_Collab) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Collab; fn != nil { fn(me) }
	for _, x := range me.Collabs { x.Walk() }
 }

type XsdGoPkgHasElems_Bibliomisc struct {
	Bibliomiscs []*TxsdFunction `xml:"http://docbook.org/ns/docbook bibliomisc"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliomisc function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliomisc instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliomisc instance.
func (me *XsdGoPkgHasElems_Bibliomisc) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliomisc; fn != nil { fn(me) }
	for _, x := range me.Bibliomiscs { x.Walk() }
 }

type XsdGoPkgHasElems_Edition struct {
	Editions []*TxsdFunction `xml:"http://docbook.org/ns/docbook edition"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Edition function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Edition instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Edition instance.
func (me *XsdGoPkgHasElems_Edition) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Edition; fn != nil { fn(me) }
	for _, x := range me.Editions { x.Walk() }
 }

type XsdGoPkgHasElems_Abstract struct {
	Abstracts []*TxsdPersonblurb `xml:"http://docbook.org/ns/docbook abstract"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Abstract function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Abstract instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Abstract instance.
func (me *XsdGoPkgHasElems_Abstract) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Abstract; fn != nil { fn(me) }
	for _, x := range me.Abstracts { x.Walk() }
 }

type XsdGoPkgHasAttr_Relation_XsdtString_ struct {
	Relation xsdt.String `xml:"http://docbook.org/ns/docbook relation,attr"`

}

type XsdGoPkgHasElems_Keyword struct {
	Keywords []*TxsdDate `xml:"http://docbook.org/ns/docbook keyword"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Keyword function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Keyword instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Keyword instance.
func (me *XsdGoPkgHasElems_Keyword) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Keyword; fn != nil { fn(me) }
	for _, x := range me.Keywords { x.Walk() }
 }

type TxsdKeywordset struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Keyword

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdKeywordset function is not nil (ie. was set by outside code), calls it with this TxsdKeywordset instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TxsdKeywordset instance.
func (me *TxsdKeywordset) Walk ()  { 
	if fn := WalkHandlers.TxsdKeywordset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Keyword.Walk()
 }

type XsdGoPkgHasElems_Keywordset struct {
	Keywordsets []*TxsdKeywordset `xml:"http://docbook.org/ns/docbook keywordset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Keywordset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Keywordset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Keywordset instance.
func (me *XsdGoPkgHasElems_Keywordset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Keywordset; fn != nil { fn(me) }
	for _, x := range me.Keywordsets { x.Walk() }
 }

type TxsdBibliomset struct {
	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Contractsponsor

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Othercredit

	XsdGoPkgHasElems_Extendedlink

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Pubdate

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Contractnum

	XsdGoPkgHasElems_Printhistory

	XsdGoPkgHasElems_Bibliomisc

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Confgroup

	XsdGoPkgHasElems_Bibliocoverage

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasAttr_Relation_XsdtString_

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Subjectset

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Copyright

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Volumenum

	XsdGoPkgHasElems_Biblioset

	XsdGoPkgHasElems_Bibliosource

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Seriesvolnums

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Issuenum

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Artpagenums

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Collab

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Bibliorelation

	XsdGoPkgHasElems_Bibliomset

	XsdGoPkgHasElems_Publishername

	XsdGoPkgHasElems_Pagenums

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Keywordset

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Cover

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Itermset

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Authorinitials

	XsdGoPkgHasElems_Authorgroup

	XsdGoPkgHasElems_Personblurb

	XsdGoPkgHasElems_Biblioid

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Legalnotice

	XsdGoPkgHasElems_Edition

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Publisher

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Abstract

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Releaseinfo

}

//	If the WalkHandlers.TxsdBibliomset function is not nil (ie. was set by outside code), calls it with this TxsdBibliomset instance as the single argument. Then calls the Walk() method on 70/82 embed(s) and 0/0 field(s) belonging to this TxsdBibliomset instance.
func (me *TxsdBibliomset) Walk ()  { 
	if fn := WalkHandlers.TxsdBibliomset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Copyright.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Volumenum.Walk()
	me.XsdGoPkgHasElems_Bibliosource.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Seriesvolnums.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Issuenum.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Artpagenums.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Collab.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Bibliorelation.Walk()
	me.XsdGoPkgHasElems_Publishername.Walk()
	me.XsdGoPkgHasElems_Pagenums.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Keywordset.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Cover.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Itermset.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Authorinitials.Walk()
	me.XsdGoPkgHasElems_Authorgroup.Walk()
	me.XsdGoPkgHasElems_Personblurb.Walk()
	me.XsdGoPkgHasElems_Biblioid.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Legalnotice.Walk()
	me.XsdGoPkgHasElems_Edition.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Publisher.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Abstract.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Releaseinfo.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Contractsponsor.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Othercredit.Walk()
	me.XsdGoPkgHasElems_Extendedlink.Walk()
	me.XsdGoPkgHasElems_Pubdate.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Contractnum.Walk()
	me.XsdGoPkgHasElems_Printhistory.Walk()
	me.XsdGoPkgHasElems_Bibliomisc.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Confgroup.Walk()
	me.XsdGoPkgHasElems_Bibliocoverage.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Subjectset.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
 }

type XsdGoPkgHasElems_Bibliomset struct {
	Bibliomsets []*TxsdBibliomset `xml:"http://docbook.org/ns/docbook bibliomset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliomset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliomset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliomset instance.
func (me *XsdGoPkgHasElems_Bibliomset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliomset; fn != nil { fn(me) }
	for _, x := range me.Bibliomsets { x.Walk() }
 }

type TxsdBiblioset struct {
	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Copyright

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Confgroup

	XsdGoPkgHasElems_Pubdate

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Artpagenums

	XsdGoPkgHasElems_Othercredit

	XsdGoPkgHasElems_Collab

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Bibliomisc

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Bibliomset

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Edition

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Abstract

	XsdGoPkgHasAttr_Relation_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Keywordset

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Volumenum

	XsdGoPkgHasElems_Publisher

	XsdGoPkgHasElems_Biblioset

	XsdGoPkgHasElems_Issuenum

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Printhistory

	XsdGoPkgHasElems_Releaseinfo

	XsdGoPkgHasElems_Extendedlink

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Bibliosource

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Seriesvolnums

	XsdGoPkgHasElems_Authorinitials

	XsdGoPkgHasElems_Legalnotice

	XsdGoPkgHasElems_Biblioid

	XsdGoPkgHasElems_Contractsponsor

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Contractnum

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Subjectset

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Personblurb

	XsdGoPkgHasElems_Authorgroup

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Bibliorelation

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Publishername

	XsdGoPkgHasElems_Pagenums

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Itermset

	XsdGoPkgHasElems_Bibliocoverage

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Cover

}

//	If the WalkHandlers.TxsdBiblioset function is not nil (ie. was set by outside code), calls it with this TxsdBiblioset instance as the single argument. Then calls the Walk() method on 64/71 embed(s) and 0/0 field(s) belonging to this TxsdBiblioset instance.
func (me *TxsdBiblioset) Walk ()  { 
	if fn := WalkHandlers.TxsdBiblioset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Bibliomisc.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Bibliomset.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Edition.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Abstract.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Keywordset.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Volumenum.Walk()
	me.XsdGoPkgHasElems_Publisher.Walk()
	me.XsdGoPkgHasElems_Issuenum.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Printhistory.Walk()
	me.XsdGoPkgHasElems_Releaseinfo.Walk()
	me.XsdGoPkgHasElems_Extendedlink.Walk()
	me.XsdGoPkgHasElems_Bibliosource.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Seriesvolnums.Walk()
	me.XsdGoPkgHasElems_Authorinitials.Walk()
	me.XsdGoPkgHasElems_Legalnotice.Walk()
	me.XsdGoPkgHasElems_Biblioid.Walk()
	me.XsdGoPkgHasElems_Contractsponsor.Walk()
	me.XsdGoPkgHasElems_Contractnum.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Subjectset.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Personblurb.Walk()
	me.XsdGoPkgHasElems_Authorgroup.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Bibliorelation.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Publishername.Walk()
	me.XsdGoPkgHasElems_Pagenums.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Itermset.Walk()
	me.XsdGoPkgHasElems_Bibliocoverage.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Cover.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Copyright.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Confgroup.Walk()
	me.XsdGoPkgHasElems_Pubdate.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Artpagenums.Walk()
	me.XsdGoPkgHasElems_Othercredit.Walk()
	me.XsdGoPkgHasElems_Collab.Walk()
 }

type XsdGoPkgHasElems_Biblioset struct {
	Bibliosets []*TxsdBiblioset `xml:"http://docbook.org/ns/docbook biblioset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Biblioset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Biblioset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Biblioset instance.
func (me *XsdGoPkgHasElems_Biblioset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Biblioset; fn != nil { fn(me) }
	for _, x := range me.Bibliosets { x.Walk() }
 }

type TxsdBiblioentry struct {
	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Legalnotice

	XsdGoPkgHasElems_Edition

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Pubdate

	XsdGoPkgHasElems_Copyright

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Artpagenums

	XsdGoPkgHasElems_Authorgroup

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Bibliocoverage

	XsdGoPkgHasElems_Volumenum

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Bibliomset

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Confgroup

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Cover

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Biblioid

	XsdGoPkgHasElems_Keywordset

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Personblurb

	XsdGoPkgHasElems_Contractsponsor

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Pagenums

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Itermset

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Bibliorelation

	XsdGoPkgHasElems_Authorinitials

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Printhistory

	XsdGoPkgHasElems_Othercredit

	XsdGoPkgHasElems_Bibliomisc

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Biblioset

	XsdGoPkgHasElems_Collab

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Extendedlink

	XsdGoPkgHasElems_Abstract

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Seriesvolnums

	XsdGoPkgHasElems_Subjectset

	XsdGoPkgHasElems_Contractnum

	XsdGoPkgHasElems_Publisher

	XsdGoPkgHasElems_Issuenum

	XsdGoPkgHasElems_Bibliosource

	XsdGoPkgHasElems_Releaseinfo

	XsdGoPkgHasElems_Publishername

}

//	If the WalkHandlers.TxsdBiblioentry function is not nil (ie. was set by outside code), calls it with this TxsdBiblioentry instance as the single argument. Then calls the Walk() method on 65/70 embed(s) and 0/0 field(s) belonging to this TxsdBiblioentry instance.
func (me *TxsdBiblioentry) Walk ()  { 
	if fn := WalkHandlers.TxsdBiblioentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Biblioid.Walk()
	me.XsdGoPkgHasElems_Keywordset.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Personblurb.Walk()
	me.XsdGoPkgHasElems_Contractsponsor.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Pagenums.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Itermset.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Bibliorelation.Walk()
	me.XsdGoPkgHasElems_Authorinitials.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Printhistory.Walk()
	me.XsdGoPkgHasElems_Othercredit.Walk()
	me.XsdGoPkgHasElems_Bibliomisc.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Biblioset.Walk()
	me.XsdGoPkgHasElems_Collab.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Extendedlink.Walk()
	me.XsdGoPkgHasElems_Abstract.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Seriesvolnums.Walk()
	me.XsdGoPkgHasElems_Subjectset.Walk()
	me.XsdGoPkgHasElems_Contractnum.Walk()
	me.XsdGoPkgHasElems_Publisher.Walk()
	me.XsdGoPkgHasElems_Issuenum.Walk()
	me.XsdGoPkgHasElems_Bibliosource.Walk()
	me.XsdGoPkgHasElems_Releaseinfo.Walk()
	me.XsdGoPkgHasElems_Publishername.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Legalnotice.Walk()
	me.XsdGoPkgHasElems_Edition.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Pubdate.Walk()
	me.XsdGoPkgHasElems_Copyright.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Artpagenums.Walk()
	me.XsdGoPkgHasElems_Authorgroup.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Bibliocoverage.Walk()
	me.XsdGoPkgHasElems_Volumenum.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Bibliomset.Walk()
	me.XsdGoPkgHasElems_Confgroup.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Cover.Walk()
 }

type XsdGoPkgHasElems_Biblioentry struct {
	Biblioentries []*TxsdBiblioentry `xml:"http://docbook.org/ns/docbook biblioentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Biblioentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Biblioentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Biblioentry instance.
func (me *XsdGoPkgHasElems_Biblioentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Biblioentry; fn != nil { fn(me) }
	for _, x := range me.Biblioentries { x.Walk() }
 }

type TxsdBibliomixed struct {
	XsdGoPkgHasElems_Pagenums

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Itermset

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Bibliomisc

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Authorgroup

	XsdGoPkgHasElems_Subjectset

	XsdGoPkgHasElems_Contractsponsor

	XsdGoPkgHasElems_Artpagenums

	XsdGoPkgHasElems_Cover

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Biblioset

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Bibliosource

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Confgroup

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Bibliorelation

	XsdGoPkgHasElems_Publisher

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Abstract

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Bibliocoverage

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Personblurb

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Pubdate

	XsdGoPkgHasElems_Bibliomset

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Contractnum

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Collab

	XsdGoPkgHasElems_Issuenum

	XsdGoPkgHasElems_Legalnotice

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Publishername

	XsdGoPkgHasElems_Authorinitials

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Keywordset

	XsdGoPkgHasElems_Biblioid

	XsdGoPkgHasElems_Edition

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Releaseinfo

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Othercredit

	XsdGoPkgHasElems_Printhistory

	XsdGoPkgHasElems_Volumenum

	XsdGoPkgHasElems_Copyright

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Seriesvolnums

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Person

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Extendedlink

}

//	If the WalkHandlers.TxsdBibliomixed function is not nil (ie. was set by outside code), calls it with this TxsdBibliomixed instance as the single argument. Then calls the Walk() method on 66/71 embed(s) and 0/0 field(s) belonging to this TxsdBibliomixed instance.
func (me *TxsdBibliomixed) Walk ()  { 
	if fn := WalkHandlers.TxsdBibliomixed; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Contractsponsor.Walk()
	me.XsdGoPkgHasElems_Artpagenums.Walk()
	me.XsdGoPkgHasElems_Cover.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Biblioset.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Bibliosource.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Confgroup.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Bibliorelation.Walk()
	me.XsdGoPkgHasElems_Publisher.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Abstract.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Bibliocoverage.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Personblurb.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Pubdate.Walk()
	me.XsdGoPkgHasElems_Bibliomset.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Contractnum.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Collab.Walk()
	me.XsdGoPkgHasElems_Issuenum.Walk()
	me.XsdGoPkgHasElems_Legalnotice.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Publishername.Walk()
	me.XsdGoPkgHasElems_Authorinitials.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Keywordset.Walk()
	me.XsdGoPkgHasElems_Biblioid.Walk()
	me.XsdGoPkgHasElems_Edition.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Releaseinfo.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Othercredit.Walk()
	me.XsdGoPkgHasElems_Printhistory.Walk()
	me.XsdGoPkgHasElems_Volumenum.Walk()
	me.XsdGoPkgHasElems_Copyright.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Seriesvolnums.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Extendedlink.Walk()
	me.XsdGoPkgHasElems_Pagenums.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Itermset.Walk()
	me.XsdGoPkgHasElems_Bibliomisc.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Authorgroup.Walk()
	me.XsdGoPkgHasElems_Subjectset.Walk()
 }

type XsdGoPkgHasElems_Bibliomixed struct {
	Bibliomixeds []*TxsdBibliomixed `xml:"http://docbook.org/ns/docbook bibliomixed"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliomixed function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliomixed instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliomixed instance.
func (me *XsdGoPkgHasElems_Bibliomixed) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliomixed; fn != nil { fn(me) }
	for _, x := range me.Bibliomixeds { x.Walk() }
 }

type TxsdBibliolist struct {
	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Biblioentry

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Note

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Bibliomixed

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Constraintdef

}

//	If the WalkHandlers.TxsdBibliolist function is not nil (ie. was set by outside code), calls it with this TxsdBibliolist instance as the single argument. Then calls the Walk() method on 53/63 embed(s) and 0/0 field(s) belonging to this TxsdBibliolist instance.
func (me *TxsdBibliolist) Walk ()  { 
	if fn := WalkHandlers.TxsdBibliolist; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Biblioentry.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Bibliomixed.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
 }

type XsdGoPkgHasElems_Bibliolist struct {
	Bibliolists []*TxsdBibliolist `xml:"http://docbook.org/ns/docbook bibliolist"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliolist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliolist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliolist instance.
func (me *XsdGoPkgHasElems_Bibliolist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliolist; fn != nil { fn(me) }
	for _, x := range me.Bibliolists { x.Walk() }
 }

type XsdGoPkgHasAttr_Pgwide_TxsdFigurePgwide_ struct {
	Pgwide TxsdVideodataScalefit `xml:"http://docbook.org/ns/docbook pgwide,attr"`

}

type TxsdFigure struct {
	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasAttr_Pgwide_TxsdFigurePgwide_

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasAttr_Floatstyle_XsdtString_

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Para

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElem_Caption

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Epigraph

}

//	If the WalkHandlers.TxsdFigure function is not nil (ie. was set by outside code), calls it with this TxsdFigure instance as the single argument. Then calls the Walk() method on 53/65 embed(s) and 0/0 field(s) belonging to this TxsdFigure instance.
func (me *TxsdFigure) Walk ()  { 
	if fn := WalkHandlers.TxsdFigure; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElem_Caption.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
 }

type XsdGoPkgHasElems_Figure struct {
	Figures []*TxsdFigure `xml:"http://docbook.org/ns/docbook figure"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Figure function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Figure instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Figure instance.
func (me *XsdGoPkgHasElems_Figure) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Figure; fn != nil { fn(me) }
	for _, x := range me.Figures { x.Walk() }
 }

type TxsdPara struct {
	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Info

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Indexterm

}

//	If the WalkHandlers.TxsdPara function is not nil (ie. was set by outside code), calls it with this TxsdPara instance as the single argument. Then calls the Walk() method on 137/151 embed(s) and 0/0 field(s) belonging to this TxsdPara instance.
func (me *TxsdPara) Walk ()  { 
	if fn := WalkHandlers.TxsdPara; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Function.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Termdef.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Info.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
 }

type XsdGoPkgHasElems_Para struct {
	Paras []*TxsdPara `xml:"http://docbook.org/ns/docbook para"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Para function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Para instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Para instance.
func (me *XsdGoPkgHasElems_Para) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Para; fn != nil { fn(me) }
	for _, x := range me.Paras { x.Walk() }
 }

type TxsdEpigraph struct {
	XsdGoPkgHasElems_Para

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Attribution

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Simpara

}

//	If the WalkHandlers.TxsdEpigraph function is not nil (ie. was set by outside code), calls it with this TxsdEpigraph instance as the single argument. Then calls the Walk() method on 6/10 embed(s) and 0/0 field(s) belonging to this TxsdEpigraph instance.
func (me *TxsdEpigraph) Walk ()  { 
	if fn := WalkHandlers.TxsdEpigraph; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElem_Attribution.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
 }

type XsdGoPkgHasElems_Epigraph struct {
	Epigraphs []*TxsdEpigraph `xml:"http://docbook.org/ns/docbook epigraph"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Epigraph function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Epigraph instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Epigraph instance.
func (me *XsdGoPkgHasElems_Epigraph) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Epigraph; fn != nil { fn(me) }
	for _, x := range me.Epigraphs { x.Walk() }
 }

type XsdGoPkgHasElem_Phrase struct {
	Phrase *TxsdPhrase `xml:"http://docbook.org/ns/docbook phrase"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Phrase function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Phrase instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Phrase instance.
func (me *XsdGoPkgHasElem_Phrase) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Phrase; fn != nil { fn(me) }
	me.Phrase.Walk()
 }

type XsdGoPkgHasAttr_Encoding_XsdtString_ struct {
	Encoding xsdt.String `xml:"http://docbook.org/ns/docbook encoding,attr"`

}

type TxsdTextdata struct {
	XsdGoPkgHasAttr_Fileref_XsdtString_

	XsdGoPkgHasAttr_Format_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Encoding_XsdtString_

	XsdGoPkgHasAttr_Entityref_XsdtEntity_

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdTextdata function is not nil (ie. was set by outside code), calls it with this TxsdTextdata instance as the single argument. Then calls the Walk() method on 0/7 embed(s) and 0/0 field(s) belonging to this TxsdTextdata instance.
func (me *TxsdTextdata) Walk ()  { 
	if fn := WalkHandlers.TxsdTextdata; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Textdata struct {
	Textdata *TxsdTextdata `xml:"http://docbook.org/ns/docbook textdata"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Textdata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Textdata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Textdata instance.
func (me *XsdGoPkgHasElem_Textdata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Textdata; fn != nil { fn(me) }
	me.Textdata.Walk()
 }

type TxsdTextobject struct {
	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElem_Textdata

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElem_Phrase

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Remark

}

//	If the WalkHandlers.TxsdTextobject function is not nil (ie. was set by outside code), calls it with this TxsdTextobject instance as the single argument. Then calls the Walk() method on 55/61 embed(s) and 0/0 field(s) belonging to this TxsdTextobject instance.
func (me *TxsdTextobject) Walk ()  { 
	if fn := WalkHandlers.TxsdTextobject; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElem_Textdata.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElem_Phrase.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
 }

type XsdGoPkgHasElems_Textobject struct {
	Textobjects []*TxsdTextobject `xml:"http://docbook.org/ns/docbook textobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Textobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Textobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Textobject instance.
func (me *XsdGoPkgHasElems_Textobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Textobject; fn != nil { fn(me) }
	for _, x := range me.Textobjects { x.Walk() }
 }

type TxsdInlinemediaobject struct {
	XsdGoPkgHasElem_Info

	XsdGoPkgHasElem_Alt

	XsdGoPkgHasElems_Videoobject

	XsdGoPkgHasElems_Audioobject

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Textobject

	XsdGoPkgHasElems_Imageobject

	XsdGoPkgHasElems_Imageobjectco

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdInlinemediaobject function is not nil (ie. was set by outside code), calls it with this TxsdInlinemediaobject instance as the single argument. Then calls the Walk() method on 6/10 embed(s) and 0/0 field(s) belonging to this TxsdInlinemediaobject instance.
func (me *TxsdInlinemediaobject) Walk ()  { 
	if fn := WalkHandlers.TxsdInlinemediaobject; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Alt.Walk()
	me.XsdGoPkgHasElems_Videoobject.Walk()
	me.XsdGoPkgHasElems_Audioobject.Walk()
	me.XsdGoPkgHasElems_Textobject.Walk()
	me.XsdGoPkgHasElems_Imageobject.Walk()
	me.XsdGoPkgHasElems_Imageobjectco.Walk()
 }

type XsdGoPkgHasElems_Inlinemediaobject struct {
	Inlinemediaobjects []*TxsdInlinemediaobject `xml:"http://docbook.org/ns/docbook inlinemediaobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Inlinemediaobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Inlinemediaobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Inlinemediaobject instance.
func (me *XsdGoPkgHasElems_Inlinemediaobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Inlinemediaobject; fn != nil { fn(me) }
	for _, x := range me.Inlinemediaobjects { x.Walk() }
 }

type TxsdAlt struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Inlinemediaobject

}

//	If the WalkHandlers.TxsdAlt function is not nil (ie. was set by outside code), calls it with this TxsdAlt instance as the single argument. Then calls the Walk() method on 2/4 embed(s) and 0/0 field(s) belonging to this TxsdAlt instance.
func (me *TxsdAlt) Walk ()  { 
	if fn := WalkHandlers.TxsdAlt; fn != nil { fn(me) }
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
 }

type XsdGoPkgHasElems_Alt struct {
	Alts []*TxsdAlt `xml:"http://docbook.org/ns/docbook alt"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Alt function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Alt instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Alt instance.
func (me *XsdGoPkgHasElems_Alt) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Alt; fn != nil { fn(me) }
	for _, x := range me.Alts { x.Walk() }
 }

type XsdGoPkgHasAttr_Class_TxsdTrademarkClass_ struct {
	Class TxsdProductnameClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdTrademark struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAttr_Class_TxsdTrademarkClass_

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdTrademark function is not nil (ie. was set by outside code), calls it with this TxsdTrademark instance as the single argument. Then calls the Walk() method on 12/19 embed(s) and 0/0 field(s) belonging to this TxsdTrademark instance.
func (me *TxsdTrademark) Walk ()  { 
	if fn := WalkHandlers.TxsdTrademark; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
 }

type XsdGoPkgHasElems_Trademark struct {
	Trademarks []*TxsdTrademark `xml:"http://docbook.org/ns/docbook trademark"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Trademark function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Trademark instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Trademark instance.
func (me *XsdGoPkgHasElems_Trademark) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Trademark; fn != nil { fn(me) }
	for _, x := range me.Trademarks { x.Walk() }
 }

type TxsdLink struct {
	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Date

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasAttr_Endterm_XsdtIdref_

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasAttr_Xrefstyle_XsdtString_

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Org

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Author

}

//	If the WalkHandlers.TxsdLink function is not nil (ie. was set by outside code), calls it with this TxsdLink instance as the single argument. Then calls the Walk() method on 93/104 embed(s) and 0/0 field(s) belonging to this TxsdLink instance.
func (me *TxsdLink) Walk ()  { 
	if fn := WalkHandlers.TxsdLink; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Termdef.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Trademark.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Function.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
 }

type XsdGoPkgHasElems_Link struct {
	Links []*TxsdLink `xml:"http://docbook.org/ns/docbook link"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Link function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Link instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Link instance.
func (me *XsdGoPkgHasElems_Link) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Link; fn != nil { fn(me) }
	for _, x := range me.Links { x.Walk() }
 }

type TxsdContrib struct {
	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Superscript

}

//	If the WalkHandlers.TxsdContrib function is not nil (ie. was set by outside code), calls it with this TxsdContrib instance as the single argument. Then calls the Walk() method on 13/18 embed(s) and 0/0 field(s) belonging to this TxsdContrib instance.
func (me *TxsdContrib) Walk ()  { 
	if fn := WalkHandlers.TxsdContrib; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Link.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
 }

type XsdGoPkgHasElems_Contrib struct {
	Contribs []*TxsdContrib `xml:"http://docbook.org/ns/docbook contrib"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Contrib function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Contrib instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Contrib instance.
func (me *XsdGoPkgHasElems_Contrib) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Contrib; fn != nil { fn(me) }
	for _, x := range me.Contribs { x.Walk() }
 }

type TxsdAuthor struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Contrib

	XsdGoPkgHasElem_Orgname

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Orgdiv

	XsdGoPkgHasElem_Personname

	XsdGoPkgHasElems_Personblurb

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Affiliation

}

//	If the WalkHandlers.TxsdAuthor function is not nil (ie. was set by outside code), calls it with this TxsdAuthor instance as the single argument. Then calls the Walk() method on 8/12 embed(s) and 0/0 field(s) belonging to this TxsdAuthor instance.
func (me *TxsdAuthor) Walk ()  { 
	if fn := WalkHandlers.TxsdAuthor; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Orgdiv.Walk()
	me.XsdGoPkgHasElem_Personname.Walk()
	me.XsdGoPkgHasElems_Personblurb.Walk()
	me.XsdGoPkgHasElems_Affiliation.Walk()
	me.XsdGoPkgHasElems_Contrib.Walk()
	me.XsdGoPkgHasElem_Orgname.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
 }

type XsdGoPkgHasElems_Author struct {
	Authors []*TxsdAuthor `xml:"http://docbook.org/ns/docbook author"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Author function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Author instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Author instance.
func (me *XsdGoPkgHasElems_Author) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Author; fn != nil { fn(me) }
	for _, x := range me.Authors { x.Walk() }
 }

type TxsdInfo struct {
	XsdGoPkgHasElems_Contractnum

	XsdGoPkgHasElems_Edition

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Pagenums

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Seriesvolnums

	XsdGoPkgHasElems_Extendedlink

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Othercredit

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Copyright

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Pubdate

	XsdGoPkgHasElems_Issuenum

	XsdGoPkgHasElems_Biblioset

	XsdGoPkgHasElems_Bibliomset

	XsdGoPkgHasElems_Subjectset

	XsdGoPkgHasElems_Keywordset

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Collab

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Abstract

	XsdGoPkgHasElems_Legalnotice

	XsdGoPkgHasElems_Artpagenums

	XsdGoPkgHasElems_Biblioid

	XsdGoPkgHasElems_Publishername

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Volumenum

	XsdGoPkgHasElems_Contractsponsor

	XsdGoPkgHasElems_Itermset

	XsdGoPkgHasElems_Bibliomisc

	XsdGoPkgHasElems_Publisher

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Bibliosource

	XsdGoPkgHasElems_Bibliorelation

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Authorgroup

	XsdGoPkgHasElems_Releaseinfo

	XsdGoPkgHasElems_Confgroup

	XsdGoPkgHasElems_Bibliocoverage

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Cover

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Authorinitials

	XsdGoPkgHasElems_Printhistory

}

//	If the WalkHandlers.TxsdInfo function is not nil (ie. was set by outside code), calls it with this TxsdInfo instance as the single argument. Then calls the Walk() method on 46/49 embed(s) and 0/0 field(s) belonging to this TxsdInfo instance.
func (me *TxsdInfo) Walk ()  { 
	if fn := WalkHandlers.TxsdInfo; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Copyright.Walk()
	me.XsdGoPkgHasElems_Pubdate.Walk()
	me.XsdGoPkgHasElems_Issuenum.Walk()
	me.XsdGoPkgHasElems_Biblioset.Walk()
	me.XsdGoPkgHasElems_Bibliomset.Walk()
	me.XsdGoPkgHasElems_Subjectset.Walk()
	me.XsdGoPkgHasElems_Keywordset.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Author.Walk()
	me.XsdGoPkgHasElems_Collab.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Abstract.Walk()
	me.XsdGoPkgHasElems_Legalnotice.Walk()
	me.XsdGoPkgHasElems_Artpagenums.Walk()
	me.XsdGoPkgHasElems_Biblioid.Walk()
	me.XsdGoPkgHasElems_Publishername.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Volumenum.Walk()
	me.XsdGoPkgHasElems_Contractsponsor.Walk()
	me.XsdGoPkgHasElems_Itermset.Walk()
	me.XsdGoPkgHasElems_Bibliomisc.Walk()
	me.XsdGoPkgHasElems_Publisher.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Bibliosource.Walk()
	me.XsdGoPkgHasElems_Bibliorelation.Walk()
	me.XsdGoPkgHasElems_Authorgroup.Walk()
	me.XsdGoPkgHasElems_Releaseinfo.Walk()
	me.XsdGoPkgHasElems_Confgroup.Walk()
	me.XsdGoPkgHasElems_Bibliocoverage.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Cover.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Authorinitials.Walk()
	me.XsdGoPkgHasElems_Printhistory.Walk()
	me.XsdGoPkgHasElems_Contractnum.Walk()
	me.XsdGoPkgHasElems_Edition.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Pagenums.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Seriesvolnums.Walk()
	me.XsdGoPkgHasElems_Extendedlink.Walk()
	me.XsdGoPkgHasElems_Othercredit.Walk()
 }

type XsdGoPkgHasElem_Info struct {
	Info *TxsdInfo `xml:"http://docbook.org/ns/docbook info"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Info function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Info instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Info instance.
func (me *XsdGoPkgHasElem_Info) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Info; fn != nil { fn(me) }
	me.Info.Walk()
 }

type XsdGoPkgHasElems_Msgexplan struct {
	Msgexplans []*TxsdConstraintdef `xml:"http://docbook.org/ns/docbook msgexplan"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgexplan function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgexplan instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgexplan instance.
func (me *XsdGoPkgHasElems_Msgexplan) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgexplan; fn != nil { fn(me) }
	for _, x := range me.Msgexplans { x.Walk() }
 }

type XsdGoPkgHasElems_Msgaud struct {
	Msgauds []*TxsdContrib `xml:"http://docbook.org/ns/docbook msgaud"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgaud function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgaud instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgaud instance.
func (me *XsdGoPkgHasElems_Msgaud) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgaud; fn != nil { fn(me) }
	for _, x := range me.Msgauds { x.Walk() }
 }

type XsdGoPkgHasElems_Msgorig struct {
	Msgorigs []*TxsdContrib `xml:"http://docbook.org/ns/docbook msgorig"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgorig function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgorig instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgorig instance.
func (me *XsdGoPkgHasElems_Msgorig) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgorig; fn != nil { fn(me) }
	for _, x := range me.Msgorigs { x.Walk() }
 }

type XsdGoPkgHasElems_Msglevel struct {
	Msglevels []*TxsdContrib `xml:"http://docbook.org/ns/docbook msglevel"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msglevel function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msglevel instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msglevel instance.
func (me *XsdGoPkgHasElems_Msglevel) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msglevel; fn != nil { fn(me) }
	for _, x := range me.Msglevels { x.Walk() }
 }

type TxsdMsginfo struct {
	XsdGoPkgHasElems_Msgaud

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Msgorig

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Msglevel

}

//	If the WalkHandlers.TxsdMsginfo function is not nil (ie. was set by outside code), calls it with this TxsdMsginfo instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TxsdMsginfo instance.
func (me *TxsdMsginfo) Walk ()  { 
	if fn := WalkHandlers.TxsdMsginfo; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Msgorig.Walk()
	me.XsdGoPkgHasElems_Msglevel.Walk()
	me.XsdGoPkgHasElems_Msgaud.Walk()
 }

type XsdGoPkgHasElem_Msginfo struct {
	Msginfo *TxsdMsginfo `xml:"http://docbook.org/ns/docbook msginfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msginfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msginfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msginfo instance.
func (me *XsdGoPkgHasElem_Msginfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msginfo; fn != nil { fn(me) }
	me.Msginfo.Walk()
 }

type XsdGoPkgHasElem_Msgtext struct {
	Msgtext *TxsdRevdescription `xml:"http://docbook.org/ns/docbook msgtext"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgtext function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgtext instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgtext instance.
func (me *XsdGoPkgHasElem_Msgtext) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgtext; fn != nil { fn(me) }
	me.Msgtext.Walk()
 }

type TxsdMsgsub struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Msgtext

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdMsgsub function is not nil (ie. was set by outside code), calls it with this TxsdMsgsub instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TxsdMsgsub instance.
func (me *TxsdMsgsub) Walk ()  { 
	if fn := WalkHandlers.TxsdMsgsub; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Msgtext.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
 }

type XsdGoPkgHasElems_Msgsub struct {
	Msgsubs []*TxsdMsgsub `xml:"http://docbook.org/ns/docbook msgsub"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgsub function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgsub instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgsub instance.
func (me *XsdGoPkgHasElems_Msgsub) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgsub; fn != nil { fn(me) }
	for _, x := range me.Msgsubs { x.Walk() }
 }

type XsdGoPkgHasElems_Msgrel struct {
	Msgrels []*TxsdMsgsub `xml:"http://docbook.org/ns/docbook msgrel"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgrel function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgrel instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgrel instance.
func (me *XsdGoPkgHasElems_Msgrel) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgrel; fn != nil { fn(me) }
	for _, x := range me.Msgrels { x.Walk() }
 }

type XsdGoPkgHasElem_Msgmain struct {
	Msgmain *TxsdMsgsub `xml:"http://docbook.org/ns/docbook msgmain"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgmain function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgmain instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgmain instance.
func (me *XsdGoPkgHasElem_Msgmain) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgmain; fn != nil { fn(me) }
	me.Msgmain.Walk()
 }

type TxsdMsg struct {
	XsdGoPkgHasElems_Msgsub

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Msgrel

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElem_Msgmain

	XsdGoPkgHasElems_Titleabbrev

}

//	If the WalkHandlers.TxsdMsg function is not nil (ie. was set by outside code), calls it with this TxsdMsg instance as the single argument. Then calls the Walk() method on 6/9 embed(s) and 0/0 field(s) belonging to this TxsdMsg instance.
func (me *TxsdMsg) Walk ()  { 
	if fn := WalkHandlers.TxsdMsg; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Msgrel.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElem_Msgmain.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Msgsub.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
 }

type XsdGoPkgHasElems_Msg struct {
	Msgs []*TxsdMsg `xml:"http://docbook.org/ns/docbook msg"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msg function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msg instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msg instance.
func (me *XsdGoPkgHasElems_Msg) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msg; fn != nil { fn(me) }
	for _, x := range me.Msgs { x.Walk() }
 }

type TxsdMsgentry struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Msgexplan

	XsdGoPkgHasElem_Msginfo

	XsdGoPkgHasElems_Msg

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdMsgentry function is not nil (ie. was set by outside code), calls it with this TxsdMsgentry instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TxsdMsgentry instance.
func (me *TxsdMsgentry) Walk ()  { 
	if fn := WalkHandlers.TxsdMsgentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Msgexplan.Walk()
	me.XsdGoPkgHasElem_Msginfo.Walk()
	me.XsdGoPkgHasElems_Msg.Walk()
 }

type XsdGoPkgHasElems_Msgentry struct {
	Msgentries []*TxsdMsgentry `xml:"http://docbook.org/ns/docbook msgentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgentry instance.
func (me *XsdGoPkgHasElems_Msgentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgentry; fn != nil { fn(me) }
	for _, x := range me.Msgentries { x.Walk() }
 }

type XsdGoPkgHasAttr_Msglevel_XsdtString_ struct {
	Msglevel xsdt.String `xml:"http://docbook.org/ns/docbook msglevel,attr"`

}

type XsdGoPkgHasAttr_Msgaud_XsdtString_ struct {
	Msgaud xsdt.String `xml:"http://docbook.org/ns/docbook msgaud,attr"`

}

type XsdGoPkgHasAttr_Msgorig_XsdtString_ struct {
	Msgorig xsdt.String `xml:"http://docbook.org/ns/docbook msgorig,attr"`

}

type TxsdSimplemsgentry struct {
	XsdGoPkgHasElems_Msgexplan

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Msgtext

	XsdGoPkgHasAttr_Msglevel_XsdtString_

	XsdGoPkgHasAttr_Msgaud_XsdtString_

	XsdGoPkgHasAttr_Msgorig_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdSimplemsgentry function is not nil (ie. was set by outside code), calls it with this TxsdSimplemsgentry instance as the single argument. Then calls the Walk() method on 2/8 embed(s) and 0/0 field(s) belonging to this TxsdSimplemsgentry instance.
func (me *TxsdSimplemsgentry) Walk ()  { 
	if fn := WalkHandlers.TxsdSimplemsgentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Msgexplan.Walk()
	me.XsdGoPkgHasElem_Msgtext.Walk()
 }

type XsdGoPkgHasElems_Simplemsgentry struct {
	Simplemsgentries []*TxsdSimplemsgentry `xml:"http://docbook.org/ns/docbook simplemsgentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Simplemsgentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Simplemsgentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Simplemsgentry instance.
func (me *XsdGoPkgHasElems_Simplemsgentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Simplemsgentry; fn != nil { fn(me) }
	for _, x := range me.Simplemsgentries { x.Walk() }
 }

type TxsdMsgset struct {
	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Simplemsgentry

	XsdGoPkgHasElems_Title

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Msgentry

}

//	If the WalkHandlers.TxsdMsgset function is not nil (ie. was set by outside code), calls it with this TxsdMsgset instance as the single argument. Then calls the Walk() method on 5/8 embed(s) and 0/0 field(s) belonging to this TxsdMsgset instance.
func (me *TxsdMsgset) Walk ()  { 
	if fn := WalkHandlers.TxsdMsgset; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Simplemsgentry.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Msgentry.Walk()
 }

type XsdGoPkgHasElems_Msgset struct {
	Msgsets []*TxsdMsgset `xml:"http://docbook.org/ns/docbook msgset"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgset instance.
func (me *XsdGoPkgHasElems_Msgset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgset; fn != nil { fn(me) }
	for _, x := range me.Msgsets { x.Walk() }
 }

type XsdGoPkgHasAttr_Annotates_XsdtString_ struct {
	Annotates xsdt.String `xml:"http://docbook.org/ns/docbook annotates,attr"`

}

type TxsdAnnotation struct {
	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasAttr_Annotates_XsdtString_

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Blockquote

}

//	If the WalkHandlers.TxsdAnnotation function is not nil (ie. was set by outside code), calls it with this TxsdAnnotation instance as the single argument. Then calls the Walk() method on 57/61 embed(s) and 0/0 field(s) belonging to this TxsdAnnotation instance.
func (me *TxsdAnnotation) Walk ()  { 
	if fn := WalkHandlers.TxsdAnnotation; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
 }

type XsdGoPkgHasElems_Annotation struct {
	Annotations []*TxsdAnnotation `xml:"http://docbook.org/ns/docbook annotation"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Annotation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Annotation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Annotation instance.
func (me *XsdGoPkgHasElems_Annotation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Annotation; fn != nil { fn(me) }
	for _, x := range me.Annotations { x.Walk() }
 }

type TxsdEnvar struct {
	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Link

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Olink

}

//	If the WalkHandlers.TxsdEnvar function is not nil (ie. was set by outside code), calls it with this TxsdEnvar instance as the single argument. Then calls the Walk() method on 14/18 embed(s) and 0/0 field(s) belonging to this TxsdEnvar instance.
func (me *TxsdEnvar) Walk ()  { 
	if fn := WalkHandlers.TxsdEnvar; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Link.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Envar struct {
	Envars []*TxsdEnvar `xml:"http://docbook.org/ns/docbook envar"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Envar function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Envar instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Envar instance.
func (me *XsdGoPkgHasElems_Envar) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Envar; fn != nil { fn(me) }
	for _, x := range me.Envars { x.Walk() }
 }

type XsdGoPkgHasAttr_Localinfo_XsdtString_ struct {
	Localinfo xsdt.String `xml:"http://docbook.org/ns/docbook localinfo,attr"`

}

type XsdGoPkgHasAttr_Targetdoc_XsdtString_ struct {
	Targetdoc xsdt.String `xml:"http://docbook.org/ns/docbook targetdoc,attr"`

}

type TxsdOlink struct {
	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasAttr_Targetdoc_XsdtString_

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasAttr_Targetptr_XsdtString_

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Command

	XsdGoPkgHasAttr_Xrefstyle_XsdtString_

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasAttr_Type_XsdtString_

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasAttr_Localinfo_XsdtString_

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Hardware

}

//	If the WalkHandlers.TxsdOlink function is not nil (ie. was set by outside code), calls it with this TxsdOlink instance as the single argument. Then calls the Walk() method on 97/106 embed(s) and 0/0 field(s) belonging to this TxsdOlink instance.
func (me *TxsdOlink) Walk ()  { 
	if fn := WalkHandlers.TxsdOlink; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Trademark.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Envar.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Function.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Termdef.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Author.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Link.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
 }

type XsdGoPkgHasElems_Olink struct {
	Olinks []*TxsdOlink `xml:"http://docbook.org/ns/docbook olink"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Olink function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Olink instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Olink instance.
func (me *XsdGoPkgHasElems_Olink) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Olink; fn != nil { fn(me) }
	for _, x := range me.Olinks { x.Walk() }
 }

type TxsdUri struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasAttr_Type_XsdtString_

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdUri function is not nil (ie. was set by outside code), calls it with this TxsdUri instance as the single argument. Then calls the Walk() method on 15/19 embed(s) and 0/0 field(s) belonging to this TxsdUri instance.
func (me *TxsdUri) Walk ()  { 
	if fn := WalkHandlers.TxsdUri; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Link.Walk()
	me.XsdGoPkgHasElems_Olink.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
 }

type XsdGoPkgHasElems_Uri struct {
	Uris []*TxsdUri `xml:"http://docbook.org/ns/docbook uri"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Uri function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Uri instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Uri instance.
func (me *XsdGoPkgHasElems_Uri) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Uri; fn != nil { fn(me) }
	for _, x := range me.Uris { x.Walk() }
 }

type TxsdTitle struct {
	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Application

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Property

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Symbol

}

//	If the WalkHandlers.TxsdTitle function is not nil (ie. was set by outside code), calls it with this TxsdTitle instance as the single argument. Then calls the Walk() method on 99/102 embed(s) and 0/0 field(s) belonging to this TxsdTitle instance.
func (me *TxsdTitle) Walk ()  { 
	if fn := WalkHandlers.TxsdTitle; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Olink.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Termdef.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Function.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Author.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Uri.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Envar.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Link.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Trademark.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
 }

type XsdGoPkgHasElem_Title struct {
	Title *TxsdTitle `xml:"http://docbook.org/ns/docbook title"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Title function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Title instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Title instance.
func (me *XsdGoPkgHasElem_Title) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Title; fn != nil { fn(me) }
	me.Title.Walk()
 }

type XsdGoPkgHasElem_Subtitle struct {
	Subtitle *TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook subtitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Subtitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Subtitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Subtitle instance.
func (me *XsdGoPkgHasElem_Subtitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Subtitle; fn != nil { fn(me) }
	me.Subtitle.Walk()
 }

type XsdGoPkgHasElem_Subjectset struct {
	Subjectset *TxsdSubjectset `xml:"http://docbook.org/ns/docbook subjectset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Subjectset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Subjectset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Subjectset instance.
func (me *XsdGoPkgHasElem_Subjectset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Subjectset; fn != nil { fn(me) }
	me.Subjectset.Walk()
 }

type XsdGoPkgHasElem_Subject struct {
	Subject *TxsdSubject `xml:"http://docbook.org/ns/docbook subject"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Subject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Subject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Subject instance.
func (me *XsdGoPkgHasElem_Subject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Subject; fn != nil { fn(me) }
	me.Subject.Walk()
 }

type XsdGoPkgHasElem_Subjectterm struct {
	Subjectterm *TxsdDate `xml:"http://docbook.org/ns/docbook subjectterm"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Subjectterm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Subjectterm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Subjectterm instance.
func (me *XsdGoPkgHasElem_Subjectterm) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Subjectterm; fn != nil { fn(me) }
	me.Subjectterm.Walk()
 }

type XsdGoPkgHasElem_Keywordset struct {
	Keywordset *TxsdKeywordset `xml:"http://docbook.org/ns/docbook keywordset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Keywordset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Keywordset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Keywordset instance.
func (me *XsdGoPkgHasElem_Keywordset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Keywordset; fn != nil { fn(me) }
	me.Keywordset.Walk()
 }

type XsdGoPkgHasElem_Keyword struct {
	Keyword *TxsdDate `xml:"http://docbook.org/ns/docbook keyword"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Keyword function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Keyword instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Keyword instance.
func (me *XsdGoPkgHasElem_Keyword) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Keyword; fn != nil { fn(me) }
	me.Keyword.Walk()
 }

type XsdGoPkgHasElem_Step struct {
	Step *TxsdStep `xml:"http://docbook.org/ns/docbook step"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Step function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Step instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Step instance.
func (me *XsdGoPkgHasElem_Step) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Step; fn != nil { fn(me) }
	me.Step.Walk()
 }

type XsdGoPkgHasElems_Stepalternatives struct {
	Stepalternativeses []*TxsdStepalternatives `xml:"http://docbook.org/ns/docbook stepalternatives"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Stepalternatives function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Stepalternatives instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Stepalternatives instance.
func (me *XsdGoPkgHasElems_Stepalternatives) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Stepalternatives; fn != nil { fn(me) }
	for _, x := range me.Stepalternativeses { x.Walk() }
 }

type XsdGoPkgHasElems_Substeps struct {
	Substepses []*TxsdSubsteps `xml:"http://docbook.org/ns/docbook substeps"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Substeps function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Substeps instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Substeps instance.
func (me *XsdGoPkgHasElems_Substeps) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Substeps; fn != nil { fn(me) }
	for _, x := range me.Substepses { x.Walk() }
 }

type XsdGoPkgHasElem_Sidebar struct {
	Sidebar *TxsdSidebar `xml:"http://docbook.org/ns/docbook sidebar"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Sidebar function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Sidebar instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Sidebar instance.
func (me *XsdGoPkgHasElem_Sidebar) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Sidebar; fn != nil { fn(me) }
	me.Sidebar.Walk()
 }

type XsdGoPkgHasElem_Abstract struct {
	Abstract *TxsdPersonblurb `xml:"http://docbook.org/ns/docbook abstract"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Abstract function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Abstract instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Abstract instance.
func (me *XsdGoPkgHasElem_Abstract) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Abstract; fn != nil { fn(me) }
	me.Abstract.Walk()
 }

type XsdGoPkgHasElem_Personblurb struct {
	Personblurb *TxsdPersonblurb `xml:"http://docbook.org/ns/docbook personblurb"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Personblurb function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Personblurb instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Personblurb instance.
func (me *XsdGoPkgHasElem_Personblurb) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Personblurb; fn != nil { fn(me) }
	me.Personblurb.Walk()
 }

type XsdGoPkgHasElem_Blockquote struct {
	Blockquote *TxsdBlockquote `xml:"http://docbook.org/ns/docbook blockquote"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Blockquote function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Blockquote instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Blockquote instance.
func (me *XsdGoPkgHasElem_Blockquote) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Blockquote; fn != nil { fn(me) }
	me.Blockquote.Walk()
 }

type XsdGoPkgHasElems_Attribution struct {
	Attributions []*TxsdAttribution `xml:"http://docbook.org/ns/docbook attribution"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Attribution function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Attribution instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Attribution instance.
func (me *XsdGoPkgHasElems_Attribution) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Attribution; fn != nil { fn(me) }
	for _, x := range me.Attributions { x.Walk() }
 }

type XsdGoPkgHasElem_Bridgehead struct {
	Bridgehead *TxsdBridgehead `xml:"http://docbook.org/ns/docbook bridgehead"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bridgehead function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bridgehead instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bridgehead instance.
func (me *XsdGoPkgHasElem_Bridgehead) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bridgehead; fn != nil { fn(me) }
	me.Bridgehead.Walk()
 }

type XsdGoPkgHasElem_Remark struct {
	Remark *TxsdRemark `xml:"http://docbook.org/ns/docbook remark"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Remark function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Remark instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Remark instance.
func (me *XsdGoPkgHasElem_Remark) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Remark; fn != nil { fn(me) }
	me.Remark.Walk()
 }

type XsdGoPkgHasElem_Epigraph struct {
	Epigraph *TxsdEpigraph `xml:"http://docbook.org/ns/docbook epigraph"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Epigraph function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Epigraph instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Epigraph instance.
func (me *XsdGoPkgHasElem_Epigraph) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Epigraph; fn != nil { fn(me) }
	me.Epigraph.Walk()
 }

type XsdGoPkgHasElem_Footnote struct {
	Footnote *TxsdFootnote `xml:"http://docbook.org/ns/docbook footnote"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Footnote function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Footnote instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Footnote instance.
func (me *XsdGoPkgHasElem_Footnote) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Footnote; fn != nil { fn(me) }
	me.Footnote.Walk()
 }

type XsdGoPkgHasElem_Formalpara struct {
	Formalpara *TxsdFormalpara `xml:"http://docbook.org/ns/docbook formalpara"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Formalpara function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Formalpara instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Formalpara instance.
func (me *XsdGoPkgHasElem_Formalpara) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Formalpara; fn != nil { fn(me) }
	me.Formalpara.Walk()
 }

type XsdGoPkgHasElem_Simpara struct {
	Simpara *TxsdSimpara `xml:"http://docbook.org/ns/docbook simpara"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Simpara function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Simpara instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Simpara instance.
func (me *XsdGoPkgHasElem_Simpara) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Simpara; fn != nil { fn(me) }
	me.Simpara.Walk()
 }

type XsdGoPkgHasElem_Itemizedlist struct {
	Itemizedlist *TxsdItemizedlist `xml:"http://docbook.org/ns/docbook itemizedlist"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Itemizedlist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Itemizedlist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Itemizedlist instance.
func (me *XsdGoPkgHasElem_Itemizedlist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Itemizedlist; fn != nil { fn(me) }
	me.Itemizedlist.Walk()
 }

type XsdGoPkgHasElem_Orderedlist struct {
	Orderedlist *TxsdOrderedlist `xml:"http://docbook.org/ns/docbook orderedlist"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Orderedlist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Orderedlist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Orderedlist instance.
func (me *XsdGoPkgHasElem_Orderedlist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Orderedlist; fn != nil { fn(me) }
	me.Orderedlist.Walk()
 }

type XsdGoPkgHasElem_Segmentedlist struct {
	Segmentedlist *TxsdSegmentedlist `xml:"http://docbook.org/ns/docbook segmentedlist"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Segmentedlist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Segmentedlist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Segmentedlist instance.
func (me *XsdGoPkgHasElem_Segmentedlist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Segmentedlist; fn != nil { fn(me) }
	me.Segmentedlist.Walk()
 }

type XsdGoPkgHasElem_Segtitle struct {
	Segtitle *TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook segtitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Segtitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Segtitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Segtitle instance.
func (me *XsdGoPkgHasElem_Segtitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Segtitle; fn != nil { fn(me) }
	me.Segtitle.Walk()
 }

type XsdGoPkgHasElem_Seglistitem struct {
	Seglistitem *TxsdSeglistitem `xml:"http://docbook.org/ns/docbook seglistitem"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Seglistitem function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Seglistitem instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Seglistitem instance.
func (me *XsdGoPkgHasElem_Seglistitem) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Seglistitem; fn != nil { fn(me) }
	me.Seglistitem.Walk()
 }

type XsdGoPkgHasElem_Seg struct {
	Seg *TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook seg"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Seg function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Seg instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Seg instance.
func (me *XsdGoPkgHasElem_Seg) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Seg; fn != nil { fn(me) }
	me.Seg.Walk()
 }

type XsdGoPkgHasElem_Simplelist struct {
	Simplelist *TxsdSimplelist `xml:"http://docbook.org/ns/docbook simplelist"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Simplelist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Simplelist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Simplelist instance.
func (me *XsdGoPkgHasElem_Simplelist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Simplelist; fn != nil { fn(me) }
	me.Simplelist.Walk()
 }

type XsdGoPkgHasElem_Member struct {
	Member *TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook member"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Member function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Member instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Member instance.
func (me *XsdGoPkgHasElem_Member) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Member; fn != nil { fn(me) }
	me.Member.Walk()
 }

type XsdGoPkgHasElem_Variablelist struct {
	Variablelist *TxsdVariablelist `xml:"http://docbook.org/ns/docbook variablelist"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Variablelist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Variablelist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Variablelist instance.
func (me *XsdGoPkgHasElem_Variablelist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Variablelist; fn != nil { fn(me) }
	me.Variablelist.Walk()
 }

type XsdGoPkgHasElem_Varlistentry struct {
	Varlistentry *TxsdVarlistentry `xml:"http://docbook.org/ns/docbook varlistentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Varlistentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Varlistentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Varlistentry instance.
func (me *XsdGoPkgHasElem_Varlistentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Varlistentry; fn != nil { fn(me) }
	me.Varlistentry.Walk()
 }

type XsdGoPkgHasElem_Term struct {
	Term *TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook term"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Term function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Term instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Term instance.
func (me *XsdGoPkgHasElem_Term) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Term; fn != nil { fn(me) }
	me.Term.Walk()
 }

type XsdGoPkgHasElem_Example struct {
	Example *TxsdExample `xml:"http://docbook.org/ns/docbook example"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Example function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Example instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Example instance.
func (me *XsdGoPkgHasElem_Example) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Example; fn != nil { fn(me) }
	me.Example.Walk()
 }

type XsdGoPkgHasElem_Informalexample struct {
	Informalexample *TxsdInformalexample `xml:"http://docbook.org/ns/docbook informalexample"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Informalexample function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Informalexample instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Informalexample instance.
func (me *XsdGoPkgHasElem_Informalexample) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Informalexample; fn != nil { fn(me) }
	me.Informalexample.Walk()
 }

type XsdGoPkgHasElem_Literallayout struct {
	Literallayout *TxsdLiterallayout `xml:"http://docbook.org/ns/docbook literallayout"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Literallayout function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Literallayout instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Literallayout instance.
func (me *XsdGoPkgHasElem_Literallayout) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Literallayout; fn != nil { fn(me) }
	me.Literallayout.Walk()
 }

type XsdGoPkgHasElem_Screenshot struct {
	Screenshot *TxsdScreenshot `xml:"http://docbook.org/ns/docbook screenshot"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Screenshot function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Screenshot instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Screenshot instance.
func (me *XsdGoPkgHasElem_Screenshot) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Screenshot; fn != nil { fn(me) }
	me.Screenshot.Walk()
 }

type XsdGoPkgHasElem_Figure struct {
	Figure *TxsdFigure `xml:"http://docbook.org/ns/docbook figure"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Figure function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Figure instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Figure instance.
func (me *XsdGoPkgHasElem_Figure) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Figure; fn != nil { fn(me) }
	me.Figure.Walk()
 }

type XsdGoPkgHasElem_Informalfigure struct {
	Informalfigure *TxsdInformalfigure `xml:"http://docbook.org/ns/docbook informalfigure"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Informalfigure function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Informalfigure instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Informalfigure instance.
func (me *XsdGoPkgHasElem_Informalfigure) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Informalfigure; fn != nil { fn(me) }
	me.Informalfigure.Walk()
 }

type XsdGoPkgHasElem_Inlinemediaobject struct {
	Inlinemediaobject *TxsdInlinemediaobject `xml:"http://docbook.org/ns/docbook inlinemediaobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Inlinemediaobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Inlinemediaobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Inlinemediaobject instance.
func (me *XsdGoPkgHasElem_Inlinemediaobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Inlinemediaobject; fn != nil { fn(me) }
	me.Inlinemediaobject.Walk()
 }

type XsdGoPkgHasElem_Videoobject struct {
	Videoobject *TxsdVideoobject `xml:"http://docbook.org/ns/docbook videoobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Videoobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Videoobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Videoobject instance.
func (me *XsdGoPkgHasElem_Videoobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Videoobject; fn != nil { fn(me) }
	me.Videoobject.Walk()
 }

type XsdGoPkgHasElem_Audioobject struct {
	Audioobject *TxsdAudioobject `xml:"http://docbook.org/ns/docbook audioobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Audioobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Audioobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Audioobject instance.
func (me *XsdGoPkgHasElem_Audioobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Audioobject; fn != nil { fn(me) }
	me.Audioobject.Walk()
 }

type XsdGoPkgHasElem_Imageobject struct {
	Imageobject *TxsdImageobject `xml:"http://docbook.org/ns/docbook imageobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Imageobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Imageobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Imageobject instance.
func (me *XsdGoPkgHasElem_Imageobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Imageobject; fn != nil { fn(me) }
	me.Imageobject.Walk()
 }

type XsdGoPkgHasElem_Textobject struct {
	Textobject *TxsdTextobject `xml:"http://docbook.org/ns/docbook textobject"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Textobject function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Textobject instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Textobject instance.
func (me *XsdGoPkgHasElem_Textobject) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Textobject; fn != nil { fn(me) }
	me.Textobject.Walk()
 }

type XsdGoPkgHasElems_Videodata struct {
	Videodatas []*TxsdVideodata `xml:"http://docbook.org/ns/docbook videodata"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Videodata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Videodata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Videodata instance.
func (me *XsdGoPkgHasElems_Videodata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Videodata; fn != nil { fn(me) }
	for _, x := range me.Videodatas { x.Walk() }
 }

type XsdGoPkgHasElems_Audiodata struct {
	Audiodatas []*TxsdAudiodata `xml:"http://docbook.org/ns/docbook audiodata"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Audiodata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Audiodata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Audiodata instance.
func (me *XsdGoPkgHasElems_Audiodata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Audiodata; fn != nil { fn(me) }
	for _, x := range me.Audiodatas { x.Walk() }
 }

type XsdGoPkgHasElems_Imagedata struct {
	Imagedatas []*TxsdImagedata `xml:"http://docbook.org/ns/docbook imagedata"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Imagedata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Imagedata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Imagedata instance.
func (me *XsdGoPkgHasElems_Imagedata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Imagedata; fn != nil { fn(me) }
	for _, x := range me.Imagedatas { x.Walk() }
 }

type XsdGoPkgHasElems_Textdata struct {
	Textdatas []*TxsdTextdata `xml:"http://docbook.org/ns/docbook textdata"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Textdata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Textdata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Textdata instance.
func (me *XsdGoPkgHasElems_Textdata) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Textdata; fn != nil { fn(me) }
	for _, x := range me.Textdatas { x.Walk() }
 }

type XsdGoPkgHasElems_Caption struct {
	Captions []*TxsdCaption `xml:"http://docbook.org/ns/docbook caption"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Caption function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Caption instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Caption instance.
func (me *XsdGoPkgHasElems_Caption) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Caption; fn != nil { fn(me) }
	for _, x := range me.Captions { x.Walk() }
 }

type XsdGoPkgHasElem_Address struct {
	Address *TxsdAddress `xml:"http://docbook.org/ns/docbook address"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Address function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Address instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Address instance.
func (me *XsdGoPkgHasElem_Address) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Address; fn != nil { fn(me) }
	me.Address.Walk()
 }

type XsdGoPkgHasElem_Street struct {
	Street *TxsdInterfacename `xml:"http://docbook.org/ns/docbook street"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Street function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Street instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Street instance.
func (me *XsdGoPkgHasElem_Street) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Street; fn != nil { fn(me) }
	me.Street.Walk()
 }

type XsdGoPkgHasElem_Pob struct {
	Pob *TxsdInterfacename `xml:"http://docbook.org/ns/docbook pob"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Pob function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Pob instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Pob instance.
func (me *XsdGoPkgHasElem_Pob) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Pob; fn != nil { fn(me) }
	me.Pob.Walk()
 }

type XsdGoPkgHasElem_Postcode struct {
	Postcode *TxsdInterfacename `xml:"http://docbook.org/ns/docbook postcode"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Postcode function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Postcode instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Postcode instance.
func (me *XsdGoPkgHasElem_Postcode) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Postcode; fn != nil { fn(me) }
	me.Postcode.Walk()
 }

type XsdGoPkgHasElem_City struct {
	City *TxsdInterfacename `xml:"http://docbook.org/ns/docbook city"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_City function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_City instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_City instance.
func (me *XsdGoPkgHasElem_City) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_City; fn != nil { fn(me) }
	me.City.Walk()
 }

type XsdGoPkgHasElem_State struct {
	State *TxsdInterfacename `xml:"http://docbook.org/ns/docbook state"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_State function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_State instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_State instance.
func (me *XsdGoPkgHasElem_State) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_State; fn != nil { fn(me) }
	me.State.Walk()
 }

type XsdGoPkgHasElem_Country struct {
	Country *TxsdInterfacename `xml:"http://docbook.org/ns/docbook country"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Country function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Country instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Country instance.
func (me *XsdGoPkgHasElem_Country) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Country; fn != nil { fn(me) }
	me.Country.Walk()
 }

type XsdGoPkgHasElem_Phone struct {
	Phone *TxsdInterfacename `xml:"http://docbook.org/ns/docbook phone"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Phone function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Phone instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Phone instance.
func (me *XsdGoPkgHasElem_Phone) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Phone; fn != nil { fn(me) }
	me.Phone.Walk()
 }

type XsdGoPkgHasElem_Fax struct {
	Fax *TxsdInterfacename `xml:"http://docbook.org/ns/docbook fax"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Fax function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Fax instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Fax instance.
func (me *XsdGoPkgHasElem_Fax) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Fax; fn != nil { fn(me) }
	me.Fax.Walk()
 }

type XsdGoPkgHasElem_Otheraddr struct {
	Otheraddr *TxsdInterfacename `xml:"http://docbook.org/ns/docbook otheraddr"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Otheraddr function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Otheraddr instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Otheraddr instance.
func (me *XsdGoPkgHasElem_Otheraddr) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Otheraddr; fn != nil { fn(me) }
	me.Otheraddr.Walk()
 }

type XsdGoPkgHasElem_Affiliation struct {
	Affiliation *TxsdAffiliation `xml:"http://docbook.org/ns/docbook affiliation"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Affiliation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Affiliation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Affiliation instance.
func (me *XsdGoPkgHasElem_Affiliation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Affiliation; fn != nil { fn(me) }
	me.Affiliation.Walk()
 }

type XsdGoPkgHasElems_Shortaffil struct {
	Shortaffils []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook shortaffil"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Shortaffil function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Shortaffil instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Shortaffil instance.
func (me *XsdGoPkgHasElems_Shortaffil) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Shortaffil; fn != nil { fn(me) }
	for _, x := range me.Shortaffils { x.Walk() }
 }

type XsdGoPkgHasElem_Jobtitle struct {
	Jobtitle *TxsdInterfacename `xml:"http://docbook.org/ns/docbook jobtitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Jobtitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Jobtitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Jobtitle instance.
func (me *XsdGoPkgHasElem_Jobtitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Jobtitle; fn != nil { fn(me) }
	me.Jobtitle.Walk()
 }

type XsdGoPkgHasElem_Orgdiv struct {
	Orgdiv *TxsdOrgdiv `xml:"http://docbook.org/ns/docbook orgdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Orgdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Orgdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Orgdiv instance.
func (me *XsdGoPkgHasElem_Orgdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Orgdiv; fn != nil { fn(me) }
	me.Orgdiv.Walk()
 }

type XsdGoPkgHasElem_Artpagenums struct {
	Artpagenums *TxsdFunction `xml:"http://docbook.org/ns/docbook artpagenums"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Artpagenums function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Artpagenums instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Artpagenums instance.
func (me *XsdGoPkgHasElem_Artpagenums) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Artpagenums; fn != nil { fn(me) }
	me.Artpagenums.Walk()
 }

type XsdGoPkgHasElem_Author struct {
	Author *TxsdAuthor `xml:"http://docbook.org/ns/docbook author"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Author function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Author instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Author instance.
func (me *XsdGoPkgHasElem_Author) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Author; fn != nil { fn(me) }
	me.Author.Walk()
 }

type XsdGoPkgHasElem_Authorgroup struct {
	Authorgroup *TxsdAuthorgroup `xml:"http://docbook.org/ns/docbook authorgroup"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Authorgroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Authorgroup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Authorgroup instance.
func (me *XsdGoPkgHasElem_Authorgroup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Authorgroup; fn != nil { fn(me) }
	me.Authorgroup.Walk()
 }

type XsdGoPkgHasElem_Collab struct {
	Collab *TxsdCollab `xml:"http://docbook.org/ns/docbook collab"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Collab function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Collab instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Collab instance.
func (me *XsdGoPkgHasElem_Collab) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Collab; fn != nil { fn(me) }
	me.Collab.Walk()
 }

type XsdGoPkgHasElem_Authorinitials struct {
	Authorinitials *TxsdInterfacename `xml:"http://docbook.org/ns/docbook authorinitials"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Authorinitials function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Authorinitials instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Authorinitials instance.
func (me *XsdGoPkgHasElem_Authorinitials) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Authorinitials; fn != nil { fn(me) }
	me.Authorinitials.Walk()
 }

type XsdGoPkgHasElem_Person struct {
	Person *TxsdPerson `xml:"http://docbook.org/ns/docbook person"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Person function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Person instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Person instance.
func (me *XsdGoPkgHasElem_Person) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Person; fn != nil { fn(me) }
	me.Person.Walk()
 }

type XsdGoPkgHasElem_Confgroup struct {
	Confgroup *TxsdConfgroup `xml:"http://docbook.org/ns/docbook confgroup"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Confgroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Confgroup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Confgroup instance.
func (me *XsdGoPkgHasElem_Confgroup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Confgroup; fn != nil { fn(me) }
	me.Confgroup.Walk()
 }

type XsdGoPkgHasElem_Confdates struct {
	Confdates *TxsdFunction `xml:"http://docbook.org/ns/docbook confdates"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Confdates function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Confdates instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Confdates instance.
func (me *XsdGoPkgHasElem_Confdates) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Confdates; fn != nil { fn(me) }
	me.Confdates.Walk()
 }

type XsdGoPkgHasElem_Conftitle struct {
	Conftitle *TxsdFunction `xml:"http://docbook.org/ns/docbook conftitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Conftitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Conftitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Conftitle instance.
func (me *XsdGoPkgHasElem_Conftitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Conftitle; fn != nil { fn(me) }
	me.Conftitle.Walk()
 }

type XsdGoPkgHasElem_Confnum struct {
	Confnum *TxsdFunction `xml:"http://docbook.org/ns/docbook confnum"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Confnum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Confnum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Confnum instance.
func (me *XsdGoPkgHasElem_Confnum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Confnum; fn != nil { fn(me) }
	me.Confnum.Walk()
 }

type XsdGoPkgHasElem_Confsponsor struct {
	Confsponsor *TxsdFunction `xml:"http://docbook.org/ns/docbook confsponsor"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Confsponsor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Confsponsor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Confsponsor instance.
func (me *XsdGoPkgHasElem_Confsponsor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Confsponsor; fn != nil { fn(me) }
	me.Confsponsor.Walk()
 }

type XsdGoPkgHasElem_Contractnum struct {
	Contractnum *TxsdFunction `xml:"http://docbook.org/ns/docbook contractnum"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Contractnum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Contractnum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Contractnum instance.
func (me *XsdGoPkgHasElem_Contractnum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Contractnum; fn != nil { fn(me) }
	me.Contractnum.Walk()
 }

type XsdGoPkgHasElem_Contractsponsor struct {
	Contractsponsor *TxsdFunction `xml:"http://docbook.org/ns/docbook contractsponsor"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Contractsponsor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Contractsponsor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Contractsponsor instance.
func (me *XsdGoPkgHasElem_Contractsponsor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Contractsponsor; fn != nil { fn(me) }
	me.Contractsponsor.Walk()
 }

type XsdGoPkgHasElem_Copyright struct {
	Copyright *TxsdCopyright `xml:"http://docbook.org/ns/docbook copyright"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Copyright function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Copyright instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Copyright instance.
func (me *XsdGoPkgHasElem_Copyright) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Copyright; fn != nil { fn(me) }
	me.Copyright.Walk()
 }

type XsdGoPkgHasElem_Year struct {
	Year *TxsdFunction `xml:"http://docbook.org/ns/docbook year"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Year function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Year instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Year instance.
func (me *XsdGoPkgHasElem_Year) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Year; fn != nil { fn(me) }
	me.Year.Walk()
 }

type XsdGoPkgHasElem_Holder struct {
	Holder *TxsdFunction `xml:"http://docbook.org/ns/docbook holder"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Holder function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Holder instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Holder instance.
func (me *XsdGoPkgHasElem_Holder) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Holder; fn != nil { fn(me) }
	me.Holder.Walk()
 }

type XsdGoPkgHasElem_Cover struct {
	Cover *TxsdCover `xml:"http://docbook.org/ns/docbook cover"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Cover function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Cover instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Cover instance.
func (me *XsdGoPkgHasElem_Cover) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Cover; fn != nil { fn(me) }
	me.Cover.Walk()
 }

type XsdGoPkgHasElem_Edition struct {
	Edition *TxsdFunction `xml:"http://docbook.org/ns/docbook edition"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Edition function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Edition instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Edition instance.
func (me *XsdGoPkgHasElem_Edition) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Edition; fn != nil { fn(me) }
	me.Edition.Walk()
 }

type XsdGoPkgHasElem_Editor struct {
	Editor *TxsdEditor `xml:"http://docbook.org/ns/docbook editor"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Editor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Editor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Editor instance.
func (me *XsdGoPkgHasElem_Editor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Editor; fn != nil { fn(me) }
	me.Editor.Walk()
 }

type XsdGoPkgHasElem_Biblioid struct {
	Biblioid *TxsdBiblioid `xml:"http://docbook.org/ns/docbook biblioid"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Biblioid function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Biblioid instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Biblioid instance.
func (me *XsdGoPkgHasElem_Biblioid) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Biblioid; fn != nil { fn(me) }
	me.Biblioid.Walk()
 }

type XsdGoPkgHasElem_Citebiblioid struct {
	Citebiblioid *TxsdCitebiblioid `xml:"http://docbook.org/ns/docbook citebiblioid"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Citebiblioid function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Citebiblioid instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Citebiblioid instance.
func (me *XsdGoPkgHasElem_Citebiblioid) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Citebiblioid; fn != nil { fn(me) }
	me.Citebiblioid.Walk()
 }

type XsdGoPkgHasElem_Bibliosource struct {
	Bibliosource *TxsdBibliosource `xml:"http://docbook.org/ns/docbook bibliosource"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliosource function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliosource instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliosource instance.
func (me *XsdGoPkgHasElem_Bibliosource) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliosource; fn != nil { fn(me) }
	me.Bibliosource.Walk()
 }

type XsdGoPkgHasElem_Bibliorelation struct {
	Bibliorelation *TxsdBibliorelation `xml:"http://docbook.org/ns/docbook bibliorelation"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliorelation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliorelation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliorelation instance.
func (me *XsdGoPkgHasElem_Bibliorelation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliorelation; fn != nil { fn(me) }
	me.Bibliorelation.Walk()
 }

type XsdGoPkgHasElem_Bibliocoverage struct {
	Bibliocoverage *TxsdBibliocoverage `xml:"http://docbook.org/ns/docbook bibliocoverage"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliocoverage function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliocoverage instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliocoverage instance.
func (me *XsdGoPkgHasElem_Bibliocoverage) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliocoverage; fn != nil { fn(me) }
	me.Bibliocoverage.Walk()
 }

type XsdGoPkgHasElem_Legalnotice struct {
	Legalnotice *TxsdConstraintdef `xml:"http://docbook.org/ns/docbook legalnotice"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Legalnotice function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Legalnotice instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Legalnotice instance.
func (me *XsdGoPkgHasElem_Legalnotice) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Legalnotice; fn != nil { fn(me) }
	me.Legalnotice.Walk()
 }

type XsdGoPkgHasElem_Othercredit struct {
	Othercredit *TxsdOthercredit `xml:"http://docbook.org/ns/docbook othercredit"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Othercredit function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Othercredit instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Othercredit instance.
func (me *XsdGoPkgHasElem_Othercredit) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Othercredit; fn != nil { fn(me) }
	me.Othercredit.Walk()
 }

type XsdGoPkgHasElem_Pagenums struct {
	Pagenums *TxsdFunction `xml:"http://docbook.org/ns/docbook pagenums"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Pagenums function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Pagenums instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Pagenums instance.
func (me *XsdGoPkgHasElem_Pagenums) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Pagenums; fn != nil { fn(me) }
	me.Pagenums.Walk()
 }

type XsdGoPkgHasElem_Contrib struct {
	Contrib *TxsdContrib `xml:"http://docbook.org/ns/docbook contrib"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Contrib function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Contrib instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Contrib instance.
func (me *XsdGoPkgHasElem_Contrib) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Contrib; fn != nil { fn(me) }
	me.Contrib.Walk()
 }

type XsdGoPkgHasElem_Honorific struct {
	Honorific *TxsdInterfacename `xml:"http://docbook.org/ns/docbook honorific"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Honorific function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Honorific instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Honorific instance.
func (me *XsdGoPkgHasElem_Honorific) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Honorific; fn != nil { fn(me) }
	me.Honorific.Walk()
 }

type XsdGoPkgHasElem_Firstname struct {
	Firstname *TxsdInterfacename `xml:"http://docbook.org/ns/docbook firstname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Firstname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Firstname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Firstname instance.
func (me *XsdGoPkgHasElem_Firstname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Firstname; fn != nil { fn(me) }
	me.Firstname.Walk()
 }

type XsdGoPkgHasElem_Surname struct {
	Surname *TxsdInterfacename `xml:"http://docbook.org/ns/docbook surname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Surname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Surname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Surname instance.
func (me *XsdGoPkgHasElem_Surname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Surname; fn != nil { fn(me) }
	me.Surname.Walk()
 }

type XsdGoPkgHasElem_Lineage struct {
	Lineage *TxsdInterfacename `xml:"http://docbook.org/ns/docbook lineage"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Lineage function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Lineage instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Lineage instance.
func (me *XsdGoPkgHasElem_Lineage) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Lineage; fn != nil { fn(me) }
	me.Lineage.Walk()
 }

type XsdGoPkgHasElem_Othername struct {
	Othername *TxsdInterfacename `xml:"http://docbook.org/ns/docbook othername"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Othername function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Othername instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Othername instance.
func (me *XsdGoPkgHasElem_Othername) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Othername; fn != nil { fn(me) }
	me.Othername.Walk()
 }

type XsdGoPkgHasElem_Printhistory struct {
	Printhistory *TxsdPrinthistory `xml:"http://docbook.org/ns/docbook printhistory"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Printhistory function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Printhistory instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Printhistory instance.
func (me *XsdGoPkgHasElem_Printhistory) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Printhistory; fn != nil { fn(me) }
	me.Printhistory.Walk()
 }

type XsdGoPkgHasElem_Pubdate struct {
	Pubdate *TxsdDate `xml:"http://docbook.org/ns/docbook pubdate"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Pubdate function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Pubdate instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Pubdate instance.
func (me *XsdGoPkgHasElem_Pubdate) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Pubdate; fn != nil { fn(me) }
	me.Pubdate.Walk()
 }

type XsdGoPkgHasElem_Publisher struct {
	Publisher *TxsdPublisher `xml:"http://docbook.org/ns/docbook publisher"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Publisher function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Publisher instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Publisher instance.
func (me *XsdGoPkgHasElem_Publisher) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Publisher; fn != nil { fn(me) }
	me.Publisher.Walk()
 }

type XsdGoPkgHasElem_Releaseinfo struct {
	Releaseinfo *TxsdFunction `xml:"http://docbook.org/ns/docbook releaseinfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Releaseinfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Releaseinfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Releaseinfo instance.
func (me *XsdGoPkgHasElem_Releaseinfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Releaseinfo; fn != nil { fn(me) }
	me.Releaseinfo.Walk()
 }

type XsdGoPkgHasElem_Revhistory struct {
	Revhistory *TxsdRevhistory `xml:"http://docbook.org/ns/docbook revhistory"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Revhistory function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Revhistory instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Revhistory instance.
func (me *XsdGoPkgHasElem_Revhistory) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Revhistory; fn != nil { fn(me) }
	me.Revhistory.Walk()
 }

type XsdGoPkgHasElem_Revision struct {
	Revision *TxsdRevision `xml:"http://docbook.org/ns/docbook revision"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Revision function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Revision instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Revision instance.
func (me *XsdGoPkgHasElem_Revision) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Revision; fn != nil { fn(me) }
	me.Revision.Walk()
 }

type XsdGoPkgHasElems_Revnumber struct {
	Revnumbers []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook revnumber"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Revnumber function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Revnumber instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Revnumber instance.
func (me *XsdGoPkgHasElems_Revnumber) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Revnumber; fn != nil { fn(me) }
	for _, x := range me.Revnumbers { x.Walk() }
 }

type XsdGoPkgHasElems_Revremark struct {
	Revremarks []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook revremark"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Revremark function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Revremark instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Revremark instance.
func (me *XsdGoPkgHasElems_Revremark) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Revremark; fn != nil { fn(me) }
	for _, x := range me.Revremarks { x.Walk() }
 }

type XsdGoPkgHasElems_Revdescription struct {
	Revdescriptions []*TxsdRevdescription `xml:"http://docbook.org/ns/docbook revdescription"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Revdescription function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Revdescription instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Revdescription instance.
func (me *XsdGoPkgHasElems_Revdescription) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Revdescription; fn != nil { fn(me) }
	for _, x := range me.Revdescriptions { x.Walk() }
 }

type XsdGoPkgHasElem_Seriesvolnums struct {
	Seriesvolnums *TxsdFunction `xml:"http://docbook.org/ns/docbook seriesvolnums"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Seriesvolnums function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Seriesvolnums instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Seriesvolnums instance.
func (me *XsdGoPkgHasElem_Seriesvolnums) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Seriesvolnums; fn != nil { fn(me) }
	me.Seriesvolnums.Walk()
 }

type XsdGoPkgHasElem_Volumenum struct {
	Volumenum *TxsdFunction `xml:"http://docbook.org/ns/docbook volumenum"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Volumenum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Volumenum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Volumenum instance.
func (me *XsdGoPkgHasElem_Volumenum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Volumenum; fn != nil { fn(me) }
	me.Volumenum.Walk()
 }

type XsdGoPkgHasElem_Issuenum struct {
	Issuenum *TxsdFunction `xml:"http://docbook.org/ns/docbook issuenum"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Issuenum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Issuenum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Issuenum instance.
func (me *XsdGoPkgHasElem_Issuenum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Issuenum; fn != nil { fn(me) }
	me.Issuenum.Walk()
 }

type XsdGoPkgHasElem_Package struct {
	Package *TxsdInterfacename `xml:"http://docbook.org/ns/docbook package"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Package function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Package instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Package instance.
func (me *XsdGoPkgHasElem_Package) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Package; fn != nil { fn(me) }
	me.Package.Walk()
 }

type XsdGoPkgHasElem_Email struct {
	Email *TxsdInterfacename `xml:"http://docbook.org/ns/docbook email"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Email function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Email instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Email instance.
func (me *XsdGoPkgHasElem_Email) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Email; fn != nil { fn(me) }
	me.Email.Walk()
 }

type XsdGoPkgHasElem_Lineannotation struct {
	Lineannotation *TxsdInterfacename `xml:"http://docbook.org/ns/docbook lineannotation"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Lineannotation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Lineannotation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Lineannotation instance.
func (me *XsdGoPkgHasElem_Lineannotation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Lineannotation; fn != nil { fn(me) }
	me.Lineannotation.Walk()
 }

type XsdGoPkgHasElem_Replaceable struct {
	Replaceable *TxsdReplaceable `xml:"http://docbook.org/ns/docbook replaceable"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Replaceable function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Replaceable instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Replaceable instance.
func (me *XsdGoPkgHasElem_Replaceable) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Replaceable; fn != nil { fn(me) }
	me.Replaceable.Walk()
 }

type XsdGoPkgHasElem_Uri struct {
	Uri *TxsdUri `xml:"http://docbook.org/ns/docbook uri"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Uri function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Uri instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Uri instance.
func (me *XsdGoPkgHasElem_Uri) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Uri; fn != nil { fn(me) }
	me.Uri.Walk()
 }

type XsdGoPkgHasElem_Citation struct {
	Citation *TxsdCitation `xml:"http://docbook.org/ns/docbook citation"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Citation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Citation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Citation instance.
func (me *XsdGoPkgHasElem_Citation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Citation; fn != nil { fn(me) }
	me.Citation.Walk()
 }

type XsdGoPkgHasElem_Citerefentry struct {
	Citerefentry *TxsdCiterefentry `xml:"http://docbook.org/ns/docbook citerefentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Citerefentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Citerefentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Citerefentry instance.
func (me *XsdGoPkgHasElem_Citerefentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Citerefentry; fn != nil { fn(me) }
	me.Citerefentry.Walk()
 }

type XsdGoPkgHasElems_Refentrytitle struct {
	Refentrytitles []*TxsdRefentrytitle `xml:"http://docbook.org/ns/docbook refentrytitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refentrytitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refentrytitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refentrytitle instance.
func (me *XsdGoPkgHasElems_Refentrytitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refentrytitle; fn != nil { fn(me) }
	for _, x := range me.Refentrytitles { x.Walk() }
 }

type XsdGoPkgHasElems_Manvolnum struct {
	Manvolnums []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook manvolnum"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Manvolnum function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Manvolnum instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Manvolnum instance.
func (me *XsdGoPkgHasElems_Manvolnum) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Manvolnum; fn != nil { fn(me) }
	for _, x := range me.Manvolnums { x.Walk() }
 }

type XsdGoPkgHasElem_Citetitle struct {
	Citetitle *TxsdCitetitle `xml:"http://docbook.org/ns/docbook citetitle"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Citetitle function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Citetitle instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Citetitle instance.
func (me *XsdGoPkgHasElem_Citetitle) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Citetitle; fn != nil { fn(me) }
	me.Citetitle.Walk()
 }

type XsdGoPkgHasElem_Emphasis struct {
	Emphasis *TxsdEmphasis `xml:"http://docbook.org/ns/docbook emphasis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Emphasis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Emphasis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Emphasis instance.
func (me *XsdGoPkgHasElem_Emphasis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Emphasis; fn != nil { fn(me) }
	me.Emphasis.Walk()
 }

type XsdGoPkgHasElem_Foreignphrase struct {
	Foreignphrase *TxsdForeignphrase `xml:"http://docbook.org/ns/docbook foreignphrase"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Foreignphrase function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Foreignphrase instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Foreignphrase instance.
func (me *XsdGoPkgHasElem_Foreignphrase) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Foreignphrase; fn != nil { fn(me) }
	me.Foreignphrase.Walk()
 }

type XsdGoPkgHasElem_Quote struct {
	Quote *TxsdQuote `xml:"http://docbook.org/ns/docbook quote"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Quote function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Quote instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Quote instance.
func (me *XsdGoPkgHasElem_Quote) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Quote; fn != nil { fn(me) }
	me.Quote.Walk()
 }

type XsdGoPkgHasElem_Subscript struct {
	Subscript *TxsdSubscript `xml:"http://docbook.org/ns/docbook subscript"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Subscript function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Subscript instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Subscript instance.
func (me *XsdGoPkgHasElem_Subscript) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Subscript; fn != nil { fn(me) }
	me.Subscript.Walk()
 }

type XsdGoPkgHasElem_Superscript struct {
	Superscript *TxsdSuperscript `xml:"http://docbook.org/ns/docbook superscript"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Superscript function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Superscript instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Superscript instance.
func (me *XsdGoPkgHasElem_Superscript) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Superscript; fn != nil { fn(me) }
	me.Superscript.Walk()
 }

type XsdGoPkgHasElem_Trademark struct {
	Trademark *TxsdTrademark `xml:"http://docbook.org/ns/docbook trademark"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Trademark function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Trademark instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Trademark instance.
func (me *XsdGoPkgHasElem_Trademark) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Trademark; fn != nil { fn(me) }
	me.Trademark.Walk()
 }

type XsdGoPkgHasElem_Wordasword struct {
	Wordasword *TxsdInterfacename `xml:"http://docbook.org/ns/docbook wordasword"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Wordasword function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Wordasword instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Wordasword instance.
func (me *XsdGoPkgHasElem_Wordasword) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Wordasword; fn != nil { fn(me) }
	me.Wordasword.Walk()
 }

type XsdGoPkgHasElem_Footnoteref struct {
	Footnoteref *TxsdCoref `xml:"http://docbook.org/ns/docbook footnoteref"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Footnoteref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Footnoteref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Footnoteref instance.
func (me *XsdGoPkgHasElem_Footnoteref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Footnoteref; fn != nil { fn(me) }
	me.Footnoteref.Walk()
 }

type XsdGoPkgHasElem_Xref struct {
	Xref *TxsdXref `xml:"http://docbook.org/ns/docbook xref"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Xref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Xref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Xref instance.
func (me *XsdGoPkgHasElem_Xref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Xref; fn != nil { fn(me) }
	me.Xref.Walk()
 }

type XsdGoPkgHasElem_Link struct {
	Link *TxsdLink `xml:"http://docbook.org/ns/docbook link"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Link function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Link instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Link instance.
func (me *XsdGoPkgHasElem_Link) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Link; fn != nil { fn(me) }
	me.Link.Walk()
 }

type XsdGoPkgHasElem_Olink struct {
	Olink *TxsdOlink `xml:"http://docbook.org/ns/docbook olink"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Olink function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Olink instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Olink instance.
func (me *XsdGoPkgHasElem_Olink) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Olink; fn != nil { fn(me) }
	me.Olink.Walk()
 }

type XsdGoPkgHasElem_Anchor struct {
	Anchor *TxsdAnchor `xml:"http://docbook.org/ns/docbook anchor"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Anchor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Anchor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Anchor instance.
func (me *XsdGoPkgHasElem_Anchor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Anchor; fn != nil { fn(me) }
	me.Anchor.Walk()
 }

type XsdGoPkgHasAttr_Status_XsdtString_ struct {
	Status xsdt.String `xml:"http://docbook.org/ns/docbook status,attr"`

}

type TxsdSeealsoie struct {
	XsdGoPkgHasAttr_Linkends_XsdtIdrefs_

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Glossterm

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Package

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdSeealsoie function is not nil (ie. was set by outside code), calls it with this TxsdSeealsoie instance as the single argument. Then calls the Walk() method on 99/102 embed(s) and 0/0 field(s) belonging to this TxsdSeealsoie instance.
func (me *TxsdSeealsoie) Walk ()  { 
	if fn := WalkHandlers.TxsdSeealsoie; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Uri.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Function.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Envar.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Author.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Link.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Trademark.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Olink.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Termdef.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
 }

type XsdGoPkgHasElems_Seealsoie struct {
	Seealsoies []*TxsdSeealsoie `xml:"http://docbook.org/ns/docbook seealsoie"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Seealsoie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Seealsoie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Seealsoie instance.
func (me *XsdGoPkgHasElems_Seealsoie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Seealsoie; fn != nil { fn(me) }
	for _, x := range me.Seealsoies { x.Walk() }
 }

type XsdGoPkgHasElem_Primaryie struct {
	Primaryie *TxsdSeealsoie `xml:"http://docbook.org/ns/docbook primaryie"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Primaryie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Primaryie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Primaryie instance.
func (me *XsdGoPkgHasElem_Primaryie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Primaryie; fn != nil { fn(me) }
	me.Primaryie.Walk()
 }

type XsdGoPkgHasElems_Seeie struct {
	Seeies []*TxsdTitle `xml:"http://docbook.org/ns/docbook seeie"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Seeie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Seeie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Seeie instance.
func (me *XsdGoPkgHasElems_Seeie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Seeie; fn != nil { fn(me) }
	for _, x := range me.Seeies { x.Walk() }
 }

type XsdGoPkgHasElems_Secondaryie struct {
	Secondaryies []*TxsdSeealsoie `xml:"http://docbook.org/ns/docbook secondaryie"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Secondaryie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Secondaryie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Secondaryie instance.
func (me *XsdGoPkgHasElems_Secondaryie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Secondaryie; fn != nil { fn(me) }
	for _, x := range me.Secondaryies { x.Walk() }
 }

type XsdGoPkgHasElems_Tertiaryie struct {
	Tertiaryies []*TxsdSeealsoie `xml:"http://docbook.org/ns/docbook tertiaryie"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tertiaryie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tertiaryie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tertiaryie instance.
func (me *XsdGoPkgHasElems_Tertiaryie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tertiaryie; fn != nil { fn(me) }
	for _, x := range me.Tertiaryies { x.Walk() }
 }

type TxsdIndexentry struct {
	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Seealsoie

	XsdGoPkgHasElem_Primaryie

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Seeie

	XsdGoPkgHasElems_Secondaryie

	XsdGoPkgHasElems_Tertiaryie

}

//	If the WalkHandlers.TxsdIndexentry function is not nil (ie. was set by outside code), calls it with this TxsdIndexentry instance as the single argument. Then calls the Walk() method on 5/8 embed(s) and 0/0 field(s) belonging to this TxsdIndexentry instance.
func (me *TxsdIndexentry) Walk ()  { 
	if fn := WalkHandlers.TxsdIndexentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Seealsoie.Walk()
	me.XsdGoPkgHasElem_Primaryie.Walk()
	me.XsdGoPkgHasElems_Seeie.Walk()
	me.XsdGoPkgHasElems_Secondaryie.Walk()
	me.XsdGoPkgHasElems_Tertiaryie.Walk()
 }

type XsdGoPkgHasElems_Indexentry struct {
	Indexentries []*TxsdIndexentry `xml:"http://docbook.org/ns/docbook indexentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Indexentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Indexentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Indexentry instance.
func (me *XsdGoPkgHasElems_Indexentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Indexentry; fn != nil { fn(me) }
	for _, x := range me.Indexentries { x.Walk() }
 }

type TxsdIndexdiv struct {
	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElem_Segmentedlist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Indexentry

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Task

}

//	If the WalkHandlers.TxsdIndexdiv function is not nil (ie. was set by outside code), calls it with this TxsdIndexdiv instance as the single argument. Then calls the Walk() method on 60/65 embed(s) and 0/0 field(s) belonging to this TxsdIndexdiv instance.
func (me *TxsdIndexdiv) Walk ()  { 
	if fn := WalkHandlers.TxsdIndexdiv; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElem_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Indexentry.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
 }

type XsdGoPkgHasElems_Indexdiv struct {
	Indexdivs []*TxsdIndexdiv `xml:"http://docbook.org/ns/docbook indexdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Indexdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Indexdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Indexdiv instance.
func (me *XsdGoPkgHasElems_Indexdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Indexdiv; fn != nil { fn(me) }
	for _, x := range me.Indexdivs { x.Walk() }
 }

type TxsdSetindex struct {
	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasAttr_Type_XsdtString_

	XsdGoPkgHasElems_Important

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Indexentry

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Indexdiv

	XsdGoPkgHasElems_Variablelist

}

//	If the WalkHandlers.TxsdSetindex function is not nil (ie. was set by outside code), calls it with this TxsdSetindex instance as the single argument. Then calls the Walk() method on 61/67 embed(s) and 0/0 field(s) belonging to this TxsdSetindex instance.
func (me *TxsdSetindex) Walk ()  { 
	if fn := WalkHandlers.TxsdSetindex; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Indexentry.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Indexdiv.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
 }

type XsdGoPkgHasElem_Setindex struct {
	Setindex *TxsdSetindex `xml:"http://docbook.org/ns/docbook setindex"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Setindex function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Setindex instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Setindex instance.
func (me *XsdGoPkgHasElem_Setindex) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Setindex; fn != nil { fn(me) }
	me.Setindex.Walk()
 }

type TxsdColophon struct {
	XsdGoPkgHasElems_Title

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Note

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Screenco

}

//	If the WalkHandlers.TxsdColophon function is not nil (ie. was set by outside code), calls it with this TxsdColophon instance as the single argument. Then calls the Walk() method on 59/64 embed(s) and 0/0 field(s) belonging to this TxsdColophon instance.
func (me *TxsdColophon) Walk ()  { 
	if fn := WalkHandlers.TxsdColophon; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
 }

type XsdGoPkgHasElems_Colophon struct {
	Colophons []*TxsdColophon `xml:"http://docbook.org/ns/docbook colophon"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Colophon function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Colophon instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Colophon instance.
func (me *XsdGoPkgHasElems_Colophon) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Colophon; fn != nil { fn(me) }
	for _, x := range me.Colophons { x.Walk() }
 }

type TxsdBibliodiv struct {
	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Biblioentry

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Task

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bibliomixed

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Title

}

//	If the WalkHandlers.TxsdBibliodiv function is not nil (ie. was set by outside code), calls it with this TxsdBibliodiv instance as the single argument. Then calls the Walk() method on 61/66 embed(s) and 0/0 field(s) belonging to this TxsdBibliodiv instance.
func (me *TxsdBibliodiv) Walk ()  { 
	if fn := WalkHandlers.TxsdBibliodiv; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Bibliomixed.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Biblioentry.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
 }

type XsdGoPkgHasElems_Bibliodiv struct {
	Bibliodivs []*TxsdBibliodiv `xml:"http://docbook.org/ns/docbook bibliodiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliodiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliodiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliodiv instance.
func (me *XsdGoPkgHasElems_Bibliodiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliodiv; fn != nil { fn(me) }
	for _, x := range me.Bibliodivs { x.Walk() }
 }

type TxsdBibliography struct {
	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bibliomixed

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Biblioentry

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Bibliodiv

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Informalequation

}

//	If the WalkHandlers.TxsdBibliography function is not nil (ie. was set by outside code), calls it with this TxsdBibliography instance as the single argument. Then calls the Walk() method on 62/67 embed(s) and 0/0 field(s) belonging to this TxsdBibliography instance.
func (me *TxsdBibliography) Walk ()  { 
	if fn := WalkHandlers.TxsdBibliography; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Bibliodiv.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Bibliomixed.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Biblioentry.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
 }

type XsdGoPkgHasElems_Bibliography struct {
	Bibliographies []*TxsdBibliography `xml:"http://docbook.org/ns/docbook bibliography"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Bibliography function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Bibliography instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Bibliography instance.
func (me *XsdGoPkgHasElems_Bibliography) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Bibliography; fn != nil { fn(me) }
	for _, x := range me.Bibliographies { x.Walk() }
 }

type TxsdTocentry struct {
	XsdGoPkgHasElems_Menuchoice

	XsdGoPkgHasElems_Command

	XsdGoPkgHasElems_Errortext

	XsdGoPkgHasElems_Citetitle

	XsdGoPkgHasElems_Keycombo

	XsdGoPkgHasElems_Firstterm

	XsdGoPkgHasElems_Orgname

	XsdGoPkgHasElems_Varname

	XsdGoPkgHasElems_Subscript

	XsdGoPkgHasElems_Footnoteref

	XsdGoPkgHasElems_Option

	XsdGoPkgHasElems_Type

	XsdGoPkgHasElems_Optional

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Modifier

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasElems_Errorname

	XsdGoPkgHasElems_Productnumber

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Personname

	XsdGoPkgHasElems_Citebiblioid

	XsdGoPkgHasElems_Quote

	XsdGoPkgHasElems_Guibutton

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasElems_Foreignphrase

	XsdGoPkgHasElems_Acronym

	XsdGoPkgHasElems_Nonterminal

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasAttr_Pagenum_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Author

	XsdGoPkgHasElems_Emphasis

	XsdGoPkgHasElems_Keycode

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Token

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Hardware

	XsdGoPkgHasElems_Accel

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Systemitem

	XsdGoPkgHasElems_Date

	XsdGoPkgHasElems_Filename

	XsdGoPkgHasElems_Guisubmenu

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Coref

	XsdGoPkgHasElems_Application

	XsdGoPkgHasElems_Returnvalue

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Exceptionname

	XsdGoPkgHasElems_Interfacename

	XsdGoPkgHasElems_Errorcode

	XsdGoPkgHasElems_Org

	XsdGoPkgHasElems_Jobtitle

	XsdGoPkgHasElems_Keysym

	XsdGoPkgHasElems_Prompt

	XsdGoPkgHasElems_Property

	XsdGoPkgHasElems_Citation

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasElems_Ooclass

	XsdGoPkgHasElems_Tag

	XsdGoPkgHasElems_Trademark

	XsdGoPkgHasElems_Markup

	XsdGoPkgHasElems_Database

	XsdGoPkgHasElems_Editor

	XsdGoPkgHasElems_Literal

	XsdGoPkgHasElems_Computeroutput

	XsdGoPkgHasElems_Uri

	XsdGoPkgHasElems_Guimenu

	XsdGoPkgHasElems_Inlineequation

	XsdGoPkgHasElems_Parameter

	XsdGoPkgHasElems_Envar

	XsdGoPkgHasElems_Methodname

	XsdGoPkgHasElems_Shortcut

	XsdGoPkgHasElems_Symbol

	XsdGoPkgHasElems_Initializer

	XsdGoPkgHasElems_Ooexception

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasElems_Wordasword

	XsdGoPkgHasElems_Constant

	XsdGoPkgHasElems_Classname

	XsdGoPkgHasElems_Abbrev

	XsdGoPkgHasElems_Guilabel

	XsdGoPkgHasElems_Guimenuitem

	XsdGoPkgHasElems_Package

	XsdGoPkgHasElems_Footnote

	XsdGoPkgHasElems_Function

	XsdGoPkgHasElems_Mousebutton

	XsdGoPkgHasElems_Code

	XsdGoPkgHasElems_Citerefentry

	XsdGoPkgHasElems_Userinput

	XsdGoPkgHasElems_Person

	XsdGoPkgHasElems_Termdef

	XsdGoPkgHasElems_Productname

	XsdGoPkgHasElems_Guiicon

	XsdGoPkgHasElems_Errortype

	XsdGoPkgHasElems_Email

	XsdGoPkgHasElems_Keycap

	XsdGoPkgHasElems_Oointerface

	XsdGoPkgHasElems_Glossterm

}

//	If the WalkHandlers.TxsdTocentry function is not nil (ie. was set by outside code), calls it with this TxsdTocentry instance as the single argument. Then calls the Walk() method on 99/103 embed(s) and 0/0 field(s) belonging to this TxsdTocentry instance.
func (me *TxsdTocentry) Walk ()  { 
	if fn := WalkHandlers.TxsdTocentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Markup.Walk()
	me.XsdGoPkgHasElems_Database.Walk()
	me.XsdGoPkgHasElems_Editor.Walk()
	me.XsdGoPkgHasElems_Literal.Walk()
	me.XsdGoPkgHasElems_Computeroutput.Walk()
	me.XsdGoPkgHasElems_Uri.Walk()
	me.XsdGoPkgHasElems_Guimenu.Walk()
	me.XsdGoPkgHasElems_Inlineequation.Walk()
	me.XsdGoPkgHasElems_Parameter.Walk()
	me.XsdGoPkgHasElems_Envar.Walk()
	me.XsdGoPkgHasElems_Methodname.Walk()
	me.XsdGoPkgHasElems_Shortcut.Walk()
	me.XsdGoPkgHasElems_Symbol.Walk()
	me.XsdGoPkgHasElems_Initializer.Walk()
	me.XsdGoPkgHasElems_Ooexception.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Wordasword.Walk()
	me.XsdGoPkgHasElems_Constant.Walk()
	me.XsdGoPkgHasElems_Classname.Walk()
	me.XsdGoPkgHasElems_Abbrev.Walk()
	me.XsdGoPkgHasElems_Guilabel.Walk()
	me.XsdGoPkgHasElems_Guimenuitem.Walk()
	me.XsdGoPkgHasElems_Package.Walk()
	me.XsdGoPkgHasElems_Footnote.Walk()
	me.XsdGoPkgHasElems_Function.Walk()
	me.XsdGoPkgHasElems_Mousebutton.Walk()
	me.XsdGoPkgHasElems_Code.Walk()
	me.XsdGoPkgHasElems_Citerefentry.Walk()
	me.XsdGoPkgHasElems_Userinput.Walk()
	me.XsdGoPkgHasElems_Person.Walk()
	me.XsdGoPkgHasElems_Termdef.Walk()
	me.XsdGoPkgHasElems_Productname.Walk()
	me.XsdGoPkgHasElems_Guiicon.Walk()
	me.XsdGoPkgHasElems_Errortype.Walk()
	me.XsdGoPkgHasElems_Email.Walk()
	me.XsdGoPkgHasElems_Keycap.Walk()
	me.XsdGoPkgHasElems_Oointerface.Walk()
	me.XsdGoPkgHasElems_Glossterm.Walk()
	me.XsdGoPkgHasElems_Menuchoice.Walk()
	me.XsdGoPkgHasElems_Command.Walk()
	me.XsdGoPkgHasElems_Errortext.Walk()
	me.XsdGoPkgHasElems_Citetitle.Walk()
	me.XsdGoPkgHasElems_Keycombo.Walk()
	me.XsdGoPkgHasElems_Firstterm.Walk()
	me.XsdGoPkgHasElems_Orgname.Walk()
	me.XsdGoPkgHasElems_Varname.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Footnoteref.Walk()
	me.XsdGoPkgHasElems_Option.Walk()
	me.XsdGoPkgHasElems_Type.Walk()
	me.XsdGoPkgHasElems_Optional.Walk()
	me.XsdGoPkgHasElems_Modifier.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
	me.XsdGoPkgHasElems_Errorname.Walk()
	me.XsdGoPkgHasElems_Productnumber.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Olink.Walk()
	me.XsdGoPkgHasElems_Personname.Walk()
	me.XsdGoPkgHasElems_Citebiblioid.Walk()
	me.XsdGoPkgHasElems_Quote.Walk()
	me.XsdGoPkgHasElems_Guibutton.Walk()
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Foreignphrase.Walk()
	me.XsdGoPkgHasElems_Acronym.Walk()
	me.XsdGoPkgHasElems_Nonterminal.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Author.Walk()
	me.XsdGoPkgHasElems_Emphasis.Walk()
	me.XsdGoPkgHasElems_Keycode.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Token.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Hardware.Walk()
	me.XsdGoPkgHasElems_Accel.Walk()
	me.XsdGoPkgHasElems_Link.Walk()
	me.XsdGoPkgHasElems_Systemitem.Walk()
	me.XsdGoPkgHasElems_Date.Walk()
	me.XsdGoPkgHasElems_Filename.Walk()
	me.XsdGoPkgHasElems_Guisubmenu.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Coref.Walk()
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasElems_Returnvalue.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Exceptionname.Walk()
	me.XsdGoPkgHasElems_Interfacename.Walk()
	me.XsdGoPkgHasElems_Errorcode.Walk()
	me.XsdGoPkgHasElems_Org.Walk()
	me.XsdGoPkgHasElems_Jobtitle.Walk()
	me.XsdGoPkgHasElems_Keysym.Walk()
	me.XsdGoPkgHasElems_Prompt.Walk()
	me.XsdGoPkgHasElems_Property.Walk()
	me.XsdGoPkgHasElems_Citation.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasElems_Ooclass.Walk()
	me.XsdGoPkgHasElems_Tag.Walk()
	me.XsdGoPkgHasElems_Trademark.Walk()
 }

type XsdGoPkgHasElems_Tocentry struct {
	Tocentries []*TxsdTocentry `xml:"http://docbook.org/ns/docbook tocentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tocentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tocentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tocentry instance.
func (me *XsdGoPkgHasElems_Tocentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tocentry; fn != nil { fn(me) }
	for _, x := range me.Tocentries { x.Walk() }
 }

type TxsdTocdiv struct {
	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasAttr_Pagenum_XsdtString_

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Tocentry

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Tocdiv

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Para

}

//	If the WalkHandlers.TxsdTocdiv function is not nil (ie. was set by outside code), calls it with this TxsdTocdiv instance as the single argument. Then calls the Walk() method on 60/65 embed(s) and 0/0 field(s) belonging to this TxsdTocdiv instance.
func (me *TxsdTocdiv) Walk ()  { 
	if fn := WalkHandlers.TxsdTocdiv; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Tocentry.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
 }

type XsdGoPkgHasElems_Tocdiv struct {
	Tocdivs []*TxsdTocdiv `xml:"http://docbook.org/ns/docbook tocdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tocdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tocdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tocdiv instance.
func (me *XsdGoPkgHasElems_Tocdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tocdiv; fn != nil { fn(me) }
	for _, x := range me.Tocdivs { x.Walk() }
 }

type TxsdToc struct {
	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Tocdiv

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Tocentry

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Blockquote

}

//	If the WalkHandlers.TxsdToc function is not nil (ie. was set by outside code), calls it with this TxsdToc instance as the single argument. Then calls the Walk() method on 60/63 embed(s) and 0/0 field(s) belonging to this TxsdToc instance.
func (me *TxsdToc) Walk ()  { 
	if fn := WalkHandlers.TxsdToc; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Tocentry.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Tocdiv.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
 }

type XsdGoPkgHasElems_Toc struct {
	Tocs []*TxsdToc `xml:"http://docbook.org/ns/docbook toc"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Toc function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Toc instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Toc instance.
func (me *XsdGoPkgHasElems_Toc) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Toc; fn != nil { fn(me) }
	for _, x := range me.Tocs { x.Walk() }
 }

type XsdGoPkgHasElems_Acknowledgements struct {
	Acknowledgementses []*TxsdColophon `xml:"http://docbook.org/ns/docbook acknowledgements"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Acknowledgements function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Acknowledgements instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Acknowledgements instance.
func (me *XsdGoPkgHasElems_Acknowledgements) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Acknowledgements; fn != nil { fn(me) }
	for _, x := range me.Acknowledgementses { x.Walk() }
 }

type XsdGoPkgHasElems_Simplesect struct {
	Simplesects []*TxsdColophon `xml:"http://docbook.org/ns/docbook simplesect"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Simplesect function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Simplesect instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Simplesect instance.
func (me *XsdGoPkgHasElems_Simplesect) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Simplesect; fn != nil { fn(me) }
	for _, x := range me.Simplesects { x.Walk() }
 }

type TxsdIndex struct {
	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Indexdiv

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElem_Segmentedlist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasAttr_Type_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Indexentry

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Programlistingco

}

//	If the WalkHandlers.TxsdIndex function is not nil (ie. was set by outside code), calls it with this TxsdIndex instance as the single argument. Then calls the Walk() method on 61/67 embed(s) and 0/0 field(s) belonging to this TxsdIndex instance.
func (me *TxsdIndex) Walk ()  { 
	if fn := WalkHandlers.TxsdIndex; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Indexentry.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Indexdiv.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElem_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
 }

type XsdGoPkgHasElems_Index struct {
	Indexs []*TxsdIndex `xml:"http://docbook.org/ns/docbook index"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Index function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Index instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Index instance.
func (me *XsdGoPkgHasElems_Index) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Index; fn != nil { fn(me) }
	for _, x := range me.Indexs { x.Walk() }
 }

type XsdGoPkgHasElem_Bibliography struct {
	Bibliography *TxsdBibliography `xml:"http://docbook.org/ns/docbook bibliography"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliography function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliography instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliography instance.
func (me *XsdGoPkgHasElem_Bibliography) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliography; fn != nil { fn(me) }
	me.Bibliography.Walk()
 }

type TxsdGlossdiv struct {
	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Glossentry

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Constraintdef

}

//	If the WalkHandlers.TxsdGlossdiv function is not nil (ie. was set by outside code), calls it with this TxsdGlossdiv instance as the single argument. Then calls the Walk() method on 60/65 embed(s) and 0/0 field(s) belonging to this TxsdGlossdiv instance.
func (me *TxsdGlossdiv) Walk ()  { 
	if fn := WalkHandlers.TxsdGlossdiv; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Glossentry.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
 }

type XsdGoPkgHasElems_Glossdiv struct {
	Glossdivs []*TxsdGlossdiv `xml:"http://docbook.org/ns/docbook glossdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Glossdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Glossdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Glossdiv instance.
func (me *XsdGoPkgHasElems_Glossdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Glossdiv; fn != nil { fn(me) }
	for _, x := range me.Glossdivs { x.Walk() }
 }

type TxsdGlossary struct {
	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Glossentry

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElem_Bibliography

	XsdGoPkgHasElems_Glossdiv

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Blockquote

}

//	If the WalkHandlers.TxsdGlossary function is not nil (ie. was set by outside code), calls it with this TxsdGlossary instance as the single argument. Then calls the Walk() method on 62/67 embed(s) and 0/0 field(s) belonging to this TxsdGlossary instance.
func (me *TxsdGlossary) Walk ()  { 
	if fn := WalkHandlers.TxsdGlossary; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Glossentry.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElem_Bibliography.Walk()
	me.XsdGoPkgHasElems_Glossdiv.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
 }

type XsdGoPkgHasElems_Glossary struct {
	Glossaries []*TxsdGlossary `xml:"http://docbook.org/ns/docbook glossary"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Glossary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Glossary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Glossary instance.
func (me *XsdGoPkgHasElems_Glossary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Glossary; fn != nil { fn(me) }
	for _, x := range me.Glossaries { x.Walk() }
 }

type TxsdSect5 struct {
	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Important

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Classsynopsis

}

//	If the WalkHandlers.TxsdSect5 function is not nil (ie. was set by outside code), calls it with this TxsdSect5 instance as the single argument. Then calls the Walk() method on 64/69 embed(s) and 0/0 field(s) belonging to this TxsdSect5 instance.
func (me *TxsdSect5) Walk ()  { 
	if fn := WalkHandlers.TxsdSect5; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
 }

type XsdGoPkgHasElems_Sect5 struct {
	Sect5s []*TxsdSect5 `xml:"http://docbook.org/ns/docbook sect5"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Sect5 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Sect5 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Sect5 instance.
func (me *XsdGoPkgHasElems_Sect5) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Sect5; fn != nil { fn(me) }
	for _, x := range me.Sect5s { x.Walk() }
 }

type TxsdSect4 struct {
	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Sect5

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Formalpara

}

//	If the WalkHandlers.TxsdSect4 function is not nil (ie. was set by outside code), calls it with this TxsdSect4 instance as the single argument. Then calls the Walk() method on 65/70 embed(s) and 0/0 field(s) belonging to this TxsdSect4 instance.
func (me *TxsdSect4) Walk ()  { 
	if fn := WalkHandlers.TxsdSect4; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Sect5.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
 }

type XsdGoPkgHasElems_Sect4 struct {
	Sect4s []*TxsdSect4 `xml:"http://docbook.org/ns/docbook sect4"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Sect4 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Sect4 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Sect4 instance.
func (me *XsdGoPkgHasElems_Sect4) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Sect4; fn != nil { fn(me) }
	for _, x := range me.Sect4s { x.Walk() }
 }

type TxsdSect3 struct {
	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Sect4

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Screen

}

//	If the WalkHandlers.TxsdSect3 function is not nil (ie. was set by outside code), calls it with this TxsdSect3 instance as the single argument. Then calls the Walk() method on 65/70 embed(s) and 0/0 field(s) belonging to this TxsdSect3 instance.
func (me *TxsdSect3) Walk ()  { 
	if fn := WalkHandlers.TxsdSect3; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Sect4.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
 }

type XsdGoPkgHasElems_Sect3 struct {
	Sect3s []*TxsdSect3 `xml:"http://docbook.org/ns/docbook sect3"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Sect3 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Sect3 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Sect3 instance.
func (me *XsdGoPkgHasElems_Sect3) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Sect3; fn != nil { fn(me) }
	for _, x := range me.Sect3s { x.Walk() }
 }

type TxsdSect2 struct {
	XsdGoPkgHasElems_Remark

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Note

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Sect3

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Para

}

//	If the WalkHandlers.TxsdSect2 function is not nil (ie. was set by outside code), calls it with this TxsdSect2 instance as the single argument. Then calls the Walk() method on 65/70 embed(s) and 0/0 field(s) belonging to this TxsdSect2 instance.
func (me *TxsdSect2) Walk ()  { 
	if fn := WalkHandlers.TxsdSect2; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Sect3.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
 }

type XsdGoPkgHasElems_Sect2 struct {
	Sect2s []*TxsdSect2 `xml:"http://docbook.org/ns/docbook sect2"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Sect2 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Sect2 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Sect2 instance.
func (me *XsdGoPkgHasElems_Sect2) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Sect2; fn != nil { fn(me) }
	for _, x := range me.Sect2s { x.Walk() }
 }

type TxsdSect1 struct {
	XsdGoPkgHasElems_Toc

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Sect2

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Table

}

//	If the WalkHandlers.TxsdSect1 function is not nil (ie. was set by outside code), calls it with this TxsdSect1 instance as the single argument. Then calls the Walk() method on 65/70 embed(s) and 0/0 field(s) belonging to this TxsdSect1 instance.
func (me *TxsdSect1) Walk ()  { 
	if fn := WalkHandlers.TxsdSect1; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Sect2.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
 }

type XsdGoPkgHasElems_Sect1 struct {
	Sect1s []*TxsdSect1 `xml:"http://docbook.org/ns/docbook sect1"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Sect1 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Sect1 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Sect1 instance.
func (me *XsdGoPkgHasElems_Sect1) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Sect1; fn != nil { fn(me) }
	for _, x := range me.Sect1s { x.Walk() }
 }

type XsdGoPkgHasElems_Refsect3 struct {
	Refsect3s []*TxsdColophon `xml:"http://docbook.org/ns/docbook refsect3"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refsect3 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refsect3 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refsect3 instance.
func (me *XsdGoPkgHasElems_Refsect3) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refsect3; fn != nil { fn(me) }
	for _, x := range me.Refsect3s { x.Walk() }
 }

type TxsdRefsect2 struct {
	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElem_Info

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Refsect3

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Informaltable

}

//	If the WalkHandlers.TxsdRefsect2 function is not nil (ie. was set by outside code), calls it with this TxsdRefsect2 instance as the single argument. Then calls the Walk() method on 60/65 embed(s) and 0/0 field(s) belonging to this TxsdRefsect2 instance.
func (me *TxsdRefsect2) Walk ()  { 
	if fn := WalkHandlers.TxsdRefsect2; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Refsect3.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
 }

type XsdGoPkgHasElems_Refsect2 struct {
	Refsect2s []*TxsdRefsect2 `xml:"http://docbook.org/ns/docbook refsect2"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refsect2 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refsect2 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refsect2 instance.
func (me *XsdGoPkgHasElems_Refsect2) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refsect2; fn != nil { fn(me) }
	for _, x := range me.Refsect2s { x.Walk() }
 }

type TxsdRefsect1 struct {
	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Title

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Refsect2

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Msgset

}

//	If the WalkHandlers.TxsdRefsect1 function is not nil (ie. was set by outside code), calls it with this TxsdRefsect1 instance as the single argument. Then calls the Walk() method on 60/65 embed(s) and 0/0 field(s) belonging to this TxsdRefsect1 instance.
func (me *TxsdRefsect1) Walk ()  { 
	if fn := WalkHandlers.TxsdRefsect1; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Refsect2.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
 }

type XsdGoPkgHasElems_Refsect1 struct {
	Refsect1s []*TxsdRefsect1 `xml:"http://docbook.org/ns/docbook refsect1"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refsect1 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refsect1 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refsect1 instance.
func (me *XsdGoPkgHasElems_Refsect1) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refsect1; fn != nil { fn(me) }
	for _, x := range me.Refsect1s { x.Walk() }
 }

type TxsdRefmiscinfoClass xsdt.Token

//	Since TxsdRefmiscinfoClass is just a simple String type, this merely returns the current string value.
func (me TxsdRefmiscinfoClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdRefmiscinfoClass is "source".
func (me TxsdRefmiscinfoClass) IsSource () bool { return me == "source" }

//	Returns true if the value of this enumerated TxsdRefmiscinfoClass is "sectdesc".
func (me TxsdRefmiscinfoClass) IsSectdesc () bool { return me == "sectdesc" }

//	Returns true if the value of this enumerated TxsdRefmiscinfoClass is "other".
func (me TxsdRefmiscinfoClass) IsOther () bool { return me == "other" }

//	Since TxsdRefmiscinfoClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdRefmiscinfoClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TxsdRefmiscinfoClass is "manual".
func (me TxsdRefmiscinfoClass) IsManual () bool { return me == "manual" }

//	Returns true if the value of this enumerated TxsdRefmiscinfoClass is "software".
func (me TxsdRefmiscinfoClass) IsSoftware () bool { return me == "software" }

//	Returns true if the value of this enumerated TxsdRefmiscinfoClass is "version".
func (me TxsdRefmiscinfoClass) IsVersion () bool { return me == "version" }

//	This convenience method just performs a simple type conversion to TxsdRefmiscinfoClass's alias type xsdt.Token.
func (me TxsdRefmiscinfoClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Class_TxsdRefmiscinfoClass_ struct {
	Class TxsdRefmiscinfoClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdRefmiscinfo struct {
	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Replaceable

	XsdGoPkgHasCdata

	XsdGoPkgHasElems_Alt

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Xref

	XsdGoPkgHasAttr_Otherclass_XsdtString_

	XsdGoPkgHasElems_Link

	XsdGoPkgHasElems_Olink

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Superscript

	XsdGoPkgHasElems_Biblioref

	XsdGoPkgHasElems_Inlinemediaobject

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Phrase

	XsdGoPkgHasAttr_Class_TxsdRefmiscinfoClass_

	XsdGoPkgHasElems_Subscript

}

//	If the WalkHandlers.TxsdRefmiscinfo function is not nil (ie. was set by outside code), calls it with this TxsdRefmiscinfo instance as the single argument. Then calls the Walk() method on 15/20 embed(s) and 0/0 field(s) belonging to this TxsdRefmiscinfo instance.
func (me *TxsdRefmiscinfo) Walk ()  { 
	if fn := WalkHandlers.TxsdRefmiscinfo; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Phrase.Walk()
	me.XsdGoPkgHasElems_Subscript.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Replaceable.Walk()
	me.XsdGoPkgHasCdata.Walk()
	me.XsdGoPkgHasElems_Alt.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Xref.Walk()
	me.XsdGoPkgHasElems_Link.Walk()
	me.XsdGoPkgHasElems_Olink.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Superscript.Walk()
	me.XsdGoPkgHasElems_Biblioref.Walk()
	me.XsdGoPkgHasElems_Inlinemediaobject.Walk()
 }

type XsdGoPkgHasElems_Refmiscinfo struct {
	Refmiscinfos []*TxsdRefmiscinfo `xml:"http://docbook.org/ns/docbook refmiscinfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refmiscinfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refmiscinfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refmiscinfo instance.
func (me *XsdGoPkgHasElems_Refmiscinfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refmiscinfo; fn != nil { fn(me) }
	for _, x := range me.Refmiscinfos { x.Walk() }
 }

type TxsdRefmeta struct {
	XsdGoPkgHasElem_Manvolnum

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElem_Refentrytitle

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Refmiscinfo

}

//	If the WalkHandlers.TxsdRefmeta function is not nil (ie. was set by outside code), calls it with this TxsdRefmeta instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TxsdRefmeta instance.
func (me *TxsdRefmeta) Walk ()  { 
	if fn := WalkHandlers.TxsdRefmeta; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Manvolnum.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElem_Refentrytitle.Walk()
	me.XsdGoPkgHasElems_Refmiscinfo.Walk()
 }

type XsdGoPkgHasElem_Refmeta struct {
	Refmeta *TxsdRefmeta `xml:"http://docbook.org/ns/docbook refmeta"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refmeta function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refmeta instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refmeta instance.
func (me *XsdGoPkgHasElem_Refmeta) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refmeta; fn != nil { fn(me) }
	me.Refmeta.Walk()
 }

type TxsdRefsection struct {
	XsdGoPkgHasElems_Title

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Refsection

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Methodsynopsis

}

//	If the WalkHandlers.TxsdRefsection function is not nil (ie. was set by outside code), calls it with this TxsdRefsection instance as the single argument. Then calls the Walk() method on 59/65 embed(s) and 0/0 field(s) belonging to this TxsdRefsection instance.
func (me *TxsdRefsection) Walk ()  { 
	if fn := WalkHandlers.TxsdRefsection; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
 }

type XsdGoPkgHasElems_Refsection struct {
	Refsections []*TxsdRefsection `xml:"http://docbook.org/ns/docbook refsection"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refsection function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refsection instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refsection instance.
func (me *XsdGoPkgHasElems_Refsection) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refsection; fn != nil { fn(me) }
	for _, x := range me.Refsections { x.Walk() }
 }

type TxsdRefsynopsisdiv struct {
	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Refsection

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Refsect2

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Bibliolist

}

//	If the WalkHandlers.TxsdRefsynopsisdiv function is not nil (ie. was set by outside code), calls it with this TxsdRefsynopsisdiv instance as the single argument. Then calls the Walk() method on 61/64 embed(s) and 0/0 field(s) belonging to this TxsdRefsynopsisdiv instance.
func (me *TxsdRefsynopsisdiv) Walk ()  { 
	if fn := WalkHandlers.TxsdRefsynopsisdiv; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Refsection.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Refsect2.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
 }

type XsdGoPkgHasElem_Refsynopsisdiv struct {
	Refsynopsisdiv *TxsdRefsynopsisdiv `xml:"http://docbook.org/ns/docbook refsynopsisdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refsynopsisdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refsynopsisdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refsynopsisdiv instance.
func (me *XsdGoPkgHasElem_Refsynopsisdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refsynopsisdiv; fn != nil { fn(me) }
	me.Refsynopsisdiv.Walk()
 }

type TxsdRefclass struct {
	XsdGoPkgHasElems_Application

	XsdGoPkgHasCdata

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdRefclass function is not nil (ie. was set by outside code), calls it with this TxsdRefclass instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TxsdRefclass instance.
func (me *TxsdRefclass) Walk ()  { 
	if fn := WalkHandlers.TxsdRefclass; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Application.Walk()
	me.XsdGoPkgHasCdata.Walk()
 }

type XsdGoPkgHasElems_Refclass struct {
	Refclasses []*TxsdRefclass `xml:"http://docbook.org/ns/docbook refclass"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refclass function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refclass instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refclass instance.
func (me *XsdGoPkgHasElems_Refclass) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refclass; fn != nil { fn(me) }
	for _, x := range me.Refclasses { x.Walk() }
 }

type XsdGoPkgHasElems_Refname struct {
	Refnames []*TxsdTitle `xml:"http://docbook.org/ns/docbook refname"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refname instance.
func (me *XsdGoPkgHasElems_Refname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refname; fn != nil { fn(me) }
	for _, x := range me.Refnames { x.Walk() }
 }

type XsdGoPkgHasElem_Refdescriptor struct {
	Refdescriptor *TxsdTitle `xml:"http://docbook.org/ns/docbook refdescriptor"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refdescriptor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refdescriptor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refdescriptor instance.
func (me *XsdGoPkgHasElem_Refdescriptor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refdescriptor; fn != nil { fn(me) }
	me.Refdescriptor.Walk()
 }

type XsdGoPkgHasElem_Refpurpose struct {
	Refpurpose *TxsdTitle `xml:"http://docbook.org/ns/docbook refpurpose"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refpurpose function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refpurpose instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refpurpose instance.
func (me *XsdGoPkgHasElem_Refpurpose) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refpurpose; fn != nil { fn(me) }
	me.Refpurpose.Walk()
 }

type TxsdRefnamediv struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElem_Refpurpose

	XsdGoPkgHasElems_Refclass

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Refname

	XsdGoPkgHasElem_Refdescriptor

}

//	If the WalkHandlers.TxsdRefnamediv function is not nil (ie. was set by outside code), calls it with this TxsdRefnamediv instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TxsdRefnamediv instance.
func (me *TxsdRefnamediv) Walk ()  { 
	if fn := WalkHandlers.TxsdRefnamediv; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Refclass.Walk()
	me.XsdGoPkgHasElems_Refname.Walk()
	me.XsdGoPkgHasElem_Refdescriptor.Walk()
	me.XsdGoPkgHasElem_Refpurpose.Walk()
 }

type XsdGoPkgHasElems_Refnamediv struct {
	Refnamedivs []*TxsdRefnamediv `xml:"http://docbook.org/ns/docbook refnamediv"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refnamediv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refnamediv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refnamediv instance.
func (me *XsdGoPkgHasElems_Refnamediv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refnamediv; fn != nil { fn(me) }
	for _, x := range me.Refnamedivs { x.Walk() }
 }

type TxsdRefentry struct {
	XsdGoPkgHasElems_Refnamediv

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Refsection

	XsdGoPkgHasElems_Refsect1

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElem_Refmeta

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElem_Refsynopsisdiv

	XsdGoPkgHasAttr_Role_XsdtString_

}

//	If the WalkHandlers.TxsdRefentry function is not nil (ie. was set by outside code), calls it with this TxsdRefentry instance as the single argument. Then calls the Walk() method on 7/12 embed(s) and 0/0 field(s) belonging to this TxsdRefentry instance.
func (me *TxsdRefentry) Walk ()  { 
	if fn := WalkHandlers.TxsdRefentry; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Refnamediv.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Refsection.Walk()
	me.XsdGoPkgHasElems_Refsect1.Walk()
	me.XsdGoPkgHasElem_Refmeta.Walk()
	me.XsdGoPkgHasElem_Refsynopsisdiv.Walk()
 }

type XsdGoPkgHasElems_Refentry struct {
	Refentries []*TxsdRefentry `xml:"http://docbook.org/ns/docbook refentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refentry instance.
func (me *XsdGoPkgHasElems_Refentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refentry; fn != nil { fn(me) }
	for _, x := range me.Refentries { x.Walk() }
 }

type TxsdSection struct {
	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Section

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Address

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasElems_Refentry

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Important

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Equation

}

//	If the WalkHandlers.TxsdSection function is not nil (ie. was set by outside code), calls it with this TxsdSection instance as the single argument. Then calls the Walk() method on 65/71 embed(s) and 0/0 field(s) belonging to this TxsdSection instance.
func (me *TxsdSection) Walk ()  { 
	if fn := WalkHandlers.TxsdSection; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Refentry.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
 }

type XsdGoPkgHasElems_Section struct {
	Sections []*TxsdSection `xml:"http://docbook.org/ns/docbook section"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Section function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Section instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Section instance.
func (me *XsdGoPkgHasElems_Section) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Section; fn != nil { fn(me) }
	for _, x := range me.Sections { x.Walk() }
 }

type TxsdPreface struct {
	XsdGoPkgHasElems_Refentry

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Sect1

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Section

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Address

}

//	If the WalkHandlers.TxsdPreface function is not nil (ie. was set by outside code), calls it with this TxsdPreface instance as the single argument. Then calls the Walk() method on 67/72 embed(s) and 0/0 field(s) belonging to this TxsdPreface instance.
func (me *TxsdPreface) Walk ()  { 
	if fn := WalkHandlers.TxsdPreface; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Sect1.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Section.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Refentry.Walk()
 }

type XsdGoPkgHasElems_Preface struct {
	Prefaces []*TxsdPreface `xml:"http://docbook.org/ns/docbook preface"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Preface function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Preface instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Preface instance.
func (me *XsdGoPkgHasElems_Preface) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Preface; fn != nil { fn(me) }
	for _, x := range me.Prefaces { x.Walk() }
 }

type TxsdPartintro struct {
	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Refentry

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Example

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Para

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Note

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Section

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Sect1

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Mediaobject

}

//	If the WalkHandlers.TxsdPartintro function is not nil (ie. was set by outside code), calls it with this TxsdPartintro instance as the single argument. Then calls the Walk() method on 63/68 embed(s) and 0/0 field(s) belonging to this TxsdPartintro instance.
func (me *TxsdPartintro) Walk ()  { 
	if fn := WalkHandlers.TxsdPartintro; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Section.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Sect1.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Refentry.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
 }

type XsdGoPkgHasElem_Partintro struct {
	Partintro *TxsdPartintro `xml:"http://docbook.org/ns/docbook partintro"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Partintro function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Partintro instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Partintro instance.
func (me *XsdGoPkgHasElem_Partintro) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Partintro; fn != nil { fn(me) }
	me.Partintro.Walk()
 }

type XsdGoPkgHasElems_Dedication struct {
	Dedications []*TxsdColophon `xml:"http://docbook.org/ns/docbook dedication"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Dedication function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Dedication instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Dedication instance.
func (me *XsdGoPkgHasElems_Dedication) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Dedication; fn != nil { fn(me) }
	for _, x := range me.Dedications { x.Walk() }
 }

type XsdGoPkgHasElems_Appendix struct {
	Appendixs []*TxsdPreface `xml:"http://docbook.org/ns/docbook appendix"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Appendix function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Appendix instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Appendix instance.
func (me *XsdGoPkgHasElems_Appendix) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Appendix; fn != nil { fn(me) }
	for _, x := range me.Appendixs { x.Walk() }
 }

type TxsdReference struct {
	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Title

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Refentry

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElem_Partintro

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElem_Info

}

//	If the WalkHandlers.TxsdReference function is not nil (ie. was set by outside code), calls it with this TxsdReference instance as the single argument. Then calls the Walk() method on 6/11 embed(s) and 0/0 field(s) belonging to this TxsdReference instance.
func (me *TxsdReference) Walk ()  { 
	if fn := WalkHandlers.TxsdReference; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Refentry.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElem_Partintro.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
 }

type XsdGoPkgHasElems_Reference struct {
	References []*TxsdReference `xml:"http://docbook.org/ns/docbook reference"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Reference function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Reference instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Reference instance.
func (me *XsdGoPkgHasElems_Reference) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Reference; fn != nil { fn(me) }
	for _, x := range me.References { x.Walk() }
 }

type TxsdArticleClass xsdt.Token

//	Returns true if the value of this enumerated TxsdArticleClass is "journalarticle".
func (me TxsdArticleClass) IsJournalarticle () bool { return me == "journalarticle" }

//	Returns true if the value of this enumerated TxsdArticleClass is "whitepaper".
func (me TxsdArticleClass) IsWhitepaper () bool { return me == "whitepaper" }

//	This convenience method just performs a simple type conversion to TxsdArticleClass's alias type xsdt.Token.
func (me TxsdArticleClass) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TxsdArticleClass is "productsheet".
func (me TxsdArticleClass) IsProductsheet () bool { return me == "productsheet" }

//	Since TxsdArticleClass is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdArticleClass) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Since TxsdArticleClass is just a simple String type, this merely returns the current string value.
func (me TxsdArticleClass) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TxsdArticleClass is "techreport".
func (me TxsdArticleClass) IsTechreport () bool { return me == "techreport" }

//	Returns true if the value of this enumerated TxsdArticleClass is "faq".
func (me TxsdArticleClass) IsFaq () bool { return me == "faq" }

//	Returns true if the value of this enumerated TxsdArticleClass is "specification".
func (me TxsdArticleClass) IsSpecification () bool { return me == "specification" }

type XsdGoPkgHasAttr_Class_TxsdArticleClass_ struct {
	Class TxsdArticleClass `xml:"http://docbook.org/ns/docbook class,attr"`

}

type TxsdArticle struct {
	XsdGoPkgHasElems_Screenco

	XsdGoPkgHasElems_Literallayout

	XsdGoPkgHasElems_Msgset

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Methodsynopsis

	XsdGoPkgHasElems_Programlisting

	XsdGoPkgHasElems_Screen

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Sect1

	XsdGoPkgHasElems_Note

	XsdGoPkgHasAttr_Class_TxsdArticleClass_

	XsdGoPkgHasElems_Figure

	XsdGoPkgHasElems_Mediaobject

	XsdGoPkgHasElems_Important

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Sidebar

	XsdGoPkgHasElems_Caution

	XsdGoPkgHasElems_Itemizedlist

	XsdGoPkgHasElems_Constraintdef

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasElems_Informalfigure

	XsdGoPkgHasElems_Task

	XsdGoPkgHasElems_Simplesect

	XsdGoPkgHasElems_Para

	XsdGoPkgHasElems_Segmentedlist

	XsdGoPkgHasElems_Blockquote

	XsdGoPkgHasElems_Example

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Qandaset

	XsdGoPkgHasElems_Screenshot

	XsdGoPkgHasElems_Equation

	XsdGoPkgHasElems_Orderedlist

	XsdGoPkgHasElems_Annotation

	XsdGoPkgHasElems_Simpara

	XsdGoPkgHasElems_Glosslist

	XsdGoPkgHasElems_Epigraph

	XsdGoPkgHasElems_Bridgehead

	XsdGoPkgHasElems_Simplelist

	XsdGoPkgHasElems_Warning

	XsdGoPkgHasElems_Informalequation

	XsdGoPkgHasElems_Colophon

	XsdGoPkgHasElems_Informalexample

	XsdGoPkgHasElems_Indexterm

	XsdGoPkgHasElems_Destructorsynopsis

	XsdGoPkgHasElems_Bibliolist

	XsdGoPkgHasElems_Fieldsynopsis

	XsdGoPkgHasElems_Anchor

	XsdGoPkgHasElems_Formalpara

	XsdGoPkgHasElems_Table

	XsdGoPkgHasElems_Tip

	XsdGoPkgHasElems_Section

	XsdGoPkgHasElems_Funcsynopsis

	XsdGoPkgHasElems_Cmdsynopsis

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Procedure

	XsdGoPkgHasElems_Synopsis

	XsdGoPkgHasElems_Variablelist

	XsdGoPkgHasElems_Remark

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Acknowledgements

	XsdGoPkgHasElems_Revhistory

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElems_Constructorsynopsis

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Calloutlist

	XsdGoPkgHasElems_Productionset

	XsdGoPkgHasElems_Refentry

	XsdGoPkgHasElems_Classsynopsis

	XsdGoPkgHasElems_Address

	XsdGoPkgHasElems_Appendix

	XsdGoPkgHasElems_Programlistingco

	XsdGoPkgHasElems_Informaltable

	XsdGoPkgHasElems_Title

}

//	If the WalkHandlers.TxsdArticle function is not nil (ie. was set by outside code), calls it with this TxsdArticle instance as the single argument. Then calls the Walk() method on 70/76 embed(s) and 0/0 field(s) belonging to this TxsdArticle instance.
func (me *TxsdArticle) Walk ()  { 
	if fn := WalkHandlers.TxsdArticle; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Informalfigure.Walk()
	me.XsdGoPkgHasElems_Task.Walk()
	me.XsdGoPkgHasElems_Simplesect.Walk()
	me.XsdGoPkgHasElems_Para.Walk()
	me.XsdGoPkgHasElems_Segmentedlist.Walk()
	me.XsdGoPkgHasElems_Blockquote.Walk()
	me.XsdGoPkgHasElems_Example.Walk()
	me.XsdGoPkgHasElems_Qandaset.Walk()
	me.XsdGoPkgHasElems_Screenshot.Walk()
	me.XsdGoPkgHasElems_Equation.Walk()
	me.XsdGoPkgHasElems_Orderedlist.Walk()
	me.XsdGoPkgHasElems_Annotation.Walk()
	me.XsdGoPkgHasElems_Simpara.Walk()
	me.XsdGoPkgHasElems_Glosslist.Walk()
	me.XsdGoPkgHasElems_Epigraph.Walk()
	me.XsdGoPkgHasElems_Bridgehead.Walk()
	me.XsdGoPkgHasElems_Simplelist.Walk()
	me.XsdGoPkgHasElems_Warning.Walk()
	me.XsdGoPkgHasElems_Informalequation.Walk()
	me.XsdGoPkgHasElems_Colophon.Walk()
	me.XsdGoPkgHasElems_Informalexample.Walk()
	me.XsdGoPkgHasElems_Indexterm.Walk()
	me.XsdGoPkgHasElems_Destructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Bibliolist.Walk()
	me.XsdGoPkgHasElems_Fieldsynopsis.Walk()
	me.XsdGoPkgHasElems_Anchor.Walk()
	me.XsdGoPkgHasElems_Formalpara.Walk()
	me.XsdGoPkgHasElems_Table.Walk()
	me.XsdGoPkgHasElems_Tip.Walk()
	me.XsdGoPkgHasElems_Section.Walk()
	me.XsdGoPkgHasElems_Funcsynopsis.Walk()
	me.XsdGoPkgHasElems_Cmdsynopsis.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Procedure.Walk()
	me.XsdGoPkgHasElems_Synopsis.Walk()
	me.XsdGoPkgHasElems_Variablelist.Walk()
	me.XsdGoPkgHasElems_Remark.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Acknowledgements.Walk()
	me.XsdGoPkgHasElems_Revhistory.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Constructorsynopsis.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Calloutlist.Walk()
	me.XsdGoPkgHasElems_Productionset.Walk()
	me.XsdGoPkgHasElems_Refentry.Walk()
	me.XsdGoPkgHasElems_Classsynopsis.Walk()
	me.XsdGoPkgHasElems_Address.Walk()
	me.XsdGoPkgHasElems_Appendix.Walk()
	me.XsdGoPkgHasElems_Programlistingco.Walk()
	me.XsdGoPkgHasElems_Informaltable.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Screenco.Walk()
	me.XsdGoPkgHasElems_Literallayout.Walk()
	me.XsdGoPkgHasElems_Msgset.Walk()
	me.XsdGoPkgHasElems_Methodsynopsis.Walk()
	me.XsdGoPkgHasElems_Programlisting.Walk()
	me.XsdGoPkgHasElems_Screen.Walk()
	me.XsdGoPkgHasElems_Sect1.Walk()
	me.XsdGoPkgHasElems_Note.Walk()
	me.XsdGoPkgHasElems_Figure.Walk()
	me.XsdGoPkgHasElems_Mediaobject.Walk()
	me.XsdGoPkgHasElems_Important.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Sidebar.Walk()
	me.XsdGoPkgHasElems_Caution.Walk()
	me.XsdGoPkgHasElems_Itemizedlist.Walk()
	me.XsdGoPkgHasElems_Constraintdef.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
 }

type XsdGoPkgHasElems_Article struct {
	Articles []*TxsdArticle `xml:"http://docbook.org/ns/docbook article"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Article function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Article instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Article instance.
func (me *XsdGoPkgHasElems_Article) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Article; fn != nil { fn(me) }
	for _, x := range me.Articles { x.Walk() }
 }

type XsdGoPkgHasElems_Chapter struct {
	Chapters []*TxsdPreface `xml:"http://docbook.org/ns/docbook chapter"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Chapter function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Chapter instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Chapter instance.
func (me *XsdGoPkgHasElems_Chapter) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Chapter; fn != nil { fn(me) }
	for _, x := range me.Chapters { x.Walk() }
 }

type TxsdPart struct {
	XsdGoPkgHasElems_Colophon

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Appendix

	XsdGoPkgHasElems_Reference

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Article

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasElems_Chapter

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Acknowledgements

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Preface

	XsdGoPkgHasElem_Partintro

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Refentry

	XsdGoPkgHasElems_Dedication

}

//	If the WalkHandlers.TxsdPart function is not nil (ie. was set by outside code), calls it with this TxsdPart instance as the single argument. Then calls the Walk() method on 18/23 embed(s) and 0/0 field(s) belonging to this TxsdPart instance.
func (me *TxsdPart) Walk ()  { 
	if fn := WalkHandlers.TxsdPart; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElems_Chapter.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Acknowledgements.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Preface.Walk()
	me.XsdGoPkgHasElem_Partintro.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Refentry.Walk()
	me.XsdGoPkgHasElems_Dedication.Walk()
	me.XsdGoPkgHasElems_Colophon.Walk()
	me.XsdGoPkgHasElems_Appendix.Walk()
	me.XsdGoPkgHasElems_Reference.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Article.Walk()
 }

type XsdGoPkgHasElems_Part struct {
	Parts []*TxsdPart `xml:"http://docbook.org/ns/docbook part"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Part function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Part instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Part instance.
func (me *XsdGoPkgHasElems_Part) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Part; fn != nil { fn(me) }
	for _, x := range me.Parts { x.Walk() }
 }

type TxsdBook struct {
	XsdGoPkgHasElems_Reference

	XsdGoPkgHasElems_Colophon

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Bibliography

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Part

	XsdGoPkgHasElems_Preface

	XsdGoPkgHasElems_Chapter

	XsdGoPkgHasElems_Dedication

	XsdGoPkgHasElems_Article

	XsdGoPkgHasElems_Title

	XsdGoPkgHasElems_Glossary

	XsdGoPkgHasElems_Index

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElems_Appendix

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElems_Acknowledgements

	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasElems_Toc

	XsdGoPkgHasAtts_DbCommonAttributes

}

//	If the WalkHandlers.TxsdBook function is not nil (ie. was set by outside code), calls it with this TxsdBook instance as the single argument. Then calls the Walk() method on 17/22 embed(s) and 0/0 field(s) belonging to this TxsdBook instance.
func (me *TxsdBook) Walk ()  { 
	if fn := WalkHandlers.TxsdBook; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_Bibliography.Walk()
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Part.Walk()
	me.XsdGoPkgHasElems_Preface.Walk()
	me.XsdGoPkgHasElems_Chapter.Walk()
	me.XsdGoPkgHasElems_Dedication.Walk()
	me.XsdGoPkgHasElems_Article.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
	me.XsdGoPkgHasElems_Glossary.Walk()
	me.XsdGoPkgHasElems_Index.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Appendix.Walk()
	me.XsdGoPkgHasElems_Acknowledgements.Walk()
	me.XsdGoPkgHasElems_Toc.Walk()
	me.XsdGoPkgHasElems_Reference.Walk()
	me.XsdGoPkgHasElems_Colophon.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
 }

type XsdGoPkgHasElems_Book struct {
	Books []*TxsdBook `xml:"http://docbook.org/ns/docbook book"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Book function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Book instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Book instance.
func (me *XsdGoPkgHasElems_Book) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Book; fn != nil { fn(me) }
	for _, x := range me.Books { x.Walk() }
 }

type XsdGoPkgHasElem_Toc struct {
	Toc *TxsdToc `xml:"http://docbook.org/ns/docbook toc"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Toc function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Toc instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Toc instance.
func (me *XsdGoPkgHasElem_Toc) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Toc; fn != nil { fn(me) }
	me.Toc.Walk()
 }

type TxsdSet struct {
	XsdGoPkgHasAtts_DbCommonLinkingAttributes

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElem_Setindex

	XsdGoPkgHasAtts_DbCommonAttributes

	XsdGoPkgHasElems_Title

	XsdGoPkgHasAttr_Label_XsdtString_

	XsdGoPkgHasElem_Info

	XsdGoPkgHasElems_Titleabbrev

	XsdGoPkgHasElems_Subtitle

	XsdGoPkgHasElems_Book

	XsdGoPkgHasElems_Set

	XsdGoPkgHasAttr_Role_XsdtString_

	XsdGoPkgHasElem_Toc

}

//	If the WalkHandlers.TxsdSet function is not nil (ie. was set by outside code), calls it with this TxsdSet instance as the single argument. Then calls the Walk() method on 7/13 embed(s) and 0/0 field(s) belonging to this TxsdSet instance.
func (me *TxsdSet) Walk ()  { 
	if fn := WalkHandlers.TxsdSet; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_Info.Walk()
	me.XsdGoPkgHasElems_Titleabbrev.Walk()
	me.XsdGoPkgHasElems_Subtitle.Walk()
	me.XsdGoPkgHasElems_Book.Walk()
	me.XsdGoPkgHasElem_Toc.Walk()
	me.XsdGoPkgHasElem_Setindex.Walk()
	me.XsdGoPkgHasElems_Title.Walk()
 }

type XsdGoPkgHasElems_Set struct {
	Sets []*TxsdSet `xml:"http://docbook.org/ns/docbook set"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Set function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Set instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Set instance.
func (me *XsdGoPkgHasElems_Set) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Set; fn != nil { fn(me) }
	for _, x := range me.Sets { x.Walk() }
 }

type XsdGoPkgHasElem_Set struct {
	Set *TxsdSet `xml:"http://docbook.org/ns/docbook set"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Set function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Set instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Set instance.
func (me *XsdGoPkgHasElem_Set) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Set; fn != nil { fn(me) }
	me.Set.Walk()
 }

type XsdGoPkgHasElem_Book struct {
	Book *TxsdBook `xml:"http://docbook.org/ns/docbook book"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Book function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Book instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Book instance.
func (me *XsdGoPkgHasElem_Book) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Book; fn != nil { fn(me) }
	me.Book.Walk()
 }

type XsdGoPkgHasElem_Dedication struct {
	Dedication *TxsdColophon `xml:"http://docbook.org/ns/docbook dedication"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Dedication function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Dedication instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Dedication instance.
func (me *XsdGoPkgHasElem_Dedication) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Dedication; fn != nil { fn(me) }
	me.Dedication.Walk()
 }

type XsdGoPkgHasElem_Acknowledgements struct {
	Acknowledgements *TxsdColophon `xml:"http://docbook.org/ns/docbook acknowledgements"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Acknowledgements function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Acknowledgements instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Acknowledgements instance.
func (me *XsdGoPkgHasElem_Acknowledgements) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Acknowledgements; fn != nil { fn(me) }
	me.Acknowledgements.Walk()
 }

type XsdGoPkgHasElem_Colophon struct {
	Colophon *TxsdColophon `xml:"http://docbook.org/ns/docbook colophon"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Colophon function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Colophon instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Colophon instance.
func (me *XsdGoPkgHasElem_Colophon) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Colophon; fn != nil { fn(me) }
	me.Colophon.Walk()
 }

type XsdGoPkgHasElem_Appendix struct {
	Appendix *TxsdPreface `xml:"http://docbook.org/ns/docbook appendix"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Appendix function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Appendix instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Appendix instance.
func (me *XsdGoPkgHasElem_Appendix) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Appendix; fn != nil { fn(me) }
	me.Appendix.Walk()
 }

type XsdGoPkgHasElem_Chapter struct {
	Chapter *TxsdPreface `xml:"http://docbook.org/ns/docbook chapter"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Chapter function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Chapter instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Chapter instance.
func (me *XsdGoPkgHasElem_Chapter) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Chapter; fn != nil { fn(me) }
	me.Chapter.Walk()
 }

type XsdGoPkgHasElem_Part struct {
	Part *TxsdPart `xml:"http://docbook.org/ns/docbook part"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Part function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Part instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Part instance.
func (me *XsdGoPkgHasElem_Part) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Part; fn != nil { fn(me) }
	me.Part.Walk()
 }

type XsdGoPkgHasElem_Preface struct {
	Preface *TxsdPreface `xml:"http://docbook.org/ns/docbook preface"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Preface function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Preface instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Preface instance.
func (me *XsdGoPkgHasElem_Preface) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Preface; fn != nil { fn(me) }
	me.Preface.Walk()
 }

type XsdGoPkgHasElems_Partintro struct {
	Partintros []*TxsdPartintro `xml:"http://docbook.org/ns/docbook partintro"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Partintro function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Partintro instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Partintro instance.
func (me *XsdGoPkgHasElems_Partintro) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Partintro; fn != nil { fn(me) }
	for _, x := range me.Partintros { x.Walk() }
 }

type XsdGoPkgHasElem_Section struct {
	Section *TxsdSection `xml:"http://docbook.org/ns/docbook section"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Section function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Section instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Section instance.
func (me *XsdGoPkgHasElem_Section) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Section; fn != nil { fn(me) }
	me.Section.Walk()
 }

type XsdGoPkgHasElem_Simplesect struct {
	Simplesect *TxsdColophon `xml:"http://docbook.org/ns/docbook simplesect"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Simplesect function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Simplesect instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Simplesect instance.
func (me *XsdGoPkgHasElem_Simplesect) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Simplesect; fn != nil { fn(me) }
	me.Simplesect.Walk()
 }

type XsdGoPkgHasElem_Article struct {
	Article *TxsdArticle `xml:"http://docbook.org/ns/docbook article"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Article function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Article instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Article instance.
func (me *XsdGoPkgHasElem_Article) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Article; fn != nil { fn(me) }
	me.Article.Walk()
 }

type XsdGoPkgHasElem_Annotation struct {
	Annotation *TxsdAnnotation `xml:"http://docbook.org/ns/docbook annotation"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Annotation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Annotation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Annotation instance.
func (me *XsdGoPkgHasElem_Annotation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Annotation; fn != nil { fn(me) }
	me.Annotation.Walk()
 }

type XsdGoPkgHasElem_Extendedlink struct {
	Extendedlink *TxsdExtendedlink `xml:"http://docbook.org/ns/docbook extendedlink"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Extendedlink function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Extendedlink instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Extendedlink instance.
func (me *XsdGoPkgHasElem_Extendedlink) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Extendedlink; fn != nil { fn(me) }
	me.Extendedlink.Walk()
 }

type XsdGoPkgHasElem_Locator struct {
	Locator *TxsdLocator `xml:"http://docbook.org/ns/docbook locator"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Locator function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Locator instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Locator instance.
func (me *XsdGoPkgHasElem_Locator) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Locator; fn != nil { fn(me) }
	me.Locator.Walk()
 }

type XsdGoPkgHasElem_Arc struct {
	Arc *TxsdArc `xml:"http://docbook.org/ns/docbook arc"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Arc function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Arc instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Arc instance.
func (me *XsdGoPkgHasElem_Arc) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Arc; fn != nil { fn(me) }
	me.Arc.Walk()
 }

type XsdGoPkgHasElem_Sect1 struct {
	Sect1 *TxsdSect1 `xml:"http://docbook.org/ns/docbook sect1"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Sect1 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Sect1 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Sect1 instance.
func (me *XsdGoPkgHasElem_Sect1) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Sect1; fn != nil { fn(me) }
	me.Sect1.Walk()
 }

type XsdGoPkgHasElem_Sect2 struct {
	Sect2 *TxsdSect2 `xml:"http://docbook.org/ns/docbook sect2"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Sect2 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Sect2 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Sect2 instance.
func (me *XsdGoPkgHasElem_Sect2) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Sect2; fn != nil { fn(me) }
	me.Sect2.Walk()
 }

type XsdGoPkgHasElem_Sect3 struct {
	Sect3 *TxsdSect3 `xml:"http://docbook.org/ns/docbook sect3"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Sect3 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Sect3 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Sect3 instance.
func (me *XsdGoPkgHasElem_Sect3) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Sect3; fn != nil { fn(me) }
	me.Sect3.Walk()
 }

type XsdGoPkgHasElem_Sect4 struct {
	Sect4 *TxsdSect4 `xml:"http://docbook.org/ns/docbook sect4"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Sect4 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Sect4 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Sect4 instance.
func (me *XsdGoPkgHasElem_Sect4) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Sect4; fn != nil { fn(me) }
	me.Sect4.Walk()
 }

type XsdGoPkgHasElem_Sect5 struct {
	Sect5 *TxsdSect5 `xml:"http://docbook.org/ns/docbook sect5"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Sect5 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Sect5 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Sect5 instance.
func (me *XsdGoPkgHasElem_Sect5) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Sect5; fn != nil { fn(me) }
	me.Sect5.Walk()
 }

type XsdGoPkgHasElem_Reference struct {
	Reference *TxsdReference `xml:"http://docbook.org/ns/docbook reference"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Reference function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Reference instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Reference instance.
func (me *XsdGoPkgHasElem_Reference) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Reference; fn != nil { fn(me) }
	me.Reference.Walk()
 }

type XsdGoPkgHasElem_Refentry struct {
	Refentry *TxsdRefentry `xml:"http://docbook.org/ns/docbook refentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refentry instance.
func (me *XsdGoPkgHasElem_Refentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refentry; fn != nil { fn(me) }
	me.Refentry.Walk()
 }

type XsdGoPkgHasElems_Refmeta struct {
	Refmetas []*TxsdRefmeta `xml:"http://docbook.org/ns/docbook refmeta"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refmeta function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refmeta instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refmeta instance.
func (me *XsdGoPkgHasElems_Refmeta) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refmeta; fn != nil { fn(me) }
	for _, x := range me.Refmetas { x.Walk() }
 }

type XsdGoPkgHasElem_Refmiscinfo struct {
	Refmiscinfo *TxsdRefmiscinfo `xml:"http://docbook.org/ns/docbook refmiscinfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refmiscinfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refmiscinfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refmiscinfo instance.
func (me *XsdGoPkgHasElem_Refmiscinfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refmiscinfo; fn != nil { fn(me) }
	me.Refmiscinfo.Walk()
 }

type XsdGoPkgHasElem_Refnamediv struct {
	Refnamediv *TxsdRefnamediv `xml:"http://docbook.org/ns/docbook refnamediv"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refnamediv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refnamediv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refnamediv instance.
func (me *XsdGoPkgHasElem_Refnamediv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refnamediv; fn != nil { fn(me) }
	me.Refnamediv.Walk()
 }

type XsdGoPkgHasElems_Refdescriptor struct {
	Refdescriptors []*TxsdTitle `xml:"http://docbook.org/ns/docbook refdescriptor"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refdescriptor function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refdescriptor instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refdescriptor instance.
func (me *XsdGoPkgHasElems_Refdescriptor) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refdescriptor; fn != nil { fn(me) }
	for _, x := range me.Refdescriptors { x.Walk() }
 }

type XsdGoPkgHasElem_Refname struct {
	Refname *TxsdTitle `xml:"http://docbook.org/ns/docbook refname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refname instance.
func (me *XsdGoPkgHasElem_Refname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refname; fn != nil { fn(me) }
	me.Refname.Walk()
 }

type XsdGoPkgHasElems_Refpurpose struct {
	Refpurposes []*TxsdTitle `xml:"http://docbook.org/ns/docbook refpurpose"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refpurpose function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refpurpose instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refpurpose instance.
func (me *XsdGoPkgHasElems_Refpurpose) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refpurpose; fn != nil { fn(me) }
	for _, x := range me.Refpurposes { x.Walk() }
 }

type XsdGoPkgHasElem_Refclass struct {
	Refclass *TxsdRefclass `xml:"http://docbook.org/ns/docbook refclass"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refclass function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refclass instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refclass instance.
func (me *XsdGoPkgHasElem_Refclass) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refclass; fn != nil { fn(me) }
	me.Refclass.Walk()
 }

type XsdGoPkgHasElems_Refsynopsisdiv struct {
	Refsynopsisdivs []*TxsdRefsynopsisdiv `xml:"http://docbook.org/ns/docbook refsynopsisdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Refsynopsisdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Refsynopsisdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Refsynopsisdiv instance.
func (me *XsdGoPkgHasElems_Refsynopsisdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Refsynopsisdiv; fn != nil { fn(me) }
	for _, x := range me.Refsynopsisdivs { x.Walk() }
 }

type XsdGoPkgHasElem_Refsection struct {
	Refsection *TxsdRefsection `xml:"http://docbook.org/ns/docbook refsection"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refsection function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refsection instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refsection instance.
func (me *XsdGoPkgHasElem_Refsection) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refsection; fn != nil { fn(me) }
	me.Refsection.Walk()
 }

type XsdGoPkgHasElem_Refsect1 struct {
	Refsect1 *TxsdRefsect1 `xml:"http://docbook.org/ns/docbook refsect1"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refsect1 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refsect1 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refsect1 instance.
func (me *XsdGoPkgHasElem_Refsect1) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refsect1; fn != nil { fn(me) }
	me.Refsect1.Walk()
 }

type XsdGoPkgHasElem_Refsect2 struct {
	Refsect2 *TxsdRefsect2 `xml:"http://docbook.org/ns/docbook refsect2"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refsect2 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refsect2 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refsect2 instance.
func (me *XsdGoPkgHasElem_Refsect2) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refsect2; fn != nil { fn(me) }
	me.Refsect2.Walk()
 }

type XsdGoPkgHasElem_Refsect3 struct {
	Refsect3 *TxsdColophon `xml:"http://docbook.org/ns/docbook refsect3"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Refsect3 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Refsect3 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Refsect3 instance.
func (me *XsdGoPkgHasElem_Refsect3) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Refsect3; fn != nil { fn(me) }
	me.Refsect3.Walk()
 }

type XsdGoPkgHasElem_Glosslist struct {
	Glosslist *TxsdGlosslist `xml:"http://docbook.org/ns/docbook glosslist"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Glosslist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Glosslist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Glosslist instance.
func (me *XsdGoPkgHasElem_Glosslist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Glosslist; fn != nil { fn(me) }
	me.Glosslist.Walk()
 }

type XsdGoPkgHasElem_Glossentry struct {
	Glossentry *TxsdGlossentry `xml:"http://docbook.org/ns/docbook glossentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Glossentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Glossentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Glossentry instance.
func (me *XsdGoPkgHasElem_Glossentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Glossentry; fn != nil { fn(me) }
	me.Glossentry.Walk()
 }

type XsdGoPkgHasElem_Glossdef struct {
	Glossdef *TxsdGlossdef `xml:"http://docbook.org/ns/docbook glossdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Glossdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Glossdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Glossdef instance.
func (me *XsdGoPkgHasElem_Glossdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Glossdef; fn != nil { fn(me) }
	me.Glossdef.Walk()
 }

type XsdGoPkgHasElems_Glosssee struct {
	Glosssees []*TxsdGlossseealso `xml:"http://docbook.org/ns/docbook glosssee"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Glosssee function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Glosssee instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Glosssee instance.
func (me *XsdGoPkgHasElems_Glosssee) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Glosssee; fn != nil { fn(me) }
	for _, x := range me.Glosssees { x.Walk() }
 }

type XsdGoPkgHasElem_Glossseealso struct {
	Glossseealso *TxsdGlossseealso `xml:"http://docbook.org/ns/docbook glossseealso"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Glossseealso function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Glossseealso instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Glossseealso instance.
func (me *XsdGoPkgHasElem_Glossseealso) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Glossseealso; fn != nil { fn(me) }
	me.Glossseealso.Walk()
 }

type XsdGoPkgHasElem_Firstterm struct {
	Firstterm *TxsdFirstterm `xml:"http://docbook.org/ns/docbook firstterm"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Firstterm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Firstterm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Firstterm instance.
func (me *XsdGoPkgHasElem_Firstterm) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Firstterm; fn != nil { fn(me) }
	me.Firstterm.Walk()
 }

type XsdGoPkgHasElem_Glossary struct {
	Glossary *TxsdGlossary `xml:"http://docbook.org/ns/docbook glossary"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Glossary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Glossary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Glossary instance.
func (me *XsdGoPkgHasElem_Glossary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Glossary; fn != nil { fn(me) }
	me.Glossary.Walk()
 }

type XsdGoPkgHasElem_Glossdiv struct {
	Glossdiv *TxsdGlossdiv `xml:"http://docbook.org/ns/docbook glossdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Glossdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Glossdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Glossdiv instance.
func (me *XsdGoPkgHasElem_Glossdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Glossdiv; fn != nil { fn(me) }
	me.Glossdiv.Walk()
 }

type XsdGoPkgHasElem_Termdef struct {
	Termdef *TxsdTermdef `xml:"http://docbook.org/ns/docbook termdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Termdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Termdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Termdef instance.
func (me *XsdGoPkgHasElem_Termdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Termdef; fn != nil { fn(me) }
	me.Termdef.Walk()
 }

type XsdGoPkgHasElem_Biblioentry struct {
	Biblioentry *TxsdBiblioentry `xml:"http://docbook.org/ns/docbook biblioentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Biblioentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Biblioentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Biblioentry instance.
func (me *XsdGoPkgHasElem_Biblioentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Biblioentry; fn != nil { fn(me) }
	me.Biblioentry.Walk()
 }

type XsdGoPkgHasElem_Bibliomixed struct {
	Bibliomixed *TxsdBibliomixed `xml:"http://docbook.org/ns/docbook bibliomixed"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliomixed function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliomixed instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliomixed instance.
func (me *XsdGoPkgHasElem_Bibliomixed) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliomixed; fn != nil { fn(me) }
	me.Bibliomixed.Walk()
 }

type XsdGoPkgHasElem_Biblioset struct {
	Biblioset *TxsdBiblioset `xml:"http://docbook.org/ns/docbook biblioset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Biblioset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Biblioset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Biblioset instance.
func (me *XsdGoPkgHasElem_Biblioset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Biblioset; fn != nil { fn(me) }
	me.Biblioset.Walk()
 }

type XsdGoPkgHasElem_Bibliomset struct {
	Bibliomset *TxsdBibliomset `xml:"http://docbook.org/ns/docbook bibliomset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliomset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliomset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliomset instance.
func (me *XsdGoPkgHasElem_Bibliomset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliomset; fn != nil { fn(me) }
	me.Bibliomset.Walk()
 }

type XsdGoPkgHasElem_Bibliomisc struct {
	Bibliomisc *TxsdFunction `xml:"http://docbook.org/ns/docbook bibliomisc"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliomisc function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliomisc instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliomisc instance.
func (me *XsdGoPkgHasElem_Bibliomisc) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliomisc; fn != nil { fn(me) }
	me.Bibliomisc.Walk()
 }

type XsdGoPkgHasElem_Bibliodiv struct {
	Bibliodiv *TxsdBibliodiv `xml:"http://docbook.org/ns/docbook bibliodiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliodiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliodiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliodiv instance.
func (me *XsdGoPkgHasElem_Bibliodiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliodiv; fn != nil { fn(me) }
	me.Bibliodiv.Walk()
 }

type XsdGoPkgHasElem_Bibliolist struct {
	Bibliolist *TxsdBibliolist `xml:"http://docbook.org/ns/docbook bibliolist"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Bibliolist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Bibliolist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Bibliolist instance.
func (me *XsdGoPkgHasElem_Bibliolist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Bibliolist; fn != nil { fn(me) }
	me.Bibliolist.Walk()
 }

type XsdGoPkgHasElem_Biblioref struct {
	Biblioref *TxsdBiblioref `xml:"http://docbook.org/ns/docbook biblioref"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Biblioref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Biblioref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Biblioref instance.
func (me *XsdGoPkgHasElem_Biblioref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Biblioref; fn != nil { fn(me) }
	me.Biblioref.Walk()
 }

type XsdGoPkgHasElem_Itermset struct {
	Itermset *TxsdItermset `xml:"http://docbook.org/ns/docbook itermset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Itermset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Itermset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Itermset instance.
func (me *XsdGoPkgHasElem_Itermset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Itermset; fn != nil { fn(me) }
	me.Itermset.Walk()
 }

type XsdGoPkgHasElem_Indexterm struct {
	Indexterm *TxsdIndexterm `xml:"http://docbook.org/ns/docbook indexterm"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Indexterm function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Indexterm instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Indexterm instance.
func (me *XsdGoPkgHasElem_Indexterm) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Indexterm; fn != nil { fn(me) }
	me.Indexterm.Walk()
 }

type XsdGoPkgHasElems_Primary struct {
	Primaries []*TxsdSecondary `xml:"http://docbook.org/ns/docbook primary"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Primary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Primary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Primary instance.
func (me *XsdGoPkgHasElems_Primary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Primary; fn != nil { fn(me) }
	for _, x := range me.Primaries { x.Walk() }
 }

type XsdGoPkgHasElems_Secondary struct {
	Secondaries []*TxsdSecondary `xml:"http://docbook.org/ns/docbook secondary"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Secondary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Secondary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Secondary instance.
func (me *XsdGoPkgHasElems_Secondary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Secondary; fn != nil { fn(me) }
	for _, x := range me.Secondaries { x.Walk() }
 }

type XsdGoPkgHasElems_Tertiary struct {
	Tertiaries []*TxsdSecondary `xml:"http://docbook.org/ns/docbook tertiary"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tertiary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tertiary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tertiary instance.
func (me *XsdGoPkgHasElems_Tertiary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tertiary; fn != nil { fn(me) }
	for _, x := range me.Tertiaries { x.Walk() }
 }

type XsdGoPkgHasElems_See struct {
	Sees []*TxsdPhrase `xml:"http://docbook.org/ns/docbook see"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_See function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_See instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_See instance.
func (me *XsdGoPkgHasElems_See) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_See; fn != nil { fn(me) }
	for _, x := range me.Sees { x.Walk() }
 }

type XsdGoPkgHasElem_Seealso struct {
	Seealso *TxsdPhrase `xml:"http://docbook.org/ns/docbook seealso"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Seealso function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Seealso instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Seealso instance.
func (me *XsdGoPkgHasElem_Seealso) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Seealso; fn != nil { fn(me) }
	me.Seealso.Walk()
 }

type XsdGoPkgHasElem_Index struct {
	Index *TxsdIndex `xml:"http://docbook.org/ns/docbook index"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Index function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Index instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Index instance.
func (me *XsdGoPkgHasElem_Index) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Index; fn != nil { fn(me) }
	me.Index.Walk()
 }

type XsdGoPkgHasElems_Setindex struct {
	Setindexs []*TxsdSetindex `xml:"http://docbook.org/ns/docbook setindex"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Setindex function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Setindex instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Setindex instance.
func (me *XsdGoPkgHasElems_Setindex) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Setindex; fn != nil { fn(me) }
	for _, x := range me.Setindexs { x.Walk() }
 }

type XsdGoPkgHasElem_Indexdiv struct {
	Indexdiv *TxsdIndexdiv `xml:"http://docbook.org/ns/docbook indexdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Indexdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Indexdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Indexdiv instance.
func (me *XsdGoPkgHasElem_Indexdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Indexdiv; fn != nil { fn(me) }
	me.Indexdiv.Walk()
 }

type XsdGoPkgHasElem_Indexentry struct {
	Indexentry *TxsdIndexentry `xml:"http://docbook.org/ns/docbook indexentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Indexentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Indexentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Indexentry instance.
func (me *XsdGoPkgHasElem_Indexentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Indexentry; fn != nil { fn(me) }
	me.Indexentry.Walk()
 }

type XsdGoPkgHasElems_Primaryie struct {
	Primaryies []*TxsdSeealsoie `xml:"http://docbook.org/ns/docbook primaryie"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Primaryie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Primaryie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Primaryie instance.
func (me *XsdGoPkgHasElems_Primaryie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Primaryie; fn != nil { fn(me) }
	for _, x := range me.Primaryies { x.Walk() }
 }

type XsdGoPkgHasElem_Secondaryie struct {
	Secondaryie *TxsdSeealsoie `xml:"http://docbook.org/ns/docbook secondaryie"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Secondaryie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Secondaryie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Secondaryie instance.
func (me *XsdGoPkgHasElem_Secondaryie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Secondaryie; fn != nil { fn(me) }
	me.Secondaryie.Walk()
 }

type XsdGoPkgHasElem_Tertiaryie struct {
	Tertiaryie *TxsdSeealsoie `xml:"http://docbook.org/ns/docbook tertiaryie"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tertiaryie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tertiaryie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tertiaryie instance.
func (me *XsdGoPkgHasElem_Tertiaryie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tertiaryie; fn != nil { fn(me) }
	me.Tertiaryie.Walk()
 }

type XsdGoPkgHasElem_Seeie struct {
	Seeie *TxsdTitle `xml:"http://docbook.org/ns/docbook seeie"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Seeie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Seeie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Seeie instance.
func (me *XsdGoPkgHasElem_Seeie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Seeie; fn != nil { fn(me) }
	me.Seeie.Walk()
 }

type XsdGoPkgHasElem_Seealsoie struct {
	Seealsoie *TxsdSeealsoie `xml:"http://docbook.org/ns/docbook seealsoie"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Seealsoie function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Seealsoie instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Seealsoie instance.
func (me *XsdGoPkgHasElem_Seealsoie) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Seealsoie; fn != nil { fn(me) }
	me.Seealsoie.Walk()
 }

type XsdGoPkgHasElem_Tocdiv struct {
	Tocdiv *TxsdTocdiv `xml:"http://docbook.org/ns/docbook tocdiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tocdiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tocdiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tocdiv instance.
func (me *XsdGoPkgHasElem_Tocdiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tocdiv; fn != nil { fn(me) }
	me.Tocdiv.Walk()
 }

type XsdGoPkgHasElem_Tocentry struct {
	Tocentry *TxsdTocentry `xml:"http://docbook.org/ns/docbook tocentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tocentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tocentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tocentry instance.
func (me *XsdGoPkgHasElem_Tocentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tocentry; fn != nil { fn(me) }
	me.Tocentry.Walk()
 }

type XsdGoPkgHasElem_Task struct {
	Task *TxsdTask `xml:"http://docbook.org/ns/docbook task"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Task function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Task instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Task instance.
func (me *XsdGoPkgHasElem_Task) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Task; fn != nil { fn(me) }
	me.Task.Walk()
 }

type XsdGoPkgHasElems_Tasksummary struct {
	Tasksummaries []*TxsdTaskrelated `xml:"http://docbook.org/ns/docbook tasksummary"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tasksummary function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tasksummary instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tasksummary instance.
func (me *XsdGoPkgHasElems_Tasksummary) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tasksummary; fn != nil { fn(me) }
	for _, x := range me.Tasksummaries { x.Walk() }
 }

type XsdGoPkgHasElems_Taskprerequisites struct {
	Taskprerequisiteses []*TxsdTaskrelated `xml:"http://docbook.org/ns/docbook taskprerequisites"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Taskprerequisites function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Taskprerequisites instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Taskprerequisites instance.
func (me *XsdGoPkgHasElems_Taskprerequisites) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Taskprerequisites; fn != nil { fn(me) }
	for _, x := range me.Taskprerequisiteses { x.Walk() }
 }

type XsdGoPkgHasElems_Taskrelated struct {
	Taskrelateds []*TxsdTaskrelated `xml:"http://docbook.org/ns/docbook taskrelated"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Taskrelated function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Taskrelated instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Taskrelated instance.
func (me *XsdGoPkgHasElems_Taskrelated) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Taskrelated; fn != nil { fn(me) }
	for _, x := range me.Taskrelateds { x.Walk() }
 }

type XsdGoPkgHasElem_Calloutlist struct {
	Calloutlist *TxsdCalloutlist `xml:"http://docbook.org/ns/docbook calloutlist"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Calloutlist function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Calloutlist instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Calloutlist instance.
func (me *XsdGoPkgHasElem_Calloutlist) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Calloutlist; fn != nil { fn(me) }
	me.Calloutlist.Walk()
 }

type XsdGoPkgHasElem_Callout struct {
	Callout *TxsdCallout `xml:"http://docbook.org/ns/docbook callout"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Callout function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Callout instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Callout instance.
func (me *XsdGoPkgHasElem_Callout) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Callout; fn != nil { fn(me) }
	me.Callout.Walk()
 }

type XsdGoPkgHasElem_Programlistingco struct {
	Programlistingco *TxsdProgramlistingco `xml:"http://docbook.org/ns/docbook programlistingco"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Programlistingco function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Programlistingco instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Programlistingco instance.
func (me *XsdGoPkgHasElem_Programlistingco) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Programlistingco; fn != nil { fn(me) }
	me.Programlistingco.Walk()
 }

type XsdGoPkgHasElems_Areaspec struct {
	Areaspecs []*TxsdAreaspec `xml:"http://docbook.org/ns/docbook areaspec"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Areaspec function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Areaspec instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Areaspec instance.
func (me *XsdGoPkgHasElems_Areaspec) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Areaspec; fn != nil { fn(me) }
	for _, x := range me.Areaspecs { x.Walk() }
 }

type XsdGoPkgHasElem_Area struct {
	Area *TxsdArea `xml:"http://docbook.org/ns/docbook area"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Area function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Area instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Area instance.
func (me *XsdGoPkgHasElem_Area) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Area; fn != nil { fn(me) }
	me.Area.Walk()
 }

type XsdGoPkgHasElem_Areaset struct {
	Areaset *TxsdAreaset `xml:"http://docbook.org/ns/docbook areaset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Areaset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Areaset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Areaset instance.
func (me *XsdGoPkgHasElem_Areaset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Areaset; fn != nil { fn(me) }
	me.Areaset.Walk()
 }

type XsdGoPkgHasElem_Screenco struct {
	Screenco *TxsdScreenco `xml:"http://docbook.org/ns/docbook screenco"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Screenco function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Screenco instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Screenco instance.
func (me *XsdGoPkgHasElem_Screenco) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Screenco; fn != nil { fn(me) }
	me.Screenco.Walk()
 }

type XsdGoPkgHasElem_Imageobjectco struct {
	Imageobjectco *TxsdImageobjectco `xml:"http://docbook.org/ns/docbook imageobjectco"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Imageobjectco function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Imageobjectco instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Imageobjectco instance.
func (me *XsdGoPkgHasElem_Imageobjectco) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Imageobjectco; fn != nil { fn(me) }
	me.Imageobjectco.Walk()
 }

type XsdGoPkgHasElem_Co struct {
	Co *TxsdCo `xml:"http://docbook.org/ns/docbook co"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Co function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Co instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Co instance.
func (me *XsdGoPkgHasElem_Co) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Co; fn != nil { fn(me) }
	me.Co.Walk()
 }

type XsdGoPkgHasElem_Coref struct {
	Coref *TxsdCoref `xml:"http://docbook.org/ns/docbook coref"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Coref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Coref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Coref instance.
func (me *XsdGoPkgHasElem_Coref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Coref; fn != nil { fn(me) }
	me.Coref.Walk()
 }

type XsdGoPkgHasElem_Productionset struct {
	Productionset *TxsdProductionset `xml:"http://docbook.org/ns/docbook productionset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Productionset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Productionset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Productionset instance.
func (me *XsdGoPkgHasElem_Productionset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Productionset; fn != nil { fn(me) }
	me.Productionset.Walk()
 }

type XsdGoPkgHasElem_Production struct {
	Production *TxsdProduction `xml:"http://docbook.org/ns/docbook production"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Production function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Production instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Production instance.
func (me *XsdGoPkgHasElem_Production) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Production; fn != nil { fn(me) }
	me.Production.Walk()
 }

type XsdGoPkgHasElems_Lhs struct {
	Lhses []*TxsdDate `xml:"http://docbook.org/ns/docbook lhs"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Lhs function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Lhs instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Lhs instance.
func (me *XsdGoPkgHasElems_Lhs) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Lhs; fn != nil { fn(me) }
	for _, x := range me.Lhses { x.Walk() }
 }

type XsdGoPkgHasElems_Rhs struct {
	Rhses []*TxsdRhs `xml:"http://docbook.org/ns/docbook rhs"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Rhs function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Rhs instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Rhs instance.
func (me *XsdGoPkgHasElems_Rhs) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Rhs; fn != nil { fn(me) }
	for _, x := range me.Rhses { x.Walk() }
 }

type XsdGoPkgHasElem_Nonterminal struct {
	Nonterminal *TxsdNonterminal `xml:"http://docbook.org/ns/docbook nonterminal"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Nonterminal function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Nonterminal instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Nonterminal instance.
func (me *XsdGoPkgHasElem_Nonterminal) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Nonterminal; fn != nil { fn(me) }
	me.Nonterminal.Walk()
 }

type XsdGoPkgHasElem_Constraint struct {
	Constraint *TxsdVoid `xml:"http://docbook.org/ns/docbook constraint"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Constraint function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Constraint instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Constraint instance.
func (me *XsdGoPkgHasElem_Constraint) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Constraint; fn != nil { fn(me) }
	me.Constraint.Walk()
 }

type XsdGoPkgHasElem_Productionrecap struct {
	Productionrecap *TxsdVoid `xml:"http://docbook.org/ns/docbook productionrecap"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Productionrecap function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Productionrecap instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Productionrecap instance.
func (me *XsdGoPkgHasElem_Productionrecap) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Productionrecap; fn != nil { fn(me) }
	me.Productionrecap.Walk()
 }

type XsdGoPkgHasElem_Constraintdef struct {
	Constraintdef *TxsdConstraintdef `xml:"http://docbook.org/ns/docbook constraintdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Constraintdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Constraintdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Constraintdef instance.
func (me *XsdGoPkgHasElem_Constraintdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Constraintdef; fn != nil { fn(me) }
	me.Constraintdef.Walk()
 }

type XsdGoPkgHasElem_Tgroup struct {
	Tgroup *TxsdTgroup `xml:"http://docbook.org/ns/docbook tgroup"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tgroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tgroup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tgroup instance.
func (me *XsdGoPkgHasElem_Tgroup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tgroup; fn != nil { fn(me) }
	me.Tgroup.Walk()
 }

type XsdGoPkgHasElem_Colspec struct {
	Colspec *TxsdColspec `xml:"http://docbook.org/ns/docbook colspec"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Colspec function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Colspec instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Colspec instance.
func (me *XsdGoPkgHasElem_Colspec) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Colspec; fn != nil { fn(me) }
	me.Colspec.Walk()
 }

type XsdGoPkgHasElem_Spanspec struct {
	Spanspec *TxsdSpanspec `xml:"http://docbook.org/ns/docbook spanspec"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Spanspec function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Spanspec instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Spanspec instance.
func (me *XsdGoPkgHasElem_Spanspec) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Spanspec; fn != nil { fn(me) }
	me.Spanspec.Walk()
 }

type XsdGoPkgHasElems_Thead struct {
	Theads []*TxsdThead `xml:"http://docbook.org/ns/docbook thead"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Thead function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Thead instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Thead instance.
func (me *XsdGoPkgHasElems_Thead) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Thead; fn != nil { fn(me) }
	for _, x := range me.Theads { x.Walk() }
 }

type XsdGoPkgHasElems_Tfoot struct {
	Tfoots []*TxsdTfoot `xml:"http://docbook.org/ns/docbook tfoot"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Tfoot function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Tfoot instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Tfoot instance.
func (me *XsdGoPkgHasElems_Tfoot) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Tfoot; fn != nil { fn(me) }
	for _, x := range me.Tfoots { x.Walk() }
 }

type XsdGoPkgHasElem_Row struct {
	Row *TxsdRow `xml:"http://docbook.org/ns/docbook row"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Row function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Row instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Row instance.
func (me *XsdGoPkgHasElem_Row) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Row; fn != nil { fn(me) }
	me.Row.Walk()
 }

type XsdGoPkgHasElem_Entry struct {
	Entry *TxsdEntry `xml:"http://docbook.org/ns/docbook entry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Entry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Entry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Entry instance.
func (me *XsdGoPkgHasElem_Entry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Entry; fn != nil { fn(me) }
	me.Entry.Walk()
 }

type XsdGoPkgHasElem_Entrytbl struct {
	Entrytbl *TxsdEntrytbl `xml:"http://docbook.org/ns/docbook entrytbl"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Entrytbl function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Entrytbl instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Entrytbl instance.
func (me *XsdGoPkgHasElem_Entrytbl) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Entrytbl; fn != nil { fn(me) }
	me.Entrytbl.Walk()
 }

type XsdGoPkgHasElem_Table struct {
	Table *TxsdTable `xml:"http://docbook.org/ns/docbook table"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Table function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Table instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Table instance.
func (me *XsdGoPkgHasElem_Table) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Table; fn != nil { fn(me) }
	me.Table.Walk()
 }

type XsdGoPkgHasElem_Informaltable struct {
	Informaltable *TxsdInformaltable `xml:"http://docbook.org/ns/docbook informaltable"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Informaltable function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Informaltable instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Informaltable instance.
func (me *XsdGoPkgHasElem_Informaltable) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Informaltable; fn != nil { fn(me) }
	me.Informaltable.Walk()
 }

type XsdGoPkgHasElem_Col struct {
	Col *TxsdCol `xml:"http://docbook.org/ns/docbook col"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Col function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Col instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Col instance.
func (me *XsdGoPkgHasElem_Col) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Col; fn != nil { fn(me) }
	me.Col.Walk()
 }

type XsdGoPkgHasElem_Colgroup struct {
	Colgroup *TxsdColgroup `xml:"http://docbook.org/ns/docbook colgroup"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Colgroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Colgroup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Colgroup instance.
func (me *XsdGoPkgHasElem_Colgroup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Colgroup; fn != nil { fn(me) }
	me.Colgroup.Walk()
 }

type XsdGoPkgHasElem_Tr struct {
	Tr *TxsdTr `xml:"http://docbook.org/ns/docbook tr"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tr function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tr instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tr instance.
func (me *XsdGoPkgHasElem_Tr) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tr; fn != nil { fn(me) }
	me.Tr.Walk()
 }

type XsdGoPkgHasElem_Th struct {
	Th *TxsdTh `xml:"http://docbook.org/ns/docbook th"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Th function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Th instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Th instance.
func (me *XsdGoPkgHasElem_Th) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Th; fn != nil { fn(me) }
	me.Th.Walk()
 }

type XsdGoPkgHasElem_Td struct {
	Td *TxsdTd `xml:"http://docbook.org/ns/docbook td"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Td function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Td instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Td instance.
func (me *XsdGoPkgHasElem_Td) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Td; fn != nil { fn(me) }
	me.Td.Walk()
 }

type XsdGoPkgHasElem_Msgset struct {
	Msgset *TxsdMsgset `xml:"http://docbook.org/ns/docbook msgset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgset instance.
func (me *XsdGoPkgHasElem_Msgset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgset; fn != nil { fn(me) }
	me.Msgset.Walk()
 }

type XsdGoPkgHasElem_Msgentry struct {
	Msgentry *TxsdMsgentry `xml:"http://docbook.org/ns/docbook msgentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgentry instance.
func (me *XsdGoPkgHasElem_Msgentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgentry; fn != nil { fn(me) }
	me.Msgentry.Walk()
 }

type XsdGoPkgHasElem_Simplemsgentry struct {
	Simplemsgentry *TxsdSimplemsgentry `xml:"http://docbook.org/ns/docbook simplemsgentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Simplemsgentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Simplemsgentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Simplemsgentry instance.
func (me *XsdGoPkgHasElem_Simplemsgentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Simplemsgentry; fn != nil { fn(me) }
	me.Simplemsgentry.Walk()
 }

type XsdGoPkgHasElem_Msg struct {
	Msg *TxsdMsg `xml:"http://docbook.org/ns/docbook msg"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msg function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msg instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msg instance.
func (me *XsdGoPkgHasElem_Msg) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msg; fn != nil { fn(me) }
	me.Msg.Walk()
 }

type XsdGoPkgHasElems_Msgmain struct {
	Msgmains []*TxsdMsgsub `xml:"http://docbook.org/ns/docbook msgmain"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgmain function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgmain instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgmain instance.
func (me *XsdGoPkgHasElems_Msgmain) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgmain; fn != nil { fn(me) }
	for _, x := range me.Msgmains { x.Walk() }
 }

type XsdGoPkgHasElem_Msgsub struct {
	Msgsub *TxsdMsgsub `xml:"http://docbook.org/ns/docbook msgsub"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgsub function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgsub instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgsub instance.
func (me *XsdGoPkgHasElem_Msgsub) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgsub; fn != nil { fn(me) }
	me.Msgsub.Walk()
 }

type XsdGoPkgHasElem_Msgrel struct {
	Msgrel *TxsdMsgsub `xml:"http://docbook.org/ns/docbook msgrel"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgrel function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgrel instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgrel instance.
func (me *XsdGoPkgHasElem_Msgrel) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgrel; fn != nil { fn(me) }
	me.Msgrel.Walk()
 }

type XsdGoPkgHasElems_Msgtext struct {
	Msgtexts []*TxsdRevdescription `xml:"http://docbook.org/ns/docbook msgtext"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msgtext function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msgtext instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msgtext instance.
func (me *XsdGoPkgHasElems_Msgtext) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msgtext; fn != nil { fn(me) }
	for _, x := range me.Msgtexts { x.Walk() }
 }

type XsdGoPkgHasElems_Msginfo struct {
	Msginfos []*TxsdMsginfo `xml:"http://docbook.org/ns/docbook msginfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Msginfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Msginfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Msginfo instance.
func (me *XsdGoPkgHasElems_Msginfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Msginfo; fn != nil { fn(me) }
	for _, x := range me.Msginfos { x.Walk() }
 }

type XsdGoPkgHasElem_Msglevel struct {
	Msglevel *TxsdContrib `xml:"http://docbook.org/ns/docbook msglevel"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msglevel function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msglevel instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msglevel instance.
func (me *XsdGoPkgHasElem_Msglevel) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msglevel; fn != nil { fn(me) }
	me.Msglevel.Walk()
 }

type XsdGoPkgHasElem_Msgorig struct {
	Msgorig *TxsdContrib `xml:"http://docbook.org/ns/docbook msgorig"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgorig function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgorig instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgorig instance.
func (me *XsdGoPkgHasElem_Msgorig) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgorig; fn != nil { fn(me) }
	me.Msgorig.Walk()
 }

type XsdGoPkgHasElem_Msgaud struct {
	Msgaud *TxsdContrib `xml:"http://docbook.org/ns/docbook msgaud"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgaud function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgaud instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgaud instance.
func (me *XsdGoPkgHasElem_Msgaud) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgaud; fn != nil { fn(me) }
	me.Msgaud.Walk()
 }

type XsdGoPkgHasElem_Msgexplan struct {
	Msgexplan *TxsdConstraintdef `xml:"http://docbook.org/ns/docbook msgexplan"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Msgexplan function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Msgexplan instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Msgexplan instance.
func (me *XsdGoPkgHasElem_Msgexplan) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Msgexplan; fn != nil { fn(me) }
	me.Msgexplan.Walk()
 }

type XsdGoPkgHasElem_Qandaset struct {
	Qandaset *TxsdQandaset `xml:"http://docbook.org/ns/docbook qandaset"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Qandaset function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Qandaset instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Qandaset instance.
func (me *XsdGoPkgHasElem_Qandaset) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Qandaset; fn != nil { fn(me) }
	me.Qandaset.Walk()
 }

type XsdGoPkgHasElem_Qandadiv struct {
	Qandadiv *TxsdQandadiv `xml:"http://docbook.org/ns/docbook qandadiv"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Qandadiv function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Qandadiv instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Qandadiv instance.
func (me *XsdGoPkgHasElem_Qandadiv) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Qandadiv; fn != nil { fn(me) }
	me.Qandadiv.Walk()
 }

type XsdGoPkgHasElem_Qandaentry struct {
	Qandaentry *TxsdQandaentry `xml:"http://docbook.org/ns/docbook qandaentry"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Qandaentry function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Qandaentry instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Qandaentry instance.
func (me *XsdGoPkgHasElem_Qandaentry) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Qandaentry; fn != nil { fn(me) }
	me.Qandaentry.Walk()
 }

type XsdGoPkgHasElems_Question struct {
	Questions []*TxsdAnswer `xml:"http://docbook.org/ns/docbook question"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Question function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Question instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Question instance.
func (me *XsdGoPkgHasElems_Question) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Question; fn != nil { fn(me) }
	for _, x := range me.Questions { x.Walk() }
 }

type XsdGoPkgHasElem_Answer struct {
	Answer *TxsdAnswer `xml:"http://docbook.org/ns/docbook answer"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Answer function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Answer instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Answer instance.
func (me *XsdGoPkgHasElem_Answer) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Answer; fn != nil { fn(me) }
	me.Answer.Walk()
 }

type XsdGoPkgHasElems_Label struct {
	Labels []*TxsdInterfacename `xml:"http://docbook.org/ns/docbook label"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Label function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Label instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Label instance.
func (me *XsdGoPkgHasElems_Label) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Label; fn != nil { fn(me) }
	for _, x := range me.Labels { x.Walk() }
 }

type XsdGoPkgHasElem_Equation struct {
	Equation *TxsdEquation `xml:"http://docbook.org/ns/docbook equation"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Equation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Equation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Equation instance.
func (me *XsdGoPkgHasElem_Equation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Equation; fn != nil { fn(me) }
	me.Equation.Walk()
 }

type XsdGoPkgHasElem_Informalequation struct {
	Informalequation *TxsdInformalequation `xml:"http://docbook.org/ns/docbook informalequation"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Informalequation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Informalequation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Informalequation instance.
func (me *XsdGoPkgHasElem_Informalequation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Informalequation; fn != nil { fn(me) }
	me.Informalequation.Walk()
 }

type XsdGoPkgHasElem_Inlineequation struct {
	Inlineequation *TxsdInlineequation `xml:"http://docbook.org/ns/docbook inlineequation"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Inlineequation function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Inlineequation instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Inlineequation instance.
func (me *XsdGoPkgHasElem_Inlineequation) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Inlineequation; fn != nil { fn(me) }
	me.Inlineequation.Walk()
 }

type XsdGoPkgHasElem_Mathphrase struct {
	Mathphrase *TxsdMathphrase `xml:"http://docbook.org/ns/docbook mathphrase"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Mathphrase function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Mathphrase instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Mathphrase instance.
func (me *XsdGoPkgHasElem_Mathphrase) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Mathphrase; fn != nil { fn(me) }
	me.Mathphrase.Walk()
 }

type XsdGoPkgHasElem_Markup struct {
	Markup *TxsdInterfacename `xml:"http://docbook.org/ns/docbook markup"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Markup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Markup instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Markup instance.
func (me *XsdGoPkgHasElem_Markup) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Markup; fn != nil { fn(me) }
	me.Markup.Walk()
 }

type XsdGoPkgHasElem_Tag struct {
	Tag *TxsdTag `xml:"http://docbook.org/ns/docbook tag"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tag function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tag instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tag instance.
func (me *XsdGoPkgHasElem_Tag) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tag; fn != nil { fn(me) }
	me.Tag.Walk()
 }

type XsdGoPkgHasElem_Symbol struct {
	Symbol *TxsdSymbol `xml:"http://docbook.org/ns/docbook symbol"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Symbol function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Symbol instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Symbol instance.
func (me *XsdGoPkgHasElem_Symbol) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Symbol; fn != nil { fn(me) }
	me.Symbol.Walk()
 }

type XsdGoPkgHasElem_Token struct {
	Token *TxsdInterfacename `xml:"http://docbook.org/ns/docbook token"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Token function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Token instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Token instance.
func (me *XsdGoPkgHasElem_Token) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Token; fn != nil { fn(me) }
	me.Token.Walk()
 }

type XsdGoPkgHasElem_Literal struct {
	Literal *TxsdInterfacename `xml:"http://docbook.org/ns/docbook literal"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Literal function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Literal instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Literal instance.
func (me *XsdGoPkgHasElem_Literal) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Literal; fn != nil { fn(me) }
	me.Literal.Walk()
 }

type XsdGoPkgHasElem_Code struct {
	Code *TxsdCode `xml:"http://docbook.org/ns/docbook code"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Code function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Code instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Code instance.
func (me *XsdGoPkgHasElem_Code) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Code; fn != nil { fn(me) }
	me.Code.Walk()
 }

type XsdGoPkgHasElem_Constant struct {
	Constant *TxsdConstant `xml:"http://docbook.org/ns/docbook constant"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Constant function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Constant instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Constant instance.
func (me *XsdGoPkgHasElem_Constant) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Constant; fn != nil { fn(me) }
	me.Constant.Walk()
 }

type XsdGoPkgHasElem_Productname struct {
	Productname *TxsdProductname `xml:"http://docbook.org/ns/docbook productname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Productname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Productname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Productname instance.
func (me *XsdGoPkgHasElem_Productname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Productname; fn != nil { fn(me) }
	me.Productname.Walk()
 }

type XsdGoPkgHasElem_Productnumber struct {
	Productnumber *TxsdInterfacename `xml:"http://docbook.org/ns/docbook productnumber"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Productnumber function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Productnumber instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Productnumber instance.
func (me *XsdGoPkgHasElem_Productnumber) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Productnumber; fn != nil { fn(me) }
	me.Productnumber.Walk()
 }

type XsdGoPkgHasElem_Database struct {
	Database *TxsdDatabase `xml:"http://docbook.org/ns/docbook database"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Database function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Database instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Database instance.
func (me *XsdGoPkgHasElem_Database) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Database; fn != nil { fn(me) }
	me.Database.Walk()
 }

type XsdGoPkgHasElem_Application struct {
	Application *TxsdApplication `xml:"http://docbook.org/ns/docbook application"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Application function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Application instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Application instance.
func (me *XsdGoPkgHasElem_Application) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Application; fn != nil { fn(me) }
	me.Application.Walk()
 }

type XsdGoPkgHasElem_Hardware struct {
	Hardware *TxsdInterfacename `xml:"http://docbook.org/ns/docbook hardware"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Hardware function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Hardware instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Hardware instance.
func (me *XsdGoPkgHasElem_Hardware) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Hardware; fn != nil { fn(me) }
	me.Hardware.Walk()
 }

type XsdGoPkgHasElem_Guibutton struct {
	Guibutton *TxsdGuilabel `xml:"http://docbook.org/ns/docbook guibutton"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Guibutton function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Guibutton instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Guibutton instance.
func (me *XsdGoPkgHasElem_Guibutton) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Guibutton; fn != nil { fn(me) }
	me.Guibutton.Walk()
 }

type XsdGoPkgHasElem_Guiicon struct {
	Guiicon *TxsdGuilabel `xml:"http://docbook.org/ns/docbook guiicon"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Guiicon function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Guiicon instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Guiicon instance.
func (me *XsdGoPkgHasElem_Guiicon) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Guiicon; fn != nil { fn(me) }
	me.Guiicon.Walk()
 }

type XsdGoPkgHasElem_Guilabel struct {
	Guilabel *TxsdGuilabel `xml:"http://docbook.org/ns/docbook guilabel"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Guilabel function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Guilabel instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Guilabel instance.
func (me *XsdGoPkgHasElem_Guilabel) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Guilabel; fn != nil { fn(me) }
	me.Guilabel.Walk()
 }

type XsdGoPkgHasElem_Guimenu struct {
	Guimenu *TxsdGuilabel `xml:"http://docbook.org/ns/docbook guimenu"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Guimenu function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Guimenu instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Guimenu instance.
func (me *XsdGoPkgHasElem_Guimenu) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Guimenu; fn != nil { fn(me) }
	me.Guimenu.Walk()
 }

type XsdGoPkgHasElem_Guimenuitem struct {
	Guimenuitem *TxsdGuilabel `xml:"http://docbook.org/ns/docbook guimenuitem"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Guimenuitem function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Guimenuitem instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Guimenuitem instance.
func (me *XsdGoPkgHasElem_Guimenuitem) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Guimenuitem; fn != nil { fn(me) }
	me.Guimenuitem.Walk()
 }

type XsdGoPkgHasElem_Guisubmenu struct {
	Guisubmenu *TxsdGuilabel `xml:"http://docbook.org/ns/docbook guisubmenu"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Guisubmenu function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Guisubmenu instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Guisubmenu instance.
func (me *XsdGoPkgHasElem_Guisubmenu) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Guisubmenu; fn != nil { fn(me) }
	me.Guisubmenu.Walk()
 }

type XsdGoPkgHasElem_Menuchoice struct {
	Menuchoice *TxsdMenuchoice `xml:"http://docbook.org/ns/docbook menuchoice"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Menuchoice function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Menuchoice instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Menuchoice instance.
func (me *XsdGoPkgHasElem_Menuchoice) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Menuchoice; fn != nil { fn(me) }
	me.Menuchoice.Walk()
 }

type XsdGoPkgHasElem_Mousebutton struct {
	Mousebutton *TxsdInterfacename `xml:"http://docbook.org/ns/docbook mousebutton"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Mousebutton function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Mousebutton instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Mousebutton instance.
func (me *XsdGoPkgHasElem_Mousebutton) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Mousebutton; fn != nil { fn(me) }
	me.Mousebutton.Walk()
 }

type XsdGoPkgHasElem_Keycap struct {
	Keycap *TxsdKeycap `xml:"http://docbook.org/ns/docbook keycap"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Keycap function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Keycap instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Keycap instance.
func (me *XsdGoPkgHasElem_Keycap) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Keycap; fn != nil { fn(me) }
	me.Keycap.Walk()
 }

type XsdGoPkgHasElem_Keycode struct {
	Keycode *TxsdInterfacename `xml:"http://docbook.org/ns/docbook keycode"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Keycode function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Keycode instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Keycode instance.
func (me *XsdGoPkgHasElem_Keycode) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Keycode; fn != nil { fn(me) }
	me.Keycode.Walk()
 }

type XsdGoPkgHasElem_Keycombo struct {
	Keycombo *TxsdKeycombo `xml:"http://docbook.org/ns/docbook keycombo"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Keycombo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Keycombo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Keycombo instance.
func (me *XsdGoPkgHasElem_Keycombo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Keycombo; fn != nil { fn(me) }
	me.Keycombo.Walk()
 }

type XsdGoPkgHasElem_Keysym struct {
	Keysym *TxsdInterfacename `xml:"http://docbook.org/ns/docbook keysym"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Keysym function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Keysym instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Keysym instance.
func (me *XsdGoPkgHasElem_Keysym) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Keysym; fn != nil { fn(me) }
	me.Keysym.Walk()
 }

type XsdGoPkgHasElem_Accel struct {
	Accel *TxsdInterfacename `xml:"http://docbook.org/ns/docbook accel"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Accel function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Accel instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Accel instance.
func (me *XsdGoPkgHasElem_Accel) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Accel; fn != nil { fn(me) }
	me.Accel.Walk()
 }

type XsdGoPkgHasElem_Prompt struct {
	Prompt *TxsdPrompt `xml:"http://docbook.org/ns/docbook prompt"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Prompt function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Prompt instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Prompt instance.
func (me *XsdGoPkgHasElem_Prompt) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Prompt; fn != nil { fn(me) }
	me.Prompt.Walk()
 }

type XsdGoPkgHasElem_Envar struct {
	Envar *TxsdEnvar `xml:"http://docbook.org/ns/docbook envar"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Envar function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Envar instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Envar instance.
func (me *XsdGoPkgHasElem_Envar) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Envar; fn != nil { fn(me) }
	me.Envar.Walk()
 }

type XsdGoPkgHasElem_Filename struct {
	Filename *TxsdFilename `xml:"http://docbook.org/ns/docbook filename"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Filename function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Filename instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Filename instance.
func (me *XsdGoPkgHasElem_Filename) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Filename; fn != nil { fn(me) }
	me.Filename.Walk()
 }

type XsdGoPkgHasElem_Command struct {
	Command *TxsdInterfacename `xml:"http://docbook.org/ns/docbook command"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Command function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Command instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Command instance.
func (me *XsdGoPkgHasElem_Command) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Command; fn != nil { fn(me) }
	me.Command.Walk()
 }

type XsdGoPkgHasElem_Computeroutput struct {
	Computeroutput *TxsdComputeroutput `xml:"http://docbook.org/ns/docbook computeroutput"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Computeroutput function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Computeroutput instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Computeroutput instance.
func (me *XsdGoPkgHasElem_Computeroutput) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Computeroutput; fn != nil { fn(me) }
	me.Computeroutput.Walk()
 }

type XsdGoPkgHasElem_Userinput struct {
	Userinput *TxsdUserinput `xml:"http://docbook.org/ns/docbook userinput"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Userinput function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Userinput instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Userinput instance.
func (me *XsdGoPkgHasElem_Userinput) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Userinput; fn != nil { fn(me) }
	me.Userinput.Walk()
 }

type XsdGoPkgHasElem_Cmdsynopsis struct {
	Cmdsynopsis *TxsdCmdsynopsis `xml:"http://docbook.org/ns/docbook cmdsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Cmdsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Cmdsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Cmdsynopsis instance.
func (me *XsdGoPkgHasElem_Cmdsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Cmdsynopsis; fn != nil { fn(me) }
	me.Cmdsynopsis.Walk()
 }

type XsdGoPkgHasElem_Arg struct {
	Arg *TxsdArg `xml:"http://docbook.org/ns/docbook arg"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Arg function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Arg instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Arg instance.
func (me *XsdGoPkgHasElem_Arg) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Arg; fn != nil { fn(me) }
	me.Arg.Walk()
 }

type XsdGoPkgHasElem_Group struct {
	Group *TxsdGroup `xml:"http://docbook.org/ns/docbook group"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Group function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Group instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Group instance.
func (me *XsdGoPkgHasElem_Group) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Group; fn != nil { fn(me) }
	me.Group.Walk()
 }

type XsdGoPkgHasElem_Sbr struct {
	Sbr *TxsdAnchor `xml:"http://docbook.org/ns/docbook sbr"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Sbr function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Sbr instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Sbr instance.
func (me *XsdGoPkgHasElem_Sbr) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Sbr; fn != nil { fn(me) }
	me.Sbr.Walk()
 }

type XsdGoPkgHasElem_Synopfragment struct {
	Synopfragment *TxsdSynopfragment `xml:"http://docbook.org/ns/docbook synopfragment"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Synopfragment function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Synopfragment instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Synopfragment instance.
func (me *XsdGoPkgHasElem_Synopfragment) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Synopfragment; fn != nil { fn(me) }
	me.Synopfragment.Walk()
 }

type XsdGoPkgHasElem_Synopfragmentref struct {
	Synopfragmentref *TxsdDate `xml:"http://docbook.org/ns/docbook synopfragmentref"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Synopfragmentref function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Synopfragmentref instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Synopfragmentref instance.
func (me *XsdGoPkgHasElem_Synopfragmentref) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Synopfragmentref; fn != nil { fn(me) }
	me.Synopfragmentref.Walk()
 }

type XsdGoPkgHasElem_Synopsis struct {
	Synopsis *TxsdSynopsis `xml:"http://docbook.org/ns/docbook synopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Synopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Synopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Synopsis instance.
func (me *XsdGoPkgHasElem_Synopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Synopsis; fn != nil { fn(me) }
	me.Synopsis.Walk()
 }

type XsdGoPkgHasElem_Funcsynopsis struct {
	Funcsynopsis *TxsdFuncsynopsis `xml:"http://docbook.org/ns/docbook funcsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Funcsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Funcsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Funcsynopsis instance.
func (me *XsdGoPkgHasElem_Funcsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Funcsynopsis; fn != nil { fn(me) }
	me.Funcsynopsis.Walk()
 }

type XsdGoPkgHasElem_Funcsynopsisinfo struct {
	Funcsynopsisinfo *TxsdFuncsynopsisinfo `xml:"http://docbook.org/ns/docbook funcsynopsisinfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Funcsynopsisinfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Funcsynopsisinfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Funcsynopsisinfo instance.
func (me *XsdGoPkgHasElem_Funcsynopsisinfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Funcsynopsisinfo; fn != nil { fn(me) }
	me.Funcsynopsisinfo.Walk()
 }

type XsdGoPkgHasElem_Funcprototype struct {
	Funcprototype *TxsdFuncprototype `xml:"http://docbook.org/ns/docbook funcprototype"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Funcprototype function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Funcprototype instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Funcprototype instance.
func (me *XsdGoPkgHasElem_Funcprototype) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Funcprototype; fn != nil { fn(me) }
	me.Funcprototype.Walk()
 }

type XsdGoPkgHasElems_Funcdef struct {
	Funcdefs []*TxsdFuncdef `xml:"http://docbook.org/ns/docbook funcdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Funcdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Funcdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Funcdef instance.
func (me *XsdGoPkgHasElems_Funcdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Funcdef; fn != nil { fn(me) }
	for _, x := range me.Funcdefs { x.Walk() }
 }

type XsdGoPkgHasElem_Function struct {
	Function *TxsdFunction `xml:"http://docbook.org/ns/docbook function"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Function function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Function instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Function instance.
func (me *XsdGoPkgHasElem_Function) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Function; fn != nil { fn(me) }
	me.Function.Walk()
 }

type XsdGoPkgHasElems_Void struct {
	Voids []*TxsdVoid `xml:"http://docbook.org/ns/docbook void"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Void function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Void instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Void instance.
func (me *XsdGoPkgHasElems_Void) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Void; fn != nil { fn(me) }
	for _, x := range me.Voids { x.Walk() }
 }

type XsdGoPkgHasElems_Varargs struct {
	Varargses []*TxsdVoid `xml:"http://docbook.org/ns/docbook varargs"`

}

//	If the WalkHandlers.XsdGoPkgHasElems_Varargs function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Varargs instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Varargs instance.
func (me *XsdGoPkgHasElems_Varargs) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElems_Varargs; fn != nil { fn(me) }
	for _, x := range me.Varargses { x.Walk() }
 }

type XsdGoPkgHasElem_Paramdef struct {
	Paramdef *TxsdParamdef `xml:"http://docbook.org/ns/docbook paramdef"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Paramdef function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Paramdef instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Paramdef instance.
func (me *XsdGoPkgHasElem_Paramdef) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Paramdef; fn != nil { fn(me) }
	me.Paramdef.Walk()
 }

type XsdGoPkgHasElem_Classsynopsis struct {
	Classsynopsis *TxsdClasssynopsis `xml:"http://docbook.org/ns/docbook classsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Classsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Classsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Classsynopsis instance.
func (me *XsdGoPkgHasElem_Classsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Classsynopsis; fn != nil { fn(me) }
	me.Classsynopsis.Walk()
 }

type XsdGoPkgHasElem_Classsynopsisinfo struct {
	Classsynopsisinfo *TxsdClasssynopsisinfo `xml:"http://docbook.org/ns/docbook classsynopsisinfo"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Classsynopsisinfo function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Classsynopsisinfo instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Classsynopsisinfo instance.
func (me *XsdGoPkgHasElem_Classsynopsisinfo) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Classsynopsisinfo; fn != nil { fn(me) }
	me.Classsynopsisinfo.Walk()
 }

type XsdGoPkgHasElem_Ooclass struct {
	Ooclass *TxsdOoclass `xml:"http://docbook.org/ns/docbook ooclass"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Ooclass function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Ooclass instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Ooclass instance.
func (me *XsdGoPkgHasElem_Ooclass) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Ooclass; fn != nil { fn(me) }
	me.Ooclass.Walk()
 }

type XsdGoPkgHasElem_Oointerface struct {
	Oointerface *TxsdOointerface `xml:"http://docbook.org/ns/docbook oointerface"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Oointerface function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Oointerface instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Oointerface instance.
func (me *XsdGoPkgHasElem_Oointerface) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Oointerface; fn != nil { fn(me) }
	me.Oointerface.Walk()
 }

type XsdGoPkgHasElem_Ooexception struct {
	Ooexception *TxsdOoexception `xml:"http://docbook.org/ns/docbook ooexception"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Ooexception function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Ooexception instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Ooexception instance.
func (me *XsdGoPkgHasElem_Ooexception) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Ooexception; fn != nil { fn(me) }
	me.Ooexception.Walk()
 }

type XsdGoPkgHasElem_Modifier struct {
	Modifier *TxsdModifier `xml:"http://docbook.org/ns/docbook modifier"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Modifier function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Modifier instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Modifier instance.
func (me *XsdGoPkgHasElem_Modifier) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Modifier; fn != nil { fn(me) }
	me.Modifier.Walk()
 }

type XsdGoPkgHasElem_Fieldsynopsis struct {
	Fieldsynopsis *TxsdFieldsynopsis `xml:"http://docbook.org/ns/docbook fieldsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Fieldsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Fieldsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Fieldsynopsis instance.
func (me *XsdGoPkgHasElem_Fieldsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Fieldsynopsis; fn != nil { fn(me) }
	me.Fieldsynopsis.Walk()
 }

type XsdGoPkgHasElem_Constructorsynopsis struct {
	Constructorsynopsis *TxsdDestructorsynopsis `xml:"http://docbook.org/ns/docbook constructorsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Constructorsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Constructorsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Constructorsynopsis instance.
func (me *XsdGoPkgHasElem_Constructorsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Constructorsynopsis; fn != nil { fn(me) }
	me.Constructorsynopsis.Walk()
 }

type XsdGoPkgHasElem_Destructorsynopsis struct {
	Destructorsynopsis *TxsdDestructorsynopsis `xml:"http://docbook.org/ns/docbook destructorsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Destructorsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Destructorsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Destructorsynopsis instance.
func (me *XsdGoPkgHasElem_Destructorsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Destructorsynopsis; fn != nil { fn(me) }
	me.Destructorsynopsis.Walk()
 }

type XsdGoPkgHasElem_Methodsynopsis struct {
	Methodsynopsis *TxsdMethodsynopsis `xml:"http://docbook.org/ns/docbook methodsynopsis"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Methodsynopsis function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Methodsynopsis instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Methodsynopsis instance.
func (me *XsdGoPkgHasElem_Methodsynopsis) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Methodsynopsis; fn != nil { fn(me) }
	me.Methodsynopsis.Walk()
 }

type XsdGoPkgHasElem_Methodparam struct {
	Methodparam *TxsdMethodparam `xml:"http://docbook.org/ns/docbook methodparam"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Methodparam function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Methodparam instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Methodparam instance.
func (me *XsdGoPkgHasElem_Methodparam) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Methodparam; fn != nil { fn(me) }
	me.Methodparam.Walk()
 }

type XsdGoPkgHasElem_Returnvalue struct {
	Returnvalue *TxsdInterfacename `xml:"http://docbook.org/ns/docbook returnvalue"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Returnvalue function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Returnvalue instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Returnvalue instance.
func (me *XsdGoPkgHasElem_Returnvalue) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Returnvalue; fn != nil { fn(me) }
	me.Returnvalue.Walk()
 }

type XsdGoPkgHasElem_Caution struct {
	Caution *TxsdCaution `xml:"http://docbook.org/ns/docbook caution"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Caution function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Caution instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Caution instance.
func (me *XsdGoPkgHasElem_Caution) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Caution; fn != nil { fn(me) }
	me.Caution.Walk()
 }

type XsdGoPkgHasElem_Important struct {
	Important *TxsdImportant `xml:"http://docbook.org/ns/docbook important"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Important function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Important instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Important instance.
func (me *XsdGoPkgHasElem_Important) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Important; fn != nil { fn(me) }
	me.Important.Walk()
 }

type XsdGoPkgHasElem_Note struct {
	Note *TxsdNote `xml:"http://docbook.org/ns/docbook note"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Note function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Note instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Note instance.
func (me *XsdGoPkgHasElem_Note) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Note; fn != nil { fn(me) }
	me.Note.Walk()
 }

type XsdGoPkgHasElem_Tip struct {
	Tip *TxsdTip `xml:"http://docbook.org/ns/docbook tip"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Tip function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Tip instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Tip instance.
func (me *XsdGoPkgHasElem_Tip) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Tip; fn != nil { fn(me) }
	me.Tip.Walk()
 }

type XsdGoPkgHasElem_Warning struct {
	Warning *TxsdWarning `xml:"http://docbook.org/ns/docbook warning"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Warning function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Warning instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Warning instance.
func (me *XsdGoPkgHasElem_Warning) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Warning; fn != nil { fn(me) }
	me.Warning.Walk()
 }

type XsdGoPkgHasElem_Errorcode struct {
	Errorcode *TxsdInterfacename `xml:"http://docbook.org/ns/docbook errorcode"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Errorcode function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Errorcode instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Errorcode instance.
func (me *XsdGoPkgHasElem_Errorcode) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Errorcode; fn != nil { fn(me) }
	me.Errorcode.Walk()
 }

type XsdGoPkgHasElem_Errorname struct {
	Errorname *TxsdInterfacename `xml:"http://docbook.org/ns/docbook errorname"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Errorname function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Errorname instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Errorname instance.
func (me *XsdGoPkgHasElem_Errorname) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Errorname; fn != nil { fn(me) }
	me.Errorname.Walk()
 }

type XsdGoPkgHasElem_Errortext struct {
	Errortext *TxsdInterfacename `xml:"http://docbook.org/ns/docbook errortext"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Errortext function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Errortext instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Errortext instance.
func (me *XsdGoPkgHasElem_Errortext) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Errortext; fn != nil { fn(me) }
	me.Errortext.Walk()
 }

type XsdGoPkgHasElem_Errortype struct {
	Errortype *TxsdInterfacename `xml:"http://docbook.org/ns/docbook errortype"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Errortype function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Errortype instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Errortype instance.
func (me *XsdGoPkgHasElem_Errortype) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Errortype; fn != nil { fn(me) }
	me.Errortype.Walk()
 }

type XsdGoPkgHasElem_Systemitem struct {
	Systemitem *TxsdSystemitem `xml:"http://docbook.org/ns/docbook systemitem"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Systemitem function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Systemitem instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Systemitem instance.
func (me *XsdGoPkgHasElem_Systemitem) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Systemitem; fn != nil { fn(me) }
	me.Systemitem.Walk()
 }

type XsdGoPkgHasElem_Option struct {
	Option *TxsdInterfacename `xml:"http://docbook.org/ns/docbook option"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Option function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Option instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Option instance.
func (me *XsdGoPkgHasElem_Option) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Option; fn != nil { fn(me) }
	me.Option.Walk()
 }

type XsdGoPkgHasElem_Optional struct {
	Optional *TxsdInterfacename `xml:"http://docbook.org/ns/docbook optional"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Optional function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Optional instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Optional instance.
func (me *XsdGoPkgHasElem_Optional) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Optional; fn != nil { fn(me) }
	me.Optional.Walk()
 }

type XsdGoPkgHasElem_Property struct {
	Property *TxsdInterfacename `xml:"http://docbook.org/ns/docbook property"`

}

//	If the WalkHandlers.XsdGoPkgHasElem_Property function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Property instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Property instance.
func (me *XsdGoPkgHasElem_Property) Walk ()  { 
	if fn := WalkHandlers.XsdGoPkgHasElem_Property; fn != nil { fn(me) }
	me.Property.Walk()
 }

//	Provides 968 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
var WalkHandlers = &XsdGoPkgWalkHandlers {}

//	Provides 968 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
type XsdGoPkgWalkHandlers struct {
	XsdGoPkgHasElem_Surname func (o *XsdGoPkgHasElem_Surname)
	XsdGoPkgHasElems_Step func (o *XsdGoPkgHasElems_Step)
	TxsdSection func (o *TxsdSection)
	XsdGoPkgHasElem_Exceptionname func (o *XsdGoPkgHasElem_Exceptionname)
	XsdGoPkgHasElems_Td func (o *XsdGoPkgHasElems_Td)
	XsdGoPkgHasElems_Tr func (o *XsdGoPkgHasElems_Tr)
	XsdGoPkgHasElem_Revdescription func (o *XsdGoPkgHasElem_Revdescription)
	XsdGoPkgHasElem_Trademark func (o *XsdGoPkgHasElem_Trademark)
	TxsdEmphasis func (o *TxsdEmphasis)
	XsdGoPkgHasElems_Lineannotation func (o *XsdGoPkgHasElems_Lineannotation)
	XsdGoPkgHasElems_Refentry func (o *XsdGoPkgHasElems_Refentry)
	XsdGoPkgHasElems_Epigraph func (o *XsdGoPkgHasElems_Epigraph)
	TxsdBiblioset func (o *TxsdBiblioset)
	XsdGoPkgHasElem_Errortext func (o *XsdGoPkgHasElem_Errortext)
	XsdGoPkgHasElem_Sbr func (o *XsdGoPkgHasElem_Sbr)
	TxsdPrinthistory func (o *TxsdPrinthistory)
	XsdGoPkgHasElem_Synopsis func (o *XsdGoPkgHasElem_Synopsis)
	XsdGoPkgHasElem_Constraintdef func (o *XsdGoPkgHasElem_Constraintdef)
	XsdGoPkgHasElem_Classname func (o *XsdGoPkgHasElem_Classname)
	TxsdTask func (o *TxsdTask)
	TxsdCalloutlist func (o *TxsdCalloutlist)
	XsdGoPkgHasElem_Classsynopsisinfo func (o *XsdGoPkgHasElem_Classsynopsisinfo)
	XsdGoPkgHasElem_Email func (o *XsdGoPkgHasElem_Email)
	TxsdBibliomset func (o *TxsdBibliomset)
	XsdGoPkgHasElem_Sect1 func (o *XsdGoPkgHasElem_Sect1)
	XsdGoPkgHasElems_Methodsynopsis func (o *XsdGoPkgHasElems_Methodsynopsis)
	XsdGoPkgHasElems_Videodata func (o *XsdGoPkgHasElems_Videodata)
	XsdGoPkgHasElems_Variablelist func (o *XsdGoPkgHasElems_Variablelist)
	TxsdSystemitem func (o *TxsdSystemitem)
	TxsdSubjectset func (o *TxsdSubjectset)
	XsdGoPkgHasElems_Screen func (o *XsdGoPkgHasElems_Screen)
	XsdGoPkgHasElem_Term func (o *XsdGoPkgHasElem_Term)
	XsdGoPkgHasElems_Constraint func (o *XsdGoPkgHasElems_Constraint)
	XsdGoPkgHasElems_Confsponsor func (o *XsdGoPkgHasElems_Confsponsor)
	XsdGoPkgHasElems_Biblioref func (o *XsdGoPkgHasElems_Biblioref)
	XsdGoPkgHasElem_Colspec func (o *XsdGoPkgHasElem_Colspec)
	XsdGoPkgHasElem_Segmentedlist func (o *XsdGoPkgHasElem_Segmentedlist)
	XsdGoPkgHasElem_Tgroup func (o *XsdGoPkgHasElem_Tgroup)
	XsdGoPkgHasElems_Contractnum func (o *XsdGoPkgHasElems_Contractnum)
	XsdGoPkgHasElem_Citation func (o *XsdGoPkgHasElem_Citation)
	XsdGoPkgHasElems_Example func (o *XsdGoPkgHasElems_Example)
	XsdGoPkgHasElem_Arc func (o *XsdGoPkgHasElem_Arc)
	XsdGoPkgHasElems_Glossentry func (o *XsdGoPkgHasElems_Glossentry)
	XsdGoPkgHasElems_Sbr func (o *XsdGoPkgHasElems_Sbr)
	TxsdRefentrytitle func (o *TxsdRefentrytitle)
	XsdGoPkgHasElems_Primary func (o *XsdGoPkgHasElems_Primary)
	XsdGoPkgHasElems_Label func (o *XsdGoPkgHasElems_Label)
	XsdGoPkgHasElem_Warning func (o *XsdGoPkgHasElem_Warning)
	TxsdRevdescription func (o *TxsdRevdescription)
	TxsdDatabase func (o *TxsdDatabase)
	TxsdSynopsis func (o *TxsdSynopsis)
	TxsdBibliodiv func (o *TxsdBibliodiv)
	XsdGoPkgHasElems_Glossterm func (o *XsdGoPkgHasElems_Glossterm)
	TxsdSect2 func (o *TxsdSect2)
	TxsdRefnamediv func (o *TxsdRefnamediv)
	XsdGoPkgHasElems_Funcprototype func (o *XsdGoPkgHasElems_Funcprototype)
	TxsdInlinemediaobject func (o *TxsdInlinemediaobject)
	XsdGoPkgHasElem_Seglistitem func (o *XsdGoPkgHasElem_Seglistitem)
	TxsdTgroup func (o *TxsdTgroup)
	XsdGoPkgHasElems_Refsect3 func (o *XsdGoPkgHasElems_Refsect3)
	XsdGoPkgHasElems_Parameter func (o *XsdGoPkgHasElems_Parameter)
	XsdGoPkgHasElems_Note func (o *XsdGoPkgHasElems_Note)
	TxsdVideoobject func (o *TxsdVideoobject)
	XsdGoPkgHasElem_Msgsub func (o *XsdGoPkgHasElem_Msgsub)
	XsdGoPkgHasElems_Country func (o *XsdGoPkgHasElems_Country)
	XsdGoPkgHasElem_Xref func (o *XsdGoPkgHasElem_Xref)
	XsdGoPkgHasElem_Replaceable func (o *XsdGoPkgHasElem_Replaceable)
	XsdGoPkgHasElem_Funcdef func (o *XsdGoPkgHasElem_Funcdef)
	XsdGoPkgHasElem_Citerefentry func (o *XsdGoPkgHasElem_Citerefentry)
	TxsdSetindex func (o *TxsdSetindex)
	TxsdTaskrelated func (o *TxsdTaskrelated)
	XsdGoPkgHasElem_Sect4 func (o *XsdGoPkgHasElem_Sect4)
	XsdGoPkgHasElems_Funcsynopsis func (o *XsdGoPkgHasElems_Funcsynopsis)
	XsdGoPkgHasElem_Indexterm func (o *XsdGoPkgHasElem_Indexterm)
	XsdGoPkgHasElem_Audiodata func (o *XsdGoPkgHasElem_Audiodata)
	XsdGoPkgHasElem_Guimenuitem func (o *XsdGoPkgHasElem_Guimenuitem)
	TxsdOthercredit func (o *TxsdOthercredit)
	XsdGoPkgHasElem_Informalfigure func (o *XsdGoPkgHasElem_Informalfigure)
	XsdGoPkgHasElems_See func (o *XsdGoPkgHasElems_See)
	XsdGoPkgHasElems_Returnvalue func (o *XsdGoPkgHasElems_Returnvalue)
	XsdGoPkgHasElem_Bibliography func (o *XsdGoPkgHasElem_Bibliography)
	XsdGoPkgHasElem_Releaseinfo func (o *XsdGoPkgHasElem_Releaseinfo)
	TxsdDestructorsynopsis func (o *TxsdDestructorsynopsis)
	XsdGoPkgHasElems_Abstract func (o *XsdGoPkgHasElems_Abstract)
	XsdGoPkgHasElems_Primaryie func (o *XsdGoPkgHasElems_Primaryie)
	TxsdGroup func (o *TxsdGroup)
	TxsdIndexdiv func (o *TxsdIndexdiv)
	XsdGoPkgHasElem_Envar func (o *XsdGoPkgHasElem_Envar)
	XsdGoPkgHasElems_Refmeta func (o *XsdGoPkgHasElems_Refmeta)
	XsdGoPkgHasElems_Area func (o *XsdGoPkgHasElems_Area)
	XsdGoPkgHasElem_Filename func (o *XsdGoPkgHasElem_Filename)
	XsdGoPkgHasElem_Secondaryie func (o *XsdGoPkgHasElem_Secondaryie)
	XsdGoPkgHasElems_Foreignphrase func (o *XsdGoPkgHasElems_Foreignphrase)
	XsdGoPkgHasElem_Informaltable func (o *XsdGoPkgHasElem_Informaltable)
	XsdGoPkgHasElem_Section func (o *XsdGoPkgHasElem_Section)
	XsdGoPkgHasElems_Keyword func (o *XsdGoPkgHasElems_Keyword)
	XsdGoPkgHasElems_Optional func (o *XsdGoPkgHasElems_Optional)
	XsdGoPkgHasElems_Info func (o *XsdGoPkgHasElems_Info)
	TxsdInformaltable func (o *TxsdInformaltable)
	XsdGoPkgHasElem_Extendedlink func (o *XsdGoPkgHasElem_Extendedlink)
	XsdGoPkgHasElem_Glosslist func (o *XsdGoPkgHasElem_Glosslist)
	XsdGoPkgHasElems_Attribution func (o *XsdGoPkgHasElems_Attribution)
	XsdGoPkgHasElems_Literal func (o *XsdGoPkgHasElems_Literal)
	XsdGoPkgHasElems_Extendedlink func (o *XsdGoPkgHasElems_Extendedlink)
	XsdGoPkgHasElems_Confdates func (o *XsdGoPkgHasElems_Confdates)
	XsdGoPkgHasElems_Th func (o *XsdGoPkgHasElems_Th)
	XsdGoPkgHasElem_Attribution func (o *XsdGoPkgHasElem_Attribution)
	XsdGoPkgHasElem_Revremark func (o *XsdGoPkgHasElem_Revremark)
	XsdGoPkgHasElem_Mousebutton func (o *XsdGoPkgHasElem_Mousebutton)
	TxsdSubscript func (o *TxsdSubscript)
	XsdGoPkgHasElem_Street func (o *XsdGoPkgHasElem_Street)
	XsdGoPkgHasElems_Computeroutput func (o *XsdGoPkgHasElems_Computeroutput)
	XsdGoPkgHasElems_Code func (o *XsdGoPkgHasElems_Code)
	XsdGoPkgHasElems_Authorinitials func (o *XsdGoPkgHasElems_Authorinitials)
	XsdGoPkgHasElem_Listitem func (o *XsdGoPkgHasElem_Listitem)
	XsdGoPkgHasElems_Token func (o *XsdGoPkgHasElems_Token)
	XsdGoPkgHasElems_Informaltable func (o *XsdGoPkgHasElems_Informaltable)
	XsdGoPkgHasElem_Simplelist func (o *XsdGoPkgHasElem_Simplelist)
	XsdGoPkgHasElems_Setindex func (o *XsdGoPkgHasElems_Setindex)
	TxsdBibliocoverage func (o *TxsdBibliocoverage)
	XsdGoPkgHasElem_Country func (o *XsdGoPkgHasElem_Country)
	XsdGoPkgHasElem_Property func (o *XsdGoPkgHasElem_Property)
	XsdGoPkgHasElem_Computeroutput func (o *XsdGoPkgHasElem_Computeroutput)
	XsdGoPkgHasElem_Constructorsynopsis func (o *XsdGoPkgHasElem_Constructorsynopsis)
	XsdGoPkgHasElem_Entrytbl func (o *XsdGoPkgHasElem_Entrytbl)
	XsdGoPkgHasElems_Entrytbl func (o *XsdGoPkgHasElems_Entrytbl)
	TxsdAttribution func (o *TxsdAttribution)
	TxsdNonterminal func (o *TxsdNonterminal)
	XsdGoPkgHasElem_Indexentry func (o *XsdGoPkgHasElem_Indexentry)
	XsdGoPkgHasElem_Refsect3 func (o *XsdGoPkgHasElem_Refsect3)
	XsdGoPkgHasElems_Msginfo func (o *XsdGoPkgHasElems_Msginfo)
	XsdGoPkgHasElems_Citebiblioid func (o *XsdGoPkgHasElems_Citebiblioid)
	XsdGoPkgHasElems_Productname func (o *XsdGoPkgHasElems_Productname)
	XsdGoPkgHasElem_Subject func (o *XsdGoPkgHasElem_Subject)
	XsdGoPkgHasElems_Holder func (o *XsdGoPkgHasElems_Holder)
	XsdGoPkgHasElems_Index func (o *XsdGoPkgHasElems_Index)
	XsdGoPkgHasElems_Seriesvolnums func (o *XsdGoPkgHasElems_Seriesvolnums)
	XsdGoPkgHasElem_Authorgroup func (o *XsdGoPkgHasElem_Authorgroup)
	XsdGoPkgHasElem_Msgmain func (o *XsdGoPkgHasElem_Msgmain)
	XsdGoPkgHasElem_Rhs func (o *XsdGoPkgHasElem_Rhs)
	XsdGoPkgHasElem_Tfoot func (o *XsdGoPkgHasElem_Tfoot)
	XsdGoPkgHasElems_Secondaryie func (o *XsdGoPkgHasElems_Secondaryie)
	XsdGoPkgHasElem_Varname func (o *XsdGoPkgHasElem_Varname)
	XsdGoPkgHasElem_Confnum func (o *XsdGoPkgHasElem_Confnum)
	TxsdEquation func (o *TxsdEquation)
	TxsdPara func (o *TxsdPara)
	XsdGoPkgHasElem_Acronym func (o *XsdGoPkgHasElem_Acronym)
	XsdGoPkgHasElems_Tfoot func (o *XsdGoPkgHasElems_Tfoot)
	XsdGoPkgHasElem_Tertiaryie func (o *XsdGoPkgHasElem_Tertiaryie)
	XsdGoPkgHasElem_Refmiscinfo func (o *XsdGoPkgHasElem_Refmiscinfo)
	XsdGoPkgHasElem_Example func (o *XsdGoPkgHasElem_Example)
	XsdGoPkgHasElem_Author func (o *XsdGoPkgHasElem_Author)
	XsdGoPkgHasElems_Simplemsgentry func (o *XsdGoPkgHasElems_Simplemsgentry)
	XsdGoPkgHasElem_Personblurb func (o *XsdGoPkgHasElem_Personblurb)
	TxsdParameter func (o *TxsdParameter)
	XsdGoPkgHasElem_Funcparams func (o *XsdGoPkgHasElem_Funcparams)
	XsdGoPkgHasElem_Confgroup func (o *XsdGoPkgHasElem_Confgroup)
	TxsdTermdef func (o *TxsdTermdef)
	XsdGoPkgHasElems_Callout func (o *XsdGoPkgHasElems_Callout)
	XsdGoPkgHasElem_Manvolnum func (o *XsdGoPkgHasElem_Manvolnum)
	XsdGoPkgHasElems_Ooclass func (o *XsdGoPkgHasElems_Ooclass)
	XsdGoPkgHasElems_Lineage func (o *XsdGoPkgHasElems_Lineage)
	XsdGoPkgHasElem_Footnoteref func (o *XsdGoPkgHasElem_Footnoteref)
	XsdGoPkgHasElems_Prompt func (o *XsdGoPkgHasElems_Prompt)
	TxsdItemizedlist func (o *TxsdItemizedlist)
	TxsdComputeroutput func (o *TxsdComputeroutput)
	XsdGoPkgHasElems_Command func (o *XsdGoPkgHasElems_Command)
	XsdGoPkgHasElem_Literal func (o *XsdGoPkgHasElem_Literal)
	XsdGoPkgHasElem_Errorname func (o *XsdGoPkgHasElem_Errorname)
	XsdGoPkgHasElems_Olink func (o *XsdGoPkgHasElems_Olink)
	TxsdVideodata func (o *TxsdVideodata)
	XsdGoPkgHasElems_Issuenum func (o *XsdGoPkgHasElems_Issuenum)
	XsdGoPkgHasElem_Refsection func (o *XsdGoPkgHasElem_Refsection)
	TxsdExtendedlink func (o *TxsdExtendedlink)
	XsdGoPkgHasElem_Productionset func (o *XsdGoPkgHasElem_Productionset)
	XsdGoPkgHasElem_Varargs func (o *XsdGoPkgHasElem_Varargs)
	XsdGoPkgHasElem_Coref func (o *XsdGoPkgHasElem_Coref)
	XsdGoPkgHasElem_Uri func (o *XsdGoPkgHasElem_Uri)
	TxsdXref func (o *TxsdXref)
	XsdGoPkgHasElem_Tertiary func (o *XsdGoPkgHasElem_Tertiary)
	XsdGoPkgHasElem_Abstract func (o *XsdGoPkgHasElem_Abstract)
	TxsdCode func (o *TxsdCode)
	XsdGoPkgHasElem_Sect2 func (o *XsdGoPkgHasElem_Sect2)
	XsdGoPkgHasElems_Bibliomixed func (o *XsdGoPkgHasElems_Bibliomixed)
	TxsdRefsynopsisdiv func (o *TxsdRefsynopsisdiv)
	XsdGoPkgHasElems_Qandadiv func (o *XsdGoPkgHasElems_Qandadiv)
	TxsdTh func (o *TxsdTh)
	XsdGoPkgHasElem_Locator func (o *XsdGoPkgHasElem_Locator)
	XsdGoPkgHasElems_Refname func (o *XsdGoPkgHasElems_Refname)
	XsdGoPkgHasElems_Col func (o *XsdGoPkgHasElems_Col)
	XsdGoPkgHasElems_Tip func (o *XsdGoPkgHasElems_Tip)
	XsdGoPkgHasElem_Bibliodiv func (o *XsdGoPkgHasElem_Bibliodiv)
	TxsdRefclass func (o *TxsdRefclass)
	XsdGoPkgHasElems_Itermset func (o *XsdGoPkgHasElems_Itermset)
	XsdGoPkgHasElems_Firstname func (o *XsdGoPkgHasElems_Firstname)
	TxsdAddress func (o *TxsdAddress)
	XsdGoPkgHasElems_Personname func (o *XsdGoPkgHasElems_Personname)
	XsdGoPkgHasElem_Contractsponsor func (o *XsdGoPkgHasElem_Contractsponsor)
	XsdGoPkgHasElem_Revhistory func (o *XsdGoPkgHasElem_Revhistory)
	XsdGoPkgHasElems_Synopfragmentref func (o *XsdGoPkgHasElems_Synopfragmentref)
	XsdGoPkgHasElem_Guiicon func (o *XsdGoPkgHasElem_Guiicon)
	XsdGoPkgHasElems_Indexdiv func (o *XsdGoPkgHasElems_Indexdiv)
	XsdGoPkgHasElems_Exceptionname func (o *XsdGoPkgHasElems_Exceptionname)
	XsdGoPkgHasElems_Segmentedlist func (o *XsdGoPkgHasElems_Segmentedlist)
	TxsdTfoot func (o *TxsdTfoot)
	TxsdPublisher func (o *TxsdPublisher)
	XsdGoPkgHasElems_Question func (o *XsdGoPkgHasElems_Question)
	XsdGoPkgHasElem_Col func (o *XsdGoPkgHasElem_Col)
	XsdGoPkgHasElem_Function func (o *XsdGoPkgHasElem_Function)
	XsdGoPkgHasElems_Msgmain func (o *XsdGoPkgHasElems_Msgmain)
	TxsdGlossentry func (o *TxsdGlossentry)
	TxsdVoid func (o *TxsdVoid)
	TxsdQandadiv func (o *TxsdQandadiv)
	XsdGoPkgHasElems_Guibutton func (o *XsdGoPkgHasElems_Guibutton)
	TxsdSect4 func (o *TxsdSect4)
	XsdGoPkgHasElems_Imageobject func (o *XsdGoPkgHasElems_Imageobject)
	XsdGoPkgHasElem_Systemitem func (o *XsdGoPkgHasElem_Systemitem)
	XsdGoPkgHasElem_Emphasis func (o *XsdGoPkgHasElem_Emphasis)
	XsdGoPkgHasElem_Table func (o *XsdGoPkgHasElem_Table)
	XsdGoPkgHasElem_Inlinemediaobject func (o *XsdGoPkgHasElem_Inlinemediaobject)
	XsdGoPkgHasElems_Mousebutton func (o *XsdGoPkgHasElems_Mousebutton)
	XsdGoPkgHasElems_Spanspec func (o *XsdGoPkgHasElems_Spanspec)
	XsdGoPkgHasElem_Equation func (o *XsdGoPkgHasElem_Equation)
	XsdGoPkgHasElems_Wordasword func (o *XsdGoPkgHasElems_Wordasword)
	XsdGoPkgHasElems_Errorname func (o *XsdGoPkgHasElems_Errorname)
	XsdGoPkgHasElem_City func (o *XsdGoPkgHasElem_City)
	XsdGoPkgHasElem_Itemizedlist func (o *XsdGoPkgHasElem_Itemizedlist)
	XsdGoPkgHasElem_Epigraph func (o *XsdGoPkgHasElem_Epigraph)
	XsdGoPkgHasElem_Glossdiv func (o *XsdGoPkgHasElem_Glossdiv)
	XsdGoPkgHasElem_Productionrecap func (o *XsdGoPkgHasElem_Productionrecap)
	XsdGoPkgHasElem_Subtitle func (o *XsdGoPkgHasElem_Subtitle)
	TxsdCitation func (o *TxsdCitation)
	XsdGoPkgHasElems_Set func (o *XsdGoPkgHasElems_Set)
	XsdGoPkgHasElem_Edition func (o *XsdGoPkgHasElem_Edition)
	TxsdArticle func (o *TxsdArticle)
	TxsdPhrase func (o *TxsdPhrase)
	XsdGoPkgHasElem_Sect5 func (o *XsdGoPkgHasElem_Sect5)
	XsdGoPkgHasElems_Collab func (o *XsdGoPkgHasElems_Collab)
	TxsdRefsection func (o *TxsdRefsection)
	XsdGoPkgHasElems_Edition func (o *XsdGoPkgHasElems_Edition)
	XsdGoPkgHasElems_Synopfragment func (o *XsdGoPkgHasElems_Synopfragment)
	TxsdSimplemsgentry func (o *TxsdSimplemsgentry)
	TxsdSect5 func (o *TxsdSect5)
	XsdGoPkgHasElems_Jobtitle func (o *XsdGoPkgHasElems_Jobtitle)
	XsdGoPkgHasElem_Msg func (o *XsdGoPkgHasElem_Msg)
	XsdGoPkgHasElem_Citebiblioid func (o *XsdGoPkgHasElem_Citebiblioid)
	XsdGoPkgHasElems_Sect1 func (o *XsdGoPkgHasElems_Sect1)
	XsdGoPkgHasElem_Tasksummary func (o *XsdGoPkgHasElem_Tasksummary)
	XsdGoPkgHasElem_Videoobject func (o *XsdGoPkgHasElem_Videoobject)
	TxsdCaution func (o *TxsdCaution)
	TxsdProgramlistingco func (o *TxsdProgramlistingco)
	XsdGoPkgHasElems_Biblioid func (o *XsdGoPkgHasElems_Biblioid)
	XsdGoPkgHasElems_Classsynopsisinfo func (o *XsdGoPkgHasElems_Classsynopsisinfo)
	XsdGoPkgHasElem_Caption func (o *XsdGoPkgHasElem_Caption)
	XsdGoPkgHasElem_Affiliation func (o *XsdGoPkgHasElem_Affiliation)
	XsdGoPkgHasElem_Taskrelated func (o *XsdGoPkgHasElem_Taskrelated)
	XsdGoPkgHasElem_Task func (o *XsdGoPkgHasElem_Task)
	XsdGoPkgHasElems_Term func (o *XsdGoPkgHasElems_Term)
	XsdGoPkgHasElem_Errortype func (o *XsdGoPkgHasElem_Errortype)
	XsdGoPkgHasElem_Production func (o *XsdGoPkgHasElem_Production)
	XsdGoPkgHasElems_Guimenuitem func (o *XsdGoPkgHasElems_Guimenuitem)
	XsdGoPkgHasElems_Oointerface func (o *XsdGoPkgHasElems_Oointerface)
	XsdGoPkgHasElem_Fieldsynopsis func (o *XsdGoPkgHasElem_Fieldsynopsis)
	TxsdSect1 func (o *TxsdSect1)
	XsdGoPkgHasElems_Phone func (o *XsdGoPkgHasElems_Phone)
	TxsdFootnote func (o *TxsdFootnote)
	XsdGoPkgHasElem_Publishername func (o *XsdGoPkgHasElem_Publishername)
	TxsdGuilabel func (o *TxsdGuilabel)
	XsdGoPkgHasElems_Editor func (o *XsdGoPkgHasElems_Editor)
	XsdGoPkgHasElems_Taskprerequisites func (o *XsdGoPkgHasElems_Taskprerequisites)
	XsdGoPkgHasElem_Fax func (o *XsdGoPkgHasElem_Fax)
	XsdGoPkgHasElems_Xref func (o *XsdGoPkgHasElems_Xref)
	TxsdArc func (o *TxsdArc)
	XsdGoPkgHasElems_Literallayout func (o *XsdGoPkgHasElems_Literallayout)
	TxsdThead func (o *TxsdThead)
	XsdGoPkgHasElems_Methodparam func (o *XsdGoPkgHasElems_Methodparam)
	XsdGoPkgHasElem_Bibliosource func (o *XsdGoPkgHasElem_Bibliosource)
	XsdGoPkgHasElems_Tocdiv func (o *XsdGoPkgHasElems_Tocdiv)
	TxsdWarning func (o *TxsdWarning)
	XsdGoPkgHasElems_Row func (o *XsdGoPkgHasElems_Row)
	XsdGoPkgHasElem_Book func (o *XsdGoPkgHasElem_Book)
	TxsdOrgdiv func (o *TxsdOrgdiv)
	TxsdTextdata func (o *TxsdTextdata)
	TxsdAuthor func (o *TxsdAuthor)
	XsdGoPkgHasElems_Tag func (o *XsdGoPkgHasElems_Tag)
	TxsdKeycap func (o *TxsdKeycap)
	XsdGoPkgHasElem_Application func (o *XsdGoPkgHasElem_Application)
	XsdGoPkgHasElems_Funcparams func (o *XsdGoPkgHasElems_Funcparams)
	XsdGoPkgHasElems_Tocentry func (o *XsdGoPkgHasElems_Tocentry)
	XsdGoPkgHasElem_Msgentry func (o *XsdGoPkgHasElem_Msgentry)
	TxsdPreface func (o *TxsdPreface)
	XsdGoPkgHasElem_Issuenum func (o *XsdGoPkgHasElem_Issuenum)
	XsdGoPkgHasElem_Index func (o *XsdGoPkgHasElem_Index)
	TxsdInterfacename func (o *TxsdInterfacename)
	TxsdAnnotation func (o *TxsdAnnotation)
	XsdGoPkgHasElem_Lineage func (o *XsdGoPkgHasElem_Lineage)
	TxsdFirstterm func (o *TxsdFirstterm)
	XsdGoPkgHasElem_Revnumber func (o *XsdGoPkgHasElem_Revnumber)
	XsdGoPkgHasElems_Calloutlist func (o *XsdGoPkgHasElems_Calloutlist)
	XsdGoPkgHasElems_Copyright func (o *XsdGoPkgHasElems_Copyright)
	TxsdSubsteps func (o *TxsdSubsteps)
	XsdGoPkgHasElems_Artpagenums func (o *XsdGoPkgHasElems_Artpagenums)
	TxsdVariablelist func (o *TxsdVariablelist)
	XsdGoPkgHasElems_City func (o *XsdGoPkgHasElems_City)
	TxsdTextobject func (o *TxsdTextobject)
	XsdGoPkgHasElems_Guilabel func (o *XsdGoPkgHasElems_Guilabel)
	XsdGoPkgHasElem_Subjectset func (o *XsdGoPkgHasElem_Subjectset)
	TxsdScreenco func (o *TxsdScreenco)
	XsdGoPkgHasElems_Glossdef func (o *XsdGoPkgHasElems_Glossdef)
	XsdGoPkgHasElem_Reference func (o *XsdGoPkgHasElem_Reference)
	XsdGoPkgHasElem_Authorinitials func (o *XsdGoPkgHasElem_Authorinitials)
	XsdGoPkgHasElems_Msgaud func (o *XsdGoPkgHasElems_Msgaud)
	TxsdPartintro func (o *TxsdPartintro)
	XsdGoPkgHasElems_Caption func (o *XsdGoPkgHasElems_Caption)
	XsdGoPkgHasCdata func (o *XsdGoPkgHasCdata)
	XsdGoPkgHasElem_State func (o *XsdGoPkgHasElem_State)
	TxsdFigure func (o *TxsdFigure)
	XsdGoPkgHasElem_Methodparam func (o *XsdGoPkgHasElem_Methodparam)
	XsdGoPkgHasElems_Subscript func (o *XsdGoPkgHasElems_Subscript)
	XsdGoPkgHasElems_Msgentry func (o *XsdGoPkgHasElems_Msgentry)
	XsdGoPkgHasElem_Group func (o *XsdGoPkgHasElem_Group)
	XsdGoPkgHasElems_Sect5 func (o *XsdGoPkgHasElems_Sect5)
	XsdGoPkgHasElems_Msgorig func (o *XsdGoPkgHasElems_Msgorig)
	XsdGoPkgHasElem_Biblioentry func (o *XsdGoPkgHasElem_Biblioentry)
	TxsdSuperscript func (o *TxsdSuperscript)
	XsdGoPkgHasElems_Link func (o *XsdGoPkgHasElems_Link)
	XsdGoPkgHasElems_Bibliomset func (o *XsdGoPkgHasElems_Bibliomset)
	XsdGoPkgHasElems_Msgset func (o *XsdGoPkgHasElems_Msgset)
	XsdGoPkgHasElem_Code func (o *XsdGoPkgHasElem_Code)
	XsdGoPkgHasElems_Bibliocoverage func (o *XsdGoPkgHasElems_Bibliocoverage)
	XsdGoPkgHasElem_Dedication func (o *XsdGoPkgHasElem_Dedication)
	XsdGoPkgHasElem_Informalexample func (o *XsdGoPkgHasElem_Informalexample)
	TxsdInfo func (o *TxsdInfo)
	XsdGoPkgHasElem_Refdescriptor func (o *XsdGoPkgHasElem_Refdescriptor)
	XsdGoPkgHasElems_Subtitle func (o *XsdGoPkgHasElems_Subtitle)
	XsdGoPkgHasElem_Seg func (o *XsdGoPkgHasElem_Seg)
	TxsdRefmiscinfo func (o *TxsdRefmiscinfo)
	XsdGoPkgHasElems_Othername func (o *XsdGoPkgHasElems_Othername)
	XsdGoPkgHasElems_Indexentry func (o *XsdGoPkgHasElems_Indexentry)
	XsdGoPkgHasElems_Secondary func (o *XsdGoPkgHasElems_Secondary)
	TxsdEpigraph func (o *TxsdEpigraph)
	TxsdOlink func (o *TxsdOlink)
	XsdGoPkgHasElems_Shortaffil func (o *XsdGoPkgHasElems_Shortaffil)
	XsdGoPkgHasElem_Formalpara func (o *XsdGoPkgHasElem_Formalpara)
	XsdGoPkgHasElem_Tag func (o *XsdGoPkgHasElem_Tag)
	XsdGoPkgHasElem_Label func (o *XsdGoPkgHasElem_Label)
	XsdGoPkgHasElem_Programlisting func (o *XsdGoPkgHasElem_Programlisting)
	TxsdTitle func (o *TxsdTitle)
	XsdGoPkgHasElem_Varlistentry func (o *XsdGoPkgHasElem_Varlistentry)
	XsdGoPkgHasElems_Bibliodiv func (o *XsdGoPkgHasElems_Bibliodiv)
	XsdGoPkgHasElem_Tip func (o *XsdGoPkgHasElem_Tip)
	XsdGoPkgHasElems_Qandaset func (o *XsdGoPkgHasElems_Qandaset)
	TxsdCitebiblioid func (o *TxsdCitebiblioid)
	XsdGoPkgHasElems_Orderedlist func (o *XsdGoPkgHasElems_Orderedlist)
	XsdGoPkgHasElem_Othercredit func (o *XsdGoPkgHasElem_Othercredit)
	XsdGoPkgHasElem_Userinput func (o *XsdGoPkgHasElem_Userinput)
	XsdGoPkgHasElems_Function func (o *XsdGoPkgHasElems_Function)
	TxsdSect3 func (o *TxsdSect3)
	XsdGoPkgHasElem_Phrase func (o *XsdGoPkgHasElem_Phrase)
	TxsdCopyright func (o *TxsdCopyright)
	XsdGoPkgHasElem_Imageobject func (o *XsdGoPkgHasElem_Imageobject)
	XsdGoPkgHasElem_Initializer func (o *XsdGoPkgHasElem_Initializer)
	XsdGoPkgHasElem_Part func (o *XsdGoPkgHasElem_Part)
	XsdGoPkgHasElems_Mathphrase func (o *XsdGoPkgHasElems_Mathphrase)
	XsdGoPkgHasElems_Videoobject func (o *XsdGoPkgHasElems_Videoobject)
	XsdGoPkgHasElem_Firstname func (o *XsdGoPkgHasElem_Firstname)
	XsdGoPkgHasElem_Bibliomisc func (o *XsdGoPkgHasElem_Bibliomisc)
	XsdGoPkgHasElems_Bibliomisc func (o *XsdGoPkgHasElems_Bibliomisc)
	TxsdSimplelist func (o *TxsdSimplelist)
	TxsdIndexterm func (o *TxsdIndexterm)
	XsdGoPkgHasElem_Constraint func (o *XsdGoPkgHasElem_Constraint)
	XsdGoPkgHasElems_Superscript func (o *XsdGoPkgHasElems_Superscript)
	XsdGoPkgHasElems_Surname func (o *XsdGoPkgHasElems_Surname)
	TxsdFieldsynopsis func (o *TxsdFieldsynopsis)
	XsdGoPkgHasElems_Footnoteref func (o *XsdGoPkgHasElems_Footnoteref)
	XsdGoPkgHasElem_Markup func (o *XsdGoPkgHasElem_Markup)
	XsdGoPkgHasElems_Section func (o *XsdGoPkgHasElems_Section)
	XsdGoPkgHasElems_Year func (o *XsdGoPkgHasElems_Year)
	XsdGoPkgHasElems_Arc func (o *XsdGoPkgHasElems_Arc)
	XsdGoPkgHasElems_Hardware func (o *XsdGoPkgHasElems_Hardware)
	XsdGoPkgHasElem_Jobtitle func (o *XsdGoPkgHasElem_Jobtitle)
	XsdGoPkgHasElem_Audioobject func (o *XsdGoPkgHasElem_Audioobject)
	XsdGoPkgHasElems_Substeps func (o *XsdGoPkgHasElems_Substeps)
	XsdGoPkgHasElem_Accel func (o *XsdGoPkgHasElem_Accel)
	XsdGoPkgHasElem_Appendix func (o *XsdGoPkgHasElem_Appendix)
	XsdGoPkgHasElem_Productnumber func (o *XsdGoPkgHasElem_Productnumber)
	TxsdUri func (o *TxsdUri)
	XsdGoPkgHasElems_Glossseealso func (o *XsdGoPkgHasElems_Glossseealso)
	TxsdRefsect2 func (o *TxsdRefsect2)
	XsdGoPkgHasElem_Quote func (o *XsdGoPkgHasElem_Quote)
	XsdGoPkgHasElems_Annotation func (o *XsdGoPkgHasElems_Annotation)
	TxsdRevision func (o *TxsdRevision)
	XsdGoPkgHasElem_Glossary func (o *XsdGoPkgHasElem_Glossary)
	TxsdEditor func (o *TxsdEditor)
	XsdGoPkgHasElem_Cmdsynopsis func (o *XsdGoPkgHasElem_Cmdsynopsis)
	XsdGoPkgHasElem_Simplesect func (o *XsdGoPkgHasElem_Simplesect)
	XsdGoPkgHasElem_Bibliomixed func (o *XsdGoPkgHasElem_Bibliomixed)
	XsdGoPkgHasElems_Locator func (o *XsdGoPkgHasElems_Locator)
	XsdGoPkgHasElems_Imagedata func (o *XsdGoPkgHasElems_Imagedata)
	XsdGoPkgHasElem_Seeie func (o *XsdGoPkgHasElem_Seeie)
	XsdGoPkgHasElem_Methodname func (o *XsdGoPkgHasElem_Methodname)
	TxsdMsgsub func (o *TxsdMsgsub)
	TxsdKeycombo func (o *TxsdKeycombo)
	XsdGoPkgHasElem_Partintro func (o *XsdGoPkgHasElem_Partintro)
	XsdGoPkgHasElems_Colgroup func (o *XsdGoPkgHasElems_Colgroup)
	TxsdTd func (o *TxsdTd)
	XsdGoPkgHasElem_Annotation func (o *XsdGoPkgHasElem_Annotation)
	TxsdQuote func (o *TxsdQuote)
	XsdGoPkgHasElems_Guiicon func (o *XsdGoPkgHasElems_Guiicon)
	TxsdSymbol func (o *TxsdSymbol)
	XsdGoPkgHasElem_Imageobjectco func (o *XsdGoPkgHasElem_Imageobjectco)
	XsdGoPkgHasElems_Programlistingco func (o *XsdGoPkgHasElems_Programlistingco)
	XsdGoPkgHasElem_Toc func (o *XsdGoPkgHasElem_Toc)
	XsdGoPkgHasElems_Street func (o *XsdGoPkgHasElems_Street)
	XsdGoPkgHasElems_Date func (o *XsdGoPkgHasElems_Date)
	XsdGoPkgHasElems_Book func (o *XsdGoPkgHasElems_Book)
	XsdGoPkgHasElem_Database func (o *XsdGoPkgHasElem_Database)
	XsdGoPkgHasElems_Varlistentry func (o *XsdGoPkgHasElems_Varlistentry)
	XsdGoPkgHasElems_Seealsoie func (o *XsdGoPkgHasElems_Seealsoie)
	XsdGoPkgHasElem_Glosssee func (o *XsdGoPkgHasElem_Glosssee)
	XsdGoPkgHasElems_Errortype func (o *XsdGoPkgHasElems_Errortype)
	XsdGoPkgHasElem_Row func (o *XsdGoPkgHasElem_Row)
	XsdGoPkgHasElems_Nonterminal func (o *XsdGoPkgHasElems_Nonterminal)
	XsdGoPkgHasElem_Printhistory func (o *XsdGoPkgHasElem_Printhistory)
	XsdGoPkgHasElems_Task func (o *XsdGoPkgHasElems_Task)
	XsdGoPkgHasElem_Funcsynopsisinfo func (o *XsdGoPkgHasElem_Funcsynopsisinfo)
	XsdGoPkgHasElem_Bibliocoverage func (o *XsdGoPkgHasElem_Bibliocoverage)
	XsdGoPkgHasElem_Set func (o *XsdGoPkgHasElem_Set)
	XsdGoPkgHasElems_Glosslist func (o *XsdGoPkgHasElems_Glosslist)
	XsdGoPkgHasElems_Userinput func (o *XsdGoPkgHasElems_Userinput)
	XsdGoPkgHasElem_Citetitle func (o *XsdGoPkgHasElem_Citetitle)
	XsdGoPkgHasElem_Info func (o *XsdGoPkgHasElem_Info)
	XsdGoPkgHasElems_Symbol func (o *XsdGoPkgHasElems_Symbol)
	TxsdBibliomixed func (o *TxsdBibliomixed)
	XsdGoPkgHasElems_Acknowledgements func (o *XsdGoPkgHasElems_Acknowledgements)
	TxsdReplaceable func (o *TxsdReplaceable)
	TxsdForeignphrase func (o *TxsdForeignphrase)
	XsdGoPkgHasElems_Acronym func (o *XsdGoPkgHasElems_Acronym)
	TxsdStep func (o *TxsdStep)
	XsdGoPkgHasElems_Figure func (o *XsdGoPkgHasElems_Figure)
	XsdGoPkgHasElem_Classsynopsis func (o *XsdGoPkgHasElem_Classsynopsis)
	XsdGoPkgHasElem_Msgorig func (o *XsdGoPkgHasElem_Msgorig)
	TxsdTbody func (o *TxsdTbody)
	XsdGoPkgHasElems_Sect3 func (o *XsdGoPkgHasElems_Sect3)
	XsdGoPkgHasElems_Revhistory func (o *XsdGoPkgHasElems_Revhistory)
	XsdGoPkgHasElem_Qandaentry func (o *XsdGoPkgHasElem_Qandaentry)
	XsdGoPkgHasElem_Glossdef func (o *XsdGoPkgHasElem_Glossdef)
	TxsdAudiodata func (o *TxsdAudiodata)
	TxsdAlt func (o *TxsdAlt)
	XsdGoPkgHasElem_Bibliomset func (o *XsdGoPkgHasElem_Bibliomset)
	XsdGoPkgHasElems_Msglevel func (o *XsdGoPkgHasElems_Msglevel)
	TxsdRefmeta func (o *TxsdRefmeta)
	XsdGoPkgHasElems_Stepalternatives func (o *XsdGoPkgHasElems_Stepalternatives)
	XsdGoPkgHasElem_Glossterm func (o *XsdGoPkgHasElem_Glossterm)
	XsdGoPkgHasElems_Void func (o *XsdGoPkgHasElems_Void)
	XsdGoPkgHasElems_Confnum func (o *XsdGoPkgHasElems_Confnum)
	TxsdClasssynopsis func (o *TxsdClasssynopsis)
	XsdGoPkgHasElems_Replaceable func (o *XsdGoPkgHasElems_Replaceable)
	XsdGoPkgHasElems_Contrib func (o *XsdGoPkgHasElems_Contrib)
	TxsdBibliolist func (o *TxsdBibliolist)
	XsdGoPkgHasElem_Copyright func (o *XsdGoPkgHasElem_Copyright)
	XsdGoPkgHasElems_Refsynopsisdiv func (o *XsdGoPkgHasElems_Refsynopsisdiv)
	TxsdCitetitle func (o *TxsdCitetitle)
	XsdGoPkgHasElems_Areaset func (o *XsdGoPkgHasElems_Areaset)
	XsdGoPkgHasElem_Variablelist func (o *XsdGoPkgHasElem_Variablelist)
	XsdGoPkgHasElems_Orgname func (o *XsdGoPkgHasElems_Orgname)
	XsdGoPkgHasElem_Msginfo func (o *XsdGoPkgHasElem_Msginfo)
	XsdGoPkgHasElems_Menuchoice func (o *XsdGoPkgHasElems_Menuchoice)
	XsdGoPkgHasElems_Keycode func (o *XsdGoPkgHasElems_Keycode)
	TxsdOrgname func (o *TxsdOrgname)
	XsdGoPkgHasElems_Keycombo func (o *XsdGoPkgHasElems_Keycombo)
	XsdGoPkgHasElem_Answer func (o *XsdGoPkgHasElem_Answer)
	XsdGoPkgHasElems_Sect4 func (o *XsdGoPkgHasElems_Sect4)
	XsdGoPkgHasElem_Chapter func (o *XsdGoPkgHasElem_Chapter)
	XsdGoPkgHasElems_Productnumber func (o *XsdGoPkgHasElems_Productnumber)
	XsdGoPkgHasElem_Honorific func (o *XsdGoPkgHasElem_Honorific)
	TxsdQandaentry func (o *TxsdQandaentry)
	XsdGoPkgHasElem_Glossseealso func (o *XsdGoPkgHasElem_Glossseealso)
	TxsdTip func (o *TxsdTip)
	XsdGoPkgHasElem_Optional func (o *XsdGoPkgHasElem_Optional)
	XsdGoPkgHasElem_Article func (o *XsdGoPkgHasElem_Article)
	XsdGoPkgHasElem_Blockquote func (o *XsdGoPkgHasElem_Blockquote)
	TxsdUserinput func (o *TxsdUserinput)
	XsdGoPkgHasElem_Td func (o *XsdGoPkgHasElem_Td)
	TxsdOoclass func (o *TxsdOoclass)
	XsdGoPkgHasElem_Keyword func (o *XsdGoPkgHasElem_Keyword)
	XsdGoPkgHasElems_Group func (o *XsdGoPkgHasElems_Group)
	XsdGoPkgHasElem_Synopfragment func (o *XsdGoPkgHasElem_Synopfragment)
	XsdGoPkgHasElems_Qandaentry func (o *XsdGoPkgHasElems_Qandaentry)
	TxsdToc func (o *TxsdToc)
	TxsdSpanspec func (o *TxsdSpanspec)
	XsdGoPkgHasElem_Textdata func (o *XsdGoPkgHasElem_Textdata)
	TxsdRow func (o *TxsdRow)
	XsdGoPkgHasElem_Bibliolist func (o *XsdGoPkgHasElem_Bibliolist)
	TxsdColgroup func (o *TxsdColgroup)
	XsdGoPkgHasElem_Area func (o *XsdGoPkgHasElem_Area)
	TxsdCol func (o *TxsdCol)
	TxsdBiblioentry func (o *TxsdBiblioentry)
	TxsdOrderedlist func (o *TxsdOrderedlist)
	XsdGoPkgHasElems_Productionrecap func (o *XsdGoPkgHasElems_Productionrecap)
	XsdGoPkgHasElem_Primaryie func (o *XsdGoPkgHasElem_Primaryie)
	XsdGoPkgHasElems_Procedure func (o *XsdGoPkgHasElems_Procedure)
	XsdGoPkgHasElem_Publisher func (o *XsdGoPkgHasElem_Publisher)
	XsdGoPkgHasElems_Biblioset func (o *XsdGoPkgHasElems_Biblioset)
	XsdGoPkgHasElems_Msgsub func (o *XsdGoPkgHasElems_Msgsub)
	XsdGoPkgHasElem_Bridgehead func (o *XsdGoPkgHasElem_Bridgehead)
	XsdGoPkgHasElems_Bibliography func (o *XsdGoPkgHasElems_Bibliography)
	XsdGoPkgHasElem_Programlistingco func (o *XsdGoPkgHasElem_Programlistingco)
	TxsdFuncdef func (o *TxsdFuncdef)
	XsdGoPkgHasElems_Dedication func (o *XsdGoPkgHasElems_Dedication)
	XsdGoPkgHasElem_Mathphrase func (o *XsdGoPkgHasElem_Mathphrase)
	TxsdSynopfragment func (o *TxsdSynopfragment)
	XsdGoPkgHasElem_Areaspec func (o *XsdGoPkgHasElem_Areaspec)
	XsdGoPkgHasElems_Orgdiv func (o *XsdGoPkgHasElems_Orgdiv)
	XsdGoPkgHasElems_Audiodata func (o *XsdGoPkgHasElems_Audiodata)
	XsdGoPkgHasElems_Simpara func (o *XsdGoPkgHasElems_Simpara)
	XsdGoPkgHasElem_Screenco func (o *XsdGoPkgHasElem_Screenco)
	TxsdFunction func (o *TxsdFunction)
	XsdGoPkgHasElem_Refnamediv func (o *XsdGoPkgHasElem_Refnamediv)
	XsdGoPkgHasElem_Titleabbrev func (o *XsdGoPkgHasElem_Titleabbrev)
	XsdGoPkgHasElem_Contrib func (o *XsdGoPkgHasElem_Contrib)
	TxsdParamdef func (o *TxsdParamdef)
	XsdGoPkgHasElem_Keycap func (o *XsdGoPkgHasElem_Keycap)
	XsdGoPkgHasElems_Quote func (o *XsdGoPkgHasElems_Quote)
	TxsdMediaobject func (o *TxsdMediaobject)
	XsdGoPkgHasElems_Areaspec func (o *XsdGoPkgHasElems_Areaspec)
	XsdGoPkgHasElem_Termdef func (o *XsdGoPkgHasElem_Termdef)
	XsdGoPkgHasElem_Olink func (o *XsdGoPkgHasElem_Olink)
	XsdGoPkgHasElems_Pob func (o *XsdGoPkgHasElems_Pob)
	XsdGoPkgHasElem_Msgaud func (o *XsdGoPkgHasElem_Msgaud)
	XsdGoPkgHasElems_Partintro func (o *XsdGoPkgHasElems_Partintro)
	XsdGoPkgHasElem_Colgroup func (o *XsdGoPkgHasElem_Colgroup)
	XsdGoPkgHasElem_Funcsynopsis func (o *XsdGoPkgHasElem_Funcsynopsis)
	XsdGoPkgHasElems_Imageobjectco func (o *XsdGoPkgHasElems_Imageobjectco)
	XsdGoPkgHasElem_Spanspec func (o *XsdGoPkgHasElem_Spanspec)
	XsdGoPkgHasElems_Errorcode func (o *XsdGoPkgHasElems_Errorcode)
	TxsdScreenshot func (o *TxsdScreenshot)
	XsdGoPkgHasElems_Warning func (o *XsdGoPkgHasElems_Warning)
	XsdGoPkgHasElems_Subject func (o *XsdGoPkgHasElems_Subject)
	XsdGoPkgHasElem_Ooexception func (o *XsdGoPkgHasElem_Ooexception)
	XsdGoPkgHasElem_Foreignphrase func (o *XsdGoPkgHasElem_Foreignphrase)
	TxsdCallout func (o *TxsdCallout)
	XsdGoPkgHasElems_Taskrelated func (o *XsdGoPkgHasElems_Taskrelated)
	XsdGoPkgHasElems_Address func (o *XsdGoPkgHasElems_Address)
	XsdGoPkgHasElems_Programlisting func (o *XsdGoPkgHasElems_Programlisting)
	XsdGoPkgHasElems_Revnumber func (o *XsdGoPkgHasElems_Revnumber)
	XsdGoPkgHasElem_Inlineequation func (o *XsdGoPkgHasElem_Inlineequation)
	XsdGoPkgHasElem_Returnvalue func (o *XsdGoPkgHasElem_Returnvalue)
	TxsdSecondary func (o *TxsdSecondary)
	XsdGoPkgHasElem_Msgset func (o *XsdGoPkgHasElem_Msgset)
	XsdGoPkgHasElem_Hardware func (o *XsdGoPkgHasElem_Hardware)
	XsdGoPkgHasElem_Refsect1 func (o *XsdGoPkgHasElem_Refsect1)
	XsdGoPkgHasElems_Refentrytitle func (o *XsdGoPkgHasElems_Refentrytitle)
	TxsdAreaspec func (o *TxsdAreaspec)
	XsdGoPkgHasElem_Msgrel func (o *XsdGoPkgHasElem_Msgrel)
	TxsdFuncsynopsisinfo func (o *TxsdFuncsynopsisinfo)
	XsdGoPkgHasElems_Postcode func (o *XsdGoPkgHasElems_Postcode)
	XsdGoPkgHasElems_Property func (o *XsdGoPkgHasElems_Property)
	XsdGoPkgHasElems_Refsect2 func (o *XsdGoPkgHasElems_Refsect2)
	TxsdImageobject func (o *TxsdImageobject)
	XsdGoPkgHasElem_Shortcut func (o *XsdGoPkgHasElem_Shortcut)
	TxsdMathphrase func (o *TxsdMathphrase)
	XsdGoPkgHasElems_Errortext func (o *XsdGoPkgHasElems_Errortext)
	XsdGoPkgHasElems_Reference func (o *XsdGoPkgHasElems_Reference)
	XsdGoPkgHasElem_Literallayout func (o *XsdGoPkgHasElem_Literallayout)
	XsdGoPkgHasElem_Seealso func (o *XsdGoPkgHasElem_Seealso)
	XsdGoPkgHasElem_Tocentry func (o *XsdGoPkgHasElem_Tocentry)
	XsdGoPkgHasElems_Remark func (o *XsdGoPkgHasElems_Remark)
	XsdGoPkgHasElems_Arg func (o *XsdGoPkgHasElems_Arg)
	TxsdProcedure func (o *TxsdProcedure)
	XsdGoPkgHasElems_Appendix func (o *XsdGoPkgHasElems_Appendix)
	XsdGoPkgHasElems_Varargs func (o *XsdGoPkgHasElems_Varargs)
	TxsdCaption func (o *TxsdCaption)
	XsdGoPkgHasElem_Bibliorelation func (o *XsdGoPkgHasElem_Bibliorelation)
	XsdGoPkgHasElem_Title func (o *XsdGoPkgHasElem_Title)
	XsdGoPkgHasElems_Funcdef func (o *XsdGoPkgHasElems_Funcdef)
	TxsdFuncsynopsis func (o *TxsdFuncsynopsis)
	XsdGoPkgHasElems_Audioobject func (o *XsdGoPkgHasElems_Audioobject)
	XsdGoPkgHasElems_Uri func (o *XsdGoPkgHasElems_Uri)
	XsdGoPkgHasElem_Colophon func (o *XsdGoPkgHasElem_Colophon)
	XsdGoPkgHasElems_Table func (o *XsdGoPkgHasElems_Table)
	XsdGoPkgHasElems_Seglistitem func (o *XsdGoPkgHasElems_Seglistitem)
	XsdGoPkgHasElem_Arg func (o *XsdGoPkgHasElem_Arg)
	TxsdTocentry func (o *TxsdTocentry)
	XsdGoPkgHasElems_Itemizedlist func (o *XsdGoPkgHasElems_Itemizedlist)
	XsdGoPkgHasElems_Methodname func (o *XsdGoPkgHasElems_Methodname)
	XsdGoPkgHasElem_Menuchoice func (o *XsdGoPkgHasElem_Menuchoice)
	XsdGoPkgHasElem_Alt func (o *XsdGoPkgHasElem_Alt)
	XsdGoPkgHasElem_Acknowledgements func (o *XsdGoPkgHasElem_Acknowledgements)
	XsdGoPkgHasElems_Bibliosource func (o *XsdGoPkgHasElems_Bibliosource)
	XsdGoPkgHasElems_Thead func (o *XsdGoPkgHasElems_Thead)
	TxsdTocdiv func (o *TxsdTocdiv)
	XsdGoPkgHasElem_Interfacename func (o *XsdGoPkgHasElem_Interfacename)
	TxsdContrib func (o *TxsdContrib)
	XsdGoPkgHasElem_Question func (o *XsdGoPkgHasElem_Question)
	TxsdMsg func (o *TxsdMsg)
	XsdGoPkgHasElems_Anchor func (o *XsdGoPkgHasElems_Anchor)
	XsdGoPkgHasElem_Tocdiv func (o *XsdGoPkgHasElem_Tocdiv)
	XsdGoPkgHasElem_Member func (o *XsdGoPkgHasElem_Member)
	XsdGoPkgHasElems_Glossdiv func (o *XsdGoPkgHasElems_Glossdiv)
	XsdGoPkgHasElems_Textdata func (o *XsdGoPkgHasElems_Textdata)
	XsdGoPkgHasElem_Abbrev func (o *XsdGoPkgHasElem_Abbrev)
	XsdGoPkgHasElems_Rhs func (o *XsdGoPkgHasElems_Rhs)
	TxsdConstraintdef func (o *TxsdConstraintdef)
	XsdGoPkgHasElems_Para func (o *XsdGoPkgHasElems_Para)
	TxsdFilename func (o *TxsdFilename)
	TxsdLink func (o *TxsdLink)
	XsdGoPkgHasElem_Type func (o *XsdGoPkgHasElem_Type)
	XsdGoPkgHasElem_Subjectterm func (o *XsdGoPkgHasElem_Subjectterm)
	XsdGoPkgHasElems_Tertiary func (o *XsdGoPkgHasElems_Tertiary)
	XsdGoPkgHasElem_Remark func (o *XsdGoPkgHasElem_Remark)
	XsdGoPkgHasElems_Cmdsynopsis func (o *XsdGoPkgHasElems_Cmdsynopsis)
	XsdGoPkgHasElem_Informalequation func (o *XsdGoPkgHasElem_Informalequation)
	TxsdQandaset func (o *TxsdQandaset)
	XsdGoPkgHasElems_Person func (o *XsdGoPkgHasElems_Person)
	XsdGoPkgHasElems_Destructorsynopsis func (o *XsdGoPkgHasElems_Destructorsynopsis)
	TxsdInformalfigure func (o *TxsdInformalfigure)
	XsdGoPkgHasElems_Footnote func (o *XsdGoPkgHasElems_Footnote)
	XsdGoPkgHasElem_Refpurpose func (o *XsdGoPkgHasElem_Refpurpose)
	XsdGoPkgHasElems_Option func (o *XsdGoPkgHasElems_Option)
	XsdGoPkgHasElems_Refpurpose func (o *XsdGoPkgHasElems_Refpurpose)
	TxsdTable func (o *TxsdTable)
	XsdGoPkgHasElem_Refsynopsisdiv func (o *XsdGoPkgHasElem_Refsynopsisdiv)
	TxsdCoref func (o *TxsdCoref)
	XsdGoPkgHasElem_Postcode func (o *XsdGoPkgHasElem_Postcode)
	XsdGoPkgHasElem_Simplemsgentry func (o *XsdGoPkgHasElem_Simplemsgentry)
	XsdGoPkgHasElems_Constructorsynopsis func (o *XsdGoPkgHasElems_Constructorsynopsis)
	XsdGoPkgHasElems_Tbody func (o *XsdGoPkgHasElems_Tbody)
	TxsdAudioobject func (o *TxsdAudioobject)
	XsdGoPkgHasElems_Msgexplan func (o *XsdGoPkgHasElems_Msgexplan)
	XsdGoPkgHasElem_Orgname func (o *XsdGoPkgHasElem_Orgname)
	XsdGoPkgHasElem_Tr func (o *XsdGoPkgHasElem_Tr)
	TxsdBibliosource func (o *TxsdBibliosource)
	XsdGoPkgHasElem_Para func (o *XsdGoPkgHasElem_Para)
	TxsdBibliography func (o *TxsdBibliography)
	XsdGoPkgHasElem_Msglevel func (o *XsdGoPkgHasElem_Msglevel)
	XsdGoPkgHasElem_Guilabel func (o *XsdGoPkgHasElem_Guilabel)
	XsdGoPkgHasElem_Seealsoie func (o *XsdGoPkgHasElem_Seealsoie)
	XsdGoPkgHasElems_Legalnotice func (o *XsdGoPkgHasElems_Legalnotice)
	XsdGoPkgHasElem_Productname func (o *XsdGoPkgHasElem_Productname)
	TxsdConstant func (o *TxsdConstant)
	TxsdGlosslist func (o *TxsdGlosslist)
	XsdGoPkgHasElems_Subjectterm func (o *XsdGoPkgHasElems_Subjectterm)
	XsdGoPkgHasElems_Simplelist func (o *XsdGoPkgHasElems_Simplelist)
	XsdGoPkgHasElem_Co func (o *XsdGoPkgHasElem_Co)
	XsdGoPkgHasElem_Modifier func (o *XsdGoPkgHasElem_Modifier)
	XsdGoPkgHasElem_Caution func (o *XsdGoPkgHasElem_Caution)
	TxsdEntrytbl func (o *TxsdEntrytbl)
	XsdGoPkgHasElem_Msgtext func (o *XsdGoPkgHasElem_Msgtext)
	TxsdProductionset func (o *TxsdProductionset)
	TxsdColspec func (o *TxsdColspec)
	XsdGoPkgHasElems_Affiliation func (o *XsdGoPkgHasElems_Affiliation)
	XsdGoPkgHasElem_Methodsynopsis func (o *XsdGoPkgHasElem_Methodsynopsis)
	XsdGoPkgHasElems_Pagenums func (o *XsdGoPkgHasElems_Pagenums)
	XsdGoPkgHasElems_Publisher func (o *XsdGoPkgHasElems_Publisher)
	XsdGoPkgHasElems_Important func (o *XsdGoPkgHasElems_Important)
	XsdGoPkgHasElems_Sidebar func (o *XsdGoPkgHasElems_Sidebar)
	TxsdBibliorelation func (o *TxsdBibliorelation)
	XsdGoPkgHasElem_Biblioid func (o *XsdGoPkgHasElem_Biblioid)
	TxsdProduction func (o *TxsdProduction)
	TxsdAffiliation func (o *TxsdAffiliation)
	XsdGoPkgHasElem_Callout func (o *XsdGoPkgHasElem_Callout)
	XsdGoPkgHasElem_Parameter func (o *XsdGoPkgHasElem_Parameter)
	XsdGoPkgHasElems_Constraintdef func (o *XsdGoPkgHasElems_Constraintdef)
	XsdGoPkgHasElem_Textobject func (o *XsdGoPkgHasElem_Textobject)
	TxsdRefentry func (o *TxsdRefentry)
	TxsdGlossdef func (o *TxsdGlossdef)
	XsdGoPkgHasElem_Package func (o *XsdGoPkgHasElem_Package)
	XsdGoPkgHasElem_Refclass func (o *XsdGoPkgHasElem_Refclass)
	TxsdProductname func (o *TxsdProductname)
	XsdGoPkgHasElems_Authorgroup func (o *XsdGoPkgHasElems_Authorgroup)
	XsdGoPkgHasElems_Classname func (o *XsdGoPkgHasElems_Classname)
	XsdGoPkgHasElems_Part func (o *XsdGoPkgHasElems_Part)
	XsdGoPkgHasElem_Important func (o *XsdGoPkgHasElem_Important)
	XsdGoPkgHasElem_Taskprerequisites func (o *XsdGoPkgHasElem_Taskprerequisites)
	XsdGoPkgHasElem_Collab func (o *XsdGoPkgHasElem_Collab)
	XsdGoPkgHasElems_Emphasis func (o *XsdGoPkgHasElems_Emphasis)
	XsdGoPkgHasElems_Package func (o *XsdGoPkgHasElems_Package)
	TxsdSet func (o *TxsdSet)
	TxsdImportant func (o *TxsdImportant)
	XsdGoPkgHasElem_Artpagenums func (o *XsdGoPkgHasElem_Artpagenums)
	XsdGoPkgHasElem_Othername func (o *XsdGoPkgHasElem_Othername)
	TxsdStepalternatives func (o *TxsdStepalternatives)
	XsdGoPkgHasElem_Oointerface func (o *XsdGoPkgHasElem_Oointerface)
	XsdGoPkgHasElems_Seealso func (o *XsdGoPkgHasElems_Seealso)
	XsdGoPkgHasElem_Pagenums func (o *XsdGoPkgHasElem_Pagenums)
	XsdGoPkgHasElems_Seg func (o *XsdGoPkgHasElems_Seg)
	XsdGoPkgHasElem_Segtitle func (o *XsdGoPkgHasElem_Segtitle)
	XsdGoPkgHasElem_Otheraddr func (o *XsdGoPkgHasElem_Otheraddr)
	TxsdGlossterm func (o *TxsdGlossterm)
	XsdGoPkgHasElems_Pubdate func (o *XsdGoPkgHasElems_Pubdate)
	XsdGoPkgHasElem_Holder func (o *XsdGoPkgHasElem_Holder)
	TxsdListitem func (o *TxsdListitem)
	XsdGoPkgHasElem_Conftitle func (o *XsdGoPkgHasElem_Conftitle)
	XsdGoPkgHasElem_Orgdiv func (o *XsdGoPkgHasElem_Orgdiv)
	TxsdPersonblurb func (o *TxsdPersonblurb)
	TxsdMsgset func (o *TxsdMsgset)
	XsdGoPkgHasElem_Guimenu func (o *XsdGoPkgHasElem_Guimenu)
	XsdGoPkgHasElems_Keywordset func (o *XsdGoPkgHasElems_Keywordset)
	XsdGoPkgHasElems_Type func (o *XsdGoPkgHasElems_Type)
	XsdGoPkgHasElems_Systemitem func (o *XsdGoPkgHasElems_Systemitem)
	XsdGoPkgHasElem_Subscript func (o *XsdGoPkgHasElem_Subscript)
	XsdGoPkgHasElems_Glossary func (o *XsdGoPkgHasElems_Glossary)
	XsdGoPkgHasElem_Address func (o *XsdGoPkgHasElem_Address)
	XsdGoPkgHasElems_Co func (o *XsdGoPkgHasElems_Co)
	TxsdInlineequation func (o *TxsdInlineequation)
	XsdGoPkgHasElems_Synopsis func (o *XsdGoPkgHasElems_Synopsis)
	XsdGoPkgHasElems_Cover func (o *XsdGoPkgHasElems_Cover)
	XsdGoPkgHasElems_Segtitle func (o *XsdGoPkgHasElems_Segtitle)
	XsdGoPkgHasElems_Refsect1 func (o *XsdGoPkgHasElems_Refsect1)
	XsdGoPkgHasElems_Titleabbrev func (o *XsdGoPkgHasElems_Titleabbrev)
	XsdGoPkgHasElems_Revision func (o *XsdGoPkgHasElems_Revision)
	TxsdBridgehead func (o *TxsdBridgehead)
	XsdGoPkgHasElem_Guisubmenu func (o *XsdGoPkgHasElem_Guisubmenu)
	XsdGoPkgHasElems_Msgtext func (o *XsdGoPkgHasElems_Msgtext)
	XsdGoPkgHasElems_Sect2 func (o *XsdGoPkgHasElems_Sect2)
	XsdGoPkgHasElem_Preface func (o *XsdGoPkgHasElem_Preface)
	XsdGoPkgHasElem_Biblioset func (o *XsdGoPkgHasElem_Biblioset)
	XsdGoPkgHasElem_Shortaffil func (o *XsdGoPkgHasElem_Shortaffil)
	XsdGoPkgHasElem_Thead func (o *XsdGoPkgHasElem_Thead)
	TxsdMethodparam func (o *TxsdMethodparam)
	TxsdReference func (o *TxsdReference)
	XsdGoPkgHasElems_Title func (o *XsdGoPkgHasElems_Title)
	XsdGoPkgHasElems_Manvolnum func (o *XsdGoPkgHasElems_Manvolnum)
	XsdGoPkgHasElems_Indexterm func (o *XsdGoPkgHasElems_Indexterm)
	TxsdMsgentry func (o *TxsdMsgentry)
	XsdGoPkgHasElems_Screenco func (o *XsdGoPkgHasElems_Screenco)
	XsdGoPkgHasElems_Msg func (o *XsdGoPkgHasElems_Msg)
	XsdGoPkgHasElems_Chapter func (o *XsdGoPkgHasElems_Chapter)
	XsdGoPkgHasElems_Modifier func (o *XsdGoPkgHasElems_Modifier)
	TxsdOrg func (o *TxsdOrg)
	XsdGoPkgHasElem_Token func (o *XsdGoPkgHasElem_Token)
	XsdGoPkgHasElem_Sect3 func (o *XsdGoPkgHasElem_Sect3)
	XsdGoPkgHasElem_Refmeta func (o *XsdGoPkgHasElem_Refmeta)
	TxsdTr func (o *TxsdTr)
	XsdGoPkgHasElems_Ooexception func (o *XsdGoPkgHasElems_Ooexception)
	TxsdGlossdiv func (o *TxsdGlossdiv)
	XsdGoPkgHasElems_Email func (o *XsdGoPkgHasElems_Email)
	XsdGoPkgHasElem_Lineannotation func (o *XsdGoPkgHasElem_Lineannotation)
	XsdGoPkgHasElem_Date func (o *XsdGoPkgHasElem_Date)
	XsdGoPkgHasElems_Tertiaryie func (o *XsdGoPkgHasElems_Tertiaryie)
	XsdGoPkgHasElems_Member func (o *XsdGoPkgHasElems_Member)
	XsdGoPkgHasElem_Year func (o *XsdGoPkgHasElem_Year)
	XsdGoPkgHasElems_Paramdef func (o *XsdGoPkgHasElems_Paramdef)
	TxsdTag func (o *TxsdTag)
	XsdGoPkgHasElem_Seriesvolnums func (o *XsdGoPkgHasElem_Seriesvolnums)
	XsdGoPkgHasElem_Contractnum func (o *XsdGoPkgHasElem_Contractnum)
	XsdGoPkgHasElem_Wordasword func (o *XsdGoPkgHasElem_Wordasword)
	XsdGoPkgHasElems_Colspec func (o *XsdGoPkgHasElems_Colspec)
	XsdGoPkgHasElem_Areaset func (o *XsdGoPkgHasElem_Areaset)
	XsdGoPkgHasElem_Prompt func (o *XsdGoPkgHasElem_Prompt)
	XsdGoPkgHasElems_Guimenu func (o *XsdGoPkgHasElems_Guimenu)
	TxsdImageobjectco func (o *TxsdImageobjectco)
	TxsdTrademark func (o *TxsdTrademark)
	XsdGoPkgHasElems_Textobject func (o *XsdGoPkgHasElems_Textobject)
	TxsdPrompt func (o *TxsdPrompt)
	TxsdAnswer func (o *TxsdAnswer)
	XsdGoPkgHasElems_Abbrev func (o *XsdGoPkgHasElems_Abbrev)
	XsdGoPkgHasElem_Org func (o *XsdGoPkgHasElem_Org)
	XsdGoPkgHasElems_Firstterm func (o *XsdGoPkgHasElems_Firstterm)
	XsdGoPkgHasElems_Database func (o *XsdGoPkgHasElems_Database)
	TxsdIndex func (o *TxsdIndex)
	TxsdCover func (o *TxsdCover)
	TxsdVarlistentry func (o *TxsdVarlistentry)
	XsdGoPkgHasElems_Trademark func (o *XsdGoPkgHasElems_Trademark)
	XsdGoPkgHasElems_Formalpara func (o *XsdGoPkgHasElems_Formalpara)
	XsdGoPkgHasElem_Indexdiv func (o *XsdGoPkgHasElem_Indexdiv)
	TxsdFuncprototype func (o *TxsdFuncprototype)
	TxsdCollab func (o *TxsdCollab)
	XsdGoPkgHasElems_State func (o *XsdGoPkgHasElems_State)
	TxsdScreen func (o *TxsdScreen)
	TxsdMethodsynopsis func (o *TxsdMethodsynopsis)
	XsdGoPkgHasElem_Imagedata func (o *XsdGoPkgHasElem_Imagedata)
	TxsdBiblioref func (o *TxsdBiblioref)
	TxsdSidebar func (o *TxsdSidebar)
	XsdGoPkgHasElem_Volumenum func (o *XsdGoPkgHasElem_Volumenum)
	XsdGoPkgHasElem_Footnote func (o *XsdGoPkgHasElem_Footnote)
	XsdGoPkgHasElem_Setindex func (o *XsdGoPkgHasElem_Setindex)
	XsdGoPkgHasElem_Constant func (o *XsdGoPkgHasElem_Constant)
	XsdGoPkgHasElems_Answer func (o *XsdGoPkgHasElems_Answer)
	XsdGoPkgHasElems_Inlinemediaobject func (o *XsdGoPkgHasElems_Inlinemediaobject)
	TxsdCmdsynopsis func (o *TxsdCmdsynopsis)
	XsdGoPkgHasElems_Seeie func (o *XsdGoPkgHasElems_Seeie)
	TxsdModifier func (o *TxsdModifier)
	TxsdClasssynopsisinfo func (o *TxsdClasssynopsisinfo)
	XsdGoPkgHasElems_Fax func (o *XsdGoPkgHasElems_Fax)
	XsdGoPkgHasElem_Primary func (o *XsdGoPkgHasElem_Primary)
	XsdGoPkgHasElems_Refdescriptor func (o *XsdGoPkgHasElems_Refdescriptor)
	XsdGoPkgHasElem_Refsect2 func (o *XsdGoPkgHasElem_Refsect2)
	XsdGoPkgHasElems_Shortcut func (o *XsdGoPkgHasElems_Shortcut)
	TxsdSubject func (o *TxsdSubject)
	XsdGoPkgHasElems_Refsection func (o *XsdGoPkgHasElems_Refsection)
	XsdGoPkgHasElem_Sidebar func (o *XsdGoPkgHasElem_Sidebar)
	XsdGoPkgHasElems_Blockquote func (o *XsdGoPkgHasElems_Blockquote)
	TxsdEntry func (o *TxsdEntry)
	TxsdCo func (o *TxsdCo)
	TxsdAreaset func (o *TxsdAreaset)
	TxsdFormalpara func (o *TxsdFormalpara)
	XsdGoPkgHasElems_Refclass func (o *XsdGoPkgHasElems_Refclass)
	XsdGoPkgHasElem_Synopfragmentref func (o *XsdGoPkgHasElem_Synopfragmentref)
	XsdGoPkgHasElem_Step func (o *XsdGoPkgHasElem_Step)
	XsdGoPkgHasElems_Honorific func (o *XsdGoPkgHasElems_Honorific)
	XsdGoPkgHasElems_Refnamediv func (o *XsdGoPkgHasElems_Refnamediv)
	XsdGoPkgHasElems_Screenshot func (o *XsdGoPkgHasElems_Screenshot)
	XsdGoPkgHasElems_Org func (o *XsdGoPkgHasElems_Org)
	TxsdBlockquote func (o *TxsdBlockquote)
	XsdGoPkgHasElems_Classsynopsis func (o *XsdGoPkgHasElems_Classsynopsis)
	TxsdCiterefentry func (o *TxsdCiterefentry)
	XsdGoPkgHasElems_Varname func (o *XsdGoPkgHasElems_Varname)
	XsdGoPkgHasElem_Refentry func (o *XsdGoPkgHasElem_Refentry)
	XsdGoPkgHasElem_Symbol func (o *XsdGoPkgHasElem_Symbol)
	XsdGoPkgHasElem_Person func (o *XsdGoPkgHasElem_Person)
	XsdGoPkgHasElem_Tbody func (o *XsdGoPkgHasElem_Tbody)
	TxsdRevhistory func (o *TxsdRevhistory)
	XsdGoPkgHasElem_Void func (o *XsdGoPkgHasElem_Void)
	TxsdOoexception func (o *TxsdOoexception)
	XsdGoPkgHasElem_Firstterm func (o *XsdGoPkgHasElem_Firstterm)
	XsdGoPkgHasElems_Interfacename func (o *XsdGoPkgHasElems_Interfacename)
	XsdGoPkgHasElems_Entry func (o *XsdGoPkgHasElems_Entry)
	XsdGoPkgHasElem_Mediaobject func (o *XsdGoPkgHasElem_Mediaobject)
	XsdGoPkgHasElem_Videodata func (o *XsdGoPkgHasElem_Videodata)
	XsdGoPkgHasElem_Biblioref func (o *XsdGoPkgHasElem_Biblioref)
	XsdGoPkgHasElems_Phrase func (o *XsdGoPkgHasElems_Phrase)
	TxsdNote func (o *TxsdNote)
	XsdGoPkgHasElems_Citation func (o *XsdGoPkgHasElems_Citation)
	XsdGoPkgHasElems_Initializer func (o *XsdGoPkgHasElems_Initializer)
	XsdGoPkgHasElems_Coref func (o *XsdGoPkgHasElems_Coref)
	TxsdSimpara func (o *TxsdSimpara)
	XsdGoPkgHasElem_Errorcode func (o *XsdGoPkgHasElem_Errorcode)
	TxsdKeywordset func (o *TxsdKeywordset)
	TxsdGlossary func (o *TxsdGlossary)
	XsdGoPkgHasElem_Anchor func (o *XsdGoPkgHasElem_Anchor)
	XsdGoPkgHasElems_Keycap func (o *XsdGoPkgHasElems_Keycap)
	TxsdAuthorgroup func (o *TxsdAuthorgroup)
	XsdGoPkgHasElems_Tasksummary func (o *XsdGoPkgHasElems_Tasksummary)
	XsdGoPkgHasElems_Revdescription func (o *XsdGoPkgHasElems_Revdescription)
	TxsdSeglistitem func (o *TxsdSeglistitem)
	XsdGoPkgHasElem_Legalnotice func (o *XsdGoPkgHasElem_Legalnotice)
	XsdGoPkgHasElems_Preface func (o *XsdGoPkgHasElems_Preface)
	XsdGoPkgHasElem_Destructorsynopsis func (o *XsdGoPkgHasElem_Destructorsynopsis)
	XsdGoPkgHasElem_Orderedlist func (o *XsdGoPkgHasElem_Orderedlist)
	XsdGoPkgHasElem_Command func (o *XsdGoPkgHasElem_Command)
	XsdGoPkgHasElem_Calloutlist func (o *XsdGoPkgHasElem_Calloutlist)
	XsdGoPkgHasElems_Productionset func (o *XsdGoPkgHasElems_Productionset)
	XsdGoPkgHasElems_Mediaobject func (o *XsdGoPkgHasElems_Mediaobject)
	XsdGoPkgHasElems_Personblurb func (o *XsdGoPkgHasElems_Personblurb)
	XsdGoPkgHasElem_Refname func (o *XsdGoPkgHasElem_Refname)
	XsdGoPkgHasElems_Informalexample func (o *XsdGoPkgHasElems_Informalexample)
	XsdGoPkgHasElems_Toc func (o *XsdGoPkgHasElems_Toc)
	XsdGoPkgHasElem_Personname func (o *XsdGoPkgHasElem_Personname)
	XsdGoPkgHasElem_Keywordset func (o *XsdGoPkgHasElem_Keywordset)
	XsdGoPkgHasElems_Production func (o *XsdGoPkgHasElems_Production)
	XsdGoPkgHasElem_Glossentry func (o *XsdGoPkgHasElem_Glossentry)
	TxsdBook func (o *TxsdBook)
	XsdGoPkgHasElem_Keysym func (o *XsdGoPkgHasElem_Keysym)
	XsdGoPkgHasElem_Guibutton func (o *XsdGoPkgHasElem_Guibutton)
	XsdGoPkgHasElems_Otheraddr func (o *XsdGoPkgHasElems_Otheraddr)
	XsdGoPkgHasElem_Note func (o *XsdGoPkgHasElem_Note)
	XsdGoPkgHasElems_Envar func (o *XsdGoPkgHasElems_Envar)
	XsdGoPkgHasElems_Bibliorelation func (o *XsdGoPkgHasElems_Bibliorelation)
	XsdGoPkgHasElem_Editor func (o *XsdGoPkgHasElem_Editor)
	TxsdMenuchoice func (o *TxsdMenuchoice)
	XsdGoPkgHasElems_Listitem func (o *XsdGoPkgHasElems_Listitem)
	XsdGoPkgHasElems_Funcsynopsisinfo func (o *XsdGoPkgHasElems_Funcsynopsisinfo)
	XsdGoPkgHasElems_Revremark func (o *XsdGoPkgHasElems_Revremark)
	XsdGoPkgHasElem_Qandadiv func (o *XsdGoPkgHasElem_Qandadiv)
	TxsdPerson func (o *TxsdPerson)
	XsdGoPkgHasElems_Alt func (o *XsdGoPkgHasElems_Alt)
	XsdGoPkgHasElems_Author func (o *XsdGoPkgHasElems_Author)
	XsdGoPkgHasElems_Tgroup func (o *XsdGoPkgHasElems_Tgroup)
	XsdGoPkgHasElem_Figure func (o *XsdGoPkgHasElem_Figure)
	TxsdAbbrev func (o *TxsdAbbrev)
	TxsdArg func (o *TxsdArg)
	XsdGoPkgHasElems_Refmiscinfo func (o *XsdGoPkgHasElems_Refmiscinfo)
	XsdGoPkgHasElem_Confsponsor func (o *XsdGoPkgHasElem_Confsponsor)
	XsdGoPkgHasElems_Filename func (o *XsdGoPkgHasElems_Filename)
	XsdGoPkgHasElem_Keycombo func (o *XsdGoPkgHasElem_Keycombo)
	TxsdArea func (o *TxsdArea)
	XsdGoPkgHasElems_Glosssee func (o *XsdGoPkgHasElems_Glosssee)
	XsdGoPkgHasElem_Superscript func (o *XsdGoPkgHasElem_Superscript)
	TxsdPart func (o *TxsdPart)
	XsdGoPkgHasElem_See func (o *XsdGoPkgHasElem_See)
	XsdGoPkgHasElems_Citerefentry func (o *XsdGoPkgHasElems_Citerefentry)
	XsdGoPkgHasElems_Publishername func (o *XsdGoPkgHasElems_Publishername)
	XsdGoPkgHasElems_Keysym func (o *XsdGoPkgHasElems_Keysym)
	XsdGoPkgHasElems_Simplesect func (o *XsdGoPkgHasElems_Simplesect)
	TxsdRemark func (o *TxsdRemark)
	XsdGoPkgHasElem_Simpara func (o *XsdGoPkgHasElem_Simpara)
	TxsdDate func (o *TxsdDate)
	XsdGoPkgHasElem_Screen func (o *XsdGoPkgHasElem_Screen)
	XsdGoPkgHasElems_Msgrel func (o *XsdGoPkgHasElems_Msgrel)
	XsdGoPkgHasElem_Pubdate func (o *XsdGoPkgHasElem_Pubdate)
	TxsdImagedata func (o *TxsdImagedata)
	XsdGoPkgHasElem_Screenshot func (o *XsdGoPkgHasElem_Screenshot)
	XsdGoPkgHasElem_Nonterminal func (o *XsdGoPkgHasElem_Nonterminal)
	XsdGoPkgHasElem_Confdates func (o *XsdGoPkgHasElem_Confdates)
	XsdGoPkgHasElem_Keycode func (o *XsdGoPkgHasElem_Keycode)
	TxsdSegmentedlist func (o *TxsdSegmentedlist)
	XsdGoPkgHasElem_Link func (o *XsdGoPkgHasElem_Link)
	XsdGoPkgHasElems_Volumenum func (o *XsdGoPkgHasElems_Volumenum)
	XsdGoPkgHasElems_Fieldsynopsis func (o *XsdGoPkgHasElems_Fieldsynopsis)
	XsdGoPkgHasElems_Biblioentry func (o *XsdGoPkgHasElems_Biblioentry)
	XsdGoPkgHasElem_Ooclass func (o *XsdGoPkgHasElem_Ooclass)
	TxsdAnchor func (o *TxsdAnchor)
	XsdGoPkgHasElems_Conftitle func (o *XsdGoPkgHasElems_Conftitle)
	XsdGoPkgHasElems_Contractsponsor func (o *XsdGoPkgHasElems_Contractsponsor)
	TxsdTitleabbrev func (o *TxsdTitleabbrev)
	TxsdShortcut func (o *TxsdShortcut)
	XsdGoPkgHasElems_Termdef func (o *XsdGoPkgHasElems_Termdef)
	XsdGoPkgHasElem_Substeps func (o *XsdGoPkgHasElem_Substeps)
	XsdGoPkgHasElems_Informalequation func (o *XsdGoPkgHasElems_Informalequation)
	XsdGoPkgHasElems_Lhs func (o *XsdGoPkgHasElems_Lhs)
	XsdGoPkgHasElems_Informalfigure func (o *XsdGoPkgHasElems_Informalfigure)
	XsdGoPkgHasElem_Revision func (o *XsdGoPkgHasElem_Revision)
	XsdGoPkgHasElems_Printhistory func (o *XsdGoPkgHasElems_Printhistory)
	XsdGoPkgHasElem_Cover func (o *XsdGoPkgHasElem_Cover)
	XsdGoPkgHasElems_Article func (o *XsdGoPkgHasElems_Article)
	XsdGoPkgHasElem_Stepalternatives func (o *XsdGoPkgHasElem_Stepalternatives)
	XsdGoPkgHasElems_Subjectset func (o *XsdGoPkgHasElems_Subjectset)
	XsdGoPkgHasElems_Guisubmenu func (o *XsdGoPkgHasElems_Guisubmenu)
	TxsdProgramlisting func (o *TxsdProgramlisting)
	TxsdItermset func (o *TxsdItermset)
	TxsdColophon func (o *TxsdColophon)
	XsdGoPkgHasElem_Procedure func (o *XsdGoPkgHasElem_Procedure)
	TxsdPersonname func (o *TxsdPersonname)
	TxsdEnvar func (o *TxsdEnvar)
	XsdGoPkgHasElems_Markup func (o *XsdGoPkgHasElems_Markup)
	XsdGoPkgHasElems_Accel func (o *XsdGoPkgHasElems_Accel)
	XsdGoPkgHasElem_Pob func (o *XsdGoPkgHasElem_Pob)
	XsdGoPkgHasElem_Qandaset func (o *XsdGoPkgHasElem_Qandaset)
	XsdGoPkgHasElems_Othercredit func (o *XsdGoPkgHasElems_Othercredit)
	TxsdSeealsoie func (o *TxsdSeealsoie)
	XsdGoPkgHasElem_Option func (o *XsdGoPkgHasElem_Option)
	XsdGoPkgHasElems_Confgroup func (o *XsdGoPkgHasElems_Confgroup)
	XsdGoPkgHasElems_Application func (o *XsdGoPkgHasElems_Application)
	XsdGoPkgHasElem_Refentrytitle func (o *XsdGoPkgHasElem_Refentrytitle)
	TxsdLiterallayout func (o *TxsdLiterallayout)
	XsdGoPkgHasElems_Caution func (o *XsdGoPkgHasElems_Caution)
	XsdGoPkgHasElem_Entry func (o *XsdGoPkgHasElem_Entry)
	TxsdBiblioid func (o *TxsdBiblioid)
	XsdGoPkgHasElem_Funcprototype func (o *XsdGoPkgHasElem_Funcprototype)
	TxsdRefsect1 func (o *TxsdRefsect1)
	XsdGoPkgHasElems_Colophon func (o *XsdGoPkgHasElems_Colophon)
	TxsdMsginfo func (o *TxsdMsginfo)
	TxsdConfgroup func (o *TxsdConfgroup)
	XsdGoPkgHasElems_Equation func (o *XsdGoPkgHasElems_Equation)
	XsdGoPkgHasElem_Lhs func (o *XsdGoPkgHasElem_Lhs)
	XsdGoPkgHasElem_Secondary func (o *XsdGoPkgHasElem_Secondary)
	XsdGoPkgHasElems_Citetitle func (o *XsdGoPkgHasElems_Citetitle)
	TxsdOointerface func (o *TxsdOointerface)
	TxsdGlossseealso func (o *TxsdGlossseealso)
	TxsdExample func (o *TxsdExample)
	TxsdInformalequation func (o *TxsdInformalequation)
	XsdGoPkgHasElems_Inlineequation func (o *XsdGoPkgHasElems_Inlineequation)
	TxsdApplication func (o *TxsdApplication)
	XsdGoPkgHasElem_Th func (o *XsdGoPkgHasElem_Th)
	TxsdIndexentry func (o *TxsdIndexentry)
	XsdGoPkgHasElem_Itermset func (o *XsdGoPkgHasElem_Itermset)
	XsdGoPkgHasElem_Msgexplan func (o *XsdGoPkgHasElem_Msgexplan)
	XsdGoPkgHasElems_Releaseinfo func (o *XsdGoPkgHasElems_Releaseinfo)
	XsdGoPkgHasElems_Constant func (o *XsdGoPkgHasElems_Constant)
	TxsdLocator func (o *TxsdLocator)
	TxsdInformalexample func (o *TxsdInformalexample)
	XsdGoPkgHasElems_Bibliolist func (o *XsdGoPkgHasElems_Bibliolist)
	TxsdRhs func (o *TxsdRhs)
	XsdGoPkgHasElem_Paramdef func (o *XsdGoPkgHasElem_Paramdef)
	XsdGoPkgHasElem_Phone func (o *XsdGoPkgHasElem_Phone)
	XsdGoPkgHasElems_Bridgehead func (o *XsdGoPkgHasElems_Bridgehead)
}
