//	Auto-generated by the "go-xsd" package located at:
//		github.com/metaleap/go-xsd
//	Comments on types and fields (if any) are from the XSD file located at:
//		khronos.org/files/collada_schema_1_5
package go_Collada15

//	COLLADA Schema
//	Version 1.5.0 (August 6, 2008)
//	Copyright (C) 2008 The Khronos Group Inc., Sony Computer Entertainment Inc.
//	All Rights Reserved.
//	Khronos is a trademark of The Khronos Group Inc.
//	COLLADA is a trademark of Sony Computer Entertainment Inc. used by permission by Khronos.
//	Note that this software document is distributed on an "AS IS" basis, with ALL EXPRESS AND
//	IMPLIED WARRANTIES AND CONDITIONS DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED
//	WARRANTIES AND CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A PARTICULAR
//	PURPOSE, AND NON-INFRINGEMENT.


import (
	math "github.com/metaleap/go-xsd-pkg/www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd_go"
	xsdt "github.com/metaleap/go-xsd/types"
	xml "github.com/metaleap/go-xsd-pkg/www.w3.org/2001/xml.xsd_go"
)

//	The COLLADA element declares the root of the document that comprises some of the content
//	in the COLLADA schema.
//	The COLLADA element may contain any
//	number of library_nodes elements.
//	The library_nodes element declares a module of node elements.
//	The name attribute is the text string name of this element. Optional attribute.
type XsdGoPkgHasAttr_Name_XsdtToken_ struct {
//	The name attribute is the text string name of this element. Optional attribute.
	Name xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema name,attr"`

}

//	The extra element may appear any number of times.
//	The extra element declares additional information regarding its parent element.
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
type XsdGoPkgHasAttr_Id_XsdtId_ struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	Id xsdt.Id `xml:"http://www.collada.org/2008/03/COLLADASchema id,attr"`

}

//	This element must contain at least one non-common profile technique.
//	The technique element declares the information used to process some portion of the content. Each
//	technique conforms to an associated profile. Techniques generally act as a "switch". If more than
//	one is present for a particular portion of content, on import, one or the other is picked, but
//	usually not both. Selection should be based on which profile the importing application can support.
//	Techniques contain application data and programs, making them assets that can be managed as a unit.
//	The profile attribute indicates the type of profile. This is a vendor defined character
//	string that indicates the platform or capability target for the technique. Required attribute.
type XsdGoPkgHasAttr_Profile_XsdtNmtoken_ struct {
//	The profile attribute indicates the type of profile. This is a vendor defined character
//	string that indicates the platform or capability target for the technique. Required attribute.
	Profile xsdt.Nmtoken `xml:"http://www.collada.org/2008/03/COLLADASchema profile,attr"`

}

type TtechniqueType struct {
//	The profile attribute indicates the type of profile. This is a vendor defined character
//	string that indicates the platform or capability target for the technique. Required attribute.
	XsdGoPkgHasAttr_Profile_XsdtNmtoken_

}

//	If the W.TtechniqueType function is not nil (ie. was set by outside code), calls it with this TtechniqueType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TtechniqueType instance.
func (me *TtechniqueType) Walk ()  { 
	if fn := W.TtechniqueType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_ struct {
//	This element must contain at least one non-common profile technique.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

//	The extra element may contain an asset element.
//	The asset element defines asset management information regarding its parent element.
//	The modified element contains the date and time that the parent element was last modified and
//	represented in an ISO 8601 format. The modified element may appear zero or one time.
type XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_ struct {
//	The modified element contains the date and time that the parent element was last modified and
//	represented in an ISO 8601 format. The modified element may appear zero or one time.
	Modified xsdt.DateTime `xml:"http://www.collada.org/2008/03/COLLADASchema modified"`

}

//	If the W.XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_ instance.
func (me *XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_; fn != nil { fn(me) }
 }

//	The title element contains the title information for the parent element. The title element may
//	appear zero or one time.
type XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_ struct {
//	The title element contains the title information for the parent element. The title element may
//	appear zero or one time.
	Title xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema title"`

}

//	If the W.XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_ instance.
func (me *XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_; fn != nil { fn(me) }
 }

//	The created element contains the date and time that the parent element was created and is
//	represented in an ISO 8601 format.  The created element may appear zero or one time.
type XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_ struct {
//	The created element contains the date and time that the parent element was created and is
//	represented in an ISO 8601 format.  The created element may appear zero or one time.
	Created xsdt.DateTime `xml:"http://www.collada.org/2008/03/COLLADASchema created"`

}

//	If the W.XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_ instance.
func (me *XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_; fn != nil { fn(me) }
 }

//	The unit element contains descriptive information about unit of measure. It has attributes for
//	the name of the unit and the measurement with respect to the meter. The unit element may appear
//	zero or one time.
//	The name attribute specifies the name of the unit. The default value for the name
//	attribute is "meter".
type XsdGoPkgHasAttr_Name_XsdtNmtoken_Meter struct {
//	The name attribute specifies the name of the unit. The default value for the name
//	attribute is "meter".
	Name xsdt.Nmtoken `xml:"http://www.collada.org/2008/03/COLLADASchema name,attr"`

}

//	Returns the default value for Name -- "meter"
func (me XsdGoPkgHasAttr_Name_XsdtNmtoken_Meter) NameDefault () xsdt.Nmtoken { return xsdt.Nmtoken("meter") }

//	The meter attribute specifies the measurement with respect to the meter. The default
//	value for the meter attribute is "1.0".
type TfloatType xsdt.Double

//	Returns a string representation of this TfloatType's current non-string scalar value.
func (me TfloatType) String () string { return xsdt.Double(me).String() }

//	This convenience method just performs a simple type conversion to TfloatType's alias type xsdt.Double.
func (me TfloatType) ToXsdtDouble () xsdt.Double { return xsdt.Double(me) }

//	Since TfloatType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TfloatType) SetFromString (s string)  { (*xsdt.Double)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Meter_TfloatType_10 struct {
//	The meter attribute specifies the measurement with respect to the meter. The default
//	value for the meter attribute is "1.0".
	Meter TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema meter,attr"`

}

//	Returns the default value for Meter -- 1.0
func (me XsdGoPkgHasAttr_Meter_TfloatType_10) MeterDefault () TfloatType { return TfloatType(1.0) }

type TxsdAssetTypeSequenceUnit struct {
//	The name attribute specifies the name of the unit. The default value for the name
//	attribute is "meter".
	XsdGoPkgHasAttr_Name_XsdtNmtoken_Meter

//	The meter attribute specifies the measurement with respect to the meter. The default
//	value for the meter attribute is "1.0".
	XsdGoPkgHasAttr_Meter_TfloatType_10

}

//	If the W.TxsdAssetTypeSequenceUnit function is not nil (ie. was set by outside code), calls it with this TxsdAssetTypeSequenceUnit instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdAssetTypeSequenceUnit instance.
func (me *TxsdAssetTypeSequenceUnit) Walk ()  { 
	if fn := W.TxsdAssetTypeSequenceUnit; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_ struct {
//	The unit element contains descriptive information about unit of measure. It has attributes for
//	the name of the unit and the measurement with respect to the meter. The unit element may appear
//	zero or one time.
	Unit *TxsdAssetTypeSequenceUnit `xml:"http://www.collada.org/2008/03/COLLADASchema unit"`

}

//	If the W.XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_ instance.
func (me *XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_; fn != nil { fn(me) }
	me.Unit.Walk()
 }

type XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_; fn != nil { fn(me) }
 }

//	The up_axis element contains descriptive information about coordinate system of the geometric
//	data. All coordinates are right-handed by definition. This element specifies which axis is
//	considered up. The default is the Y-axis. The up_axis element may appear zero or one time.
//	An enumerated type specifying the acceptable up-axis values.
type TupAxisEnum xsdt.String

//	Returns true if the value of this enumerated TupAxisEnum is "Z_UP".
func (me TupAxisEnum) IsZUp () bool { return me == "Z_UP" }

//	Since TupAxisEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TupAxisEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TupAxisEnum's alias type xsdt.String.
func (me TupAxisEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TupAxisEnum is just a simple String type, this merely returns the current string value.
func (me TupAxisEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TupAxisEnum is "X_UP".
func (me TupAxisEnum) IsXUp () bool { return me == "X_UP" }

//	Returns true if the value of this enumerated TupAxisEnum is "Y_UP".
func (me TupAxisEnum) IsYUp () bool { return me == "Y_UP" }

type XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp struct {
//	The up_axis element contains descriptive information about coordinate system of the geometric
//	data. All coordinates are right-handed by definition. This element specifies which axis is
//	considered up. The default is the Y-axis. The up_axis element may appear zero or one time.
	UpAxis TupAxisEnum `xml:"http://www.collada.org/2008/03/COLLADASchema up_axis"`

}

//	If the W.XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp instance.
func (me *XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp; fn != nil { fn(me) }
 }

//	Returns the default value for UpAxis -- "Y_UP"
func (me XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp) UpAxisDefault () TupAxisEnum { return TupAxisEnum("Y_UP") }

//	The revision element contains the revision information for the parent element. The revision
//	element may appear zero or one time.
type XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_ struct {
//	The revision element contains the revision information for the parent element. The revision
//	element may appear zero or one time.
	Revision xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema revision"`

}

//	If the W.XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_ instance.
func (me *XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_; fn != nil { fn(me) }
 }

//	Specifies the location of the asset using the WGS84 coordinate system.
type XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_ struct {
	Latitude xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema latitude"`

}

//	If the W.XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_ instance.
func (me *XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_; fn != nil { fn(me) }
 }

//	Altitude is always given in meters.  If the mode is "absolute", then the value is interpreted as meters from mean sea level.  If the mode is "relativeToGround" then the value is interpreted as meters above the actual ground elevation at that particular location.
//	The legal values for the mode attribute on the altitute element in a
//	geographic_location element.
type TaltitudeModeEnum xsdt.String

//	Returns true if the value of this enumerated TaltitudeModeEnum is "relativeToGround".
func (me TaltitudeModeEnum) IsRelativeToGround () bool { return me == "relativeToGround" }

//	Since TaltitudeModeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TaltitudeModeEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TaltitudeModeEnum's alias type xsdt.String.
func (me TaltitudeModeEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TaltitudeModeEnum is "absolute".
func (me TaltitudeModeEnum) IsAbsolute () bool { return me == "absolute" }

//	Since TaltitudeModeEnum is just a simple String type, this merely returns the current string value.
func (me TaltitudeModeEnum) String () string { return xsdt.String(me).String() }

type XsdGoPkgHasAttr_Mode_TaltitudeModeEnum_RelativeToGround struct {
	Mode TaltitudeModeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema mode,attr"`

}

//	Returns the default value for Mode -- "relativeToGround"
func (me XsdGoPkgHasAttr_Mode_TaltitudeModeEnum_RelativeToGround) ModeDefault () TaltitudeModeEnum { return TaltitudeModeEnum("relativeToGround") }

type TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude struct {
	XsdGoPkgValue xsdt.Float `xml:",chardata"`

	XsdGoPkgHasAttr_Mode_TaltitudeModeEnum_RelativeToGround

}

//	If the W.TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude function is not nil (ie. was set by outside code), calls it with this TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude instance.
func (me *TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude) Walk ()  { 
	if fn := W.TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_ struct {
//	Altitude is always given in meters.  If the mode is "absolute", then the value is interpreted as meters from mean sea level.  If the mode is "relativeToGround" then the value is interpreted as meters above the actual ground elevation at that particular location.
	Altitude *TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude `xml:"http://www.collada.org/2008/03/COLLADASchema altitude"`

}

//	If the W.XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_ instance.
func (me *XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_; fn != nil { fn(me) }
	me.Altitude.Walk()
 }

type XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_ struct {
	Longitude xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema longitude"`

}

//	If the W.XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_ instance.
func (me *XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_; fn != nil { fn(me) }
 }

type TxsdAssetTypeSequenceCoverageSequenceGeographicLocation struct {
	XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_

	XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_

//	Altitude is always given in meters.  If the mode is "absolute", then the value is interpreted as meters from mean sea level.  If the mode is "relativeToGround" then the value is interpreted as meters above the actual ground elevation at that particular location.
	XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_

}

//	If the W.TxsdAssetTypeSequenceCoverageSequenceGeographicLocation function is not nil (ie. was set by outside code), calls it with this TxsdAssetTypeSequenceCoverageSequenceGeographicLocation instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdAssetTypeSequenceCoverageSequenceGeographicLocation instance.
func (me *TxsdAssetTypeSequenceCoverageSequenceGeographicLocation) Walk ()  { 
	if fn := W.TxsdAssetTypeSequenceCoverageSequenceGeographicLocation; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_.Walk()
	me.XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_.Walk()
	me.XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_.Walk()
 }

type XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_ struct {
//	Specifies the location of the asset using the WGS84 coordinate system.
	GeographicLocation *TxsdAssetTypeSequenceCoverageSequenceGeographicLocation `xml:"http://www.collada.org/2008/03/COLLADASchema geographic_location"`

}

//	If the W.XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_ instance.
func (me *XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_; fn != nil { fn(me) }
	me.GeographicLocation.Walk()
 }

type TxsdAssetTypeSequenceCoverage struct {
//	Specifies the location of the asset using the WGS84 coordinate system.
	XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_

}

//	If the W.TxsdAssetTypeSequenceCoverage function is not nil (ie. was set by outside code), calls it with this TxsdAssetTypeSequenceCoverage instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdAssetTypeSequenceCoverage instance.
func (me *TxsdAssetTypeSequenceCoverage) Walk ()  { 
	if fn := W.TxsdAssetTypeSequenceCoverage; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_.Walk()
 }

type XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_ struct {
	Coverage *TxsdAssetTypeSequenceCoverage `xml:"http://www.collada.org/2008/03/COLLADASchema coverage"`

}

//	If the W.XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_ instance.
func (me *XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_; fn != nil { fn(me) }
	me.Coverage.Walk()
 }

//	The contributor element defines authoring information for asset management
//	Contains a URI reference (xs:anyURI) to author's website.  This element has no attributes.   There may be only one author website.
type XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_ struct {
//	Contains a URI reference (xs:anyURI) to author's website.  This element has no attributes.   There may be only one author website.
	AuthorWebsite xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema author_website"`

}

//	If the W.XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_ instance.
func (me *XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_; fn != nil { fn(me) }
 }

//	The source_data element contains a URI reference to the source data used for this asset.
//	There may be only one source_data element.
type XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_ struct {
//	The source_data element contains a URI reference to the source data used for this asset.
//	There may be only one source_data element.
	SourceData xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema source_data"`

}

//	If the W.XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_ instance.
func (me *XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_; fn != nil { fn(me) }
 }

//	The copyright element contains a string with copyright information.
//	There may be only one copyright element.
type XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_ struct {
//	The copyright element contains a string with copyright information.
//	There may be only one copyright element.
	Copyright xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema copyright"`

}

//	If the W.XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_ instance.
func (me *XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_; fn != nil { fn(me) }
 }

//	The comments element contains a string with comments from this contributor.
//	There may be only one comments element.
type XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_ struct {
//	The comments element contains a string with comments from this contributor.
//	There may be only one comments element.
	Comments xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema comments"`

}

//	If the W.XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_ instance.
func (me *XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_; fn != nil { fn(me) }
 }

//	Contains a string with author's email address. String that compliant with RFC 2822 section 3.4. This element has no attributes. There may be only one author email address.
type TxsdAssetTypeSequenceContributorSequenceAuthorEmail xsdt.String

//	This convenience method just performs a simple type conversion to TxsdAssetTypeSequenceContributorSequenceAuthorEmail's alias type xsdt.String.
func (me TxsdAssetTypeSequenceContributorSequenceAuthorEmail) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TxsdAssetTypeSequenceContributorSequenceAuthorEmail is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdAssetTypeSequenceContributorSequenceAuthorEmail) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TxsdAssetTypeSequenceContributorSequenceAuthorEmail is just a simple String type, this merely returns the current string value.
func (me TxsdAssetTypeSequenceContributorSequenceAuthorEmail) String () string { return xsdt.String(me).String() }

type XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_ struct {
//	Contains a string with author's email address. String that compliant with RFC 2822 section 3.4. This element has no attributes. There may be only one author email address.
	AuthorEmail TxsdAssetTypeSequenceContributorSequenceAuthorEmail `xml:"http://www.collada.org/2008/03/COLLADASchema author_email"`

}

//	If the W.XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_ instance.
func (me *XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_; fn != nil { fn(me) }
 }

//	The author element contains a string with the author's name.
//	There may be only one author element.
type XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_ struct {
//	The author element contains a string with the author's name.
//	There may be only one author element.
	Author xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema author"`

}

//	If the W.XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_ instance.
func (me *XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_; fn != nil { fn(me) }
 }

//	The authoring_tool element contains a string with the authoring tool's name.
//	There may be only one authoring_tool element.
type XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_ struct {
//	The authoring_tool element contains a string with the authoring tool's name.
//	There may be only one authoring_tool element.
	AuthoringTool xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema authoring_tool"`

}

//	If the W.XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_ instance.
func (me *XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_; fn != nil { fn(me) }
 }

type TxsdAssetTypeSequenceContributor struct {
//	Contains a string with author's email address. String that compliant with RFC 2822 section 3.4. This element has no attributes. There may be only one author email address.
	XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_

//	The author element contains a string with the author's name.
//	There may be only one author element.
	XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_

//	The authoring_tool element contains a string with the authoring tool's name.
//	There may be only one authoring_tool element.
	XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_

//	Contains a URI reference (xs:anyURI) to author's website.  This element has no attributes.   There may be only one author website.
	XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_

//	The source_data element contains a URI reference to the source data used for this asset.
//	There may be only one source_data element.
	XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_

//	The copyright element contains a string with copyright information.
//	There may be only one copyright element.
	XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_

//	The comments element contains a string with comments from this contributor.
//	There may be only one comments element.
	XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_

}

//	If the W.TxsdAssetTypeSequenceContributor function is not nil (ie. was set by outside code), calls it with this TxsdAssetTypeSequenceContributor instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdAssetTypeSequenceContributor instance.
func (me *TxsdAssetTypeSequenceContributor) Walk ()  { 
	if fn := W.TxsdAssetTypeSequenceContributor; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_.Walk()
	me.XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_.Walk()
	me.XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_.Walk()
	me.XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_.Walk()
	me.XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_.Walk()
	me.XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_.Walk()
	me.XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_.Walk()
 }

type XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_ struct {
//	The contributor element defines authoring information for asset management
	Contributors []*TxsdAssetTypeSequenceContributor `xml:"http://www.collada.org/2008/03/COLLADASchema contributor"`

}

//	If the W.XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_ instance.
func (me *XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_; fn != nil { fn(me) }
	for _, x := range me.Contributors { x.Walk() }
 }

//	The keywords element contains a list of words used as search criteria for the parent element.
//	There may be only one keywords element.
type XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_ struct {
//	The keywords element contains a list of words used as search criteria for the parent element.
//	There may be only one keywords element.
	Keywords xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema keywords"`

}

//	If the W.XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_ instance.
func (me *XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_; fn != nil { fn(me) }
 }

//	The subject element contains a description of the topical subject of the parent element. The
//	subject element may appear zero or one time.
type XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_ struct {
//	The subject element contains a description of the topical subject of the parent element. The
//	subject element may appear zero or one time.
	Subject xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema subject"`

}

//	If the W.XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_ instance.
func (me *XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_; fn != nil { fn(me) }
 }

type TassetType struct {
//	The created element contains the date and time that the parent element was created and is
//	represented in an ISO 8601 format.  The created element may appear zero or one time.
	XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_

//	The unit element contains descriptive information about unit of measure. It has attributes for
//	the name of the unit and the measurement with respect to the meter. The unit element may appear
//	zero or one time.
	XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The up_axis element contains descriptive information about coordinate system of the geometric
//	data. All coordinates are right-handed by definition. This element specifies which axis is
//	considered up. The default is the Y-axis. The up_axis element may appear zero or one time.
	XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp

//	The revision element contains the revision information for the parent element. The revision
//	element may appear zero or one time.
	XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_

	XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_

//	The contributor element defines authoring information for asset management
	XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_

//	The keywords element contains a list of words used as search criteria for the parent element.
//	There may be only one keywords element.
	XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_

//	The subject element contains a description of the topical subject of the parent element. The
//	subject element may appear zero or one time.
	XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_

//	The modified element contains the date and time that the parent element was last modified and
//	represented in an ISO 8601 format. The modified element may appear zero or one time.
	XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_

//	The title element contains the title information for the parent element. The title element may
//	appear zero or one time.
	XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_

}

//	If the W.TassetType function is not nil (ie. was set by outside code), calls it with this TassetType instance as the single argument. Then calls the Walk() method on 11/11 embed(s) and 0/0 field(s) belonging to this TassetType instance.
func (me *TassetType) Walk ()  { 
	if fn := W.TassetType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_.Walk()
	me.XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_.Walk()
	me.XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_.Walk()
	me.XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_.Walk()
	me.XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp.Walk()
	me.XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_.Walk()
	me.XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_.Walk()
	me.XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_.Walk()
	me.XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_.Walk()
	me.XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_.Walk()
 }

type XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_ struct {
//	The extra element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The type attribute indicates the type of the value data. This text string must be understood
//	by the application. Required attribute.
type XsdGoPkgHasAttr_Type_XsdtNmtoken_ struct {
//	The type attribute indicates the type of the value data. This text string must be understood
//	by the application. Required attribute.
	Type xsdt.Nmtoken `xml:"http://www.collada.org/2008/03/COLLADASchema type,attr"`

}

type TextraType struct {
//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	This element must contain at least one non-common profile technique.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may contain an asset element.
	XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_

//	The type attribute indicates the type of the value data. This text string must be understood by
//	the application. Optional attribute.
	XsdGoPkgHasAttr_Type_XsdtNmtoken_

}

//	If the W.TextraType function is not nil (ie. was set by outside code), calls it with this TextraType instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TextraType instance.
func (me *TextraType) Walk ()  { 
	if fn := W.TextraType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_.Walk()
 }

type XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The library_nodes element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_ struct {
//	The library_nodes element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	There must be at least one node element.
//	Nodes embody the hierarchical relationship of elements in the scene.
//	The node element may contain any number of skew elements.
//	The skew element contains an angle and two mathematical vectors that represent the axis of
//	rotation and the axis of translation.
//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
type TsidType xsdt.NCName

//	This convenience method just performs a simple type conversion to TsidType's alias type xsdt.NCName.
func (me TsidType) ToXsdtNCName () xsdt.NCName { return xsdt.NCName(me) }

//	Since TsidType is just a simple String type, this merely returns the current string value.
func (me TsidType) String () string { return xsdt.NCName(me).String() }

//	Since TsidType is just a simple String type, this merely sets the current value from the specified string.
func (me *TsidType) SetFromString (s string)  { (*xsdt.NCName)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Sid_TsidType_ struct {
//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	Sid TsidType `xml:"http://www.collada.org/2008/03/COLLADASchema sid,attr"`

}

type TlistOfFloatsType xsdt.String

//	Since TlistOfFloatsType is just a simple String type, this merely returns the current string value.
func (me TlistOfFloatsType) String () string { return xsdt.String(me).String() }

//	Since TlistOfFloatsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfFloatsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	TlistOfFloatsType defines a String containing a whitespace-separated list of TfloatType values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfFloatsType) Values () (list []TfloatType) { var btv = new(TfloatType); var svals = xsdt.ListValues(string(me)); list = make([]TfloatType, len(svals)); for i, s := range svals { btv.SetFromString(s); list[i] = *btv }; return }

//	This convenience method just performs a simple type conversion to TlistOfFloatsType's alias type xsdt.String.
func (me TlistOfFloatsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

type Tfloat7Type TlistOfFloatsType

//	Since Tfloat7Type is just a simple String type, this merely returns the current string value.
func (me Tfloat7Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat7Type's alias type TlistOfFloatsType.
func (me Tfloat7Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat7Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat7Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type TskewType struct {
	XsdGoPkgValue Tfloat7Type `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TskewType function is not nil (ie. was set by outside code), calls it with this TskewType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TskewType instance.
func (me *TskewType) Walk ()  { 
	if fn := W.TskewType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_ struct {
//	The node element may contain any number of skew elements.
	Skews []*TskewType `xml:"http://www.collada.org/2008/03/COLLADASchema skew"`

}

//	If the W.XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_ instance.
func (me *XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_; fn != nil { fn(me) }
	for _, x := range me.Skews { x.Walk() }
 }

//	The node element may instance any number of camera objects.
//	The instance_camera element declares the instantiation of a COLLADA camera resource.
//	The instance_with_extra_type element is used for all generic instance elements. A generic instance element
//	is one which does not have any specific child elements declared.
//	The url attribute refers to resource to instantiate. This may refer to a local resource using a
//	relative URL fragment identifier that begins with the "#" character. The url attribute may refer
//	to an external resource using an absolute or relative URL.
type XsdGoPkgHasAttr_Url_XsdtAnyURI_ struct {
//	The url attribute refers to resource to instantiate. This may refer to a local resource using a
//	relative URL fragment identifier that begins with the "#" character. The url attribute may refer
//	to an external resource using an absolute or relative URL.
	Url xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema url,attr"`

}

//	The extra element may occur any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_ struct {
//	The extra element may occur any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TinstanceWithExtraType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may occur any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_

//	The url attribute refers to resource to instantiate. This may refer to a local resource using a
//	relative URL fragment identifier that begins with the "#" character. The url attribute may refer
//	to an external resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TinstanceWithExtraType function is not nil (ie. was set by outside code), calls it with this TinstanceWithExtraType instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TinstanceWithExtraType instance.
func (me *TinstanceWithExtraType) Walk ()  { 
	if fn := W.TinstanceWithExtraType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_.Walk()
 }

type TinstanceCameraType struct {
	TinstanceWithExtraType

}

//	If the W.TinstanceCameraType function is not nil (ie. was set by outside code), calls it with this TinstanceCameraType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TinstanceCameraType instance.
func (me *TinstanceCameraType) Walk ()  { 
	if fn := W.TinstanceCameraType; fn != nil { fn(me) }
	me.TinstanceWithExtraType.Walk()
 }

type XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_ struct {
//	The node element may instance any number of camera objects.
	CameraInstances []*TinstanceCameraType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_camera"`

}

//	If the W.XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_ instance.
func (me *XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_; fn != nil { fn(me) }
	for _, x := range me.CameraInstances { x.Walk() }
 }

//	The node element may instance any number of node elements or hierarchies objects.
//	The instance_node element declares the instantiation of a COLLADA node resource.
type XsdGoPkgHasAttr_Proxy_XsdtAnyURI_ struct {
	Proxy xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema proxy,attr"`

}

type TinstanceNodeType struct {
	TinstanceWithExtraType

	XsdGoPkgHasAttr_Proxy_XsdtAnyURI_

}

//	If the W.TinstanceNodeType function is not nil (ie. was set by outside code), calls it with this TinstanceNodeType instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TinstanceNodeType instance.
func (me *TinstanceNodeType) Walk ()  { 
	if fn := W.TinstanceNodeType; fn != nil { fn(me) }
	me.TinstanceWithExtraType.Walk()
 }

type XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_ struct {
//	The node element may instance any number of node elements or hierarchies objects.
	NodeInstances []*TinstanceNodeType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_node"`

}

//	If the W.XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_ instance.
func (me *XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_; fn != nil { fn(me) }
	for _, x := range me.NodeInstances { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The node element may contain any number of translate elements.
//	The translate element contains a mathematical vector that represents the distance along the
//	X, Y and Z-axes.
//	The targetable_float3_type element is used to represent elements which contain a float3 value which can
//	be targeted for animation.
type Tfloat3Type TlistOfFloatsType

//	This convenience method just performs a simple type conversion to Tfloat3Type's alias type TlistOfFloatsType.
func (me Tfloat3Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat3Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat3Type is just a simple String type, this merely returns the current string value.
func (me Tfloat3Type) String () string { return TlistOfFloatsType(me).String() }

type TtargetableFloat3Type struct {
	XsdGoPkgValue Tfloat3Type `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TtargetableFloat3Type function is not nil (ie. was set by outside code), calls it with this TtargetableFloat3Type instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TtargetableFloat3Type instance.
func (me *TtargetableFloat3Type) Walk ()  { 
	if fn := W.TtargetableFloat3Type; fn != nil { fn(me) }
 }

type TtranslateType struct {
	XsdGoPkgValue TtargetableFloat3Type `xml:",chardata"`

}

//	If the W.TtranslateType function is not nil (ie. was set by outside code), calls it with this TtranslateType instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this TtranslateType instance.
func (me *TtranslateType) Walk ()  { 
	if fn := W.TtranslateType; fn != nil { fn(me) }
	me.XsdGoPkgValue.Walk()
 }

type XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_ struct {
//	The node element may contain any number of translate elements.
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

//	The layer attribute indicates the names of the layers to which this node belongs.  For example,
//	a value of "foreground glowing" indicates that this node belongs to both the 'foreground' layer
//	and the 'glowing' layer.  The default value is empty, indicating that the node doesn't belong to
//	any layer.  Optional attribute.
type TlistOfNamesType xsdt.String

//	TlistOfNamesType defines a String containing a whitespace-separated list of xsdt.Name values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfNamesType) Values () (list []xsdt.Name) { var svals = xsdt.ListValues(string(me)); list = make([]xsdt.Name, len(svals)); for i, s := range svals { list[i] = xsdt.Name(s) }; return }

//	Since TlistOfNamesType is just a simple String type, this merely returns the current string value.
func (me TlistOfNamesType) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TlistOfNamesType's alias type xsdt.String.
func (me TlistOfNamesType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TlistOfNamesType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfNamesType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Layer_TlistOfNamesType_ struct {
//	The layer attribute indicates the names of the layers to which this node belongs.  For example,
//	a value of "foreground glowing" indicates that this node belongs to both the 'foreground' layer
//	and the 'glowing' layer.  The default value is empty, indicating that the node doesn't belong to
//	any layer.  Optional attribute.
	Layer TlistOfNamesType `xml:"http://www.collada.org/2008/03/COLLADASchema layer,attr"`

}

//	The node element may contain any number of matrix elements.
//	Matrix transformations embody mathematical changes to points within a coordinate systems or the
//	coordinate system itself. The matrix element contains a 4-by-4 matrix of floating-point values.
type Tfloat4X4Type TlistOfFloatsType

//	Since Tfloat4X4Type is just a simple String type, this merely returns the current string value.
func (me Tfloat4X4Type) String () string { return TlistOfFloatsType(me).String() }

//	Since Tfloat4X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat4X4Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tfloat4X4Type's alias type TlistOfFloatsType.
func (me Tfloat4X4Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type TmatrixType struct {
	XsdGoPkgValue Tfloat4X4Type `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TmatrixType function is not nil (ie. was set by outside code), calls it with this TmatrixType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TmatrixType instance.
func (me *TmatrixType) Walk ()  { 
	if fn := W.TmatrixType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_ struct {
//	The node element may contain any number of matrix elements.
	Matrixs []*TmatrixType `xml:"http://www.collada.org/2008/03/COLLADASchema matrix"`

}

//	If the W.XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_ instance.
func (me *XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_; fn != nil { fn(me) }
	for _, x := range me.Matrixs { x.Walk() }
 }

//	The node element may instance any number of geometry objects.
//	The instance_geometry element declares the instantiation of a COLLADA geometry resource.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
//	The technique_common element specifies the bind_material information for the common
//	profile which all COLLADA implementations need to support.
//	The instance_material element specifies the information needed to bind a geometry
//	to a material. This element must appear at least once.
//	The instance_material element declares the instantiation of a COLLADA material resource.
//	The target attribute specifies the URL of the location of the object to instantiate.
type XsdGoPkgHasAttr_Target_XsdtAnyURI_ struct {
//	The target attribute specifies the URL of the location of the object to instantiate.
	Target xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema target,attr"`

}

//	The symbol attribute specifies which symbol defined from within the geometry this material binds to.
type XsdGoPkgHasAttr_Symbol_XsdtNCName_ struct {
//	The symbol attribute specifies which symbol defined from within the geometry this material binds to.
	Symbol xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema symbol,attr"`

}

//	The bind_vertex_input element binds vertex inputs to effect parameters upon instantiation.
//	The input_set attribute specifies which input set to bind.
type TuintType xsdt.UnsignedLong

//	This convenience method just performs a simple type conversion to TuintType's alias type xsdt.UnsignedLong.
func (me TuintType) ToXsdtUnsignedLong () xsdt.UnsignedLong { return xsdt.UnsignedLong(me) }

//	Returns a string representation of this TuintType's current non-string scalar value.
func (me TuintType) String () string { return xsdt.UnsignedLong(me).String() }

//	Since TuintType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TuintType) SetFromString (s string)  { (*xsdt.UnsignedLong)(me).SetFromString(s) }

type XsdGoPkgHasAttr_InputSet_TuintType_ struct {
//	The input_set attribute specifies which input set to bind.
	InputSet TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema input_set,attr"`

}

//	The input_semantic attribute specifies which input semantic to bind.
type XsdGoPkgHasAttr_InputSemantic_XsdtNCName_ struct {
//	The input_semantic attribute specifies which input semantic to bind.
	InputSemantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema input_semantic,attr"`

}

//	The semantic attribute specifies which effect parameter to bind.
type XsdGoPkgHasAttr_Semantic_XsdtNCName_ struct {
//	The semantic attribute specifies which effect parameter to bind.
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic,attr"`

}

type TxsdInstanceMaterialTypeSequenceBindVertexInput struct {
//	The input_set attribute specifies which input set to bind.
	XsdGoPkgHasAttr_InputSet_TuintType_

//	The input_semantic attribute specifies which input semantic to bind.
	XsdGoPkgHasAttr_InputSemantic_XsdtNCName_

//	The semantic attribute specifies which effect parameter to bind.
	XsdGoPkgHasAttr_Semantic_XsdtNCName_

}

//	If the W.TxsdInstanceMaterialTypeSequenceBindVertexInput function is not nil (ie. was set by outside code), calls it with this TxsdInstanceMaterialTypeSequenceBindVertexInput instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdInstanceMaterialTypeSequenceBindVertexInput instance.
func (me *TxsdInstanceMaterialTypeSequenceBindVertexInput) Walk ()  { 
	if fn := W.TxsdInstanceMaterialTypeSequenceBindVertexInput; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_ struct {
//	The bind_vertex_input element binds vertex inputs to effect parameters upon instantiation.
	BindVertexInputs []*TxsdInstanceMaterialTypeSequenceBindVertexInput `xml:"http://www.collada.org/2008/03/COLLADASchema bind_vertex_input"`

}

//	If the W.XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_ instance.
func (me *XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_; fn != nil { fn(me) }
	for _, x := range me.BindVertexInputs { x.Walk() }
 }

//	The bind element binds values to effect parameters upon instantiation.
//	The target attribute indicates the location of the element bound to the output of the sampler.
//	This text string is a path-name following a simple syntax described in Address Syntax.
//	Required attribute.
type XsdGoPkgHasAttr_Target_XsdtToken_ struct {
//	The target attribute indicates the location of the element bound to the output of the sampler.
//	This text string is a path-name following a simple syntax described in Address Syntax.
//	Required attribute.
	Target xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema target,attr"`

}

type TxsdInstanceMaterialTypeSequenceBind struct {
//	The target attribute specifies the location of the value to bind to the specified semantic.
//	This text string is a path-name following a simple syntax described in the "Addressing Syntax"
//	section.
	XsdGoPkgHasAttr_Target_XsdtToken_

//	The semantic attribute specifies which effect parameter to bind.
	XsdGoPkgHasAttr_Semantic_XsdtNCName_

}

//	If the W.TxsdInstanceMaterialTypeSequenceBind function is not nil (ie. was set by outside code), calls it with this TxsdInstanceMaterialTypeSequenceBind instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdInstanceMaterialTypeSequenceBind instance.
func (me *TxsdInstanceMaterialTypeSequenceBind) Walk ()  { 
	if fn := W.TxsdInstanceMaterialTypeSequenceBind; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_ struct {
//	The bind element binds values to effect parameters upon instantiation.
	Binds []*TxsdInstanceMaterialTypeSequenceBind `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

//	If the W.XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_ instance.
func (me *XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_; fn != nil { fn(me) }
	for _, x := range me.Binds { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TinstanceMaterialType struct {
//	The target attribute specifies the URL of the location of the object to instantiate.
	XsdGoPkgHasAttr_Target_XsdtAnyURI_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The symbol attribute specifies which symbol defined from within the geometry this material binds to.
	XsdGoPkgHasAttr_Symbol_XsdtNCName_

//	The bind_vertex_input element binds vertex inputs to effect parameters upon instantiation.
	XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_

//	The bind element binds values to effect parameters upon instantiation.
	XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_

}

//	If the W.TinstanceMaterialType function is not nil (ie. was set by outside code), calls it with this TinstanceMaterialType instance as the single argument. Then calls the Walk() method on 3/7 embed(s) and 0/0 field(s) belonging to this TinstanceMaterialType instance.
func (me *TinstanceMaterialType) Walk ()  { 
	if fn := W.TinstanceMaterialType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_.Walk()
	me.XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_.Walk()
	me.XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_ struct {
//	The instance_material element specifies the information needed to bind a geometry
//	to a material. This element must appear at least once.
	MaterialInstances []*TinstanceMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_material"`

}

//	If the W.XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_ instance.
func (me *XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_; fn != nil { fn(me) }
	for _, x := range me.MaterialInstances { x.Walk() }
 }

type TxsdBindMaterialTypeSequenceTechniqueCommon struct {
//	The instance_material element specifies the information needed to bind a geometry
//	to a material. This element must appear at least once.
	XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_

}

//	If the W.TxsdBindMaterialTypeSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdBindMaterialTypeSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdBindMaterialTypeSequenceTechniqueCommon instance.
func (me *TxsdBindMaterialTypeSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdBindMaterialTypeSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the bind_material information for the common
//	profile which all COLLADA implementations need to support.
	TechniqueCommon *TxsdBindMaterialTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The bind_material element may contain any number of param elements.
//	The param element declares parametric information regarding its parent element.
//	The semantic attribute is the user-defined meaning of the input connection. Required attribute.
type XsdGoPkgHasAttr_Semantic_XsdtNmtoken_ struct {
//	The semantic attribute is the user-defined meaning of the input connection. Required attribute.
	Semantic xsdt.Nmtoken `xml:"http://www.collada.org/2008/03/COLLADASchema semantic,attr"`

}

type TparamType struct {
	XsdGoPkgValue xsdt.String `xml:",chardata"`

//	The type attribute indicates the type of the value data. This text string must be understood
//	by the application. Required attribute.
	XsdGoPkgHasAttr_Type_XsdtNmtoken_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The semantic attribute is the user-defined meaning of the parameter. Optional attribute.
	XsdGoPkgHasAttr_Semantic_XsdtNmtoken_

}

//	If the W.TparamType function is not nil (ie. was set by outside code), calls it with this TparamType instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/1 field(s) belonging to this TparamType instance.
func (me *TparamType) Walk ()  { 
	if fn := W.TparamType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_ struct {
//	The bind_material element may contain any number of param elements.
	Params []*TparamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_ instance.
func (me *XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_; fn != nil { fn(me) }
	for _, x := range me.Params { x.Walk() }
 }

type TbindMaterialType struct {
//	The technique_common element specifies the bind_material information for the common
//	profile which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_

//	The bind_material element may contain any number of param elements.
	XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_

}

//	If the W.TbindMaterialType function is not nil (ie. was set by outside code), calls it with this TbindMaterialType instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TbindMaterialType instance.
func (me *TbindMaterialType) Walk ()  { 
	if fn := W.TbindMaterialType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_.Walk()
 }

type XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_ struct {
//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
	BindMaterial *TbindMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema bind_material"`

}

//	If the W.XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_ instance.
func (me *XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_; fn != nil { fn(me) }
	me.BindMaterial.Walk()
 }

type TinstanceGeometryType struct {
//	The url attribute refers to resource.  This may refer to a local resource using a relative URL
//	fragment identifier that begins with the "#" character. The url attribute may refer to an external
//	resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
	XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TinstanceGeometryType function is not nil (ie. was set by outside code), calls it with this TinstanceGeometryType instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TinstanceGeometryType instance.
func (me *TinstanceGeometryType) Walk ()  { 
	if fn := W.TinstanceGeometryType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_ struct {
//	The node element may instance any number of geometry objects.
	GeometryInstances []*TinstanceGeometryType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_geometry"`

}

//	If the W.XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_ instance.
func (me *XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_; fn != nil { fn(me) }
	for _, x := range me.GeometryInstances { x.Walk() }
 }

//	The node element may contain any number of rotate elements.
//	The rotate element contains an angle and a mathematical vector that represents the axis of rotation.
type Tfloat4Type TlistOfFloatsType

//	Since Tfloat4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat4Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tfloat4Type's alias type TlistOfFloatsType.
func (me Tfloat4Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat4Type is just a simple String type, this merely returns the current string value.
func (me Tfloat4Type) String () string { return TlistOfFloatsType(me).String() }

type TtargetableFloat4Type struct {
	XsdGoPkgValue Tfloat4Type `xml:",chardata"`

	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TtargetableFloat4Type function is not nil (ie. was set by outside code), calls it with this TtargetableFloat4Type instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TtargetableFloat4Type instance.
func (me *TtargetableFloat4Type) Walk ()  { 
	if fn := W.TtargetableFloat4Type; fn != nil { fn(me) }
 }

type TrotateType struct {
	XsdGoPkgValue TtargetableFloat4Type `xml:",chardata"`

}

//	If the W.TrotateType function is not nil (ie. was set by outside code), calls it with this TrotateType instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this TrotateType instance.
func (me *TrotateType) Walk ()  { 
	if fn := W.TrotateType; fn != nil { fn(me) }
	me.XsdGoPkgValue.Walk()
 }

type XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_ struct {
//	The node element may contain any number of rotate elements.
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

//	The node element may contain any number of lookat elements.
//	The lookat element contains a position and orientation transformation suitable for aiming a camera.
//	The lookat element contains three mathematical vectors within it that describe:
//	1.	The position of the object;
//	2.	The position of the interest point;
//	3.	The direction that points up.
type Tfloat3X3Type TlistOfFloatsType

//	This convenience method just performs a simple type conversion to Tfloat3X3Type's alias type TlistOfFloatsType.
func (me Tfloat3X3Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat3X3Type is just a simple String type, this merely returns the current string value.
func (me Tfloat3X3Type) String () string { return TlistOfFloatsType(me).String() }

//	Since Tfloat3X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat3X3Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type TlookatType struct {
	XsdGoPkgValue Tfloat3X3Type `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TlookatType function is not nil (ie. was set by outside code), calls it with this TlookatType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TlookatType instance.
func (me *TlookatType) Walk ()  { 
	if fn := W.TlookatType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_ struct {
//	The node element may contain any number of lookat elements.
	Lookats []*TlookatType `xml:"http://www.collada.org/2008/03/COLLADASchema lookat"`

}

//	If the W.XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_ instance.
func (me *XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_; fn != nil { fn(me) }
	for _, x := range me.Lookats { x.Walk() }
 }

//	The node element may contain an asset element.
type XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_ struct {
//	The node element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The node element may be hierarchical and be the parent of any number of other node elements.
type XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_ struct {
//	The node element may be hierarchical and be the parent of any number of other node elements.
	Nodes []*TnodeType `xml:"http://www.collada.org/2008/03/COLLADASchema node"`

}

//	If the W.XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_ instance.
func (me *XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_; fn != nil { fn(me) }
 }

//	The type attribute indicates the type of the node element. The default value is "NODE".
//	Optional attribute.
//	An enumerated type specifying the acceptable node types.
type TnodeEnum xsdt.String

//	Since TnodeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TnodeEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TnodeEnum is "JOINT".
func (me TnodeEnum) IsJoint () bool { return me == "JOINT" }

//	Returns true if the value of this enumerated TnodeEnum is "NODE".
func (me TnodeEnum) IsNode () bool { return me == "NODE" }

//	Since TnodeEnum is just a simple String type, this merely returns the current string value.
func (me TnodeEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TnodeEnum's alias type xsdt.String.
func (me TnodeEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasAttr_Type_TnodeEnum_Node struct {
//	The type attribute indicates the type of the node element. The default value is "NODE".
//	Optional attribute.
	Type TnodeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema type,attr"`

}

//	Returns the default value for Type -- "NODE"
func (me XsdGoPkgHasAttr_Type_TnodeEnum_Node) TypeDefault () TnodeEnum { return TnodeEnum("NODE") }

//	The node element may contain any number of scale elements.
//	The scale element contains a mathematical vector that represents the relative proportions of the
//	X, Y and Z axes of a coordinated system.
type TscaleType struct {
	XsdGoPkgValue TtargetableFloat3Type `xml:",chardata"`

}

//	If the W.TscaleType function is not nil (ie. was set by outside code), calls it with this TscaleType instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this TscaleType instance.
func (me *TscaleType) Walk ()  { 
	if fn := W.TscaleType; fn != nil { fn(me) }
	me.XsdGoPkgValue.Walk()
 }

type XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_ struct {
//	The node element may contain any number of scale elements.
	Scales []*TscaleType `xml:"http://www.collada.org/2008/03/COLLADASchema scale"`

}

//	If the W.XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_ instance.
func (me *XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_; fn != nil { fn(me) }
	for _, x := range me.Scales { x.Walk() }
 }

//	The node element may instance any number of light objects.
//	The instance_light element declares the instantiation of a COLLADA light resource.
type TinstanceLightType struct {
	TinstanceWithExtraType

}

//	If the W.TinstanceLightType function is not nil (ie. was set by outside code), calls it with this TinstanceLightType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TinstanceLightType instance.
func (me *TinstanceLightType) Walk ()  { 
	if fn := W.TinstanceLightType; fn != nil { fn(me) }
	me.TinstanceWithExtraType.Walk()
 }

type XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_ struct {
//	The node element may instance any number of light objects.
	LightInstances []*TinstanceLightType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_light"`

}

//	If the W.XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_ instance.
func (me *XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_; fn != nil { fn(me) }
	for _, x := range me.LightInstances { x.Walk() }
 }

//	The node element may instance any number of controller objects.
//	The instance_controller element declares the instantiation of a COLLADA controller resource.
//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
type XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_ struct {
//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
	BindMaterial *TbindMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema bind_material"`

}

//	If the W.XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_ instance.
func (me *XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_; fn != nil { fn(me) }
	me.BindMaterial.Walk()
 }

//	The skeleton element is used to indicate where a skin controller is to start to search for
//	the joint nodes it needs.  This element is meaningless for morph controllers.
type XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_ struct {
//	The skeleton element is used to indicate where a skin controller is to start to search for
//	the joint nodes it needs.  This element is meaningless for morph controllers.
	Skeletons []xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema skeleton"`

}

//	If the W.XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_ instance.
func (me *XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_; fn != nil { fn(me) }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TinstanceControllerType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The url attribute refers to resource. This may refer to a local resource using a relative
//	URL fragment identifier that begins with the "#" character. The url attribute may refer to an
//	external resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
	XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_

//	The skeleton element is used to indicate where a skin controller is to start to search for
//	the joint nodes it needs.  This element is meaningless for morph controllers.
	XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_

}

//	If the W.TinstanceControllerType function is not nil (ie. was set by outside code), calls it with this TinstanceControllerType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TinstanceControllerType instance.
func (me *TinstanceControllerType) Walk ()  { 
	if fn := W.TinstanceControllerType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_.Walk()
	me.XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_.Walk()
 }

type XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_ struct {
//	The node element may instance any number of controller objects.
	ControllerInstances []*TinstanceControllerType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_controller"`

}

//	If the W.XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_ instance.
func (me *XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_; fn != nil { fn(me) }
	for _, x := range me.ControllerInstances { x.Walk() }
 }

type TnodeType struct {
//	The node element may contain an asset element.
	XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_

//	The node element may be hierarchical and be the parent of any number of other node elements.
	XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_

//	The type attribute indicates the type of the node element. The default value is "NODE".
//	Optional attribute.
	XsdGoPkgHasAttr_Type_TnodeEnum_Node

//	The node element may contain any number of scale elements.
	XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_

//	The node element may instance any number of light objects.
	XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_

//	The node element may instance any number of controller objects.
	XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_

//	The node element may contain any number of skew elements.
	XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The node element may instance any number of camera objects.
	XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The node element may instance any number of node elements or hierarchies objects.
	XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_

//	The node element may contain any number of translate elements.
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

//	The layer attribute indicates the names of the layers to which this node belongs.  For example,
//	a value of "foreground glowing" indicates that this node belongs to both the 'foreground' layer
//	and the 'glowing' layer.  The default value is empty, indicating that the node doesn't belong to
//	any layer.  Optional attribute.
	XsdGoPkgHasAttr_Layer_TlistOfNamesType_

//	The node element may contain any number of matrix elements.
	XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_

//	The node element may instance any number of geometry objects.
	XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_

//	The node element may contain any number of rotate elements.
	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

//	The node element may contain any number of lookat elements.
	XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_

}

//	If the W.TnodeType function is not nil (ie. was set by outside code), calls it with this TnodeType instance as the single argument. Then calls the Walk() method on 14/19 embed(s) and 0/0 field(s) belonging to this TnodeType instance.
func (me *TnodeType) Walk ()  { 
	if fn := W.TnodeType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_.Walk()
	me.XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_.Walk()
	me.XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_.Walk()
	me.XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_.Walk()
	me.XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_.Walk()
	me.XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_.Walk()
	me.XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_.Walk()
	me.XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_.Walk()
	me.XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_.Walk()
	me.XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_.Walk()
	me.XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_.Walk()
 }

type XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_ struct {
//	There must be at least one node element.
	Nodes []*TnodeType `xml:"http://www.collada.org/2008/03/COLLADASchema node"`

}

//	If the W.XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_ instance.
func (me *XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_; fn != nil { fn(me) }
	for _, x := range me.Nodes { x.Walk() }
 }

type TlibraryNodesType struct {
//	The library_nodes element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_

//	There must be at least one node element.
	XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_

}

//	If the W.TlibraryNodesType function is not nil (ie. was set by outside code), calls it with this TlibraryNodesType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryNodesType instance.
func (me *TlibraryNodesType) Walk ()  { 
	if fn := W.TlibraryNodesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_ struct {
//	The COLLADA element may contain any
//	number of library_nodes elements.
	NodesLibraries []*TlibraryNodesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_nodes"`

}

//	If the W.XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_ instance.
func (me *XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_; fn != nil { fn(me) }
	for _, x := range me.NodesLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_effects elements.
//	The library_effects element declares a module of effect elements.
//	The library_effects element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_ struct {
//	The library_effects element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one effect element.
//	A self contained description of a shader effect.
//	A group that  specifies the allowable COLLADA FX profiles.
//	Opens a block of GLES platform-specific data types and technique declarations.
//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
type XsdGoPkgHasAttr_Platform_XsdtNCName_Pc struct {
//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	Platform xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema platform,attr"`

}

//	Returns the default value for Platform -- "PC"
func (me XsdGoPkgHasAttr_Platform_XsdtNCName_Pc) PlatformDefault () xsdt.NCName { return xsdt.NCName("PC") }

//	Create a new, named param object in the GLES Runtime, assign it a type, an initial value, and additional attributes at declaration time.
//	The semantic element allows you to specify a semantic for this new param.
type XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_ struct {
//	The semantic element allows you to specify a semantic for this new param.
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

//	If the W.XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_; fn != nil { fn(me) }
 }

//	A group that defines the available variable types for GLES parameters.
type TglShadeModelEnum xsdt.String

//	Since TglShadeModelEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglShadeModelEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglShadeModelEnum is "FLAT".
func (me TglShadeModelEnum) IsFlat () bool { return me == "FLAT" }

//	Returns true if the value of this enumerated TglShadeModelEnum is "SMOOTH".
func (me TglShadeModelEnum) IsSmooth () bool { return me == "SMOOTH" }

//	Since TglShadeModelEnum is just a simple String type, this merely returns the current string value.
func (me TglShadeModelEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TglShadeModelEnum's alias type xsdt.String.
func (me TglShadeModelEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type TglMaterialEnum xsdt.String

//	Since TglMaterialEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglMaterialEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglMaterialEnum is "EMISSION".
func (me TglMaterialEnum) IsEmission () bool { return me == "EMISSION" }

//	Returns true if the value of this enumerated TglMaterialEnum is "SPECULAR".
func (me TglMaterialEnum) IsSpecular () bool { return me == "SPECULAR" }

//	Returns true if the value of this enumerated TglMaterialEnum is "AMBIENT_AND_DIFFUSE".
func (me TglMaterialEnum) IsAmbientAndDiffuse () bool { return me == "AMBIENT_AND_DIFFUSE" }

//	This convenience method just performs a simple type conversion to TglMaterialEnum's alias type xsdt.String.
func (me TglMaterialEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TglMaterialEnum is just a simple String type, this merely returns the current string value.
func (me TglMaterialEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglMaterialEnum is "DIFFUSE".
func (me TglMaterialEnum) IsDiffuse () bool { return me == "DIFFUSE" }

//	Returns true if the value of this enumerated TglMaterialEnum is "AMBIENT".
func (me TglMaterialEnum) IsAmbient () bool { return me == "AMBIENT" }

type TglFogEnum xsdt.String

//	Returns true if the value of this enumerated TglFogEnum is "EXP2".
func (me TglFogEnum) IsExp2 () bool { return me == "EXP2" }

//	Returns true if the value of this enumerated TglFogEnum is "LINEAR".
func (me TglFogEnum) IsLinear () bool { return me == "LINEAR" }

//	Since TglFogEnum is just a simple String type, this merely returns the current string value.
func (me TglFogEnum) String () string { return xsdt.String(me).String() }

//	Since TglFogEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFogEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglFogEnum is "EXP".
func (me TglFogEnum) IsExp () bool { return me == "EXP" }

//	This convenience method just performs a simple type conversion to TglFogEnum's alias type xsdt.String.
func (me TglFogEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type TglLogicOpEnum xsdt.String

//	Returns true if the value of this enumerated TglLogicOpEnum is "OR".
func (me TglLogicOpEnum) IsOr () bool { return me == "OR" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "AND_REVERSE".
func (me TglLogicOpEnum) IsAndReverse () bool { return me == "AND_REVERSE" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "SET".
func (me TglLogicOpEnum) IsSet () bool { return me == "SET" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "CLEAR".
func (me TglLogicOpEnum) IsClear () bool { return me == "CLEAR" }

//	Since TglLogicOpEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglLogicOpEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglLogicOpEnum is "COPY_INVERTED".
func (me TglLogicOpEnum) IsCopyInverted () bool { return me == "COPY_INVERTED" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "NOR".
func (me TglLogicOpEnum) IsNor () bool { return me == "NOR" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "XOR".
func (me TglLogicOpEnum) IsXor () bool { return me == "XOR" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "AND".
func (me TglLogicOpEnum) IsAnd () bool { return me == "AND" }

//	Since TglLogicOpEnum is just a simple String type, this merely returns the current string value.
func (me TglLogicOpEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglLogicOpEnum is "NAND".
func (me TglLogicOpEnum) IsNand () bool { return me == "NAND" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "EQUIV".
func (me TglLogicOpEnum) IsEquiv () bool { return me == "EQUIV" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "INVERT".
func (me TglLogicOpEnum) IsInvert () bool { return me == "INVERT" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "OR_REVERSE".
func (me TglLogicOpEnum) IsOrReverse () bool { return me == "OR_REVERSE" }

//	This convenience method just performs a simple type conversion to TglLogicOpEnum's alias type xsdt.String.
func (me TglLogicOpEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglLogicOpEnum is "NOOP".
func (me TglLogicOpEnum) IsNoop () bool { return me == "NOOP" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "COPY".
func (me TglLogicOpEnum) IsCopy () bool { return me == "COPY" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "AND_INVERTED".
func (me TglLogicOpEnum) IsAndInverted () bool { return me == "AND_INVERTED" }

type TglFuncEnum xsdt.String

//	Returns true if the value of this enumerated TglFuncEnum is "ALWAYS".
func (me TglFuncEnum) IsAlways () bool { return me == "ALWAYS" }

//	Since TglFuncEnum is just a simple String type, this merely returns the current string value.
func (me TglFuncEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglFuncEnum is "LEQUAL".
func (me TglFuncEnum) IsLequal () bool { return me == "LEQUAL" }

//	Returns true if the value of this enumerated TglFuncEnum is "NOTEQUAL".
func (me TglFuncEnum) IsNotequal () bool { return me == "NOTEQUAL" }

//	Returns true if the value of this enumerated TglFuncEnum is "NEVER".
func (me TglFuncEnum) IsNever () bool { return me == "NEVER" }

//	Since TglFuncEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFuncEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglFuncEnum is "EQUAL".
func (me TglFuncEnum) IsEqual () bool { return me == "EQUAL" }

//	This convenience method just performs a simple type conversion to TglFuncEnum's alias type xsdt.String.
func (me TglFuncEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglFuncEnum is "LESS".
func (me TglFuncEnum) IsLess () bool { return me == "LESS" }

//	Returns true if the value of this enumerated TglFuncEnum is "GREATER".
func (me TglFuncEnum) IsGreater () bool { return me == "GREATER" }

//	Returns true if the value of this enumerated TglFuncEnum is "GEQUAL".
func (me TglFuncEnum) IsGequal () bool { return me == "GEQUAL" }

type TglLightModelColorControlEnum xsdt.String

//	Returns true if the value of this enumerated TglLightModelColorControlEnum is "SEPARATE_SPECULAR_COLOR".
func (me TglLightModelColorControlEnum) IsSeparateSpecularColor () bool { return me == "SEPARATE_SPECULAR_COLOR" }

//	Since TglLightModelColorControlEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglLightModelColorControlEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglLightModelColorControlEnum is "SINGLE_COLOR".
func (me TglLightModelColorControlEnum) IsSingleColor () bool { return me == "SINGLE_COLOR" }

//	This convenience method just performs a simple type conversion to TglLightModelColorControlEnum's alias type xsdt.String.
func (me TglLightModelColorControlEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TglLightModelColorControlEnum is just a simple String type, this merely returns the current string value.
func (me TglLightModelColorControlEnum) String () string { return xsdt.String(me).String() }

type TglBlendEnum xsdt.String

//	Returns true if the value of this enumerated TglBlendEnum is "ZERO".
func (me TglBlendEnum) IsZero () bool { return me == "ZERO" }

//	Returns true if the value of this enumerated TglBlendEnum is "DST_ALPHA".
func (me TglBlendEnum) IsDstAlpha () bool { return me == "DST_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_SRC_COLOR".
func (me TglBlendEnum) IsOneMinusSrcColor () bool { return me == "ONE_MINUS_SRC_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_CONSTANT_COLOR".
func (me TglBlendEnum) IsOneMinusConstantColor () bool { return me == "ONE_MINUS_CONSTANT_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "SRC_COLOR".
func (me TglBlendEnum) IsSrcColor () bool { return me == "SRC_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_CONSTANT_ALPHA".
func (me TglBlendEnum) IsOneMinusConstantAlpha () bool { return me == "ONE_MINUS_CONSTANT_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "CONSTANT_COLOR".
func (me TglBlendEnum) IsConstantColor () bool { return me == "CONSTANT_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "DEST_COLOR".
func (me TglBlendEnum) IsDestColor () bool { return me == "DEST_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_SRC_ALPHA".
func (me TglBlendEnum) IsOneMinusSrcAlpha () bool { return me == "ONE_MINUS_SRC_ALPHA" }

//	Since TglBlendEnum is just a simple String type, this merely returns the current string value.
func (me TglBlendEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_DEST_COLOR".
func (me TglBlendEnum) IsOneMinusDestColor () bool { return me == "ONE_MINUS_DEST_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_DST_ALPHA".
func (me TglBlendEnum) IsOneMinusDstAlpha () bool { return me == "ONE_MINUS_DST_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE".
func (me TglBlendEnum) IsOne () bool { return me == "ONE" }

//	Returns true if the value of this enumerated TglBlendEnum is "SRC_ALPHA_SATURATE".
func (me TglBlendEnum) IsSrcAlphaSaturate () bool { return me == "SRC_ALPHA_SATURATE" }

//	Since TglBlendEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglBlendEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglBlendEnum is "CONSTANT_ALPHA".
func (me TglBlendEnum) IsConstantAlpha () bool { return me == "CONSTANT_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "SRC_ALPHA".
func (me TglBlendEnum) IsSrcAlpha () bool { return me == "SRC_ALPHA" }

//	This convenience method just performs a simple type conversion to TglBlendEnum's alias type xsdt.String.
func (me TglBlendEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type TglFrontFaceEnum xsdt.String

//	Since TglFrontFaceEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFrontFaceEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglFrontFaceEnum is "CCW".
func (me TglFrontFaceEnum) IsCcw () bool { return me == "CCW" }

//	This convenience method just performs a simple type conversion to TglFrontFaceEnum's alias type xsdt.String.
func (me TglFrontFaceEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TglFrontFaceEnum is just a simple String type, this merely returns the current string value.
func (me TglFrontFaceEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglFrontFaceEnum is "CW".
func (me TglFrontFaceEnum) IsCw () bool { return me == "CW" }

type TglFaceEnum xsdt.String

//	Returns true if the value of this enumerated TglFaceEnum is "FRONT".
func (me TglFaceEnum) IsFront () bool { return me == "FRONT" }

//	Since TglFaceEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFaceEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglFaceEnum is "BACK".
func (me TglFaceEnum) IsBack () bool { return me == "BACK" }

//	Returns true if the value of this enumerated TglFaceEnum is "FRONT_AND_BACK".
func (me TglFaceEnum) IsFrontAndBack () bool { return me == "FRONT_AND_BACK" }

//	Since TglFaceEnum is just a simple String type, this merely returns the current string value.
func (me TglFaceEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TglFaceEnum's alias type xsdt.String.
func (me TglFaceEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type TglPolygonModeEnum xsdt.String

//	Returns true if the value of this enumerated TglPolygonModeEnum is "FILL".
func (me TglPolygonModeEnum) IsFill () bool { return me == "FILL" }

//	Returns true if the value of this enumerated TglPolygonModeEnum is "LINE".
func (me TglPolygonModeEnum) IsLine () bool { return me == "LINE" }

//	Returns true if the value of this enumerated TglPolygonModeEnum is "POINT".
func (me TglPolygonModeEnum) IsPoint () bool { return me == "POINT" }

//	Since TglPolygonModeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglPolygonModeEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglPolygonModeEnum's alias type xsdt.String.
func (me TglPolygonModeEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TglPolygonModeEnum is just a simple String type, this merely returns the current string value.
func (me TglPolygonModeEnum) String () string { return xsdt.String(me).String() }

type TglStencilOpEnum xsdt.String

//	Returns true if the value of this enumerated TglStencilOpEnum is "INCR_WRAP".
func (me TglStencilOpEnum) IsIncrWrap () bool { return me == "INCR_WRAP" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "ZERO".
func (me TglStencilOpEnum) IsZero () bool { return me == "ZERO" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "INCR".
func (me TglStencilOpEnum) IsIncr () bool { return me == "INCR" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "REPLACE".
func (me TglStencilOpEnum) IsReplace () bool { return me == "REPLACE" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "KEEP".
func (me TglStencilOpEnum) IsKeep () bool { return me == "KEEP" }

//	This convenience method just performs a simple type conversion to TglStencilOpEnum's alias type xsdt.String.
func (me TglStencilOpEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglStencilOpEnum is "DECR_WRAP".
func (me TglStencilOpEnum) IsDecrWrap () bool { return me == "DECR_WRAP" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "INVERT".
func (me TglStencilOpEnum) IsInvert () bool { return me == "INVERT" }

//	Since TglStencilOpEnum is just a simple String type, this merely returns the current string value.
func (me TglStencilOpEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglStencilOpEnum is "DECR".
func (me TglStencilOpEnum) IsDecr () bool { return me == "DECR" }

//	Since TglStencilOpEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglStencilOpEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type TglesEnumerationType xsdt.String

//	This convenience method just performs a simple type conversion to TglesEnumerationType's alias type xsdt.String.
func (me TglesEnumerationType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglStencilOpEnum, but keep in mind the actual value may or may not be a valid TglStencilOpEnum value.
func (me TglesEnumerationType) ToTglStencilOpEnum () TglStencilOpEnum { return TglStencilOpEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglShadeModelEnum, but keep in mind the actual value may or may not be a valid TglShadeModelEnum value.
func (me TglesEnumerationType) ToTglShadeModelEnum () TglShadeModelEnum { return TglShadeModelEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglMaterialEnum, but keep in mind the actual value may or may not be a valid TglMaterialEnum value.
func (me TglesEnumerationType) ToTglMaterialEnum () TglMaterialEnum { return TglMaterialEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFogEnum, but keep in mind the actual value may or may not be a valid TglFogEnum value.
func (me TglesEnumerationType) ToTglFogEnum () TglFogEnum { return TglFogEnum(me) }

//	Since TglesEnumerationType is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesEnumerationType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglLogicOpEnum, but keep in mind the actual value may or may not be a valid TglLogicOpEnum value.
func (me TglesEnumerationType) ToTglLogicOpEnum () TglLogicOpEnum { return TglLogicOpEnum(me) }

//	Since TglesEnumerationType is just a simple String type, this merely returns the current string value.
func (me TglesEnumerationType) String () string { return xsdt.String(me).String() }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFuncEnum, but keep in mind the actual value may or may not be a valid TglFuncEnum value.
func (me TglesEnumerationType) ToTglFuncEnum () TglFuncEnum { return TglFuncEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglLightModelColorControlEnum, but keep in mind the actual value may or may not be a valid TglLightModelColorControlEnum value.
func (me TglesEnumerationType) ToTglLightModelColorControlEnum () TglLightModelColorControlEnum { return TglLightModelColorControlEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglBlendEnum, but keep in mind the actual value may or may not be a valid TglBlendEnum value.
func (me TglesEnumerationType) ToTglBlendEnum () TglBlendEnum { return TglBlendEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFrontFaceEnum, but keep in mind the actual value may or may not be a valid TglFrontFaceEnum value.
func (me TglesEnumerationType) ToTglFrontFaceEnum () TglFrontFaceEnum { return TglFrontFaceEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFaceEnum, but keep in mind the actual value may or may not be a valid TglFaceEnum value.
func (me TglesEnumerationType) ToTglFaceEnum () TglFaceEnum { return TglFaceEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglPolygonModeEnum, but keep in mind the actual value may or may not be a valid TglPolygonModeEnum value.
func (me TglesEnumerationType) ToTglPolygonModeEnum () TglPolygonModeEnum { return TglPolygonModeEnum(me) }

type XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_ struct {
	Enum TglesEnumerationType `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

//	If the W.XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_ instance.
func (me *XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_ struct {
	Float4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x4"`

}

//	If the W.XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type TlistOfBoolsType xsdt.String

//	TlistOfBoolsType defines a String containing a whitespace-separated list of xsdt.Boolean values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfBoolsType) Values () (list []xsdt.Boolean) { var btv = new(xsdt.Boolean); var svals = xsdt.ListValues(string(me)); list = make([]xsdt.Boolean, len(svals)); for i, s := range svals { btv.SetFromString(s); list[i] = *btv }; return }

//	This convenience method just performs a simple type conversion to TlistOfBoolsType's alias type xsdt.String.
func (me TlistOfBoolsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TlistOfBoolsType is just a simple String type, this merely returns the current string value.
func (me TlistOfBoolsType) String () string { return xsdt.String(me).String() }

//	Since TlistOfBoolsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfBoolsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type Tbool2Type TlistOfBoolsType

//	Since Tbool2Type is just a simple String type, this merely returns the current string value.
func (me Tbool2Type) String () string { return TlistOfBoolsType(me).String() }

//	Since Tbool2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool2Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool2Type's alias type TlistOfBoolsType.
func (me Tbool2Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

type XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_ struct {
	Bool2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2"`

}

//	If the W.XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_ instance.
func (me *XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_; fn != nil { fn(me) }
 }

type TintType xsdt.Long

//	Since TintType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TintType) SetFromString (s string)  { (*xsdt.Long)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TintType's alias type xsdt.Long.
func (me TintType) ToXsdtLong () xsdt.Long { return xsdt.Long(me) }

//	Returns a string representation of this TintType's current non-string scalar value.
func (me TintType) String () string { return xsdt.Long(me).String() }

type TlistOfIntsType xsdt.String

//	Since TlistOfIntsType is just a simple String type, this merely returns the current string value.
func (me TlistOfIntsType) String () string { return xsdt.String(me).String() }

//	TlistOfIntsType defines a String containing a whitespace-separated list of TintType values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfIntsType) Values () (list []TintType) { var btv = new(TintType); var svals = xsdt.ListValues(string(me)); list = make([]TintType, len(svals)); for i, s := range svals { btv.SetFromString(s); list[i] = *btv }; return }

//	Since TlistOfIntsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfIntsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TlistOfIntsType's alias type xsdt.String.
func (me TlistOfIntsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

type Tint2Type TlistOfIntsType

//	Since Tint2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint2Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint2Type is just a simple String type, this merely returns the current string value.
func (me Tint2Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint2Type's alias type TlistOfIntsType.
func (me Tint2Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

type XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_ struct {
	Int2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2"`

}

//	If the W.XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_ instance.
func (me *XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_; fn != nil { fn(me) }
 }

type Tfloat2X3Type TlistOfFloatsType

//	Since Tfloat2X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat2X3Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tfloat2X3Type's alias type TlistOfFloatsType.
func (me Tfloat2X3Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat2X3Type is just a simple String type, this merely returns the current string value.
func (me Tfloat2X3Type) String () string { return TlistOfFloatsType(me).String() }

type XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_ struct {
	Float2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x3"`

}

//	If the W.XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_ instance.
func (me *XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type Tfloat2Type TlistOfFloatsType

//	Since Tfloat2Type is just a simple String type, this merely returns the current string value.
func (me Tfloat2Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat2Type's alias type TlistOfFloatsType.
func (me Tfloat2Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat2Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_ struct {
	Float1X2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float1x2"`

}

//	If the W.XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_; fn != nil { fn(me) }
 }

type Tint3Type TlistOfIntsType

//	This convenience method just performs a simple type conversion to Tint3Type's alias type TlistOfIntsType.
func (me Tint3Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint3Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint3Type is just a simple String type, this merely returns the current string value.
func (me Tint3Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_ struct {
	Int3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3"`

}

//	If the W.XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_ instance.
func (me *XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_; fn != nil { fn(me) }
 }

type Tfloat4X3Type TlistOfFloatsType

//	Since Tfloat4X3Type is just a simple String type, this merely returns the current string value.
func (me Tfloat4X3Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat4X3Type's alias type TlistOfFloatsType.
func (me Tfloat4X3Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat4X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat4X3Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_ struct {
	Float4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x3"`

}

//	If the W.XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_ instance.
func (me *XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_ struct {
	Float3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3"`

}

//	If the W.XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_ struct {
	Float1X4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float1x4"`

}

//	If the W.XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type Tint4Type TlistOfIntsType

//	Since Tint4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint4Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint4Type is just a simple String type, this merely returns the current string value.
func (me Tint4Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint4Type's alias type TlistOfIntsType.
func (me Tint4Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

type XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_ struct {
	Int4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4"`

}

//	If the W.XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_ instance.
func (me *XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_ struct {
	Float2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x1"`

}

//	If the W.XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_ struct {
	Float3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x1"`

}

//	If the W.XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_ struct {
	Float4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x1"`

}

//	If the W.XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

//	If the W.XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_; fn != nil { fn(me) }
 }

//	Sampling state that can be sharable between samplers because there is often heavy re-use
type TinstanceImageType struct {
	TinstanceWithExtraType

}

//	If the W.TinstanceImageType function is not nil (ie. was set by outside code), calls it with this TinstanceImageType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TinstanceImageType instance.
func (me *TinstanceImageType) Walk ()  { 
	if fn := W.TinstanceImageType; fn != nil { fn(me) }
	me.TinstanceWithExtraType.Walk()
 }

type XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_ struct {
	InstanceImage *TinstanceImageType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_image"`

}

//	If the W.XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_ instance.
func (me *XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_; fn != nil { fn(me) }
	me.InstanceImage.Walk()
 }

type XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255 struct {
	MipMaxLevel xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema mip_max_level"`

}

//	If the W.XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255 instance.
func (me *XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255; fn != nil { fn(me) }
 }

//	Returns the default value for MipMaxLevel -- 255
func (me XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255) MipMaxLevelDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(255) }

type TfxSamplerMagFilterEnum xsdt.Nmtoken

//	Since TfxSamplerMagFilterEnum is just a simple String type, this merely returns the current string value.
func (me TfxSamplerMagFilterEnum) String () string { return xsdt.Nmtoken(me).String() }

//	Since TfxSamplerMagFilterEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxSamplerMagFilterEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxSamplerMagFilterEnum is "LINEAR".
func (me TfxSamplerMagFilterEnum) IsLinear () bool { return me == "LINEAR" }

//	Returns true if the value of this enumerated TfxSamplerMagFilterEnum is "NEAREST".
func (me TfxSamplerMagFilterEnum) IsNearest () bool { return me == "NEAREST" }

//	This convenience method just performs a simple type conversion to TfxSamplerMagFilterEnum's alias type xsdt.Nmtoken.
func (me TfxSamplerMagFilterEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

type XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear struct {
	Magfilter TfxSamplerMagFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema magfilter"`

}

//	Returns the default value for Magfilter -- "LINEAR"
func (me XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear) MagfilterDefault () TfxSamplerMagFilterEnum { return TfxSamplerMagFilterEnum("LINEAR") }

//	If the W.XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear instance.
func (me *XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear; fn != nil { fn(me) }
 }

type TglesSamplerWrapEnum xsdt.Nmtoken

//	Returns true if the value of this enumerated TglesSamplerWrapEnum is "CLAMP".
func (me TglesSamplerWrapEnum) IsClamp () bool { return me == "CLAMP" }

//	Returns true if the value of this enumerated TglesSamplerWrapEnum is "MIRRORED_REPEAT".
func (me TglesSamplerWrapEnum) IsMirroredRepeat () bool { return me == "MIRRORED_REPEAT" }

//	Returns true if the value of this enumerated TglesSamplerWrapEnum is "REPEAT".
func (me TglesSamplerWrapEnum) IsRepeat () bool { return me == "REPEAT" }

//	Since TglesSamplerWrapEnum is just a simple String type, this merely returns the current string value.
func (me TglesSamplerWrapEnum) String () string { return xsdt.Nmtoken(me).String() }

//	This convenience method just performs a simple type conversion to TglesSamplerWrapEnum's alias type xsdt.Nmtoken.
func (me TglesSamplerWrapEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Returns true if the value of this enumerated TglesSamplerWrapEnum is "CLAMP_TO_EDGE".
func (me TglesSamplerWrapEnum) IsClampToEdge () bool { return me == "CLAMP_TO_EDGE" }

//	Since TglesSamplerWrapEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesSamplerWrapEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

type XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat struct {
	WrapS TglesSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_s"`

}

//	Returns the default value for WrapS -- "REPEAT"
func (me XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat) WrapSDefault () TglesSamplerWrapEnum { return TglesSamplerWrapEnum("REPEAT") }

//	If the W.XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat instance.
func (me *XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat; fn != nil { fn(me) }
 }

type TfxSamplerMinFilterEnum xsdt.Nmtoken

//	Returns true if the value of this enumerated TfxSamplerMinFilterEnum is "ANISOTROPIC".
func (me TfxSamplerMinFilterEnum) IsAnisotropic () bool { return me == "ANISOTROPIC" }

//	Returns true if the value of this enumerated TfxSamplerMinFilterEnum is "NEAREST".
func (me TfxSamplerMinFilterEnum) IsNearest () bool { return me == "NEAREST" }

//	This convenience method just performs a simple type conversion to TfxSamplerMinFilterEnum's alias type xsdt.Nmtoken.
func (me TfxSamplerMinFilterEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Returns true if the value of this enumerated TfxSamplerMinFilterEnum is "LINEAR".
func (me TfxSamplerMinFilterEnum) IsLinear () bool { return me == "LINEAR" }

//	Since TfxSamplerMinFilterEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxSamplerMinFilterEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Since TfxSamplerMinFilterEnum is just a simple String type, this merely returns the current string value.
func (me TfxSamplerMinFilterEnum) String () string { return xsdt.Nmtoken(me).String() }

type XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear struct {
	Minfilter TfxSamplerMinFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema minfilter"`

}

//	If the W.XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear instance.
func (me *XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear; fn != nil { fn(me) }
 }

//	Returns the default value for Minfilter -- "LINEAR"
func (me XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear) MinfilterDefault () TfxSamplerMinFilterEnum { return TfxSamplerMinFilterEnum("LINEAR") }

type XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat struct {
	WrapT TglesSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_t"`

}

//	If the W.XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat instance.
func (me *XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat; fn != nil { fn(me) }
 }

//	Returns the default value for WrapT -- "REPEAT"
func (me XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat) WrapTDefault () TglesSamplerWrapEnum { return TglesSamplerWrapEnum("REPEAT") }

//	The extra element may appear any number of times.
//	OpenGL ES extensions may be used here.
type XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
//	OpenGL ES extensions may be used here.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TfxSamplerMipFilterEnum xsdt.Nmtoken

//	Since TfxSamplerMipFilterEnum is just a simple String type, this merely returns the current string value.
func (me TfxSamplerMipFilterEnum) String () string { return xsdt.Nmtoken(me).String() }

//	This convenience method just performs a simple type conversion to TfxSamplerMipFilterEnum's alias type xsdt.Nmtoken.
func (me TfxSamplerMipFilterEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Since TfxSamplerMipFilterEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxSamplerMipFilterEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxSamplerMipFilterEnum is "NONE".
func (me TfxSamplerMipFilterEnum) IsNone () bool { return me == "NONE" }

//	Returns true if the value of this enumerated TfxSamplerMipFilterEnum is "LINEAR".
func (me TfxSamplerMipFilterEnum) IsLinear () bool { return me == "LINEAR" }

//	Returns true if the value of this enumerated TfxSamplerMipFilterEnum is "NEAREST".
func (me TfxSamplerMipFilterEnum) IsNearest () bool { return me == "NEAREST" }

type XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest struct {
	Mipfilter TfxSamplerMipFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema mipfilter"`

}

//	Returns the default value for Mipfilter -- "NEAREST"
func (me XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest) MipfilterDefault () TfxSamplerMipFilterEnum { return TfxSamplerMipFilterEnum("NEAREST") }

//	If the W.XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest instance.
func (me *XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00 struct {
	MipBias xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema mip_bias"`

}

//	If the W.XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00 instance.
func (me *XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00; fn != nil { fn(me) }
 }

//	Returns the default value for MipBias -- 0.0
func (me XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00) MipBiasDefault () xsdt.Float { return xsdt.Float(0.0) }

type XsdGoPkgHasGroup_GlesSamplerStatesGroup struct {
	XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear

	XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat

//	The extra element may appear any number of times.
//	OpenGL ES extensions may be used here.
	XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_

	XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest

	XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00

	XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255

	XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear

	XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat

}

//	If the W.XsdGoPkgHasGroup_GlesSamplerStatesGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_GlesSamplerStatesGroup instance as the single argument. Then calls the Walk() method on 8/8 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_GlesSamplerStatesGroup instance.
func (me *XsdGoPkgHasGroup_GlesSamplerStatesGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_GlesSamplerStatesGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255.Walk()
	me.XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear.Walk()
	me.XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat.Walk()
	me.XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear.Walk()
	me.XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat.Walk()
	me.XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest.Walk()
	me.XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00.Walk()
 }

type TxsdGlesSamplerTypeSequenceTexcoord struct {
	XsdGoPkgHasAttr_Semantic_XsdtNCName_

}

//	If the W.TxsdGlesSamplerTypeSequenceTexcoord function is not nil (ie. was set by outside code), calls it with this TxsdGlesSamplerTypeSequenceTexcoord instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdGlesSamplerTypeSequenceTexcoord instance.
func (me *TxsdGlesSamplerTypeSequenceTexcoord) Walk ()  { 
	if fn := W.TxsdGlesSamplerTypeSequenceTexcoord; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_ struct {
	Texcoord *TxsdGlesSamplerTypeSequenceTexcoord `xml:"http://www.collada.org/2008/03/COLLADASchema texcoord"`

}

//	If the W.XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_ instance.
func (me *XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_; fn != nil { fn(me) }
	me.Texcoord.Walk()
 }

type TglesSamplerType struct {
	XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_

	XsdGoPkgHasGroup_GlesSamplerStatesGroup

	XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_

}

//	If the W.TglesSamplerType function is not nil (ie. was set by outside code), calls it with this TglesSamplerType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TglesSamplerType instance.
func (me *TglesSamplerType) Walk ()  { 
	if fn := W.TglesSamplerType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_.Walk()
	me.XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_.Walk()
	me.XsdGoPkgHasGroup_GlesSamplerStatesGroup.Walk()
 }

type XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_ struct {
	Sampler2D *TglesSamplerType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler2D"`

}

//	If the W.XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_ instance.
func (me *XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_; fn != nil { fn(me) }
	me.Sampler2D.Walk()
 }

type Tbool3Type TlistOfBoolsType

//	Since Tbool3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool3Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool3Type's alias type TlistOfBoolsType.
func (me Tbool3Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool3Type is just a simple String type, this merely returns the current string value.
func (me Tbool3Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_ struct {
	Bool3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3"`

}

//	If the W.XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_ instance.
func (me *XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_; fn != nil { fn(me) }
 }

type Tfloat3X4Type TlistOfFloatsType

//	Since Tfloat3X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat3X4Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tfloat3X4Type's alias type TlistOfFloatsType.
func (me Tfloat3X4Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat3X4Type is just a simple String type, this merely returns the current string value.
func (me Tfloat3X4Type) String () string { return TlistOfFloatsType(me).String() }

type XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_ struct {
	Float3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x4"`

}

//	If the W.XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_ instance.
func (me *XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_ struct {
	Float1X1 TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float1x1"`

}

//	If the W.XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_ instance.
func (me *XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_ struct {
	Float4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4"`

}

//	If the W.XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_ struct {
	Float3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x3"`

}

//	If the W.XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type Tfloat4X2Type TlistOfFloatsType

//	Since Tfloat4X2Type is just a simple String type, this merely returns the current string value.
func (me Tfloat4X2Type) String () string { return TlistOfFloatsType(me).String() }

//	Since Tfloat4X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat4X2Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tfloat4X2Type's alias type TlistOfFloatsType.
func (me Tfloat4X2Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_ struct {
	Float4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x2"`

}

//	If the W.XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_ instance.
func (me *XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_; fn != nil { fn(me) }
 }

type Tbool4Type TlistOfBoolsType

//	Since Tbool4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool4Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool4Type's alias type TlistOfBoolsType.
func (me Tbool4Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool4Type is just a simple String type, this merely returns the current string value.
func (me Tbool4Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_ struct {
	Bool4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4"`

}

//	If the W.XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_ instance.
func (me *XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_; fn != nil { fn(me) }
 }

type Tfloat2X2Type TlistOfFloatsType

//	Since Tfloat2X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat2X2Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat2X2Type is just a simple String type, this merely returns the current string value.
func (me Tfloat2X2Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat2X2Type's alias type TlistOfFloatsType.
func (me Tfloat2X2Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_ struct {
	Float2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x2"`

}

//	If the W.XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type Tfloat2X4Type TlistOfFloatsType

//	This convenience method just performs a simple type conversion to Tfloat2X4Type's alias type TlistOfFloatsType.
func (me Tfloat2X4Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat2X4Type is just a simple String type, this merely returns the current string value.
func (me Tfloat2X4Type) String () string { return TlistOfFloatsType(me).String() }

//	Since Tfloat2X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat2X4Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_ struct {
	Float2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x4"`

}

//	If the W.XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_ instance.
func (me *XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_ struct {
	Float1X3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float1x3"`

}

//	If the W.XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_; fn != nil { fn(me) }
 }

type Tfloat3X2Type TlistOfFloatsType

//	This convenience method just performs a simple type conversion to Tfloat3X2Type's alias type TlistOfFloatsType.
func (me Tfloat3X2Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat3X2Type is just a simple String type, this merely returns the current string value.
func (me Tfloat3X2Type) String () string { return TlistOfFloatsType(me).String() }

//	Since Tfloat3X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat3X2Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_ struct {
	Float3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x2"`

}

//	If the W.XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_ instance.
func (me *XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasGroup_GlesParamGroup struct {
	XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_

	XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_

	XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_

	XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_

	XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_

	XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_

	XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_

	XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_

	XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_

	XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_

	XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_

	XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_

}

//	If the W.XsdGoPkgHasGroup_GlesParamGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_GlesParamGroup instance as the single argument. Then calls the Walk() method on 30/30 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_GlesParamGroup instance.
func (me *XsdGoPkgHasGroup_GlesParamGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_GlesParamGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_.Walk()
	me.XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_.Walk()
	me.XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_.Walk()
	me.XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_.Walk()
	me.XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_.Walk()
	me.XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_.Walk()
	me.XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_.Walk()
	me.XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_.Walk()
	me.XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_.Walk()
	me.XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_.Walk()
	me.XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_.Walk()
	me.XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_.Walk()
	me.XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_.Walk()
	me.XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_.Walk()
	me.XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_.Walk()
 }

//	The modifier element allows you to specify a modifier for this new param.
type TfxModifierEnum xsdt.Nmtoken

//	Returns true if the value of this enumerated TfxModifierEnum is "STATIC".
func (me TfxModifierEnum) IsStatic () bool { return me == "STATIC" }

//	Returns true if the value of this enumerated TfxModifierEnum is "UNIFORM".
func (me TfxModifierEnum) IsUniform () bool { return me == "UNIFORM" }

//	Returns true if the value of this enumerated TfxModifierEnum is "VOLATILE".
func (me TfxModifierEnum) IsVolatile () bool { return me == "VOLATILE" }

//	Returns true if the value of this enumerated TfxModifierEnum is "EXTERN".
func (me TfxModifierEnum) IsExtern () bool { return me == "EXTERN" }

//	This convenience method just performs a simple type conversion to TfxModifierEnum's alias type xsdt.Nmtoken.
func (me TfxModifierEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Returns true if the value of this enumerated TfxModifierEnum is "SHARED".
func (me TfxModifierEnum) IsShared () bool { return me == "SHARED" }

//	Returns true if the value of this enumerated TfxModifierEnum is "CONST".
func (me TfxModifierEnum) IsConst () bool { return me == "CONST" }

//	Since TfxModifierEnum is just a simple String type, this merely returns the current string value.
func (me TfxModifierEnum) String () string { return xsdt.Nmtoken(me).String() }

//	Returns true if the value of this enumerated TfxModifierEnum is "VARYING".
func (me TfxModifierEnum) IsVarying () bool { return me == "VARYING" }

//	Since TfxModifierEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxModifierEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

type XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_ struct {
//	The modifier element allows you to specify a modifier for this new param.
	Modifier TfxModifierEnum `xml:"http://www.collada.org/2008/03/COLLADASchema modifier"`

}

//	If the W.XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_ instance.
func (me *XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_; fn != nil { fn(me) }
 }

//	The annotate element allows you to specify an annotation for this new param.
//	A group that specifies the allowable types for an annotation.
type XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_ struct {
	Float3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x3"`

}

//	If the W.XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

//	If the W.XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_ struct {
	Bool3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3"`

}

//	If the W.XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_ instance.
func (me *XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_ struct {
	Bool2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2"`

}

//	If the W.XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_ instance.
func (me *XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_ struct {
	Float4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x4"`

}

//	If the W.XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_ struct {
	Float2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x2"`

}

//	If the W.XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_ struct {
	Int4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4"`

}

//	If the W.XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_ instance.
func (me *XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_ struct {
	Int3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3"`

}

//	If the W.XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_ instance.
func (me *XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_ struct {
	Float3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3"`

}

//	If the W.XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_ struct {
	Float4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4"`

}

//	If the W.XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_ struct {
	Bool4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4"`

}

//	If the W.XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_ instance.
func (me *XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_ struct {
	String xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema string"`

}

//	If the W.XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_ instance.
func (me *XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_ struct {
	Int2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2"`

}

//	If the W.XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_ instance.
func (me *XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasGroup_FxAnnotateGroup struct {
	XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_

	XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_

	XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_

}

//	If the W.XsdGoPkgHasGroup_FxAnnotateGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_FxAnnotateGroup instance as the single argument. Then calls the Walk() method on 16/16 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_FxAnnotateGroup instance.
func (me *XsdGoPkgHasGroup_FxAnnotateGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_FxAnnotateGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_.Walk()
	me.XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_.Walk()
	me.XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_.Walk()
	me.XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_.Walk()
	me.XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_.Walk()
	me.XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_.Walk()
	me.XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_.Walk()
	me.XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_.Walk()
 }

type TfxAnnotateType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasGroup_FxAnnotateGroup

}

//	If the W.TfxAnnotateType function is not nil (ie. was set by outside code), calls it with this TfxAnnotateType instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TfxAnnotateType instance.
func (me *TfxAnnotateType) Walk ()  { 
	if fn := W.TfxAnnotateType; fn != nil { fn(me) }
	me.XsdGoPkgHasGroup_FxAnnotateGroup.Walk()
 }

type XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_ struct {
//	The annotate element allows you to specify an annotation for this new param.
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

type TglesNewparamType struct {
	XsdGoPkgHasGroup_GlesParamGroup

//	The modifier element allows you to specify a modifier for this new param.
	XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_

//	The annotate element allows you to specify an annotation for this new param.
	XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_

//	The semantic element allows you to specify a semantic for this new param.
	XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TglesNewparamType function is not nil (ie. was set by outside code), calls it with this TglesNewparamType instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TglesNewparamType instance.
func (me *TglesNewparamType) Walk ()  { 
	if fn := W.TglesNewparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasGroup_GlesParamGroup.Walk()
	me.XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_.Walk()
	me.XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_.Walk()
 }

type XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_ struct {
	Newparams []*TglesNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
type XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ struct {
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
//	mip level
type XsdGoPkgHasAttr_Mip_XsdtNonNegativeInteger_0 struct {
//	mip level
	Mip xsdt.NonNegativeInteger `xml:"http://www.collada.org/2008/03/COLLADASchema mip,attr"`

}

//	Returns the default value for Mip -- 0
func (me XsdGoPkgHasAttr_Mip_XsdtNonNegativeInteger_0) MipDefault () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(0) }

//	array index
type XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0 struct {
//	array index
	Index xsdt.NonNegativeInteger `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

//	Returns the default value for Index -- 0
func (me XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0) IndexDefault () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(0) }

type XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_ struct {
	InstanceImage *TinstanceImageType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_image"`

}

//	If the W.XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_ instance.
func (me *XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_; fn != nil { fn(me) }
	me.InstanceImage.Walk()
 }

//	cube face
type TimageFaceEnum xsdt.String

//	Returns true if the value of this enumerated TimageFaceEnum is "POSITIVE_Z".
func (me TimageFaceEnum) IsPositiveZ () bool { return me == "POSITIVE_Z" }

//	Since TimageFaceEnum is just a simple String type, this merely returns the current string value.
func (me TimageFaceEnum) String () string { return xsdt.String(me).String() }

//	Since TimageFaceEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TimageFaceEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TimageFaceEnum is "POSITIVE_X".
func (me TimageFaceEnum) IsPositiveX () bool { return me == "POSITIVE_X" }

//	Returns true if the value of this enumerated TimageFaceEnum is "NEGATIVE_Z".
func (me TimageFaceEnum) IsNegativeZ () bool { return me == "NEGATIVE_Z" }

//	Returns true if the value of this enumerated TimageFaceEnum is "NEGATIVE_X".
func (me TimageFaceEnum) IsNegativeX () bool { return me == "NEGATIVE_X" }

//	This convenience method just performs a simple type conversion to TimageFaceEnum's alias type xsdt.String.
func (me TimageFaceEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TimageFaceEnum is "NEGATIVE_Y".
func (me TimageFaceEnum) IsNegativeY () bool { return me == "NEGATIVE_Y" }

//	Returns true if the value of this enumerated TimageFaceEnum is "POSITIVE_Y".
func (me TimageFaceEnum) IsPositiveY () bool { return me == "POSITIVE_Y" }

type XsdGoPkgHasAttr_Face_TimageFaceEnum_PositiveX struct {
//	cube face
	Face TimageFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema face,attr"`

}

//	Returns the default value for Face -- "POSITIVE_X"
func (me XsdGoPkgHasAttr_Face_TimageFaceEnum_PositiveX) FaceDefault () TimageFaceEnum { return TimageFaceEnum("POSITIVE_X") }

//	volume depth
type XsdGoPkgHasAttr_Slice_XsdtNonNegativeInteger_0 struct {
//	volume depth
	Slice xsdt.NonNegativeInteger `xml:"http://www.collada.org/2008/03/COLLADASchema slice,attr"`

}

//	Returns the default value for Slice -- 0
func (me XsdGoPkgHasAttr_Slice_XsdtNonNegativeInteger_0) SliceDefault () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(0) }

type XsdGoPkgHasAttr_Ref_XsdtToken_ struct {
	Ref xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema ref,attr"`

}

type TxsdFxRendertargetTypeChoiceParam struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

}

//	If the W.TxsdFxRendertargetTypeChoiceParam function is not nil (ie. was set by outside code), calls it with this TxsdFxRendertargetTypeChoiceParam instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdFxRendertargetTypeChoiceParam instance.
func (me *TxsdFxRendertargetTypeChoiceParam) Walk ()  { 
	if fn := W.TxsdFxRendertargetTypeChoiceParam; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_ struct {
	Param *TxsdFxRendertargetTypeChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_ instance.
func (me *XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type TfxRendertargetType struct {
//	array index
	XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0

	XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_

//	cube face
	XsdGoPkgHasAttr_Face_TimageFaceEnum_PositiveX

//	volume depth
	XsdGoPkgHasAttr_Slice_XsdtNonNegativeInteger_0

	XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_

//	mip level
	XsdGoPkgHasAttr_Mip_XsdtNonNegativeInteger_0

}

//	If the W.TfxRendertargetType function is not nil (ie. was set by outside code), calls it with this TfxRendertargetType instance as the single argument. Then calls the Walk() method on 2/6 embed(s) and 0/0 field(s) belonging to this TfxRendertargetType instance.
func (me *TfxRendertargetType) Walk ()  { 
	if fn := W.TfxRendertargetType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_.Walk()
	me.XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_.Walk()
 }

type TfxColortargetType struct {
	TfxRendertargetType

}

//	If the W.TfxColortargetType function is not nil (ie. was set by outside code), calls it with this TfxColortargetType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxColortargetType instance.
func (me *TfxColortargetType) Walk ()  { 
	if fn := W.TfxColortargetType; fn != nil { fn(me) }
	me.TfxRendertargetType.Walk()
 }

type XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_ struct {
	ColorTargets []*TfxColortargetType `xml:"http://www.collada.org/2008/03/COLLADASchema color_target"`

}

//	If the W.XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_ instance.
func (me *XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_; fn != nil { fn(me) }
	for _, x := range me.ColorTargets { x.Walk() }
 }

type TfxClearstencilType struct {
	XsdGoPkgValue xsdt.Byte `xml:",chardata"`

	XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0

}

//	If the W.TfxClearstencilType function is not nil (ie. was set by outside code), calls it with this TfxClearstencilType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TfxClearstencilType instance.
func (me *TfxClearstencilType) Walk ()  { 
	if fn := W.TfxClearstencilType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_ struct {
	StencilClears []*TfxClearstencilType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_clear"`

}

//	If the W.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_ instance.
func (me *XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_; fn != nil { fn(me) }
	for _, x := range me.StencilClears { x.Walk() }
 }

type TfxDepthtargetType struct {
	TfxRendertargetType

}

//	If the W.TfxDepthtargetType function is not nil (ie. was set by outside code), calls it with this TfxDepthtargetType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxDepthtargetType instance.
func (me *TfxDepthtargetType) Walk ()  { 
	if fn := W.TfxDepthtargetType; fn != nil { fn(me) }
	me.TfxRendertargetType.Walk()
 }

type XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_ struct {
	DepthTargets []*TfxDepthtargetType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_target"`

}

//	If the W.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_ instance.
func (me *XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_; fn != nil { fn(me) }
	for _, x := range me.DepthTargets { x.Walk() }
 }

type TfxStenciltargetType struct {
	TfxRendertargetType

}

//	If the W.TfxStenciltargetType function is not nil (ie. was set by outside code), calls it with this TfxStenciltargetType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxStenciltargetType instance.
func (me *TfxStenciltargetType) Walk ()  { 
	if fn := W.TfxStenciltargetType; fn != nil { fn(me) }
	me.TfxRendertargetType.Walk()
 }

type XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_ struct {
	StencilTargets []*TfxStenciltargetType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_target"`

}

//	If the W.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_ instance.
func (me *XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_; fn != nil { fn(me) }
	for _, x := range me.StencilTargets { x.Walk() }
 }

type TfxColorType Tfloat4Type

//	This convenience method just performs a simple type conversion to TfxColorType's alias type Tfloat4Type.
func (me TfxColorType) ToTfloat4Type () Tfloat4Type { return Tfloat4Type(me) }

//	Since TfxColorType is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxColorType) SetFromString (s string)  { (*Tfloat4Type)(me).SetFromString(s) }

//	Since TfxColorType is just a simple String type, this merely returns the current string value.
func (me TfxColorType) String () string { return Tfloat4Type(me).String() }

type TfxClearcolorType struct {
	XsdGoPkgValue TfxColorType `xml:",chardata"`

	XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0

}

//	If the W.TfxClearcolorType function is not nil (ie. was set by outside code), calls it with this TfxClearcolorType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TfxClearcolorType instance.
func (me *TfxClearcolorType) Walk ()  { 
	if fn := W.TfxClearcolorType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_ struct {
	ColorClears []*TfxClearcolorType `xml:"http://www.collada.org/2008/03/COLLADASchema color_clear"`

}

//	If the W.XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_ instance.
func (me *XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_; fn != nil { fn(me) }
	for _, x := range me.ColorClears { x.Walk() }
 }

//	? GEOMETRY: [default] The geometry associated with this instance_geometry or nstance_material.
//	? SCENE_GEOMETRY: Draw the entire scene's geometry but with this effect, not the effects or
//	materials already associated with the geometry. This is for techniques such as shadow-buffer
//	generation, where you might be interested only in extracting the Z value from the light. This is
//	without regard to ordering on the assumption that ZBuffer handles order.
//	? SCENE_IMAGE: Draw the entire scene naturally into the render targets. Hense producing an image
//	of the scene.  When used more then once, the later uses must include what has been rendered so far
//	to the backbuffer since the first render.  This is for effects that need an accurate image of the scene
//	to work on for effects such as postprocessing blurs.
//	? FULL_SCREEN_QUAD: Positions are 0,0 to 1,1 and the UVs match.
type TfxDrawType xsdt.String

//	Since TfxDrawType is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxDrawType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TfxDrawType's alias type xsdt.String.
func (me TfxDrawType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TfxDrawType is just a simple String type, this merely returns the current string value.
func (me TfxDrawType) String () string { return xsdt.String(me).String() }

type XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_ struct {
	Draw TfxDrawType `xml:"http://www.collada.org/2008/03/COLLADASchema draw"`

}

//	If the W.XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_ instance.
func (me *XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_; fn != nil { fn(me) }
 }

type TfxCleardepthType struct {
	XsdGoPkgValue TfloatType `xml:",chardata"`

	XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0

}

//	If the W.TfxCleardepthType function is not nil (ie. was set by outside code), calls it with this TfxCleardepthType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TfxCleardepthType instance.
func (me *TfxCleardepthType) Walk ()  { 
	if fn := W.TfxCleardepthType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_ struct {
	DepthClears []*TfxCleardepthType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_clear"`

}

//	If the W.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_ instance.
func (me *XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_; fn != nil { fn(me) }
	for _, x := range me.DepthClears { x.Walk() }
 }

type TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate struct {
	XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_

	XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_

	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_

	XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_

	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_

	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_

	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_

}

//	If the W.TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate function is not nil (ie. was set by outside code), calls it with this TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate instance.
func (me *TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate) Walk ()  { 
	if fn := W.TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_.Walk()
	me.XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_.Walk()
	me.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_.Walk()
	me.XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_.Walk()
	me.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_.Walk()
	me.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_.Walk()
	me.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_.Walk()
 }

type XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_ struct {
	Evaluate *TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate"`

}

//	If the W.XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_ instance.
func (me *XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_; fn != nil { fn(me) }
	me.Evaluate.Walk()
 }

type XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ struct {
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	A group that contains the renderstates available for the GLES profile.
type XsdGoPkgHasAttr_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param,attr"`

}

type XsdGoPkgHasAttr_Value_TglLogicOpEnum_Copy struct {
	Value TglLogicOpEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "COPY"
func (me XsdGoPkgHasAttr_Value_TglLogicOpEnum_Copy) ValueDefault () TglLogicOpEnum { return TglLogicOpEnum("COPY") }

type TxsdGlesPipelineSettingsGroupChoiceLogicOp struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglLogicOpEnum_Copy

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLogicOp function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLogicOp instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLogicOp instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLogicOp) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLogicOp; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_ struct {
	LogicOp *TxsdGlesPipelineSettingsGroupChoiceLogicOp `xml:"http://www.collada.org/2008/03/COLLADASchema logic_op"`

}

//	If the W.XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_ instance.
func (me *XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_; fn != nil { fn(me) }
	me.LogicOp.Walk()
 }

type XsdGoPkgHasAttr_Value_XsdtBoolean_False struct {
	Value xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- false
func (me XsdGoPkgHasAttr_Value_XsdtBoolean_False) ValueDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type TglesMaxClipPlanesIndexType xsdt.NonNegativeInteger

//	Since TglesMaxClipPlanesIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglesMaxClipPlanesIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglesMaxClipPlanesIndexType's alias type xsdt.NonNegativeInteger.
func (me TglesMaxClipPlanesIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

//	Returns a string representation of this TglesMaxClipPlanesIndexType's current non-string scalar value.
func (me TglesMaxClipPlanesIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

type XsdGoPkgHasAttr_Index_TglesMaxClipPlanesIndexType_ struct {
	Index TglesMaxClipPlanesIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Index_TglesMaxClipPlanesIndexType_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_ struct {
	ClipPlaneEnable *TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema clip_plane_enable"`

}

//	If the W.XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_ instance.
func (me *XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_; fn != nil { fn(me) }
	me.ClipPlaneEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat4Type_0001 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0 0 1"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_0001) ValueDefault () Tfloat4Type { return Tfloat4Type("0 0 0 1") }

type TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_ struct {
	MaterialSpecular *TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular `xml:"http://www.collada.org/2008/03/COLLADASchema material_specular"`

}

//	If the W.XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_ instance.
func (me *XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_; fn != nil { fn(me) }
	me.MaterialSpecular.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001 struct {
	Value Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"
func (me XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001) ValueDefault () Tfloat4X4Type { return Tfloat4X4Type("1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1") }

type TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix struct {
	XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_ struct {
	ModelViewMatrix *TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix `xml:"http://www.collada.org/2008/03/COLLADASchema model_view_matrix"`

}

//	If the W.XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_ instance.
func (me *XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_; fn != nil { fn(me) }
	me.ModelViewMatrix.Walk()
 }

type TglesStencilOpEnum xsdt.String

//	Returns true if the value of this enumerated TglesStencilOpEnum is "ZERO".
func (me TglesStencilOpEnum) IsZero () bool { return me == "ZERO" }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "DECR".
func (me TglesStencilOpEnum) IsDecr () bool { return me == "DECR" }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "REPLACE".
func (me TglesStencilOpEnum) IsReplace () bool { return me == "REPLACE" }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "KEEP".
func (me TglesStencilOpEnum) IsKeep () bool { return me == "KEEP" }

//	Since TglesStencilOpEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesStencilOpEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TglesStencilOpEnum is just a simple String type, this merely returns the current string value.
func (me TglesStencilOpEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "INVERT".
func (me TglesStencilOpEnum) IsInvert () bool { return me == "INVERT" }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "INCR".
func (me TglesStencilOpEnum) IsIncr () bool { return me == "INCR" }

//	This convenience method just performs a simple type conversion to TglesStencilOpEnum's alias type xsdt.String.
func (me TglesStencilOpEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasAttr_Value_TglesStencilOpEnum_Keep struct {
	Value TglesStencilOpEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "KEEP"
func (me XsdGoPkgHasAttr_Value_TglesStencilOpEnum_Keep) ValueDefault () TglesStencilOpEnum { return TglesStencilOpEnum("KEEP") }

type TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail struct {
	XsdGoPkgHasAttr_Value_TglesStencilOpEnum_Keep

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_ struct {
	Zfail *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

//	If the W.XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_ instance.
func (me *XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_; fn != nil { fn(me) }
	me.Zfail.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail struct {
	XsdGoPkgHasAttr_Value_TglesStencilOpEnum_Keep

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_ struct {
	Fail *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

//	If the W.XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_ instance.
func (me *XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_; fn != nil { fn(me) }
	me.Fail.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglesStencilOpEnum_Keep

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_ struct {
	Zpass *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

//	If the W.XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_ instance.
func (me *XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_; fn != nil { fn(me) }
	me.Zpass.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceStencilOp struct {
	XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_

	XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_

	XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilOp function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilOp instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilOp instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilOp) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilOp; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_.Walk()
	me.XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_.Walk()
	me.XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_.Walk()
 }

type XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_ struct {
	StencilOp *TxsdGlesPipelineSettingsGroupChoiceStencilOp `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op"`

}

//	If the W.XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_ instance.
func (me *XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_; fn != nil { fn(me) }
	me.StencilOp.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ struct {
	SampleAlphaToOneEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_one_enable"`

}

//	If the W.XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ instance.
func (me *XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_; fn != nil { fn(me) }
	me.SampleAlphaToOneEnable.Walk()
 }

type TglesMaxLightsIndexType xsdt.NonNegativeInteger

//	Returns a string representation of this TglesMaxLightsIndexType's current non-string scalar value.
func (me TglesMaxLightsIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	This convenience method just performs a simple type conversion to TglesMaxLightsIndexType's alias type xsdt.NonNegativeInteger.
func (me TglesMaxLightsIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

//	Since TglesMaxLightsIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglesMaxLightsIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_ struct {
	Index TglesMaxLightsIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type XsdGoPkgHasAttr_Value_Tfloat4Type_0000 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0 0 0"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_0000) ValueDefault () Tfloat4Type { return Tfloat4Type("0 0 0 0") }

type TxsdGlesPipelineSettingsGroupChoiceLightDiffuse struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightDiffuse function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightDiffuse instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightDiffuse instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightDiffuse) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightDiffuse; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_ struct {
	LightDiffuse *TxsdGlesPipelineSettingsGroupChoiceLightDiffuse `xml:"http://www.collada.org/2008/03/COLLADASchema light_diffuse"`

}

//	If the W.XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_ instance.
func (me *XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_; fn != nil { fn(me) }
	me.LightDiffuse.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceBlendEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceBlendEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceBlendEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceBlendEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceBlendEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceBlendEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_ struct {
	BlendEnable *TxsdGlesPipelineSettingsGroupChoiceBlendEnable `xml:"http://www.collada.org/2008/03/COLLADASchema blend_enable"`

}

//	If the W.XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_ instance.
func (me *XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_; fn != nil { fn(me) }
	me.BlendEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ struct {
	SampleAlphaToCoverageEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_coverage_enable"`

}

//	If the W.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ instance.
func (me *XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_; fn != nil { fn(me) }
	me.SampleAlphaToCoverageEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_TfloatType_1 struct {
	Value TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 1
func (me XsdGoPkgHasAttr_Value_TfloatType_1) ValueDefault () TfloatType { return TfloatType(1) }

type TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation struct {
	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_ struct {
	LightQuadraticAttenuation *TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_quadratic_attenuation"`

}

//	If the W.XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_ instance.
func (me *XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_; fn != nil { fn(me) }
	me.LightQuadraticAttenuation.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_ struct {
	ScissorTestEnable *TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema scissor_test_enable"`

}

//	If the W.XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_ instance.
func (me *XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_; fn != nil { fn(me) }
	me.ScissorTestEnable.Walk()
 }

type TglAlphaValueType xsdt.Float

//	This convenience method just performs a simple type conversion to TglAlphaValueType's alias type xsdt.Float.
func (me TglAlphaValueType) ToXsdtFloat () xsdt.Float { return xsdt.Float(me) }

//	Returns a string representation of this TglAlphaValueType's current non-string scalar value.
func (me TglAlphaValueType) String () string { return xsdt.Float(me).String() }

//	Since TglAlphaValueType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglAlphaValueType) SetFromString (s string)  { (*xsdt.Float)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Value_TglAlphaValueType_00 struct {
	Value TglAlphaValueType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 0.0
func (me XsdGoPkgHasAttr_Value_TglAlphaValueType_00) ValueDefault () TglAlphaValueType { return TglAlphaValueType(0.0) }

type TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue struct {
	XsdGoPkgHasAttr_Value_TglAlphaValueType_00

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ struct {
	Value *TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ instance.
func (me *XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type XsdGoPkgHasAttr_Value_TglFuncEnum_Always struct {
	Value TglFuncEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "ALWAYS"
func (me XsdGoPkgHasAttr_Value_TglFuncEnum_Always) ValueDefault () TglFuncEnum { return TglFuncEnum("ALWAYS") }

type TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ struct {
	Func *TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

//	If the W.XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ instance.
func (me *XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_; fn != nil { fn(me) }
	me.Func.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceAlphaFunc struct {
	XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_

	XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceAlphaFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceAlphaFunc instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceAlphaFunc instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceAlphaFunc) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceAlphaFunc; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_.Walk()
	me.XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_.Walk()
 }

type XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_ struct {
	AlphaFunc *TxsdGlesPipelineSettingsGroupChoiceAlphaFunc `xml:"http://www.collada.org/2008/03/COLLADASchema alpha_func"`

}

//	If the W.XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_ instance.
func (me *XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_; fn != nil { fn(me) }
	me.AlphaFunc.Walk()
 }

type XsdGoPkgHasAttr_Value_Tbool4Type_ struct {
	Value Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGlesPipelineSettingsGroupChoiceClipPlane struct {
	XsdGoPkgHasAttr_Index_TglesMaxClipPlanesIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tbool4Type_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceClipPlane function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceClipPlane instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceClipPlane instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceClipPlane) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceClipPlane; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_ struct {
	ClipPlane *TxsdGlesPipelineSettingsGroupChoiceClipPlane `xml:"http://www.collada.org/2008/03/COLLADASchema clip_plane"`

}

//	If the W.XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_ instance.
func (me *XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_; fn != nil { fn(me) }
	me.ClipPlane.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLightEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_ struct {
	LightEnable *TxsdGlesPipelineSettingsGroupChoiceLightEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_enable"`

}

//	If the W.XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_ instance.
func (me *XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_; fn != nil { fn(me) }
	me.LightEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_ struct {
	ProjectionMatrix *TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix `xml:"http://www.collada.org/2008/03/COLLADASchema projection_matrix"`

}

//	If the W.XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_ instance.
func (me *XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_; fn != nil { fn(me) }
	me.ProjectionMatrix.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_ struct {
	SampleCoverageEnable *TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_coverage_enable"`

}

//	If the W.XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_ instance.
func (me *XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_; fn != nil { fn(me) }
	me.SampleCoverageEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_ struct {
	LightModelTwoSideEnable *TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_two_side_enable"`

}

//	If the W.XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_ instance.
func (me *XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_; fn != nil { fn(me) }
	me.LightModelTwoSideEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_TfloatType_180 struct {
	Value TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 180
func (me XsdGoPkgHasAttr_Value_TfloatType_180) ValueDefault () TfloatType { return TfloatType(180) }

type TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_180

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_ struct {
	LightSpotCutoff *TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_cutoff"`

}

//	If the W.XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_ instance.
func (me *XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_; fn != nil { fn(me) }
	me.LightSpotCutoff.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceDitherEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceDitherEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceDitherEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceDitherEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceDitherEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceDitherEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_ struct {
	DitherEnable *TxsdGlesPipelineSettingsGroupChoiceDitherEnable `xml:"http://www.collada.org/2008/03/COLLADASchema dither_enable"`

}

//	If the W.XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_ instance.
func (me *XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_; fn != nil { fn(me) }
	me.DitherEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat2Type_00 struct {
	Value Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0"
func (me XsdGoPkgHasAttr_Value_Tfloat2Type_00) ValueDefault () Tfloat2Type { return Tfloat2Type("0 0") }

type TxsdGlesPipelineSettingsGroupChoicePolygonOffset struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat2Type_00

}

//	If the W.TxsdGlesPipelineSettingsGroupChoicePolygonOffset function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoicePolygonOffset instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoicePolygonOffset instance.
func (me *TxsdGlesPipelineSettingsGroupChoicePolygonOffset) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoicePolygonOffset; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_ struct {
	PolygonOffset *TxsdGlesPipelineSettingsGroupChoicePolygonOffset `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset"`

}

//	If the W.XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_ instance.
func (me *XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_; fn != nil { fn(me) }
	me.PolygonOffset.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceDepthMask struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceDepthMask function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceDepthMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceDepthMask instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceDepthMask) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceDepthMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_ struct {
	DepthMask *TxsdGlesPipelineSettingsGroupChoiceDepthMask `xml:"http://www.collada.org/2008/03/COLLADASchema depth_mask"`

}

//	If the W.XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_ instance.
func (me *XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_; fn != nil { fn(me) }
	me.DepthMask.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat4Type_02020210 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0.2 0.2 0.2 1.0"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_02020210) ValueDefault () Tfloat4Type { return Tfloat4Type("0.2 0.2 0.2 1.0") }

type TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_02020210

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_ struct {
	LightModelAmbient *TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_ambient"`

}

//	If the W.XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_ instance.
func (me *XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_; fn != nil { fn(me) }
	me.LightModelAmbient.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_02020210

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_ struct {
	MaterialAmbient *TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema material_ambient"`

}

//	If the W.XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_ instance.
func (me *XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_; fn != nil { fn(me) }
	me.MaterialAmbient.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat3Type_100 struct {
	Value Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "1 0 0"
func (me XsdGoPkgHasAttr_Value_Tfloat3Type_100) ValueDefault () Tfloat3Type { return Tfloat3Type("1 0 0") }

type TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation struct {
	XsdGoPkgHasAttr_Value_Tfloat3Type_100

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation instance.
func (me *TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_ struct {
	PointDistanceAttenuation *TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema point_distance_attenuation"`

}

//	If the W.XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_ instance.
func (me *XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_; fn != nil { fn(me) }
	me.PointDistanceAttenuation.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceFogColor struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceFogColor function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceFogColor instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceFogColor instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceFogColor) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceFogColor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_ struct {
	FogColor *TxsdGlesPipelineSettingsGroupChoiceFogColor `xml:"http://www.collada.org/2008/03/COLLADASchema fog_color"`

}

//	If the W.XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_ instance.
func (me *XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_; fn != nil { fn(me) }
	me.FogColor.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_ struct {
	LightLinearAttenuation *TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_linear_attenuation"`

}

//	If the W.XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_ instance.
func (me *XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_; fn != nil { fn(me) }
	me.LightLinearAttenuation.Walk()
 }

//	Defines a set of texturing commands that will be converted into multitexturing operations using glTexEnv in regular and combiner mode.
//	Defines a texture_pipeline command. It is a simple noncombiner mode of texturing operations.
type XsdGoPkgHasAttr_Value_Tfloat4Type_ struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TglesTextureConstantType struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TglesTextureConstantType function is not nil (ie. was set by outside code), calls it with this TglesTextureConstantType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TglesTextureConstantType instance.
func (me *TglesTextureConstantType) Walk ()  { 
	if fn := W.TglesTextureConstantType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_ struct {
	Constant *TglesTextureConstantType `xml:"http://www.collada.org/2008/03/COLLADASchema constant"`

}

//	If the W.XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_ instance.
func (me *XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_; fn != nil { fn(me) }
	me.Constant.Walk()
 }

type XsdGoPkgHasAttr_Sampler_XsdtNCName_ struct {
	Sampler xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema sampler,attr"`

}

type TglesTexenvModeEnum xsdt.Token

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "MODULATE".
func (me TglesTexenvModeEnum) IsModulate () bool { return me == "MODULATE" }

//	This convenience method just performs a simple type conversion to TglesTexenvModeEnum's alias type xsdt.Token.
func (me TglesTexenvModeEnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TglesTexenvModeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexenvModeEnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "DECAL".
func (me TglesTexenvModeEnum) IsDecal () bool { return me == "DECAL" }

//	Since TglesTexenvModeEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexenvModeEnum) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "ADD".
func (me TglesTexenvModeEnum) IsAdd () bool { return me == "ADD" }

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "REPLACE".
func (me TglesTexenvModeEnum) IsReplace () bool { return me == "REPLACE" }

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "BLEND".
func (me TglesTexenvModeEnum) IsBlend () bool { return me == "BLEND" }

type XsdGoPkgHasAttr_Operator_TglesTexenvModeEnum_ struct {
	Operator TglesTexenvModeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operator,attr"`

}

type TglesTexenvCommandType struct {
	XsdGoPkgHasAttr_Operator_TglesTexenvModeEnum_

	XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_

	XsdGoPkgHasAttr_Sampler_XsdtNCName_

}

//	If the W.TglesTexenvCommandType function is not nil (ie. was set by outside code), calls it with this TglesTexenvCommandType instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TglesTexenvCommandType instance.
func (me *TglesTexenvCommandType) Walk ()  { 
	if fn := W.TglesTexenvCommandType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_.Walk()
 }

type XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_ struct {
//	Defines a texture_pipeline command. It is a simple noncombiner mode of texturing operations.
	Texenvs []*TglesTexenvCommandType `xml:"http://www.collada.org/2008/03/COLLADASchema texenv"`

}

//	If the W.XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_ instance.
func (me *XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_; fn != nil { fn(me) }
	for _, x := range me.Texenvs { x.Walk() }
 }

//	Defines a texture_pipeline command. This is a combiner-mode texturing operation.
type XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_ struct {
	Constant *TglesTextureConstantType `xml:"http://www.collada.org/2008/03/COLLADASchema constant"`

}

//	If the W.XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_ instance.
func (me *XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_; fn != nil { fn(me) }
	me.Constant.Walk()
 }

//	Defines the RGB portion of a texture_pipeline command. This is a combiner-mode texturing operation.
type XsdGoPkgHasAttr_Scale_XsdtFloat_ struct {
	Scale xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema scale,attr"`

}

type TglesTexcombinerOperatorRgbEnum xsdt.Token

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "MODULATE".
func (me TglesTexcombinerOperatorRgbEnum) IsModulate () bool { return me == "MODULATE" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "REPLACE".
func (me TglesTexcombinerOperatorRgbEnum) IsReplace () bool { return me == "REPLACE" }

//	This convenience method just performs a simple type conversion to TglesTexcombinerOperatorRgbEnum's alias type xsdt.Token.
func (me TglesTexcombinerOperatorRgbEnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TglesTexcombinerOperatorRgbEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerOperatorRgbEnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "SUBTRACT".
func (me TglesTexcombinerOperatorRgbEnum) IsSubtract () bool { return me == "SUBTRACT" }

//	Since TglesTexcombinerOperatorRgbEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerOperatorRgbEnum) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "ADD_SIGNED".
func (me TglesTexcombinerOperatorRgbEnum) IsAddSigned () bool { return me == "ADD_SIGNED" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "DOT3_RGBA".
func (me TglesTexcombinerOperatorRgbEnum) IsDot3Rgba () bool { return me == "DOT3_RGBA" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "INTERPOLATE".
func (me TglesTexcombinerOperatorRgbEnum) IsInterpolate () bool { return me == "INTERPOLATE" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "ADD".
func (me TglesTexcombinerOperatorRgbEnum) IsAdd () bool { return me == "ADD" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "DOT3_RGB".
func (me TglesTexcombinerOperatorRgbEnum) IsDot3Rgb () bool { return me == "DOT3_RGB" }

type XsdGoPkgHasAttr_Operator_TglesTexcombinerOperatorRgbEnum_ struct {
	Operator TglesTexcombinerOperatorRgbEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operator,attr"`

}

type TglesTexcombinerOperandRgbEnum TglBlendEnum

//	Returns true if the value of this enumerated TglesTexcombinerOperandRgbEnum is "SRC_ALPHA".
func (me TglesTexcombinerOperandRgbEnum) IsSrcAlpha () bool { return me == "SRC_ALPHA" }

//	Since TglesTexcombinerOperandRgbEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerOperandRgbEnum) SetFromString (s string)  { (*TglBlendEnum)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesTexcombinerOperandRgbEnum is "SRC_COLOR".
func (me TglesTexcombinerOperandRgbEnum) IsSrcColor () bool { return me == "SRC_COLOR" }

//	Since TglesTexcombinerOperandRgbEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerOperandRgbEnum) String () string { return TglBlendEnum(me).String() }

//	This convenience method just performs a simple type conversion to TglesTexcombinerOperandRgbEnum's alias type TglBlendEnum.
func (me TglesTexcombinerOperandRgbEnum) ToTglBlendEnum () TglBlendEnum { return TglBlendEnum(me) }

//	Returns true if the value of this enumerated TglesTexcombinerOperandRgbEnum is "ONE_MINUS_SRC_ALPHA".
func (me TglesTexcombinerOperandRgbEnum) IsOneMinusSrcAlpha () bool { return me == "ONE_MINUS_SRC_ALPHA" }

//	Returns true if the value of this enumerated TglesTexcombinerOperandRgbEnum is "ONE_MINUS_SRC_COLOR".
func (me TglesTexcombinerOperandRgbEnum) IsOneMinusSrcColor () bool { return me == "ONE_MINUS_SRC_COLOR" }

type XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandRgbEnum_SrcColor struct {
	Operand TglesTexcombinerOperandRgbEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operand,attr"`

}

//	Returns the default value for Operand -- "SRC_COLOR"
func (me XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandRgbEnum_SrcColor) OperandDefault () TglesTexcombinerOperandRgbEnum { return TglesTexcombinerOperandRgbEnum("SRC_COLOR") }

type TglesTexcombinerSourceEnum xsdt.Token

//	Returns true if the value of this enumerated TglesTexcombinerSourceEnum is "TEXTURE".
func (me TglesTexcombinerSourceEnum) IsTexture () bool { return me == "TEXTURE" }

//	Returns true if the value of this enumerated TglesTexcombinerSourceEnum is "CONSTANT".
func (me TglesTexcombinerSourceEnum) IsConstant () bool { return me == "CONSTANT" }

//	Since TglesTexcombinerSourceEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerSourceEnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Since TglesTexcombinerSourceEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerSourceEnum) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TglesTexcombinerSourceEnum is "PRIMARY".
func (me TglesTexcombinerSourceEnum) IsPrimary () bool { return me == "PRIMARY" }

//	This convenience method just performs a simple type conversion to TglesTexcombinerSourceEnum's alias type xsdt.Token.
func (me TglesTexcombinerSourceEnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TglesTexcombinerSourceEnum is "PREVIOUS".
func (me TglesTexcombinerSourceEnum) IsPrevious () bool { return me == "PREVIOUS" }

type XsdGoPkgHasAttr_Source_TglesTexcombinerSourceEnum_ struct {
	Source TglesTexcombinerSourceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema source,attr"`

}

type TglesTexcombinerArgumentRgbType struct {
	XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandRgbEnum_SrcColor

	XsdGoPkgHasAttr_Source_TglesTexcombinerSourceEnum_

	XsdGoPkgHasAttr_Sampler_XsdtNCName_

}

//	If the W.TglesTexcombinerArgumentRgbType function is not nil (ie. was set by outside code), calls it with this TglesTexcombinerArgumentRgbType instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TglesTexcombinerArgumentRgbType instance.
func (me *TglesTexcombinerArgumentRgbType) Walk ()  { 
	if fn := W.TglesTexcombinerArgumentRgbType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_ struct {
	Arguments []*TglesTexcombinerArgumentRgbType `xml:"http://www.collada.org/2008/03/COLLADASchema argument"`

}

//	If the W.XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_ instance.
func (me *XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_; fn != nil { fn(me) }
	for _, x := range me.Arguments { x.Walk() }
 }

type TglesTexcombinerCommandRgbType struct {
	XsdGoPkgHasAttr_Scale_XsdtFloat_

	XsdGoPkgHasAttr_Operator_TglesTexcombinerOperatorRgbEnum_

	XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_

}

//	If the W.TglesTexcombinerCommandRgbType function is not nil (ie. was set by outside code), calls it with this TglesTexcombinerCommandRgbType instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TglesTexcombinerCommandRgbType instance.
func (me *TglesTexcombinerCommandRgbType) Walk ()  { 
	if fn := W.TglesTexcombinerCommandRgbType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_.Walk()
 }

type XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_ struct {
	Rgb *TglesTexcombinerCommandRgbType `xml:"http://www.collada.org/2008/03/COLLADASchema RGB"`

}

//	If the W.XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_ instance.
func (me *XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_; fn != nil { fn(me) }
	me.Rgb.Walk()
 }

type TglesTexcombinerOperandAlphaEnum TglBlendEnum

//	Returns true if the value of this enumerated TglesTexcombinerOperandAlphaEnum is "SRC_ALPHA".
func (me TglesTexcombinerOperandAlphaEnum) IsSrcAlpha () bool { return me == "SRC_ALPHA" }

//	Returns true if the value of this enumerated TglesTexcombinerOperandAlphaEnum is "ONE_MINUS_SRC_ALPHA".
func (me TglesTexcombinerOperandAlphaEnum) IsOneMinusSrcAlpha () bool { return me == "ONE_MINUS_SRC_ALPHA" }

//	This convenience method just performs a simple type conversion to TglesTexcombinerOperandAlphaEnum's alias type TglBlendEnum.
func (me TglesTexcombinerOperandAlphaEnum) ToTglBlendEnum () TglBlendEnum { return TglBlendEnum(me) }

//	Since TglesTexcombinerOperandAlphaEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerOperandAlphaEnum) SetFromString (s string)  { (*TglBlendEnum)(me).SetFromString(s) }

//	Since TglesTexcombinerOperandAlphaEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerOperandAlphaEnum) String () string { return TglBlendEnum(me).String() }

type XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandAlphaEnum_SrcAlpha struct {
	Operand TglesTexcombinerOperandAlphaEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operand,attr"`

}

//	Returns the default value for Operand -- "SRC_ALPHA"
func (me XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandAlphaEnum_SrcAlpha) OperandDefault () TglesTexcombinerOperandAlphaEnum { return TglesTexcombinerOperandAlphaEnum("SRC_ALPHA") }

type TglesTexcombinerArgumentAlphaType struct {
	XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandAlphaEnum_SrcAlpha

	XsdGoPkgHasAttr_Source_TglesTexcombinerSourceEnum_

	XsdGoPkgHasAttr_Sampler_XsdtNCName_

}

//	If the W.TglesTexcombinerArgumentAlphaType function is not nil (ie. was set by outside code), calls it with this TglesTexcombinerArgumentAlphaType instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TglesTexcombinerArgumentAlphaType instance.
func (me *TglesTexcombinerArgumentAlphaType) Walk ()  { 
	if fn := W.TglesTexcombinerArgumentAlphaType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_ struct {
	Arguments []*TglesTexcombinerArgumentAlphaType `xml:"http://www.collada.org/2008/03/COLLADASchema argument"`

}

//	If the W.XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_ instance.
func (me *XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_; fn != nil { fn(me) }
	for _, x := range me.Arguments { x.Walk() }
 }

type TglesTexcombinerOperatorAlphaEnum xsdt.Token

//	This convenience method just performs a simple type conversion to TglesTexcombinerOperatorAlphaEnum's alias type xsdt.Token.
func (me TglesTexcombinerOperatorAlphaEnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "REPLACE".
func (me TglesTexcombinerOperatorAlphaEnum) IsReplace () bool { return me == "REPLACE" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "INTERPOLATE".
func (me TglesTexcombinerOperatorAlphaEnum) IsInterpolate () bool { return me == "INTERPOLATE" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "SUBTRACT".
func (me TglesTexcombinerOperatorAlphaEnum) IsSubtract () bool { return me == "SUBTRACT" }

//	Since TglesTexcombinerOperatorAlphaEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerOperatorAlphaEnum) String () string { return xsdt.Token(me).String() }

//	Since TglesTexcombinerOperatorAlphaEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerOperatorAlphaEnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "MODULATE".
func (me TglesTexcombinerOperatorAlphaEnum) IsModulate () bool { return me == "MODULATE" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "ADD".
func (me TglesTexcombinerOperatorAlphaEnum) IsAdd () bool { return me == "ADD" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "ADD_SIGNED".
func (me TglesTexcombinerOperatorAlphaEnum) IsAddSigned () bool { return me == "ADD_SIGNED" }

type XsdGoPkgHasAttr_Operator_TglesTexcombinerOperatorAlphaEnum_ struct {
	Operator TglesTexcombinerOperatorAlphaEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operator,attr"`

}

type TglesTexcombinerCommandAlphaType struct {
	XsdGoPkgHasAttr_Scale_XsdtFloat_

	XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_

	XsdGoPkgHasAttr_Operator_TglesTexcombinerOperatorAlphaEnum_

}

//	If the W.TglesTexcombinerCommandAlphaType function is not nil (ie. was set by outside code), calls it with this TglesTexcombinerCommandAlphaType instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TglesTexcombinerCommandAlphaType instance.
func (me *TglesTexcombinerCommandAlphaType) Walk ()  { 
	if fn := W.TglesTexcombinerCommandAlphaType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_.Walk()
 }

type XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_ struct {
	Alpha *TglesTexcombinerCommandAlphaType `xml:"http://www.collada.org/2008/03/COLLADASchema alpha"`

}

//	If the W.XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_ instance.
func (me *XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_; fn != nil { fn(me) }
	me.Alpha.Walk()
 }

type TglesTexcombinerCommandType struct {
	XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_

	XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_

	XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_

}

//	If the W.TglesTexcombinerCommandType function is not nil (ie. was set by outside code), calls it with this TglesTexcombinerCommandType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TglesTexcombinerCommandType instance.
func (me *TglesTexcombinerCommandType) Walk ()  { 
	if fn := W.TglesTexcombinerCommandType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_.Walk()
	me.XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_.Walk()
	me.XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_.Walk()
 }

type XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_ struct {
//	Defines a texture_pipeline command. This is a combiner-mode texturing operation.
	Texcombiners []*TglesTexcombinerCommandType `xml:"http://www.collada.org/2008/03/COLLADASchema texcombiner"`

}

//	If the W.XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_ instance.
func (me *XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_; fn != nil { fn(me) }
	for _, x := range me.Texcombiners { x.Walk() }
 }

//	The extra element may appear any number of times.
//	OpenGL ES extensions may be used here.
type XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
//	OpenGL ES extensions may be used here.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TglesTexturePipelineType struct {
//	Defines a texture_pipeline command. It is a simple noncombiner mode of texturing operations.
	XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_

//	Defines a texture_pipeline command. This is a combiner-mode texturing operation.
	XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The extra element may appear any number of times.
//	OpenGL ES extensions may be used here.
	XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_

}

//	If the W.TglesTexturePipelineType function is not nil (ie. was set by outside code), calls it with this TglesTexturePipelineType instance as the single argument. Then calls the Walk() method on 3/4 embed(s) and 0/0 field(s) belonging to this TglesTexturePipelineType instance.
func (me *TglesTexturePipelineType) Walk ()  { 
	if fn := W.TglesTexturePipelineType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_.Walk()
	me.XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_.Walk()
	me.XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_ struct {
	Value *TglesTexturePipelineType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_ instance.
func (me *XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceTexturePipeline struct {
	XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceTexturePipeline function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceTexturePipeline instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceTexturePipeline instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceTexturePipeline) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceTexturePipeline; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_.Walk()
 }

type XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_ struct {
	TexturePipeline *TxsdGlesPipelineSettingsGroupChoiceTexturePipeline `xml:"http://www.collada.org/2008/03/COLLADASchema texture_pipeline"`

}

//	If the W.XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_ instance.
func (me *XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_; fn != nil { fn(me) }
	me.TexturePipeline.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_ struct {
	ColorLogicOpEnable *TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable `xml:"http://www.collada.org/2008/03/COLLADASchema color_logic_op_enable"`

}

//	If the W.XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_ instance.
func (me *XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_; fn != nil { fn(me) }
	me.ColorLogicOpEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceFogEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceFogEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceFogEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceFogEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceFogEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceFogEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_ struct {
	FogEnable *TxsdGlesPipelineSettingsGroupChoiceFogEnable `xml:"http://www.collada.org/2008/03/COLLADASchema fog_enable"`

}

//	If the W.XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_ instance.
func (me *XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_; fn != nil { fn(me) }
	me.FogEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize instance.
func (me *TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_ struct {
	PointFadeThresholdSize *TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_fade_threshold_size"`

}

//	If the W.XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_ instance.
func (me *XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_; fn != nil { fn(me) }
	me.PointFadeThresholdSize.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLightAmbient struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightAmbient function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightAmbient instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightAmbient instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightAmbient) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightAmbient; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_ struct {
	LightAmbient *TxsdGlesPipelineSettingsGroupChoiceLightAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema light_ambient"`

}

//	If the W.XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_ instance.
func (me *XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_; fn != nil { fn(me) }
	me.LightAmbient.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat3Type_001 struct {
	Value Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0 -1"
func (me XsdGoPkgHasAttr_Value_Tfloat3Type_001) ValueDefault () Tfloat3Type { return Tfloat3Type("0 0 -1") }

type TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection struct {
	XsdGoPkgHasAttr_Value_Tfloat3Type_001

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_ struct {
	LightSpotDirection *TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_direction"`

}

//	If the W.XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_ instance.
func (me *XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_; fn != nil { fn(me) }
	me.LightSpotDirection.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLightSpecular struct {
	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightSpecular function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightSpecular instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightSpecular instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightSpecular) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightSpecular; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_ struct {
	LightSpecular *TxsdGlesPipelineSettingsGroupChoiceLightSpecular `xml:"http://www.collada.org/2008/03/COLLADASchema light_specular"`

}

//	If the W.XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_ instance.
func (me *XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_; fn != nil { fn(me) }
	me.LightSpecular.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_ struct {
	AlphaTestEnable *TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema alpha_test_enable"`

}

//	If the W.XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_ instance.
func (me *XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_; fn != nil { fn(me) }
	me.AlphaTestEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceColorMask struct {
	XsdGoPkgHasAttr_Value_Tbool4Type_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceColorMask function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceColorMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceColorMask instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceColorMask) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceColorMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_ struct {
	ColorMask *TxsdGlesPipelineSettingsGroupChoiceColorMask `xml:"http://www.collada.org/2008/03/COLLADASchema color_mask"`

}

//	If the W.XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_ instance.
func (me *XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_; fn != nil { fn(me) }
	me.ColorMask.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_ struct {
	LightConstantAttenuation *TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_constant_attenuation"`

}

//	If the W.XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_ instance.
func (me *XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_; fn != nil { fn(me) }
	me.LightConstantAttenuation.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_ struct {
	CullFaceEnable *TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face_enable"`

}

//	If the W.XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_ instance.
func (me *XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_; fn != nil { fn(me) }
	me.CullFaceEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceFogDensity struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceFogDensity function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceFogDensity instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceFogDensity instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceFogDensity) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceFogDensity; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_ struct {
	FogDensity *TxsdGlesPipelineSettingsGroupChoiceFogDensity `xml:"http://www.collada.org/2008/03/COLLADASchema fog_density"`

}

//	If the W.XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_ instance.
func (me *XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_; fn != nil { fn(me) }
	me.FogDensity.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat4Type_0010 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0 1 0"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_0010) ValueDefault () Tfloat4Type { return Tfloat4Type("0 0 1 0") }

type TxsdGlesPipelineSettingsGroupChoiceLightPosition struct {
	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0010

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightPosition function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightPosition instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightPosition instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightPosition) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightPosition; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_ struct {
	LightPosition *TxsdGlesPipelineSettingsGroupChoiceLightPosition `xml:"http://www.collada.org/2008/03/COLLADASchema light_position"`

}

//	If the W.XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_ instance.
func (me *XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_; fn != nil { fn(me) }
	me.LightPosition.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceMaterialEmission struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceMaterialEmission function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceMaterialEmission instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceMaterialEmission instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceMaterialEmission) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceMaterialEmission; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_ struct {
	MaterialEmission *TxsdGlesPipelineSettingsGroupChoiceMaterialEmission `xml:"http://www.collada.org/2008/03/COLLADASchema material_emission"`

}

//	If the W.XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_ instance.
func (me *XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_; fn != nil { fn(me) }
	me.MaterialEmission.Walk()
 }

type XsdGoPkgHasAttr_Value_TfloatType_0 struct {
	Value TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 0
func (me XsdGoPkgHasAttr_Value_TfloatType_0) ValueDefault () TfloatType { return TfloatType(0) }

type TxsdGlesPipelineSettingsGroupChoiceMaterialShininess struct {
	XsdGoPkgHasAttr_Value_TfloatType_0

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceMaterialShininess function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceMaterialShininess instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceMaterialShininess instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceMaterialShininess; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_ struct {
	MaterialShininess *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess `xml:"http://www.collada.org/2008/03/COLLADASchema material_shininess"`

}

//	If the W.XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_ instance.
func (me *XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_; fn != nil { fn(me) }
	me.MaterialShininess.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoicePointSizeMin struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_0

}

//	If the W.TxsdGlesPipelineSettingsGroupChoicePointSizeMin function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoicePointSizeMin instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoicePointSizeMin instance.
func (me *TxsdGlesPipelineSettingsGroupChoicePointSizeMin) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoicePointSizeMin; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_ struct {
	PointSizeMin *TxsdGlesPipelineSettingsGroupChoicePointSizeMin `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_min"`

}

//	If the W.XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_ instance.
func (me *XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_; fn != nil { fn(me) }
	me.PointSizeMin.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat4Type_08080810 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0.8 0.8 0.8 1.0"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_08080810) ValueDefault () Tfloat4Type { return Tfloat4Type("0.8 0.8 0.8 1.0") }

type TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_08080810

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_ struct {
	MaterialDiffuse *TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse `xml:"http://www.collada.org/2008/03/COLLADASchema material_diffuse"`

}

//	If the W.XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_ instance.
func (me *XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_; fn != nil { fn(me) }
	me.MaterialDiffuse.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_ struct {
	MultisampleEnable *TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable `xml:"http://www.collada.org/2008/03/COLLADASchema multisample_enable"`

}

//	If the W.XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_ instance.
func (me *XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_; fn != nil { fn(me) }
	me.MultisampleEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_TglShadeModelEnum_Smooth struct {
	Value TglShadeModelEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "SMOOTH"
func (me XsdGoPkgHasAttr_Value_TglShadeModelEnum_Smooth) ValueDefault () TglShadeModelEnum { return TglShadeModelEnum("SMOOTH") }

type TxsdGlesPipelineSettingsGroupChoiceShadeModel struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglShadeModelEnum_Smooth

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceShadeModel function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceShadeModel instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceShadeModel instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceShadeModel) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceShadeModel; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_ struct {
	ShadeModel *TxsdGlesPipelineSettingsGroupChoiceShadeModel `xml:"http://www.collada.org/2008/03/COLLADASchema shade_model"`

}

//	If the W.XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_ instance.
func (me *XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_; fn != nil { fn(me) }
	me.ShadeModel.Walk()
 }

type XsdGoPkgHasAttr_Value_XsdtBoolean_True struct {
	Value xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- true
func (me XsdGoPkgHasAttr_Value_XsdtBoolean_True) ValueDefault () xsdt.Boolean { return xsdt.Boolean(true) }

type TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_True

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_ struct {
	ColorMaterialEnable *TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable `xml:"http://www.collada.org/2008/03/COLLADASchema color_material_enable"`

}

//	If the W.XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_ instance.
func (me *XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_; fn != nil { fn(me) }
	me.ColorMaterialEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_ struct {
	RescaleNormalEnable *TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable `xml:"http://www.collada.org/2008/03/COLLADASchema rescale_normal_enable"`

}

//	If the W.XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_ instance.
func (me *XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_; fn != nil { fn(me) }
	me.RescaleNormalEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw struct {
	Value TglFrontFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "CCW"
func (me XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw) ValueDefault () TglFrontFaceEnum { return TglFrontFaceEnum("CCW") }

type TxsdGlesPipelineSettingsGroupChoiceFrontFace struct {
	XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceFrontFace function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceFrontFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceFrontFace instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceFrontFace) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceFrontFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_ struct {
	FrontFace *TxsdGlesPipelineSettingsGroupChoiceFrontFace `xml:"http://www.collada.org/2008/03/COLLADASchema front_face"`

}

//	If the W.XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_ instance.
func (me *XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_; fn != nil { fn(me) }
	me.FrontFace.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_ struct {
	StencilTestEnable *TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_test_enable"`

}

//	If the W.XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_ instance.
func (me *XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_; fn != nil { fn(me) }
	me.StencilTestEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_TglBlendEnum_One struct {
	Value TglBlendEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "ONE"
func (me XsdGoPkgHasAttr_Value_TglBlendEnum_One) ValueDefault () TglBlendEnum { return TglBlendEnum("ONE") }

type TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEnum_One

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ struct {
	Src *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc `xml:"http://www.collada.org/2008/03/COLLADASchema src"`

}

//	If the W.XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ instance.
func (me *XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_; fn != nil { fn(me) }
	me.Src.Walk()
 }

type XsdGoPkgHasAttr_Value_TglBlendEnum_Zero struct {
	Value TglBlendEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "ZERO"
func (me XsdGoPkgHasAttr_Value_TglBlendEnum_Zero) ValueDefault () TglBlendEnum { return TglBlendEnum("ZERO") }

type TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_ struct {
	Dest *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest `xml:"http://www.collada.org/2008/03/COLLADASchema dest"`

}

//	If the W.XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_ instance.
func (me *XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_; fn != nil { fn(me) }
	me.Dest.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceBlendFunc struct {
	XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_

	XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceBlendFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceBlendFunc instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceBlendFunc instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceBlendFunc) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceBlendFunc; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_.Walk()
	me.XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_.Walk()
 }

type XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_ struct {
	BlendFunc *TxsdGlesPipelineSettingsGroupChoiceBlendFunc `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func"`

}

//	If the W.XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_ instance.
func (me *XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_; fn != nil { fn(me) }
	me.BlendFunc.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoicePointSize struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoicePointSize function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoicePointSize instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoicePointSize instance.
func (me *TxsdGlesPipelineSettingsGroupChoicePointSize) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoicePointSize; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_ struct {
	PointSize *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_size"`

}

//	If the W.XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_ instance.
func (me *XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_; fn != nil { fn(me) }
	me.PointSize.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceDepthFunc struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceDepthFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceDepthFunc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceDepthFunc instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceDepthFunc) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceDepthFunc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_ struct {
	DepthFunc *TxsdGlesPipelineSettingsGroupChoiceDepthFunc `xml:"http://www.collada.org/2008/03/COLLADASchema depth_func"`

}

//	If the W.XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_ instance.
func (me *XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_; fn != nil { fn(me) }
	me.DepthFunc.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_TfloatType_0

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_ struct {
	LightSpotExponent *TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_exponent"`

}

//	If the W.XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_ instance.
func (me *XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_; fn != nil { fn(me) }
	me.LightSpotExponent.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_ struct {
	PolygonOffsetFillEnable *TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_fill_enable"`

}

//	If the W.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_ instance.
func (me *XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_; fn != nil { fn(me) }
	me.PolygonOffsetFillEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLineWidth struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLineWidth function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLineWidth instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLineWidth instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLineWidth) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLineWidth; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_ struct {
	LineWidth *TxsdGlesPipelineSettingsGroupChoiceLineWidth `xml:"http://www.collada.org/2008/03/COLLADASchema line_width"`

}

//	If the W.XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_ instance.
func (me *XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_; fn != nil { fn(me) }
	me.LineWidth.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_ struct {
	LineSmoothEnable *TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable `xml:"http://www.collada.org/2008/03/COLLADASchema line_smooth_enable"`

}

//	If the W.XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_ instance.
func (me *XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_; fn != nil { fn(me) }
	me.LineSmoothEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_ struct {
	NormalizeEnable *TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable `xml:"http://www.collada.org/2008/03/COLLADASchema normalize_enable"`

}

//	If the W.XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_ instance.
func (me *XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_; fn != nil { fn(me) }
	me.NormalizeEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceFogStart struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_0

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceFogStart function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceFogStart instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceFogStart instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceFogStart) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceFogStart; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_ struct {
	FogStart *TxsdGlesPipelineSettingsGroupChoiceFogStart `xml:"http://www.collada.org/2008/03/COLLADASchema fog_start"`

}

//	If the W.XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_ instance.
func (me *XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_; fn != nil { fn(me) }
	me.FogStart.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_ struct {
	DepthTestEnable *TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_test_enable"`

}

//	If the W.XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_ instance.
func (me *XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_; fn != nil { fn(me) }
	me.DepthTestEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoicePointSizeMax struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

//	If the W.TxsdGlesPipelineSettingsGroupChoicePointSizeMax function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoicePointSizeMax instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoicePointSizeMax instance.
func (me *TxsdGlesPipelineSettingsGroupChoicePointSizeMax) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoicePointSizeMax; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_ struct {
	PointSizeMax *TxsdGlesPipelineSettingsGroupChoicePointSizeMax `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_max"`

}

//	If the W.XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_ instance.
func (me *XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_; fn != nil { fn(me) }
	me.PointSizeMax.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_ struct {
	PointSmoothEnable *TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable `xml:"http://www.collada.org/2008/03/COLLADASchema point_smooth_enable"`

}

//	If the W.XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_ instance.
func (me *XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_; fn != nil { fn(me) }
	me.PointSmoothEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_TintType_4294967295 struct {
	Value TintType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 4294967295
func (me XsdGoPkgHasAttr_Value_TintType_4294967295) ValueDefault () TintType { return TintType(4294967295) }

type TxsdGlesPipelineSettingsGroupChoiceStencilMask struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TintType_4294967295

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilMask function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilMask instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilMask) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_ struct {
	StencilMask *TxsdGlesPipelineSettingsGroupChoiceStencilMask `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask"`

}

//	If the W.XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_ instance.
func (me *XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_; fn != nil { fn(me) }
	me.StencilMask.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ struct {
	Func *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

//	If the W.XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ instance.
func (me *XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_; fn != nil { fn(me) }
	me.Func.Walk()
 }

type XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0 struct {
	Value xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 0
func (me XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0) ValueDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(0) }

type TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef struct {
	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_ struct {
	Ref *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

//	If the W.XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_ instance.
func (me *XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_; fn != nil { fn(me) }
	me.Ref.Walk()
 }

type XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255 struct {
	Value xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 255
func (me XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255) ValueDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(255) }

type TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_ struct {
	Mask *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

//	If the W.XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_ instance.
func (me *XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_; fn != nil { fn(me) }
	me.Mask.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceStencilFunc struct {
	XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_

	XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_

	XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceStencilFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceStencilFunc instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceStencilFunc instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceStencilFunc) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceStencilFunc; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_.Walk()
	me.XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_.Walk()
	me.XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_.Walk()
 }

type XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_ struct {
	StencilFunc *TxsdGlesPipelineSettingsGroupChoiceStencilFunc `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func"`

}

//	If the W.XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_ instance.
func (me *XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_; fn != nil { fn(me) }
	me.StencilFunc.Walk()
 }

type XsdGoPkgHasAttr_Value_TglFogEnum_Exp struct {
	Value TglFogEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "EXP"
func (me XsdGoPkgHasAttr_Value_TglFogEnum_Exp) ValueDefault () TglFogEnum { return TglFogEnum("EXP") }

type TxsdGlesPipelineSettingsGroupChoiceFogMode struct {
	XsdGoPkgHasAttr_Value_TglFogEnum_Exp

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceFogMode function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceFogMode instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceFogMode instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceFogMode) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceFogMode; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_ struct {
	FogMode *TxsdGlesPipelineSettingsGroupChoiceFogMode `xml:"http://www.collada.org/2008/03/COLLADASchema fog_mode"`

}

//	If the W.XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_ instance.
func (me *XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_; fn != nil { fn(me) }
	me.FogMode.Walk()
 }

type XsdGoPkgHasAttr_Value_TglFaceEnum_Back struct {
	Value TglFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "BACK"
func (me XsdGoPkgHasAttr_Value_TglFaceEnum_Back) ValueDefault () TglFaceEnum { return TglFaceEnum("BACK") }

type TxsdGlesPipelineSettingsGroupChoiceCullFace struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFaceEnum_Back

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceCullFace function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceCullFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceCullFace instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceCullFace) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceCullFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_ struct {
	CullFace *TxsdGlesPipelineSettingsGroupChoiceCullFace `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face"`

}

//	If the W.XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_ instance.
func (me *XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_; fn != nil { fn(me) }
	me.CullFace.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat2Type_01 struct {
	Value Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 1"
func (me XsdGoPkgHasAttr_Value_Tfloat2Type_01) ValueDefault () Tfloat2Type { return Tfloat2Type("0 1") }

type TxsdGlesPipelineSettingsGroupChoiceDepthRange struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat2Type_01

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceDepthRange function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceDepthRange instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceDepthRange instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceDepthRange) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceDepthRange; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_ struct {
	DepthRange *TxsdGlesPipelineSettingsGroupChoiceDepthRange `xml:"http://www.collada.org/2008/03/COLLADASchema depth_range"`

}

//	If the W.XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_ instance.
func (me *XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_; fn != nil { fn(me) }
	me.DepthRange.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceLightingEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceLightingEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceLightingEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceLightingEnable instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceLightingEnable) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceLightingEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_ struct {
	LightingEnable *TxsdGlesPipelineSettingsGroupChoiceLightingEnable `xml:"http://www.collada.org/2008/03/COLLADASchema lighting_enable"`

}

//	If the W.XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_ instance.
func (me *XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_; fn != nil { fn(me) }
	me.LightingEnable.Walk()
 }

type TxsdGlesPipelineSettingsGroupChoiceFogEnd struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceFogEnd function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceFogEnd instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceFogEnd instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceFogEnd) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceFogEnd; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_ struct {
	FogEnd *TxsdGlesPipelineSettingsGroupChoiceFogEnd `xml:"http://www.collada.org/2008/03/COLLADASchema fog_end"`

}

//	If the W.XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_ instance.
func (me *XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_; fn != nil { fn(me) }
	me.FogEnd.Walk()
 }

type XsdGoPkgHasAttr_Value_Tint4Type_ struct {
	Value Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGlesPipelineSettingsGroupChoiceScissor struct {
	XsdGoPkgHasAttr_Value_Tint4Type_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlesPipelineSettingsGroupChoiceScissor function is not nil (ie. was set by outside code), calls it with this TxsdGlesPipelineSettingsGroupChoiceScissor instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlesPipelineSettingsGroupChoiceScissor instance.
func (me *TxsdGlesPipelineSettingsGroupChoiceScissor) Walk ()  { 
	if fn := W.TxsdGlesPipelineSettingsGroupChoiceScissor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_ struct {
	Scissor *TxsdGlesPipelineSettingsGroupChoiceScissor `xml:"http://www.collada.org/2008/03/COLLADASchema scissor"`

}

//	If the W.XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_ instance.
func (me *XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_; fn != nil { fn(me) }
	me.Scissor.Walk()
 }

type XsdGoPkgHasGroup_GlesPipelineSettingsGroup struct {
	XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_

	XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_

	XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_

	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_

	XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_

	XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_

	XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_

	XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_

	XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_

	XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_

	XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_

	XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_

	XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_

	XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_

	XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_

	XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_

	XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_

	XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_

	XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_

	XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_

	XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_

	XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_

	XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_

	XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_

	XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_

	XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_

	XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_

	XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_

	XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_

	XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_

	XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_

	XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_

	XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_

	XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_

	XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_

	XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_

	XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_

	XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_

	XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_

	XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_

	XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_

	XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_

	XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_

	XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_

	XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_

	XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_

	XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_

	XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_

	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_

	XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_

	XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_

	XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_

	XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_

	XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_

	XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_

	XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_

	XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_

	XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_

	XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_

	XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_

	XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_

	XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_

	XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_

	XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_

	XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_

	XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_

	XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_

	XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_

	XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_

}

//	If the W.XsdGoPkgHasGroup_GlesPipelineSettingsGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_GlesPipelineSettingsGroup instance as the single argument. Then calls the Walk() method on 69/69 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_GlesPipelineSettingsGroup instance.
func (me *XsdGoPkgHasGroup_GlesPipelineSettingsGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_GlesPipelineSettingsGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_.Walk()
	me.XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_.Walk()
	me.XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_.Walk()
	me.XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_.Walk()
	me.XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_.Walk()
	me.XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_.Walk()
	me.XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_.Walk()
	me.XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_.Walk()
	me.XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_.Walk()
	me.XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_.Walk()
	me.XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_.Walk()
	me.XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_.Walk()
	me.XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_.Walk()
	me.XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_.Walk()
	me.XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_.Walk()
	me.XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_.Walk()
	me.XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_.Walk()
	me.XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_.Walk()
	me.XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_.Walk()
	me.XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_.Walk()
	me.XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_.Walk()
	me.XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_.Walk()
	me.XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_.Walk()
	me.XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_.Walk()
	me.XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_.Walk()
	me.XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_.Walk()
	me.XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_.Walk()
	me.XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_.Walk()
	me.XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_.Walk()
	me.XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_.Walk()
	me.XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_.Walk()
	me.XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_.Walk()
	me.XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_.Walk()
	me.XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_.Walk()
	me.XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_.Walk()
	me.XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_.Walk()
	me.XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_.Walk()
	me.XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_.Walk()
	me.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_.Walk()
	me.XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_.Walk()
	me.XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_.Walk()
	me.XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_.Walk()
	me.XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_.Walk()
	me.XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_.Walk()
	me.XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_.Walk()
	me.XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_.Walk()
	me.XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_.Walk()
	me.XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_.Walk()
	me.XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_.Walk()
	me.XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_.Walk()
	me.XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_.Walk()
	me.XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_.Walk()
	me.XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_.Walk()
	me.XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_.Walk()
	me.XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_.Walk()
	me.XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_.Walk()
	me.XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_.Walk()
	me.XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_.Walk()
	me.XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_.Walk()
	me.XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_.Walk()
	me.XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_.Walk()
	me.XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_.Walk()
	me.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_.Walk()
	me.XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_.Walk()
	me.XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_.Walk()
	me.XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_.Walk()
	me.XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_.Walk()
	me.XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_.Walk()
	me.XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_.Walk()
 }

type TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates struct {
	XsdGoPkgHasGroup_GlesPipelineSettingsGroup

}

//	If the W.TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates function is not nil (ie. was set by outside code), calls it with this TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates instance.
func (me *TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates) Walk ()  { 
	if fn := W.TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates; fn != nil { fn(me) }
	me.XsdGoPkgHasGroup_GlesPipelineSettingsGroup.Walk()
 }

type XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_ struct {
	States *TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates `xml:"http://www.collada.org/2008/03/COLLADASchema states"`

}

//	If the W.XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_ instance.
func (me *XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_; fn != nil { fn(me) }
	me.States.Walk()
 }

type TxsdProfileGlesTypeSequenceTechniqueSequencePass struct {
//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_

	XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_

	XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_

}

//	If the W.TxsdProfileGlesTypeSequenceTechniqueSequencePass function is not nil (ie. was set by outside code), calls it with this TxsdProfileGlesTypeSequenceTechniqueSequencePass instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TxsdProfileGlesTypeSequenceTechniqueSequencePass instance.
func (me *TxsdProfileGlesTypeSequenceTechniqueSequencePass) Walk ()  { 
	if fn := W.TxsdProfileGlesTypeSequenceTechniqueSequencePass; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_.Walk()
	me.XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_.Walk()
 }

type XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_ struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	Passes []*TxsdProfileGlesTypeSequenceTechniqueSequencePass `xml:"http://www.collada.org/2008/03/COLLADASchema pass"`

}

//	If the W.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_ instance.
func (me *XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_; fn != nil { fn(me) }
	for _, x := range me.Passes { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdProfileGlesTypeSequenceTechnique struct {
	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_

//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_

	XsdGoPkgHasAttr_Id_XsdtId_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdProfileGlesTypeSequenceTechnique function is not nil (ie. was set by outside code), calls it with this TxsdProfileGlesTypeSequenceTechnique instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TxsdProfileGlesTypeSequenceTechnique instance.
func (me *TxsdProfileGlesTypeSequenceTechnique) Walk ()  { 
	if fn := W.TxsdProfileGlesTypeSequenceTechnique; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_.Walk()
 }

type XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Techniques []*TxsdProfileGlesTypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TprofileGlesType struct {
//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	XsdGoPkgHasAttr_Platform_XsdtNCName_Pc

	XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_

}

//	If the W.TprofileGlesType function is not nil (ie. was set by outside code), calls it with this TprofileGlesType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TprofileGlesType instance.
func (me *TprofileGlesType) Walk ()  { 
	if fn := W.TprofileGlesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_.Walk()
	me.XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_.Walk()
 }

type XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_ struct {
	ProfileGles *TprofileGlesType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_GLES"`

}

//	If the W.XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_ instance.
func (me *XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_; fn != nil { fn(me) }
	me.ProfileGles.Walk()
 }

//	Bridge COLLADA FX to an external FX framework such as NVIDIA's CgFX or Microsoft's Direct3D FX
type XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	A platform defines a string that specifies which platform this is hint is aimed for.
type XsdGoPkgHasAttr_Platform_XsdtNCName_ struct {
//	A platform defines a string that specifies which platform this is hint is aimed for.
	Platform xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema platform,attr"`

}

type XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TprofileBridgeType struct {
	XsdGoPkgHasAttr_Id_XsdtId_

//	The url to the file which we are bridging too
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_

//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	XsdGoPkgHasAttr_Platform_XsdtNCName_

	XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_

}

//	If the W.TprofileBridgeType function is not nil (ie. was set by outside code), calls it with this TprofileBridgeType instance as the single argument. Then calls the Walk() method on 2/5 embed(s) and 0/0 field(s) belonging to this TprofileBridgeType instance.
func (me *TprofileBridgeType) Walk ()  { 
	if fn := W.TprofileBridgeType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_ struct {
	ProfileBridge *TprofileBridgeType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_BRIDGE"`

}

//	If the W.XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_ instance.
func (me *XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_; fn != nil { fn(me) }
	me.ProfileBridge.Walk()
 }

//	Opens a block of COMMON platform-specific data types and technique declarations.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
//	A reference to the technique to use for the specified platform.
type XsdGoPkgHasAttr_Ref_XsdtNCName_ struct {
//	A reference to the technique to use for the specified platform.
	Ref xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema ref,attr"`

}

type TxsdFxCommonFloatOrParamTypeChoiceParam struct {
	XsdGoPkgHasAttr_Ref_XsdtNCName_

}

//	If the W.TxsdFxCommonFloatOrParamTypeChoiceParam function is not nil (ie. was set by outside code), calls it with this TxsdFxCommonFloatOrParamTypeChoiceParam instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdFxCommonFloatOrParamTypeChoiceParam instance.
func (me *TxsdFxCommonFloatOrParamTypeChoiceParam) Walk ()  { 
	if fn := W.TxsdFxCommonFloatOrParamTypeChoiceParam; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_ struct {
	Param *TxsdFxCommonFloatOrParamTypeChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_ instance.
func (me *XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type TxsdFxCommonFloatOrParamTypeChoiceFloat struct {
	XsdGoPkgValue TfloatType `xml:",chardata"`

	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdFxCommonFloatOrParamTypeChoiceFloat function is not nil (ie. was set by outside code), calls it with this TxsdFxCommonFloatOrParamTypeChoiceFloat instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdFxCommonFloatOrParamTypeChoiceFloat instance.
func (me *TxsdFxCommonFloatOrParamTypeChoiceFloat) Walk ()  { 
	if fn := W.TxsdFxCommonFloatOrParamTypeChoiceFloat; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_ struct {
	Float *TxsdFxCommonFloatOrParamTypeChoiceFloat `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_ instance.
func (me *XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_; fn != nil { fn(me) }
	me.Float.Walk()
 }

type TfxCommonFloatOrParamType struct {
	XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_

	XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_

}

//	If the W.TfxCommonFloatOrParamType function is not nil (ie. was set by outside code), calls it with this TfxCommonFloatOrParamType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TfxCommonFloatOrParamType instance.
func (me *TfxCommonFloatOrParamType) Walk ()  { 
	if fn := W.TfxCommonFloatOrParamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_.Walk()
	me.XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_.Walk()
 }

type XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ struct {
	Reflectivity *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema reflectivity"`

}

//	If the W.XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Reflectivity.Walk()
 }

type TxsdFxCommonColorOrTextureTypeChoiceColor struct {
	XsdGoPkgValue TfxColorType `xml:",chardata"`

	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdFxCommonColorOrTextureTypeChoiceColor function is not nil (ie. was set by outside code), calls it with this TxsdFxCommonColorOrTextureTypeChoiceColor instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdFxCommonColorOrTextureTypeChoiceColor instance.
func (me *TxsdFxCommonColorOrTextureTypeChoiceColor) Walk ()  { 
	if fn := W.TxsdFxCommonColorOrTextureTypeChoiceColor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_ struct {
	Color *TxsdFxCommonColorOrTextureTypeChoiceColor `xml:"http://www.collada.org/2008/03/COLLADASchema color"`

}

//	If the W.XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_ instance.
func (me *XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_; fn != nil { fn(me) }
	me.Color.Walk()
 }

type TxsdFxCommonColorOrTextureTypeChoiceParam struct {
	XsdGoPkgHasAttr_Ref_XsdtNCName_

}

//	If the W.TxsdFxCommonColorOrTextureTypeChoiceParam function is not nil (ie. was set by outside code), calls it with this TxsdFxCommonColorOrTextureTypeChoiceParam instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdFxCommonColorOrTextureTypeChoiceParam instance.
func (me *TxsdFxCommonColorOrTextureTypeChoiceParam) Walk ()  { 
	if fn := W.TxsdFxCommonColorOrTextureTypeChoiceParam; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_ struct {
	Param *TxsdFxCommonColorOrTextureTypeChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_ instance.
func (me *XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type XsdGoPkgHasAttr_Texture_XsdtNCName_ struct {
	Texture xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema texture,attr"`

}

type XsdGoPkgHasAttr_Texcoord_XsdtNCName_ struct {
	Texcoord xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema texcoord,attr"`

}

type XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdFxCommonColorOrTextureTypeChoiceTexture struct {
	XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Texture_XsdtNCName_

	XsdGoPkgHasAttr_Texcoord_XsdtNCName_

}

//	If the W.TxsdFxCommonColorOrTextureTypeChoiceTexture function is not nil (ie. was set by outside code), calls it with this TxsdFxCommonColorOrTextureTypeChoiceTexture instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TxsdFxCommonColorOrTextureTypeChoiceTexture instance.
func (me *TxsdFxCommonColorOrTextureTypeChoiceTexture) Walk ()  { 
	if fn := W.TxsdFxCommonColorOrTextureTypeChoiceTexture; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_ struct {
	Texture *TxsdFxCommonColorOrTextureTypeChoiceTexture `xml:"http://www.collada.org/2008/03/COLLADASchema texture"`

}

//	If the W.XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_ instance.
func (me *XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_; fn != nil { fn(me) }
	me.Texture.Walk()
 }

type TfxCommonColorOrTextureType struct {
	XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_

	XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_

	XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_

}

//	If the W.TfxCommonColorOrTextureType function is not nil (ie. was set by outside code), calls it with this TfxCommonColorOrTextureType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TfxCommonColorOrTextureType instance.
func (me *TfxCommonColorOrTextureType) Walk ()  { 
	if fn := W.TfxCommonColorOrTextureType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_.Walk()
	me.XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_.Walk()
	me.XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_.Walk()
 }

type XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ struct {
	Specular *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema specular"`

}

//	If the W.XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Specular.Walk()
 }

type TfxOpaqueEnum xsdt.String

//	Since TfxOpaqueEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxOpaqueEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxOpaqueEnum is "A_ZERO".
func (me TfxOpaqueEnum) IsAZero () bool { return me == "A_ZERO" }

//	Returns true if the value of this enumerated TfxOpaqueEnum is "A_ONE".
func (me TfxOpaqueEnum) IsAOne () bool { return me == "A_ONE" }

//	This convenience method just performs a simple type conversion to TfxOpaqueEnum's alias type xsdt.String.
func (me TfxOpaqueEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TfxOpaqueEnum is "RGB_ZERO".
func (me TfxOpaqueEnum) IsRgbZero () bool { return me == "RGB_ZERO" }

//	Since TfxOpaqueEnum is just a simple String type, this merely returns the current string value.
func (me TfxOpaqueEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TfxOpaqueEnum is "RGB_ONE".
func (me TfxOpaqueEnum) IsRgbOne () bool { return me == "RGB_ONE" }

type XsdGoPkgHasAttr_Opaque_TfxOpaqueEnum_AOne struct {
	Opaque TfxOpaqueEnum `xml:"http://www.collada.org/2008/03/COLLADASchema opaque,attr"`

}

//	Returns the default value for Opaque -- "A_ONE"
func (me XsdGoPkgHasAttr_Opaque_TfxOpaqueEnum_AOne) OpaqueDefault () TfxOpaqueEnum { return TfxOpaqueEnum("A_ONE") }

type TfxCommonTransparentType struct {
	TfxCommonColorOrTextureType

	XsdGoPkgHasAttr_Opaque_TfxOpaqueEnum_AOne

}

//	If the W.TfxCommonTransparentType function is not nil (ie. was set by outside code), calls it with this TfxCommonTransparentType instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TfxCommonTransparentType instance.
func (me *TfxCommonTransparentType) Walk ()  { 
	if fn := W.TfxCommonTransparentType; fn != nil { fn(me) }
	me.TfxCommonColorOrTextureType.Walk()
 }

type XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ struct {
	Transparent *TfxCommonTransparentType `xml:"http://www.collada.org/2008/03/COLLADASchema transparent"`

}

//	If the W.XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ instance.
func (me *XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_; fn != nil { fn(me) }
	me.Transparent.Walk()
 }

type XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ struct {
	Emission *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema emission"`

}

//	If the W.XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Emission.Walk()
 }

type XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ struct {
	Transparency *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema transparency"`

}

//	If the W.XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Transparency.Walk()
 }

type XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ struct {
	Reflective *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema reflective"`

}

//	If the W.XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Reflective.Walk()
 }

type XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ struct {
	Ambient *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema ambient"`

}

//	If the W.XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Ambient.Walk()
 }

type XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ struct {
	Diffuse *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema diffuse"`

}

//	If the W.XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Diffuse.Walk()
 }

type XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ struct {
	IndexOfRefraction *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema index_of_refraction"`

}

//	If the W.XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.IndexOfRefraction.Walk()
 }

type XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ struct {
	Shininess *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema shininess"`

}

//	If the W.XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Shininess.Walk()
 }

type TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn struct {
	XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_

	XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_

}

//	If the W.TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn function is not nil (ie. was set by outside code), calls it with this TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn instance as the single argument. Then calls the Walk() method on 10/10 embed(s) and 0/0 field(s) belonging to this TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn instance.
func (me *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn) Walk ()  { 
	if fn := W.TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_.Walk()
	me.XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_.Walk()
 }

type XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_ struct {
	Blinn *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn `xml:"http://www.collada.org/2008/03/COLLADASchema blinn"`

}

//	If the W.XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_ instance.
func (me *XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_; fn != nil { fn(me) }
	me.Blinn.Walk()
 }

type XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ struct {
	IndexOfRefraction *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema index_of_refraction"`

}

//	If the W.XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.IndexOfRefraction.Walk()
 }

type XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ struct {
	Transparent *TfxCommonTransparentType `xml:"http://www.collada.org/2008/03/COLLADASchema transparent"`

}

//	If the W.XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ instance.
func (me *XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_; fn != nil { fn(me) }
	me.Transparent.Walk()
 }

type XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ struct {
	Emission *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema emission"`

}

//	If the W.XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Emission.Walk()
 }

type XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ struct {
	Transparency *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema transparency"`

}

//	If the W.XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Transparency.Walk()
 }

type XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ struct {
	Reflectivity *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema reflectivity"`

}

//	If the W.XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Reflectivity.Walk()
 }

type XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ struct {
	Reflective *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema reflective"`

}

//	If the W.XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Reflective.Walk()
 }

type TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant struct {
	XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_

	XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_

}

//	If the W.TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant function is not nil (ie. was set by outside code), calls it with this TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant instance as the single argument. Then calls the Walk() method on 6/6 embed(s) and 0/0 field(s) belonging to this TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant instance.
func (me *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant) Walk ()  { 
	if fn := W.TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_.Walk()
	me.XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_.Walk()
 }

type XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_ struct {
	Constant *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant `xml:"http://www.collada.org/2008/03/COLLADASchema constant"`

}

//	If the W.XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_ instance.
func (me *XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_; fn != nil { fn(me) }
	me.Constant.Walk()
 }

//	The technique element may contain an asset element.
type XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_ struct {
//	The technique element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ struct {
	Transparency *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema transparency"`

}

//	If the W.XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Transparency.Walk()
 }

type XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ struct {
	Reflectivity *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema reflectivity"`

}

//	If the W.XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Reflectivity.Walk()
 }

type XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ struct {
	Diffuse *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema diffuse"`

}

//	If the W.XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Diffuse.Walk()
 }

type XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ struct {
	Transparent *TfxCommonTransparentType `xml:"http://www.collada.org/2008/03/COLLADASchema transparent"`

}

//	If the W.XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ instance.
func (me *XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_; fn != nil { fn(me) }
	me.Transparent.Walk()
 }

type XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ struct {
	Ambient *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema ambient"`

}

//	If the W.XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Ambient.Walk()
 }

type XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ struct {
	Emission *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema emission"`

}

//	If the W.XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Emission.Walk()
 }

type XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ struct {
	IndexOfRefraction *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema index_of_refraction"`

}

//	If the W.XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.IndexOfRefraction.Walk()
 }

type XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ struct {
	Reflective *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema reflective"`

}

//	If the W.XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Reflective.Walk()
 }

type TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert struct {
	XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_

	XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_

}

//	If the W.TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert function is not nil (ie. was set by outside code), calls it with this TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert instance as the single argument. Then calls the Walk() method on 8/8 embed(s) and 0/0 field(s) belonging to this TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert instance.
func (me *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert) Walk ()  { 
	if fn := W.TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_.Walk()
	me.XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_.Walk()
 }

type XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_ struct {
	Lambert *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert `xml:"http://www.collada.org/2008/03/COLLADASchema lambert"`

}

//	If the W.XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_ instance.
func (me *XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_; fn != nil { fn(me) }
	me.Lambert.Walk()
 }

type XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ struct {
	Reflective *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema reflective"`

}

//	If the W.XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Reflective.Walk()
 }

type XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ struct {
	Shininess *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema shininess"`

}

//	If the W.XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Shininess.Walk()
 }

type XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ struct {
	Reflectivity *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema reflectivity"`

}

//	If the W.XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Reflectivity.Walk()
 }

type XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ struct {
	Transparent *TfxCommonTransparentType `xml:"http://www.collada.org/2008/03/COLLADASchema transparent"`

}

//	If the W.XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ instance.
func (me *XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_; fn != nil { fn(me) }
	me.Transparent.Walk()
 }

type XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ struct {
	IndexOfRefraction *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema index_of_refraction"`

}

//	If the W.XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.IndexOfRefraction.Walk()
 }

type XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ struct {
	Transparency *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema transparency"`

}

//	If the W.XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_; fn != nil { fn(me) }
	me.Transparency.Walk()
 }

type XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ struct {
	Emission *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema emission"`

}

//	If the W.XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Emission.Walk()
 }

type XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ struct {
	Diffuse *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema diffuse"`

}

//	If the W.XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Diffuse.Walk()
 }

type XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ struct {
	Ambient *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema ambient"`

}

//	If the W.XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Ambient.Walk()
 }

type XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ struct {
	Specular *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema specular"`

}

//	If the W.XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ instance.
func (me *XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_; fn != nil { fn(me) }
	me.Specular.Walk()
 }

type TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong struct {
	XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_

	XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_

}

//	If the W.TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong function is not nil (ie. was set by outside code), calls it with this TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong instance as the single argument. Then calls the Walk() method on 10/10 embed(s) and 0/0 field(s) belonging to this TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong instance.
func (me *TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong) Walk ()  { 
	if fn := W.TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_.Walk()
	me.XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_.Walk()
	me.XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_.Walk()
 }

type XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_ struct {
	Phong *TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong `xml:"http://www.collada.org/2008/03/COLLADASchema phong"`

}

//	If the W.XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_ instance.
func (me *XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_; fn != nil { fn(me) }
	me.Phong.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdProfileCommonTypeSequenceTechnique struct {
	XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_

	XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The technique element may contain an asset element.
	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_

}

//	If the W.TxsdProfileCommonTypeSequenceTechnique function is not nil (ie. was set by outside code), calls it with this TxsdProfileCommonTypeSequenceTechnique instance as the single argument. Then calls the Walk() method on 6/8 embed(s) and 0/0 field(s) belonging to this TxsdProfileCommonTypeSequenceTechnique instance.
func (me *TxsdProfileCommonTypeSequenceTechnique) Walk ()  { 
	if fn := W.TxsdProfileCommonTypeSequenceTechnique; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_.Walk()
	me.XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_.Walk()
	me.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_.Walk()
	me.XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_.Walk()
	me.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Technique *TxsdProfileCommonTypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_ instance.
func (me *XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_; fn != nil { fn(me) }
	me.Technique.Walk()
 }

type XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	A two-dimensional texture sampler.
//	Sampling state that can be sharable between samplers because there is often heavy re-use
type XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_ struct {
	InstanceImage *TinstanceImageType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_image"`

}

//	If the W.XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_ instance.
func (me *XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_; fn != nil { fn(me) }
	me.InstanceImage.Walk()
 }

//	Mipmap level-of-detail bias. The default value is zero
type XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00 struct {
//	Mipmap level-of-detail bias. The default value is zero
	MipBias xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema mip_bias"`

}

//	If the W.XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00 instance.
func (me *XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00; fn != nil { fn(me) }
 }

//	Returns the default value for MipBias -- 0.0
func (me XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00) MipBiasDefault () xsdt.Float { return xsdt.Float(0.0) }

type XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	level-of-detail index of largest map to use. Values range from 0 to (n - 1) where 0 is the largest. The default value is zero
type XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0 struct {
//	level-of-detail index of largest map to use. Values range from 0 to (n - 1) where 0 is the largest. The default value is zero
	MipMaxLevel xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema mip_max_level"`

}

//	Returns the default value for MipMaxLevel -- 0
func (me XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0) MipMaxLevelDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(0) }

//	If the W.XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0 instance.
func (me *XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0; fn != nil { fn(me) }
 }

//	level-of-detail index of smallest map to use. Values range from 0 to (n - 1) where 0 is the smallest. The default value is zero
type XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0 struct {
//	level-of-detail index of smallest map to use. Values range from 0 to (n - 1) where 0 is the smallest. The default value is zero
	MipMinLevel xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema mip_min_level"`

}

//	Returns the default value for MipMinLevel -- 0
func (me XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0) MipMinLevelDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(0) }

//	If the W.XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0 instance.
func (me *XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0; fn != nil { fn(me) }
 }

type TfxSamplerWrapEnum xsdt.Nmtoken

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "CLAMP".
func (me TfxSamplerWrapEnum) IsClamp () bool { return me == "CLAMP" }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "BORDER".
func (me TfxSamplerWrapEnum) IsBorder () bool { return me == "BORDER" }

//	Since TfxSamplerWrapEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxSamplerWrapEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "MIRROR_ONCE".
func (me TfxSamplerWrapEnum) IsMirrorOnce () bool { return me == "MIRROR_ONCE" }

//	Since TfxSamplerWrapEnum is just a simple String type, this merely returns the current string value.
func (me TfxSamplerWrapEnum) String () string { return xsdt.Nmtoken(me).String() }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "WRAP".
func (me TfxSamplerWrapEnum) IsWrap () bool { return me == "WRAP" }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "MIRROR".
func (me TfxSamplerWrapEnum) IsMirror () bool { return me == "MIRROR" }

//	This convenience method just performs a simple type conversion to TfxSamplerWrapEnum's alias type xsdt.Nmtoken.
func (me TfxSamplerWrapEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

type XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap struct {
	WrapP TfxSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_p"`

}

//	If the W.XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap instance.
func (me *XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap; fn != nil { fn(me) }
 }

//	Returns the default value for WrapP -- "WRAP"
func (me XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap) WrapPDefault () TfxSamplerWrapEnum { return TfxSamplerWrapEnum("WRAP") }

type XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_ struct {
	BorderColor TfxColorType `xml:"http://www.collada.org/2008/03/COLLADASchema border_color"`

}

//	If the W.XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_ instance.
func (me *XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_; fn != nil { fn(me) }
 }

//	minification
type XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear struct {
//	minification
	Minfilter TfxSamplerMinFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema minfilter"`

}

//	If the W.XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear instance.
func (me *XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear; fn != nil { fn(me) }
 }

//	Returns the default value for Minfilter -- "LINEAR"
func (me XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear) MinfilterDefault () TfxSamplerMinFilterEnum { return TfxSamplerMinFilterEnum("LINEAR") }

//	filtering across mips.
//	NONE = no minification
//	NEAREST = bilinear
//	LINEAR = trilinear
//	ANISOTROPIC =  Compensates for distortion caused by the difference in angle between the polygon and the plane of the screen.  Relies on max_anisotropy
type XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear struct {
//	filtering across mips.
//	NONE = no minification
//	NEAREST = bilinear
//	LINEAR = trilinear
//	ANISOTROPIC =  Compensates for distortion caused by the difference in angle between the polygon and the plane of the screen.  Relies on max_anisotropy
	Mipfilter TfxSamplerMipFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema mipfilter"`

}

//	Returns the default value for Mipfilter -- "LINEAR"
func (me XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear) MipfilterDefault () TfxSamplerMipFilterEnum { return TfxSamplerMipFilterEnum("LINEAR") }

//	If the W.XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear instance.
func (me *XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap struct {
	WrapS TfxSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_s"`

}

//	If the W.XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap instance.
func (me *XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap; fn != nil { fn(me) }
 }

//	Returns the default value for WrapS -- "WRAP"
func (me XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap) WrapSDefault () TfxSamplerWrapEnum { return TfxSamplerWrapEnum("WRAP") }

type XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap struct {
	WrapT TfxSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_t"`

}

//	Returns the default value for WrapT -- "WRAP"
func (me XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap) WrapTDefault () TfxSamplerWrapEnum { return TfxSamplerWrapEnum("WRAP") }

//	If the W.XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap instance.
func (me *XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap; fn != nil { fn(me) }
 }

//	magnification
type XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear struct {
//	magnification
	Magfilter TfxSamplerMagFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema magfilter"`

}

//	If the W.XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear instance.
func (me *XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear; fn != nil { fn(me) }
 }

//	Returns the default value for Magfilter -- "LINEAR"
func (me XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear) MagfilterDefault () TfxSamplerMagFilterEnum { return TfxSamplerMagFilterEnum("LINEAR") }

//	number of samples that may be used durring anisotropic filtering
type XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1 struct {
//	number of samples that may be used durring anisotropic filtering
	MaxAnisotropy xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema max_anisotropy"`

}

//	If the W.XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1 instance.
func (me *XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1; fn != nil { fn(me) }
 }

//	Returns the default value for MaxAnisotropy -- 1
func (me XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1) MaxAnisotropyDefault () xsdt.UnsignedInt { return xsdt.UnsignedInt(1) }

type XsdGoPkgHasGroup_FxSamplerStatesGroup struct {
	XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap

	XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_

//	minification
	XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear

//	filtering across mips.
//	NONE = no minification
//	NEAREST = bilinear
//	LINEAR = trilinear
//	ANISOTROPIC =  Compensates for distortion caused by the difference in angle between the polygon and the plane of the screen.  Relies on max_anisotropy
	XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear

	XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap

	XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap

//	magnification
	XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear

//	number of samples that may be used durring anisotropic filtering
	XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1

//	Mipmap level-of-detail bias. The default value is zero
	XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00

	XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_

//	level-of-detail index of largest map to use. Values range from 0 to (n - 1) where 0 is the largest. The default value is zero
	XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0

//	level-of-detail index of smallest map to use. Values range from 0 to (n - 1) where 0 is the smallest. The default value is zero
	XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0

}

//	If the W.XsdGoPkgHasGroup_FxSamplerStatesGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_FxSamplerStatesGroup instance as the single argument. Then calls the Walk() method on 12/12 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_FxSamplerStatesGroup instance.
func (me *XsdGoPkgHasGroup_FxSamplerStatesGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_FxSamplerStatesGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0.Walk()
	me.XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0.Walk()
	me.XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap.Walk()
	me.XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_.Walk()
	me.XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear.Walk()
	me.XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear.Walk()
	me.XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap.Walk()
	me.XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap.Walk()
	me.XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear.Walk()
	me.XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1.Walk()
	me.XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00.Walk()
 }

type TfxSamplerType struct {
	XsdGoPkgHasGroup_FxSamplerStatesGroup

	XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_

}

//	If the W.TfxSamplerType function is not nil (ie. was set by outside code), calls it with this TfxSamplerType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TfxSamplerType instance.
func (me *TfxSamplerType) Walk ()  { 
	if fn := W.TfxSamplerType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_.Walk()
	me.XsdGoPkgHasGroup_FxSamplerStatesGroup.Walk()
 }

type TfxSampler2DType struct {
	TfxSamplerType

}

//	If the W.TfxSampler2DType function is not nil (ie. was set by outside code), calls it with this TfxSampler2DType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxSampler2DType instance.
func (me *TfxSampler2DType) Walk ()  { 
	if fn := W.TfxSampler2DType; fn != nil { fn(me) }
	me.TfxSamplerType.Walk()
 }

type XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_ struct {
	Sampler2D *TfxSampler2DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler2D"`

}

//	If the W.XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_ instance.
func (me *XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_; fn != nil { fn(me) }
	me.Sampler2D.Walk()
 }

type XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_ struct {
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

//	If the W.XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_ struct {
	Float4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4"`

}

//	If the W.XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_ struct {
	Float3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3"`

}

//	If the W.XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

//	If the W.XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_; fn != nil { fn(me) }
 }

type TfxCommonNewparamType struct {
	XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_

	XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_

}

//	If the W.TfxCommonNewparamType function is not nil (ie. was set by outside code), calls it with this TfxCommonNewparamType instance as the single argument. Then calls the Walk() method on 6/7 embed(s) and 0/0 field(s) belonging to this TfxCommonNewparamType instance.
func (me *TfxCommonNewparamType) Walk ()  { 
	if fn := W.TfxCommonNewparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_.Walk()
	me.XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_.Walk()
	me.XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_.Walk()
 }

type XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_ struct {
	Newparams []*TfxCommonNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type TprofileCommonType struct {
	XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_

}

//	If the W.TprofileCommonType function is not nil (ie. was set by outside code), calls it with this TprofileCommonType instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TprofileCommonType instance.
func (me *TprofileCommonType) Walk ()  { 
	if fn := W.TprofileCommonType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_.Walk()
 }

type XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_ struct {
	ProfileCommon *TprofileCommonType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_COMMON"`

}

//	If the W.XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_ instance.
func (me *XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_; fn != nil { fn(me) }
	me.ProfileCommon.Walk()
 }

//	Opens a block of GLSL platform-specific data types and technique declarations.
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
type XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
//	A group that defines all of the renderstates used for the CG and GLSL profiles.
type TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ struct {
	SampleAlphaToCoverageEnable *TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_coverage_enable"`

}

//	If the W.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ instance.
func (me *XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_; fn != nil { fn(me) }
	me.SampleAlphaToCoverageEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePointSize struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePointSize function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePointSize instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePointSize instance.
func (me *TxsdGlPipelineSettingsGroupChoicePointSize) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePointSize; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_ struct {
	PointSize *TxsdGlPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_size"`

}

//	If the W.XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_ instance.
func (me *XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_; fn != nil { fn(me) }
	me.PointSize.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask struct {
	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ struct {
	Mask *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

//	If the W.XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ instance.
func (me *XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_; fn != nil { fn(me) }
	me.Mask.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ struct {
	Back *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack `xml:"http://www.collada.org/2008/03/COLLADASchema back"`

}

//	If the W.XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ instance.
func (me *XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_; fn != nil { fn(me) }
	me.Back.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ struct {
	Front *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront `xml:"http://www.collada.org/2008/03/COLLADASchema front"`

}

//	If the W.XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ instance.
func (me *XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_; fn != nil { fn(me) }
	me.Front.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef struct {
	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ struct {
	Ref *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

//	If the W.XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ instance.
func (me *XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_; fn != nil { fn(me) }
	me.Ref.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate struct {
	XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_

	XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_

	XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_

	XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_.Walk()
	me.XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_.Walk()
	me.XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_.Walk()
	me.XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_.Walk()
 }

type XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_ struct {
	StencilFuncSeparate *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func_separate"`

}

//	If the W.XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_ instance.
func (me *XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_; fn != nil { fn(me) }
	me.StencilFuncSeparate.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePointSmoothEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePointSmoothEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePointSmoothEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePointSmoothEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoicePointSmoothEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePointSmoothEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_ struct {
	PointSmoothEnable *TxsdGlPipelineSettingsGroupChoicePointSmoothEnable `xml:"http://www.collada.org/2008/03/COLLADASchema point_smooth_enable"`

}

//	If the W.XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_ instance.
func (me *XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_; fn != nil { fn(me) }
	me.PointSmoothEnable.Walk()
 }

type TglMaxLightsIndexType xsdt.NonNegativeInteger

//	Since TglMaxLightsIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglMaxLightsIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

//	Returns a string representation of this TglMaxLightsIndexType's current non-string scalar value.
func (me TglMaxLightsIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	This convenience method just performs a simple type conversion to TglMaxLightsIndexType's alias type xsdt.NonNegativeInteger.
func (me TglMaxLightsIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

type XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_ struct {
	Index TglMaxLightsIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceLightDiffuse struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightDiffuse function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightDiffuse instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightDiffuse instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightDiffuse) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightDiffuse; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_ struct {
	LightDiffuse *TxsdGlPipelineSettingsGroupChoiceLightDiffuse `xml:"http://www.collada.org/2008/03/COLLADASchema light_diffuse"`

}

//	If the W.XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_ instance.
func (me *XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_; fn != nil { fn(me) }
	me.LightDiffuse.Walk()
 }

//	A two-dimensional texture sampler.
type TfxSamplerRECTType struct {
	TfxSamplerType

}

//	If the W.TfxSamplerRECTType function is not nil (ie. was set by outside code), calls it with this TfxSamplerRECTType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxSamplerRECTType instance.
func (me *TfxSamplerRECTType) Walk ()  { 
	if fn := W.TfxSamplerRECTType; fn != nil { fn(me) }
	me.TfxSamplerType.Walk()
 }

type XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_ struct {
	Value *TfxSamplerRECTType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_ instance.
func (me *XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_; fn != nil { fn(me) }
 }

type TglMaxTextureImageUnitsIndexType xsdt.NonNegativeInteger

//	Returns a string representation of this TglMaxTextureImageUnitsIndexType's current non-string scalar value.
func (me TglMaxTextureImageUnitsIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	Since TglMaxTextureImageUnitsIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglMaxTextureImageUnitsIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglMaxTextureImageUnitsIndexType's alias type xsdt.NonNegativeInteger.
func (me TglMaxTextureImageUnitsIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

type XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_ struct {
	Index TglMaxTextureImageUnitsIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceTextureRECT struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_

	XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTextureRECT function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTextureRECT instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTextureRECT instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTextureRECT) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTextureRECT; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_.Walk()
	me.XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_.Walk()
 }

type XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_ struct {
	TextureRECT *TxsdGlPipelineSettingsGroupChoiceTextureRECT `xml:"http://www.collada.org/2008/03/COLLADASchema textureRECT"`

}

//	If the W.XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_ instance.
func (me *XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_; fn != nil { fn(me) }
	me.TextureRECT.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_ struct {
	LightConstantAttenuation *TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_constant_attenuation"`

}

//	If the W.XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_ instance.
func (me *XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_; fn != nil { fn(me) }
	me.LightConstantAttenuation.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceDepthRange struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat2Type_01

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceDepthRange function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceDepthRange instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceDepthRange instance.
func (me *TxsdGlPipelineSettingsGroupChoiceDepthRange) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceDepthRange; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_ struct {
	DepthRange *TxsdGlPipelineSettingsGroupChoiceDepthRange `xml:"http://www.collada.org/2008/03/COLLADASchema depth_range"`

}

//	If the W.XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_ instance.
func (me *XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_; fn != nil { fn(me) }
	me.DepthRange.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLogicOpEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLogicOpEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLogicOpEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLogicOpEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLogicOpEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLogicOpEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_ struct {
	LogicOpEnable *TxsdGlPipelineSettingsGroupChoiceLogicOpEnable `xml:"http://www.collada.org/2008/03/COLLADASchema logic_op_enable"`

}

//	If the W.XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_ instance.
func (me *XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_; fn != nil { fn(me) }
	me.LogicOpEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceFogDensity struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceFogDensity function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceFogDensity instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceFogDensity instance.
func (me *TxsdGlPipelineSettingsGroupChoiceFogDensity) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceFogDensity; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_ struct {
	FogDensity *TxsdGlPipelineSettingsGroupChoiceFogDensity `xml:"http://www.collada.org/2008/03/COLLADASchema fog_density"`

}

//	If the W.XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_ instance.
func (me *XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_; fn != nil { fn(me) }
	me.FogDensity.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightAmbient struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightAmbient function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightAmbient instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightAmbient instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightAmbient) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightAmbient; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_ struct {
	LightAmbient *TxsdGlPipelineSettingsGroupChoiceLightAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema light_ambient"`

}

//	If the W.XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_ instance.
func (me *XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_; fn != nil { fn(me) }
	me.LightAmbient.Walk()
 }

//	A texture sampler for cube maps.
type TfxSamplerCUBEType struct {
	TfxSamplerType

}

//	If the W.TfxSamplerCUBEType function is not nil (ie. was set by outside code), calls it with this TfxSamplerCUBEType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxSamplerCUBEType instance.
func (me *TfxSamplerCUBEType) Walk ()  { 
	if fn := W.TfxSamplerCUBEType; fn != nil { fn(me) }
	me.TfxSamplerType.Walk()
 }

type XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_ struct {
	Value *TfxSamplerCUBEType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_ instance.
func (me *XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_; fn != nil { fn(me) }
 }

type TxsdGlPipelineSettingsGroupChoiceTextureCUBE struct {
	XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTextureCUBE function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTextureCUBE instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTextureCUBE instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTextureCUBE) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTextureCUBE; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_.Walk()
	me.XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_.Walk()
 }

type XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_ struct {
	TextureCUBE *TxsdGlPipelineSettingsGroupChoiceTextureCUBE `xml:"http://www.collada.org/2008/03/COLLADASchema textureCUBE"`

}

//	If the W.XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_ instance.
func (me *XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_; fn != nil { fn(me) }
	me.TextureCUBE.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceMaterialShininess struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_0

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceMaterialShininess function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceMaterialShininess instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceMaterialShininess instance.
func (me *TxsdGlPipelineSettingsGroupChoiceMaterialShininess) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceMaterialShininess; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_ struct {
	MaterialShininess *TxsdGlPipelineSettingsGroupChoiceMaterialShininess `xml:"http://www.collada.org/2008/03/COLLADASchema material_shininess"`

}

//	If the W.XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_ instance.
func (me *XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_; fn != nil { fn(me) }
	me.MaterialShininess.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceMaterialEmission struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceMaterialEmission function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceMaterialEmission instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceMaterialEmission instance.
func (me *TxsdGlPipelineSettingsGroupChoiceMaterialEmission) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceMaterialEmission; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_ struct {
	MaterialEmission *TxsdGlPipelineSettingsGroupChoiceMaterialEmission `xml:"http://www.collada.org/2008/03/COLLADASchema material_emission"`

}

//	If the W.XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_ instance.
func (me *XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_; fn != nil { fn(me) }
	me.MaterialEmission.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceFrontFace struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceFrontFace function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceFrontFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceFrontFace instance.
func (me *TxsdGlPipelineSettingsGroupChoiceFrontFace) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceFrontFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_ struct {
	FrontFace *TxsdGlPipelineSettingsGroupChoiceFrontFace `xml:"http://www.collada.org/2008/03/COLLADASchema front_face"`

}

//	If the W.XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_ instance.
func (me *XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_; fn != nil { fn(me) }
	me.FrontFace.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_180

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_ struct {
	LightSpotCutoff *TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_cutoff"`

}

//	If the W.XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_ instance.
func (me *XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_; fn != nil { fn(me) }
	me.LightSpotCutoff.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLogicOp struct {
	XsdGoPkgHasAttr_Value_TglLogicOpEnum_Copy

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLogicOp function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLogicOp instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLogicOp instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLogicOp) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLogicOp; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_ struct {
	LogicOp *TxsdGlPipelineSettingsGroupChoiceLogicOp `xml:"http://www.collada.org/2008/03/COLLADASchema logic_op"`

}

//	If the W.XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_ instance.
func (me *XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_; fn != nil { fn(me) }
	me.LogicOp.Walk()
 }

type XsdGoPkgHasAttr_Value_TglPolygonModeEnum_Fill struct {
	Value TglPolygonModeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "FILL"
func (me XsdGoPkgHasAttr_Value_TglPolygonModeEnum_Fill) ValueDefault () TglPolygonModeEnum { return TglPolygonModeEnum("FILL") }

type TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglPolygonModeEnum_Fill

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_ struct {
	Mode *TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode `xml:"http://www.collada.org/2008/03/COLLADASchema mode"`

}

//	If the W.XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_ instance.
func (me *XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_; fn != nil { fn(me) }
	me.Mode.Walk()
 }

type XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack struct {
	Value TglFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "FRONT_AND_BACK"
func (me XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack) ValueDefault () TglFaceEnum { return TglFaceEnum("FRONT_AND_BACK") }

type TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_ struct {
	Face *TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

//	If the W.XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_ instance.
func (me *XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_; fn != nil { fn(me) }
	me.Face.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePolygonMode struct {
	XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_

	XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonMode function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonMode instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonMode instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonMode) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonMode; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_.Walk()
	me.XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_.Walk()
 }

type XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_ struct {
	PolygonMode *TxsdGlPipelineSettingsGroupChoicePolygonMode `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_mode"`

}

//	If the W.XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_ instance.
func (me *XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_; fn != nil { fn(me) }
	me.PolygonMode.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightSpotDirection struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat3Type_001

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightSpotDirection function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightSpotDirection instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightSpotDirection instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightSpotDirection) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightSpotDirection; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_ struct {
	LightSpotDirection *TxsdGlPipelineSettingsGroupChoiceLightSpotDirection `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_direction"`

}

//	If the W.XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_ instance.
func (me *XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_; fn != nil { fn(me) }
	me.LightSpotDirection.Walk()
 }

type XsdGoPkgHasAttr_Value_XsdtString_ struct {
	Value xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceTextureEnvMode struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtString_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTextureEnvMode function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTextureEnvMode instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTextureEnvMode instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTextureEnvMode) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTextureEnvMode; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_ struct {
	TextureEnvMode *TxsdGlPipelineSettingsGroupChoiceTextureEnvMode `xml:"http://www.collada.org/2008/03/COLLADASchema texture_env_mode"`

}

//	If the W.XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_ instance.
func (me *XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_; fn != nil { fn(me) }
	me.TextureEnvMode.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace struct {
	XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ struct {
	Face *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

//	If the W.XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ instance.
func (me *XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_; fn != nil { fn(me) }
	me.Face.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask struct {
	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ struct {
	Mask *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

//	If the W.XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ instance.
func (me *XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_; fn != nil { fn(me) }
	me.Mask.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate struct {
	XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_

	XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_.Walk()
	me.XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_.Walk()
 }

type XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_ struct {
	StencilMaskSeparate *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask_separate"`

}

//	If the W.XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_ instance.
func (me *XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_; fn != nil { fn(me) }
	me.StencilMaskSeparate.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_08080810

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse instance.
func (me *TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_ struct {
	MaterialDiffuse *TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse `xml:"http://www.collada.org/2008/03/COLLADASchema material_diffuse"`

}

//	If the W.XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_ instance.
func (me *XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_; fn != nil { fn(me) }
	me.MaterialDiffuse.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightingEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightingEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightingEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightingEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightingEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightingEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_ struct {
	LightingEnable *TxsdGlPipelineSettingsGroupChoiceLightingEnable `xml:"http://www.collada.org/2008/03/COLLADASchema lighting_enable"`

}

//	If the W.XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_ instance.
func (me *XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_; fn != nil { fn(me) }
	me.LightingEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_ struct {
	RescaleNormalEnable *TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable `xml:"http://www.collada.org/2008/03/COLLADASchema rescale_normal_enable"`

}

//	If the W.XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_ instance.
func (me *XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_; fn != nil { fn(me) }
	me.RescaleNormalEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_ struct {
	LightModelTwoSideEnable *TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_two_side_enable"`

}

//	If the W.XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_ instance.
func (me *XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_; fn != nil { fn(me) }
	me.LightModelTwoSideEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePointSizeMax struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePointSizeMax function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePointSizeMax instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePointSizeMax instance.
func (me *TxsdGlPipelineSettingsGroupChoicePointSizeMax) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePointSizeMax; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_ struct {
	PointSizeMax *TxsdGlPipelineSettingsGroupChoicePointSizeMax `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_max"`

}

//	If the W.XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_ instance.
func (me *XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_; fn != nil { fn(me) }
	me.PointSizeMax.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTexture3DEnable struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTexture3DEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTexture3DEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTexture3DEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTexture3DEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTexture3DEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_ struct {
	Texture3DEnable *TxsdGlPipelineSettingsGroupChoiceTexture3DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema texture3D_enable"`

}

//	If the W.XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_ instance.
func (me *XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_; fn != nil { fn(me) }
	me.Texture3DEnable.Walk()
 }

type TglFogCoordSrcEnum xsdt.String

//	Returns true if the value of this enumerated TglFogCoordSrcEnum is "FRAGMENT_DEPTH".
func (me TglFogCoordSrcEnum) IsFragmentDepth () bool { return me == "FRAGMENT_DEPTH" }

//	Since TglFogCoordSrcEnum is just a simple String type, this merely returns the current string value.
func (me TglFogCoordSrcEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TglFogCoordSrcEnum's alias type xsdt.String.
func (me TglFogCoordSrcEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TglFogCoordSrcEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFogCoordSrcEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglFogCoordSrcEnum is "FOG_COORDINATE".
func (me TglFogCoordSrcEnum) IsFogCoordinate () bool { return me == "FOG_COORDINATE" }

type XsdGoPkgHasAttr_Value_TglFogCoordSrcEnum_FogCoordinate struct {
	Value TglFogCoordSrcEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "FOG_COORDINATE"
func (me XsdGoPkgHasAttr_Value_TglFogCoordSrcEnum_FogCoordinate) ValueDefault () TglFogCoordSrcEnum { return TglFogCoordSrcEnum("FOG_COORDINATE") }

type TxsdGlPipelineSettingsGroupChoiceFogCoordSrc struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFogCoordSrcEnum_FogCoordinate

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceFogCoordSrc function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceFogCoordSrc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceFogCoordSrc instance.
func (me *TxsdGlPipelineSettingsGroupChoiceFogCoordSrc) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceFogCoordSrc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_ struct {
	FogCoordSrc *TxsdGlPipelineSettingsGroupChoiceFogCoordSrc `xml:"http://www.collada.org/2008/03/COLLADASchema fog_coord_src"`

}

//	If the W.XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_ instance.
func (me *XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_; fn != nil { fn(me) }
	me.FogCoordSrc.Walk()
 }

type TglBlendEquationEnum xsdt.String

//	Since TglBlendEquationEnum is just a simple String type, this merely returns the current string value.
func (me TglBlendEquationEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "MAX".
func (me TglBlendEquationEnum) IsMax () bool { return me == "MAX" }

//	Since TglBlendEquationEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglBlendEquationEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglBlendEquationEnum's alias type xsdt.String.
func (me TglBlendEquationEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "FUNC_ADD".
func (me TglBlendEquationEnum) IsFuncAdd () bool { return me == "FUNC_ADD" }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "MIN".
func (me TglBlendEquationEnum) IsMin () bool { return me == "MIN" }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "FUNC_SUBTRACT".
func (me TglBlendEquationEnum) IsFuncSubtract () bool { return me == "FUNC_SUBTRACT" }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "FUNC_REVERSE_SUBTRACT".
func (me TglBlendEquationEnum) IsFuncReverseSubtract () bool { return me == "FUNC_REVERSE_SUBTRACT" }

type XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd struct {
	Value TglBlendEquationEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "FUNC_ADD"
func (me XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd) ValueDefault () TglBlendEquationEnum { return TglBlendEquationEnum("FUNC_ADD") }

type TxsdGlPipelineSettingsGroupChoiceBlendEquation struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendEquation function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendEquation instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendEquation instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendEquation) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendEquation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_ struct {
	BlendEquation *TxsdGlPipelineSettingsGroupChoiceBlendEquation `xml:"http://www.collada.org/2008/03/COLLADASchema blend_equation"`

}

//	If the W.XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_ instance.
func (me *XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_; fn != nil { fn(me) }
	me.BlendEquation.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceFogEnd struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceFogEnd function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceFogEnd instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceFogEnd instance.
func (me *TxsdGlPipelineSettingsGroupChoiceFogEnd) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceFogEnd; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_ struct {
	FogEnd *TxsdGlPipelineSettingsGroupChoiceFogEnd `xml:"http://www.collada.org/2008/03/COLLADASchema fog_end"`

}

//	If the W.XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_ instance.
func (me *XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_; fn != nil { fn(me) }
	me.FogEnd.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightPosition struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0010

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightPosition function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightPosition instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightPosition instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightPosition) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightPosition; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_ struct {
	LightPosition *TxsdGlPipelineSettingsGroupChoiceLightPosition `xml:"http://www.collada.org/2008/03/COLLADASchema light_position"`

}

//	If the W.XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_ instance.
func (me *XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_; fn != nil { fn(me) }
	me.LightPosition.Walk()
 }

type XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_ struct {
	Value *TfxSampler2DType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_ instance.
func (me *XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTexture2D struct {
	XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTexture2D function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTexture2D instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTexture2D instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTexture2D) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTexture2D; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_.Walk()
	me.XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_.Walk()
 }

type XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_ struct {
	Texture2D *TxsdGlPipelineSettingsGroupChoiceTexture2D `xml:"http://www.collada.org/2008/03/COLLADASchema texture2D"`

}

//	If the W.XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_ instance.
func (me *XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_; fn != nil { fn(me) }
	me.Texture2D.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceCullFace struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFaceEnum_Back

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceCullFace function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceCullFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceCullFace instance.
func (me *TxsdGlPipelineSettingsGroupChoiceCullFace) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceCullFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_ struct {
	CullFace *TxsdGlPipelineSettingsGroupChoiceCullFace `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face"`

}

//	If the W.XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_ instance.
func (me *XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_; fn != nil { fn(me) }
	me.CullFace.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceMaterialSpecular struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceMaterialSpecular function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceMaterialSpecular instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceMaterialSpecular instance.
func (me *TxsdGlPipelineSettingsGroupChoiceMaterialSpecular) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceMaterialSpecular; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_ struct {
	MaterialSpecular *TxsdGlPipelineSettingsGroupChoiceMaterialSpecular `xml:"http://www.collada.org/2008/03/COLLADASchema material_specular"`

}

//	If the W.XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_ instance.
func (me *XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_; fn != nil { fn(me) }
	me.MaterialSpecular.Walk()
 }

type XsdGoPkgHasAttr_Value_Tfloat2Type_ struct {
	Value Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceDepthBounds struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat2Type_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceDepthBounds function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceDepthBounds instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceDepthBounds instance.
func (me *TxsdGlPipelineSettingsGroupChoiceDepthBounds) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceDepthBounds; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_ struct {
	DepthBounds *TxsdGlPipelineSettingsGroupChoiceDepthBounds `xml:"http://www.collada.org/2008/03/COLLADASchema depth_bounds"`

}

//	If the W.XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_ instance.
func (me *XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_; fn != nil { fn(me) }
	me.DepthBounds.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceDepthMask struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_True

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceDepthMask function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceDepthMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceDepthMask instance.
func (me *TxsdGlPipelineSettingsGroupChoiceDepthMask) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceDepthMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_ struct {
	DepthMask *TxsdGlPipelineSettingsGroupChoiceDepthMask `xml:"http://www.collada.org/2008/03/COLLADASchema depth_mask"`

}

//	If the W.XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_ instance.
func (me *XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_; fn != nil { fn(me) }
	me.DepthMask.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceFogMode struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFogEnum_Exp

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceFogMode function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceFogMode instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceFogMode instance.
func (me *TxsdGlPipelineSettingsGroupChoiceFogMode) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceFogMode; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_ struct {
	FogMode *TxsdGlPipelineSettingsGroupChoiceFogMode `xml:"http://www.collada.org/2008/03/COLLADASchema fog_mode"`

}

//	If the W.XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_ instance.
func (me *XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_; fn != nil { fn(me) }
	me.FogMode.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ struct {
	Alpha *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema alpha"`

}

//	If the W.XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ instance.
func (me *XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_; fn != nil { fn(me) }
	me.Alpha.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ struct {
	Rgb *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb `xml:"http://www.collada.org/2008/03/COLLADASchema rgb"`

}

//	If the W.XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ instance.
func (me *XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_; fn != nil { fn(me) }
	me.Rgb.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate struct {
	XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_

	XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_.Walk()
	me.XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_.Walk()
 }

type XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_ struct {
	BlendEquationSeparate *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema blend_equation_separate"`

}

//	If the W.XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_ instance.
func (me *XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_; fn != nil { fn(me) }
	me.BlendEquationSeparate.Walk()
 }

//	A three-dimensional texture sampler.
type TfxSampler3DType struct {
	TfxSamplerType

}

//	If the W.TfxSampler3DType function is not nil (ie. was set by outside code), calls it with this TfxSampler3DType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxSampler3DType instance.
func (me *TfxSampler3DType) Walk ()  { 
	if fn := W.TfxSampler3DType; fn != nil { fn(me) }
	me.TfxSamplerType.Walk()
 }

type XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_ struct {
	Value *TfxSampler3DType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_ instance.
func (me *XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_; fn != nil { fn(me) }
 }

type TxsdGlPipelineSettingsGroupChoiceTexture3D struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_

	XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTexture3D function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTexture3D instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTexture3D instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTexture3D) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTexture3D; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_.Walk()
	me.XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_.Walk()
 }

type XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_ struct {
	Texture3D *TxsdGlPipelineSettingsGroupChoiceTexture3D `xml:"http://www.collada.org/2008/03/COLLADASchema texture3D"`

}

//	If the W.XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_ instance.
func (me *XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_; fn != nil { fn(me) }
	me.Texture3D.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLineWidth struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLineWidth function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLineWidth instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLineWidth instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLineWidth) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLineWidth; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_ struct {
	LineWidth *TxsdGlPipelineSettingsGroupChoiceLineWidth `xml:"http://www.collada.org/2008/03/COLLADASchema line_width"`

}

//	If the W.XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_ instance.
func (me *XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_; fn != nil { fn(me) }
	me.LineWidth.Walk()
 }

type XsdGoPkgHasAttr_Value_TglLightModelColorControlEnum_SingleColor struct {
	Value TglLightModelColorControlEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "SINGLE_COLOR"
func (me XsdGoPkgHasAttr_Value_TglLightModelColorControlEnum_SingleColor) ValueDefault () TglLightModelColorControlEnum { return TglLightModelColorControlEnum("SINGLE_COLOR") }

type TxsdGlPipelineSettingsGroupChoiceLightModelColorControl struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglLightModelColorControlEnum_SingleColor

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightModelColorControl function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightModelColorControl instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightModelColorControl instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightModelColorControl) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightModelColorControl; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_ struct {
	LightModelColorControl *TxsdGlPipelineSettingsGroupChoiceLightModelColorControl `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_color_control"`

}

//	If the W.XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_ instance.
func (me *XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_; fn != nil { fn(me) }
	me.LightModelColorControl.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_ struct {
	PolygonStippleEnable *TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_stipple_enable"`

}

//	If the W.XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_ instance.
func (me *XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_; fn != nil { fn(me) }
	me.PolygonStippleEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_ struct {
	PolygonOffsetLineEnable *TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_line_enable"`

}

//	If the W.XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_ instance.
func (me *XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_; fn != nil { fn(me) }
	me.PolygonOffsetLineEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation struct {
	XsdGoPkgHasAttr_Value_TfloatType_0

	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_ struct {
	LightLinearAttenuation *TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_linear_attenuation"`

}

//	If the W.XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_ instance.
func (me *XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_; fn != nil { fn(me) }
	me.LightLinearAttenuation.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLineStippleEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLineStippleEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLineStippleEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLineStippleEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLineStippleEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLineStippleEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_ struct {
	LineStippleEnable *TxsdGlPipelineSettingsGroupChoiceLineStippleEnable `xml:"http://www.collada.org/2008/03/COLLADASchema line_stipple_enable"`

}

//	If the W.XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_ instance.
func (me *XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_; fn != nil { fn(me) }
	me.LineStippleEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_ struct {
	TextureDEPTHEnable *TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable `xml:"http://www.collada.org/2008/03/COLLADASchema textureDEPTH_enable"`

}

//	If the W.XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_ instance.
func (me *XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_; fn != nil { fn(me) }
	me.TextureDEPTHEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_TglMaterialEnum_AmbientAndDiffuse struct {
	Value TglMaterialEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "AMBIENT_AND_DIFFUSE"
func (me XsdGoPkgHasAttr_Value_TglMaterialEnum_AmbientAndDiffuse) ValueDefault () TglMaterialEnum { return TglMaterialEnum("AMBIENT_AND_DIFFUSE") }

type TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode struct {
	XsdGoPkgHasAttr_Value_TglMaterialEnum_AmbientAndDiffuse

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode instance.
func (me *TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_ struct {
	Mode *TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode `xml:"http://www.collada.org/2008/03/COLLADASchema mode"`

}

//	If the W.XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_ instance.
func (me *XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_; fn != nil { fn(me) }
	me.Mode.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace instance.
func (me *TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_ struct {
	Face *TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

//	If the W.XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_ instance.
func (me *XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_; fn != nil { fn(me) }
	me.Face.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceColorMaterial struct {
	XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_

	XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceColorMaterial function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceColorMaterial instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceColorMaterial instance.
func (me *TxsdGlPipelineSettingsGroupChoiceColorMaterial) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceColorMaterial; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_.Walk()
	me.XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_.Walk()
 }

type XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_ struct {
	ColorMaterial *TxsdGlPipelineSettingsGroupChoiceColorMaterial `xml:"http://www.collada.org/2008/03/COLLADASchema color_material"`

}

//	If the W.XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_ instance.
func (me *XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_; fn != nil { fn(me) }
	me.ColorMaterial.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightModelAmbient struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_02020210

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightModelAmbient function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightModelAmbient instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightModelAmbient instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightModelAmbient) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightModelAmbient; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_ struct {
	LightModelAmbient *TxsdGlPipelineSettingsGroupChoiceLightModelAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_ambient"`

}

//	If the W.XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_ instance.
func (me *XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_; fn != nil { fn(me) }
	me.LightModelAmbient.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceMultisampleEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceMultisampleEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceMultisampleEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceMultisampleEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceMultisampleEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceMultisampleEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_ struct {
	MultisampleEnable *TxsdGlPipelineSettingsGroupChoiceMultisampleEnable `xml:"http://www.collada.org/2008/03/COLLADASchema multisample_enable"`

}

//	If the W.XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_ instance.
func (me *XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_; fn != nil { fn(me) }
	me.MultisampleEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceDepthFunc struct {
	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceDepthFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceDepthFunc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceDepthFunc instance.
func (me *TxsdGlPipelineSettingsGroupChoiceDepthFunc) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceDepthFunc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_ struct {
	DepthFunc *TxsdGlPipelineSettingsGroupChoiceDepthFunc `xml:"http://www.collada.org/2008/03/COLLADASchema depth_func"`

}

//	If the W.XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_ instance.
func (me *XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_; fn != nil { fn(me) }
	me.DepthFunc.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceFogEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceFogEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceFogEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceFogEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceFogEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceFogEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_ struct {
	FogEnable *TxsdGlPipelineSettingsGroupChoiceFogEnable `xml:"http://www.collada.org/2008/03/COLLADASchema fog_enable"`

}

//	If the W.XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_ instance.
func (me *XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_; fn != nil { fn(me) }
	me.FogEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep struct {
	Value TglStencilOpEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "KEEP"
func (me XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep) ValueDefault () TglStencilOpEnum { return TglStencilOpEnum("KEEP") }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ struct {
	Fail *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

//	If the W.XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ instance.
func (me *XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_; fn != nil { fn(me) }
	me.Fail.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ struct {
	Zfail *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

//	If the W.XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ instance.
func (me *XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_; fn != nil { fn(me) }
	me.Zfail.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ struct {
	Zpass *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

//	If the W.XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ instance.
func (me *XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_; fn != nil { fn(me) }
	me.Zpass.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace struct {
	XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ struct {
	Face *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

//	If the W.XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ instance.
func (me *XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_; fn != nil { fn(me) }
	me.Face.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate struct {
	XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_

	XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_

	XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_

	XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_.Walk()
	me.XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_.Walk()
	me.XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_.Walk()
	me.XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_.Walk()
 }

type XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_ struct {
	StencilOpSeparate *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op_separate"`

}

//	If the W.XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_ instance.
func (me *XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_; fn != nil { fn(me) }
	me.StencilOpSeparate.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePolygonOffset struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat2Type_00

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonOffset function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonOffset instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonOffset instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonOffset) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonOffset; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_ struct {
	PolygonOffset *TxsdGlPipelineSettingsGroupChoicePolygonOffset `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset"`

}

//	If the W.XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_ instance.
func (me *XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_; fn != nil { fn(me) }
	me.PolygonOffset.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceProjectionMatrix struct {
	XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceProjectionMatrix function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceProjectionMatrix instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceProjectionMatrix instance.
func (me *TxsdGlPipelineSettingsGroupChoiceProjectionMatrix) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceProjectionMatrix; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_ struct {
	ProjectionMatrix *TxsdGlPipelineSettingsGroupChoiceProjectionMatrix `xml:"http://www.collada.org/2008/03/COLLADASchema projection_matrix"`

}

//	If the W.XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_ instance.
func (me *XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_; fn != nil { fn(me) }
	me.ProjectionMatrix.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceDepthClampEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceDepthClampEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceDepthClampEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceDepthClampEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceDepthClampEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceDepthClampEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_ struct {
	DepthClampEnable *TxsdGlPipelineSettingsGroupChoiceDepthClampEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_clamp_enable"`

}

//	If the W.XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_ instance.
func (me *XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_; fn != nil { fn(me) }
	me.DepthClampEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePointSizeMin struct {
	XsdGoPkgHasAttr_Value_TfloatType_0

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePointSizeMin function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePointSizeMin instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePointSizeMin instance.
func (me *TxsdGlPipelineSettingsGroupChoicePointSizeMin) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePointSizeMin; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_ struct {
	PointSizeMin *TxsdGlPipelineSettingsGroupChoicePointSizeMin `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_min"`

}

//	If the W.XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_ instance.
func (me *XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_; fn != nil { fn(me) }
	me.PointSizeMin.Walk()
 }

type XsdGoPkgHasAttr_Value_Tbool4Type_TrueTrueTrueTrue struct {
	Value Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "true true true true"
func (me XsdGoPkgHasAttr_Value_Tbool4Type_TrueTrueTrueTrue) ValueDefault () Tbool4Type { return Tbool4Type("true true true true") }

type TxsdGlPipelineSettingsGroupChoiceColorMask struct {
	XsdGoPkgHasAttr_Value_Tbool4Type_TrueTrueTrueTrue

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceColorMask function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceColorMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceColorMask instance.
func (me *TxsdGlPipelineSettingsGroupChoiceColorMask) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceColorMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_ struct {
	ColorMask *TxsdGlPipelineSettingsGroupChoiceColorMask `xml:"http://www.collada.org/2008/03/COLLADASchema color_mask"`

}

//	If the W.XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_ instance.
func (me *XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_; fn != nil { fn(me) }
	me.ColorMask.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_True

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_ struct {
	ColorMaterialEnable *TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable `xml:"http://www.collada.org/2008/03/COLLADASchema color_material_enable"`

}

//	If the W.XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_ instance.
func (me *XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_; fn != nil { fn(me) }
	me.ColorMaterialEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTexture1DEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTexture1DEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTexture1DEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTexture1DEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTexture1DEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTexture1DEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_ struct {
	Texture1DEnable *TxsdGlPipelineSettingsGroupChoiceTexture1DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema texture1D_enable"`

}

//	If the W.XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_ instance.
func (me *XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_; fn != nil { fn(me) }
	me.Texture1DEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_ struct {
	AlphaTestEnable *TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema alpha_test_enable"`

}

//	If the W.XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_ instance.
func (me *XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_; fn != nil { fn(me) }
	me.AlphaTestEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceNormalizeEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceNormalizeEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceNormalizeEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceNormalizeEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceNormalizeEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceNormalizeEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_ struct {
	NormalizeEnable *TxsdGlPipelineSettingsGroupChoiceNormalizeEnable `xml:"http://www.collada.org/2008/03/COLLADASchema normalize_enable"`

}

//	If the W.XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_ instance.
func (me *XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_; fn != nil { fn(me) }
	me.NormalizeEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendColor struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendColor function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendColor instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendColor instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendColor) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendColor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_ struct {
	BlendColor *TxsdGlPipelineSettingsGroupChoiceBlendColor `xml:"http://www.collada.org/2008/03/COLLADASchema blend_color"`

}

//	If the W.XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_ instance.
func (me *XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_; fn != nil { fn(me) }
	me.BlendColor.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceFogColor struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceFogColor function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceFogColor instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceFogColor instance.
func (me *TxsdGlPipelineSettingsGroupChoiceFogColor) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceFogColor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_ struct {
	FogColor *TxsdGlPipelineSettingsGroupChoiceFogColor `xml:"http://www.collada.org/2008/03/COLLADASchema fog_color"`

}

//	If the W.XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_ instance.
func (me *XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_; fn != nil { fn(me) }
	me.FogColor.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilTestEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilTestEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilTestEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_ struct {
	StencilTestEnable *TxsdGlPipelineSettingsGroupChoiceStencilTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_test_enable"`

}

//	If the W.XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_ instance.
func (me *XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_; fn != nil { fn(me) }
	me.StencilTestEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceFogStart struct {
	XsdGoPkgHasAttr_Value_TfloatType_0

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceFogStart function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceFogStart instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceFogStart instance.
func (me *TxsdGlPipelineSettingsGroupChoiceFogStart) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceFogStart; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_ struct {
	FogStart *TxsdGlPipelineSettingsGroupChoiceFogStart `xml:"http://www.collada.org/2008/03/COLLADASchema fog_start"`

}

//	If the W.XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_ instance.
func (me *XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_; fn != nil { fn(me) }
	me.FogStart.Walk()
 }

type XsdGoPkgHasAttr_Value_Tint2Type_165536 struct {
	Value Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "1 65536"
func (me XsdGoPkgHasAttr_Value_Tint2Type_165536) ValueDefault () Tint2Type { return Tint2Type("1 65536") }

type TxsdGlPipelineSettingsGroupChoiceLineStipple struct {
	XsdGoPkgHasAttr_Value_Tint2Type_165536

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLineStipple function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLineStipple instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLineStipple instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLineStipple) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLineStipple; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_ struct {
	LineStipple *TxsdGlPipelineSettingsGroupChoiceLineStipple `xml:"http://www.collada.org/2008/03/COLLADASchema line_stipple"`

}

//	If the W.XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_ instance.
func (me *XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_; fn != nil { fn(me) }
	me.LineStipple.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightSpotExponent struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_0

	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightSpotExponent function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightSpotExponent instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightSpotExponent instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightSpotExponent) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightSpotExponent; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_ struct {
	LightSpotExponent *TxsdGlPipelineSettingsGroupChoiceLightSpotExponent `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_exponent"`

}

//	If the W.XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_ instance.
func (me *XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_; fn != nil { fn(me) }
	me.LightSpotExponent.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_ struct {
	LineSmoothEnable *TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable `xml:"http://www.collada.org/2008/03/COLLADASchema line_smooth_enable"`

}

//	If the W.XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_ instance.
func (me *XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_; fn != nil { fn(me) }
	me.LineSmoothEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_ struct {
	BlendEnable *TxsdGlPipelineSettingsGroupChoiceBlendEnable `xml:"http://www.collada.org/2008/03/COLLADASchema blend_enable"`

}

//	If the W.XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_ instance.
func (me *XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_; fn != nil { fn(me) }
	me.BlendEnable.Walk()
 }

type XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_; fn != nil { fn(me) }
 }

//	A texture sampler for depth maps.
type TfxSamplerDEPTHType struct {
	TfxSamplerType

}

//	If the W.TfxSamplerDEPTHType function is not nil (ie. was set by outside code), calls it with this TfxSamplerDEPTHType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxSamplerDEPTHType instance.
func (me *TfxSamplerDEPTHType) Walk ()  { 
	if fn := W.TfxSamplerDEPTHType; fn != nil { fn(me) }
	me.TfxSamplerType.Walk()
 }

type XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_ struct {
	Value *TfxSamplerDEPTHType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_ instance.
func (me *XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTextureDEPTH struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTextureDEPTH function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTextureDEPTH instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTextureDEPTH instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTextureDEPTH) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTextureDEPTH; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_.Walk()
	me.XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_.Walk()
 }

type XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_ struct {
	TextureDEPTH *TxsdGlPipelineSettingsGroupChoiceTextureDEPTH `xml:"http://www.collada.org/2008/03/COLLADASchema textureDEPTH"`

}

//	If the W.XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_ instance.
func (me *XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_; fn != nil { fn(me) }
	me.TextureDEPTH.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_ struct {
	ColorLogicOpEnable *TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable `xml:"http://www.collada.org/2008/03/COLLADASchema color_logic_op_enable"`

}

//	If the W.XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_ instance.
func (me *XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_; fn != nil { fn(me) }
	me.ColorLogicOpEnable.Walk()
 }

//	A one-dimensional texture sampler.
type TfxSampler1DType struct {
	TfxSamplerType

}

//	If the W.TfxSampler1DType function is not nil (ie. was set by outside code), calls it with this TfxSampler1DType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TfxSampler1DType instance.
func (me *TfxSampler1DType) Walk ()  { 
	if fn := W.TfxSampler1DType; fn != nil { fn(me) }
	me.TfxSamplerType.Walk()
 }

type XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_ struct {
	Value *TfxSampler1DType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_ instance.
func (me *XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_; fn != nil { fn(me) }
 }

type TxsdGlPipelineSettingsGroupChoiceTexture1D struct {
	XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_

	XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTexture1D function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTexture1D instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTexture1D instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTexture1D) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTexture1D; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_.Walk()
	me.XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_.Walk()
 }

type XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_ struct {
	Texture1D *TxsdGlPipelineSettingsGroupChoiceTexture1D `xml:"http://www.collada.org/2008/03/COLLADASchema texture1D"`

}

//	If the W.XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_ instance.
func (me *XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_; fn != nil { fn(me) }
	me.Texture1D.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_ struct {
	DepthBoundsEnable *TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_bounds_enable"`

}

//	If the W.XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_ instance.
func (me *XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_; fn != nil { fn(me) }
	me.DepthBoundsEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_ struct {
	PolygonOffsetFillEnable *TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_fill_enable"`

}

//	If the W.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_ instance.
func (me *XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_; fn != nil { fn(me) }
	me.PolygonOffsetFillEnable.Walk()
 }

type TglMaxClipPlanesIndexType xsdt.NonNegativeInteger

//	Returns a string representation of this TglMaxClipPlanesIndexType's current non-string scalar value.
func (me TglMaxClipPlanesIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	Since TglMaxClipPlanesIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglMaxClipPlanesIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglMaxClipPlanesIndexType's alias type xsdt.NonNegativeInteger.
func (me TglMaxClipPlanesIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

type XsdGoPkgHasAttr_Index_TglMaxClipPlanesIndexType_ struct {
	Index TglMaxClipPlanesIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable struct {
	XsdGoPkgHasAttr_Index_TglMaxClipPlanesIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_ struct {
	ClipPlaneEnable *TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema clip_plane_enable"`

}

//	If the W.XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_ instance.
func (me *XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_; fn != nil { fn(me) }
	me.ClipPlaneEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightSpecular struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightSpecular function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightSpecular instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightSpecular instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightSpecular) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightSpecular; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_ struct {
	LightSpecular *TxsdGlPipelineSettingsGroupChoiceLightSpecular `xml:"http://www.collada.org/2008/03/COLLADASchema light_specular"`

}

//	If the W.XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_ instance.
func (me *XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_; fn != nil { fn(me) }
	me.LightSpecular.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue struct {
	XsdGoPkgHasAttr_Value_TglAlphaValueType_00

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue instance.
func (me *TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ struct {
	Value *TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ instance.
func (me *XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc struct {
	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc instance.
func (me *TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ struct {
	Func *TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

//	If the W.XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ instance.
func (me *XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_; fn != nil { fn(me) }
	me.Func.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceAlphaFunc struct {
	XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_

	XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceAlphaFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceAlphaFunc instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceAlphaFunc instance.
func (me *TxsdGlPipelineSettingsGroupChoiceAlphaFunc) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceAlphaFunc; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_.Walk()
	me.XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_.Walk()
 }

type XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_ struct {
	AlphaFunc *TxsdGlPipelineSettingsGroupChoiceAlphaFunc `xml:"http://www.collada.org/2008/03/COLLADASchema alpha_func"`

}

//	If the W.XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_ instance.
func (me *XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_; fn != nil { fn(me) }
	me.AlphaFunc.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_ struct {
	PolygonOffsetPointEnable *TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_point_enable"`

}

//	If the W.XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_ instance.
func (me *XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_; fn != nil { fn(me) }
	me.PolygonOffsetPointEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceMaterialAmbient struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_02020210

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceMaterialAmbient function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceMaterialAmbient instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceMaterialAmbient instance.
func (me *TxsdGlPipelineSettingsGroupChoiceMaterialAmbient) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceMaterialAmbient; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_ struct {
	MaterialAmbient *TxsdGlPipelineSettingsGroupChoiceMaterialAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema material_ambient"`

}

//	If the W.XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_ instance.
func (me *XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_; fn != nil { fn(me) }
	me.MaterialAmbient.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_ struct {
	TextureCUBEEnable *TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable `xml:"http://www.collada.org/2008/03/COLLADASchema textureCUBE_enable"`

}

//	If the W.XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_ instance.
func (me *XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_; fn != nil { fn(me) }
	me.TextureCUBEEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_ struct {
	LightModelLocalViewerEnable *TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_local_viewer_enable"`

}

//	If the W.XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_ instance.
func (me *XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_; fn != nil { fn(me) }
	me.LightModelLocalViewerEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize instance.
func (me *TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_ struct {
	PointFadeThresholdSize *TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_fade_threshold_size"`

}

//	If the W.XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_ instance.
func (me *XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_; fn != nil { fn(me) }
	me.PointFadeThresholdSize.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightEnable struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_ struct {
	LightEnable *TxsdGlPipelineSettingsGroupChoiceLightEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_enable"`

}

//	If the W.XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_ instance.
func (me *XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_; fn != nil { fn(me) }
	me.LightEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceCullFaceEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceCullFaceEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceCullFaceEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceCullFaceEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceCullFaceEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceCullFaceEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_ struct {
	CullFaceEnable *TxsdGlPipelineSettingsGroupChoiceCullFaceEnable `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face_enable"`

}

//	If the W.XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_ instance.
func (me *XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_; fn != nil { fn(me) }
	me.CullFaceEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTextureEnvColor struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTextureEnvColor function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTextureEnvColor instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTextureEnvColor instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTextureEnvColor) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTextureEnvColor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_ struct {
	TextureEnvColor *TxsdGlPipelineSettingsGroupChoiceTextureEnvColor `xml:"http://www.collada.org/2008/03/COLLADASchema texture_env_color"`

}

//	If the W.XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_ instance.
func (me *XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_; fn != nil { fn(me) }
	me.TextureEnvColor.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilMask struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TintType_4294967295

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilMask function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilMask instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilMask) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_ struct {
	StencilMask *TxsdGlPipelineSettingsGroupChoiceStencilMask `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask"`

}

//	If the W.XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_ instance.
func (me *XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_; fn != nil { fn(me) }
	me.StencilMask.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceScissorTestEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceScissorTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceScissorTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceScissorTestEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceScissorTestEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceScissorTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_ struct {
	ScissorTestEnable *TxsdGlPipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema scissor_test_enable"`

}

//	If the W.XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_ instance.
func (me *XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_; fn != nil { fn(me) }
	me.ScissorTestEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ struct {
	SampleAlphaToOneEnable *TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_one_enable"`

}

//	If the W.XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ instance.
func (me *XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_; fn != nil { fn(me) }
	me.SampleAlphaToOneEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceDitherEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_True

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceDitherEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceDitherEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceDitherEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceDitherEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceDitherEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_ struct {
	DitherEnable *TxsdGlPipelineSettingsGroupChoiceDitherEnable `xml:"http://www.collada.org/2008/03/COLLADASchema dither_enable"`

}

//	If the W.XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_ instance.
func (me *XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_; fn != nil { fn(me) }
	me.DitherEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation struct {
	XsdGoPkgHasAttr_Value_TfloatType_0

	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation instance.
func (me *TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_ struct {
	LightQuadraticAttenuation *TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_quadratic_attenuation"`

}

//	If the W.XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_ instance.
func (me *XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_; fn != nil { fn(me) }
	me.LightQuadraticAttenuation.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_ struct {
	SampleCoverageEnable *TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_coverage_enable"`

}

//	If the W.XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_ instance.
func (me *XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_; fn != nil { fn(me) }
	me.SampleCoverageEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEnum_One

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ struct {
	SrcRgb *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb `xml:"http://www.collada.org/2008/03/COLLADASchema src_rgb"`

}

//	If the W.XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ instance.
func (me *XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_; fn != nil { fn(me) }
	me.SrcRgb.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha struct {
	XsdGoPkgHasAttr_Value_TglBlendEnum_One

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ struct {
	SrcAlpha *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema src_alpha"`

}

//	If the W.XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ instance.
func (me *XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_; fn != nil { fn(me) }
	me.SrcAlpha.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ struct {
	DestRgb *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb `xml:"http://www.collada.org/2008/03/COLLADASchema dest_rgb"`

}

//	If the W.XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ instance.
func (me *XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_; fn != nil { fn(me) }
	me.DestRgb.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ struct {
	DestAlpha *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema dest_alpha"`

}

//	If the W.XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ instance.
func (me *XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_; fn != nil { fn(me) }
	me.DestAlpha.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate struct {
	XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_

	XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_

	XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_

	XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_.Walk()
	me.XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_.Walk()
	me.XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_.Walk()
	me.XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_.Walk()
 }

type XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_ struct {
	BlendFuncSeparate *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func_separate"`

}

//	If the W.XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_ instance.
func (me *XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_; fn != nil { fn(me) }
	me.BlendFuncSeparate.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_ struct {
	PolygonSmoothEnable *TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_smooth_enable"`

}

//	If the W.XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_ instance.
func (me *XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_; fn != nil { fn(me) }
	me.PolygonSmoothEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceDepthTestEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceDepthTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceDepthTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceDepthTestEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceDepthTestEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceDepthTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_ struct {
	DepthTestEnable *TxsdGlPipelineSettingsGroupChoiceDepthTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_test_enable"`

}

//	If the W.XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_ instance.
func (me *XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_; fn != nil { fn(me) }
	me.DepthTestEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTexture2DEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTexture2DEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTexture2DEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTexture2DEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTexture2DEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_ struct {
	Texture2DEnable *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema texture2D_enable"`

}

//	If the W.XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_ instance.
func (me *XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_; fn != nil { fn(me) }
	me.Texture2DEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceShadeModel struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglShadeModelEnum_Smooth

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceShadeModel function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceShadeModel instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceShadeModel instance.
func (me *TxsdGlPipelineSettingsGroupChoiceShadeModel) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceShadeModel; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_ struct {
	ShadeModel *TxsdGlPipelineSettingsGroupChoiceShadeModel `xml:"http://www.collada.org/2008/03/COLLADASchema shade_model"`

}

//	If the W.XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_ instance.
func (me *XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_; fn != nil { fn(me) }
	me.ShadeModel.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceScissor struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tint4Type_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceScissor function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceScissor instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceScissor instance.
func (me *TxsdGlPipelineSettingsGroupChoiceScissor) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceScissor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_ struct {
	Scissor *TxsdGlPipelineSettingsGroupChoiceScissor `xml:"http://www.collada.org/2008/03/COLLADASchema scissor"`

}

//	If the W.XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_ instance.
func (me *XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_; fn != nil { fn(me) }
	me.Scissor.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail struct {
	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_ struct {
	Zfail *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

//	If the W.XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_ instance.
func (me *XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_; fn != nil { fn(me) }
	me.Zfail.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_ struct {
	Fail *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

//	If the W.XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_ instance.
func (me *XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_; fn != nil { fn(me) }
	me.Fail.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_ struct {
	Zpass *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

//	If the W.XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_ instance.
func (me *XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_; fn != nil { fn(me) }
	me.Zpass.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilOp struct {
	XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_

	XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_

	XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilOp function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilOp instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilOp instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilOp) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilOp; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_.Walk()
	me.XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_.Walk()
	me.XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_.Walk()
 }

type XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_ struct {
	StencilOp *TxsdGlPipelineSettingsGroupChoiceStencilOp `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op"`

}

//	If the W.XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_ instance.
func (me *XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_; fn != nil { fn(me) }
	me.StencilOp.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceModelViewMatrix struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceModelViewMatrix function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceModelViewMatrix instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceModelViewMatrix instance.
func (me *TxsdGlPipelineSettingsGroupChoiceModelViewMatrix) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceModelViewMatrix; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_ struct {
	ModelViewMatrix *TxsdGlPipelineSettingsGroupChoiceModelViewMatrix `xml:"http://www.collada.org/2008/03/COLLADASchema model_view_matrix"`

}

//	If the W.XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_ instance.
func (me *XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_; fn != nil { fn(me) }
	me.ModelViewMatrix.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceClipPlane struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Index_TglMaxClipPlanesIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceClipPlane function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceClipPlane instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceClipPlane instance.
func (me *TxsdGlPipelineSettingsGroupChoiceClipPlane) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceClipPlane; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_ struct {
	ClipPlane *TxsdGlPipelineSettingsGroupChoiceClipPlane `xml:"http://www.collada.org/2008/03/COLLADASchema clip_plane"`

}

//	If the W.XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_ instance.
func (me *XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_; fn != nil { fn(me) }
	me.ClipPlane.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable instance.
func (me *TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_ struct {
	TextureRECTEnable *TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable `xml:"http://www.collada.org/2008/03/COLLADASchema textureRECT_enable"`

}

//	If the W.XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_ instance.
func (me *XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_; fn != nil { fn(me) }
	me.TextureRECTEnable.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_ struct {
	Ref *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

//	If the W.XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_ instance.
func (me *XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_; fn != nil { fn(me) }
	me.Ref.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ struct {
	Func *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

//	If the W.XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ instance.
func (me *XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_; fn != nil { fn(me) }
	me.Func.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_ struct {
	Mask *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

//	If the W.XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_ instance.
func (me *XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_; fn != nil { fn(me) }
	me.Mask.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceStencilFunc struct {
	XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_

	XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_

	XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceStencilFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceStencilFunc instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceStencilFunc instance.
func (me *TxsdGlPipelineSettingsGroupChoiceStencilFunc) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceStencilFunc; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_.Walk()
	me.XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_.Walk()
	me.XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_.Walk()
 }

type XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_ struct {
	StencilFunc *TxsdGlPipelineSettingsGroupChoiceStencilFunc `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func"`

}

//	If the W.XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_ instance.
func (me *XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_; fn != nil { fn(me) }
	me.StencilFunc.Walk()
 }

type TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat3Type_100

}

//	If the W.TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation instance.
func (me *TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_ struct {
	PointDistanceAttenuation *TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema point_distance_attenuation"`

}

//	If the W.XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_ instance.
func (me *XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_; fn != nil { fn(me) }
	me.PointDistanceAttenuation.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest struct {
	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_ struct {
	Dest *TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest `xml:"http://www.collada.org/2008/03/COLLADASchema dest"`

}

//	If the W.XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_ instance.
func (me *XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_; fn != nil { fn(me) }
	me.Dest.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc struct {
	XsdGoPkgHasAttr_Value_TglBlendEnum_One

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ struct {
	Src *TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc `xml:"http://www.collada.org/2008/03/COLLADASchema src"`

}

//	If the W.XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ instance.
func (me *XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_; fn != nil { fn(me) }
	me.Src.Walk()
 }

type TxsdGlPipelineSettingsGroupChoiceBlendFunc struct {
	XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_

	XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_

}

//	If the W.TxsdGlPipelineSettingsGroupChoiceBlendFunc function is not nil (ie. was set by outside code), calls it with this TxsdGlPipelineSettingsGroupChoiceBlendFunc instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGlPipelineSettingsGroupChoiceBlendFunc instance.
func (me *TxsdGlPipelineSettingsGroupChoiceBlendFunc) Walk ()  { 
	if fn := W.TxsdGlPipelineSettingsGroupChoiceBlendFunc; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_.Walk()
	me.XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_.Walk()
 }

type XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_ struct {
	BlendFunc *TxsdGlPipelineSettingsGroupChoiceBlendFunc `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func"`

}

//	If the W.XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_ instance.
func (me *XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_; fn != nil { fn(me) }
	me.BlendFunc.Walk()
 }

type XsdGoPkgHasGroup_GlPipelineSettingsGroup struct {
	XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_

	XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_

	XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_

	XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_

	XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_

	XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_

	XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_

	XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_

	XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_

	XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_

	XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_

	XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_

	XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_

	XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_

	XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_

	XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_

	XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_

	XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_

	XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_

	XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_

	XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_

	XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_

	XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_

	XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_

	XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_

	XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_

	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_

	XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_

	XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_

	XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_

	XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_

	XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_

	XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_

	XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_

	XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_

	XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_

	XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_

	XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_

	XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_

	XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_

	XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_

	XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_

	XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_

	XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_

	XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_

	XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_

	XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_

	XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_

	XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_

	XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_

	XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_

	XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_

	XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_

	XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_

	XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_

	XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_

	XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_

	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_

	XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_

	XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_

	XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_

	XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_

	XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_

	XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_

	XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_

	XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_

	XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_

	XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_

	XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_

	XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_

	XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_

	XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_

	XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_

	XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_

	XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_

	XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_

	XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_

	XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_

	XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_

	XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_

	XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_

	XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_

	XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_

	XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_

	XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_

	XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_

	XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_

	XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_

	XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_

	XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_

	XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_

	XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_

	XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_

	XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_

	XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_

	XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_

	XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_

	XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_

	XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_

	XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_

	XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_

	XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_

	XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_

	XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_

}

//	If the W.XsdGoPkgHasGroup_GlPipelineSettingsGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_GlPipelineSettingsGroup instance as the single argument. Then calls the Walk() method on 104/104 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_GlPipelineSettingsGroup instance.
func (me *XsdGoPkgHasGroup_GlPipelineSettingsGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_GlPipelineSettingsGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_.Walk()
	me.XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_.Walk()
	me.XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_.Walk()
	me.XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_.Walk()
	me.XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_.Walk()
	me.XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_.Walk()
	me.XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_.Walk()
	me.XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_.Walk()
	me.XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_.Walk()
	me.XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_.Walk()
	me.XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_.Walk()
	me.XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_.Walk()
	me.XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_.Walk()
	me.XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_.Walk()
	me.XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_.Walk()
	me.XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_.Walk()
	me.XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_.Walk()
	me.XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_.Walk()
	me.XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_.Walk()
	me.XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_.Walk()
	me.XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_.Walk()
	me.XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_.Walk()
	me.XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_.Walk()
	me.XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_.Walk()
	me.XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_.Walk()
	me.XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_.Walk()
	me.XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_.Walk()
	me.XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_.Walk()
	me.XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_.Walk()
	me.XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_.Walk()
	me.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_.Walk()
	me.XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_.Walk()
	me.XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_.Walk()
	me.XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_.Walk()
	me.XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_.Walk()
	me.XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_.Walk()
	me.XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_.Walk()
	me.XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_.Walk()
	me.XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_.Walk()
	me.XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_.Walk()
	me.XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_.Walk()
	me.XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_.Walk()
	me.XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_.Walk()
	me.XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_.Walk()
	me.XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_.Walk()
	me.XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_.Walk()
	me.XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_.Walk()
	me.XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_.Walk()
	me.XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_.Walk()
	me.XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_.Walk()
	me.XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_.Walk()
	me.XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_.Walk()
	me.XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_.Walk()
	me.XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_.Walk()
	me.XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_.Walk()
	me.XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_.Walk()
	me.XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_.Walk()
	me.XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_.Walk()
	me.XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_.Walk()
	me.XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_.Walk()
	me.XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_.Walk()
	me.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_.Walk()
	me.XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_.Walk()
	me.XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_.Walk()
	me.XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_.Walk()
	me.XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_.Walk()
	me.XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_.Walk()
	me.XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_.Walk()
	me.XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_.Walk()
	me.XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_.Walk()
	me.XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_.Walk()
	me.XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_.Walk()
	me.XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_.Walk()
	me.XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_.Walk()
	me.XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_.Walk()
	me.XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_.Walk()
	me.XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_.Walk()
	me.XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_.Walk()
	me.XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_.Walk()
	me.XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_.Walk()
	me.XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_.Walk()
	me.XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_.Walk()
	me.XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_.Walk()
	me.XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_.Walk()
	me.XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_.Walk()
	me.XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_.Walk()
	me.XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_.Walk()
	me.XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_.Walk()
	me.XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_.Walk()
	me.XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_.Walk()
	me.XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_.Walk()
	me.XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_.Walk()
	me.XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_.Walk()
	me.XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_.Walk()
	me.XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_.Walk()
	me.XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_.Walk()
	me.XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_.Walk()
	me.XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_.Walk()
	me.XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_.Walk()
	me.XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_.Walk()
	me.XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_.Walk()
	me.XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_.Walk()
	me.XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_.Walk()
	me.XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_.Walk()
 }

type TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates struct {
	XsdGoPkgHasGroup_GlPipelineSettingsGroup

}

//	If the W.TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates function is not nil (ie. was set by outside code), calls it with this TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates instance.
func (me *TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates) Walk ()  { 
	if fn := W.TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates; fn != nil { fn(me) }
	me.XsdGoPkgHasGroup_GlPipelineSettingsGroup.Walk()
 }

type XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_ struct {
	States *TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates `xml:"http://www.collada.org/2008/03/COLLADASchema states"`

}

//	If the W.XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_ instance.
func (me *XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_; fn != nil { fn(me) }
	me.States.Walk()
 }

//	a program is one or more shaders linked together
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
//	shader variable name
type XsdGoPkgHasAttr_Symbol_XsdtToken_ struct {
//	shader variable name
	Symbol xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema symbol,attr"`

}

//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
type XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_ struct {
//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
	Semantic xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

//	If the W.XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_ instance.
func (me *XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_; fn != nil { fn(me) }
 }

type TxsdGlslProgramTypeSequenceBindAttribute struct {
//	shader variable name
	XsdGoPkgHasAttr_Symbol_XsdtToken_

//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
	XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_

}

//	If the W.TxsdGlslProgramTypeSequenceBindAttribute function is not nil (ie. was set by outside code), calls it with this TxsdGlslProgramTypeSequenceBindAttribute instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TxsdGlslProgramTypeSequenceBindAttribute instance.
func (me *TxsdGlslProgramTypeSequenceBindAttribute) Walk ()  { 
	if fn := W.TxsdGlslProgramTypeSequenceBindAttribute; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_.Walk()
 }

type XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_ struct {
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
	BindAttributes []*TxsdGlslProgramTypeSequenceBindAttribute `xml:"http://www.collada.org/2008/03/COLLADASchema bind_attribute"`

}

//	If the W.XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_ instance.
func (me *XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_; fn != nil { fn(me) }
	for _, x := range me.BindAttributes { x.Walk() }
 }

//	Bind uniforms and samplers
//	Bind uniforms to parameters
type TxsdGlslProgramTypeSequenceBindUniformChoiceParam struct {
//	SID of parameter
	XsdGoPkgHasAttr_Ref_XsdtNCName_

}

//	If the W.TxsdGlslProgramTypeSequenceBindUniformChoiceParam function is not nil (ie. was set by outside code), calls it with this TxsdGlslProgramTypeSequenceBindUniformChoiceParam instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdGlslProgramTypeSequenceBindUniformChoiceParam instance.
func (me *TxsdGlslProgramTypeSequenceBindUniformChoiceParam) Walk ()  { 
	if fn := W.TxsdGlslProgramTypeSequenceBindUniformChoiceParam; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_ struct {
//	Bind uniforms to parameters
	Param *TxsdGlslProgramTypeSequenceBindUniformChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_ instance.
func (me *XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_; fn != nil { fn(me) }
	me.Param.Walk()
 }

//	A group that specifies the allowable types for GLSL profile parameters.
type XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_ struct {
	Float3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x3"`

}

//	If the W.XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_ struct {
	Sampler2D *TfxSampler2DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler2D"`

}

//	If the W.XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_ instance.
func (me *XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_; fn != nil { fn(me) }
	me.Sampler2D.Walk()
 }

type XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_ struct {
	Sampler1D *TfxSampler1DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler1D"`

}

//	If the W.XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_ instance.
func (me *XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_; fn != nil { fn(me) }
	me.Sampler1D.Walk()
 }

type XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ struct {
	SamplerCUBE *TfxSamplerCUBEType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerCUBE"`

}

//	If the W.XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ instance.
func (me *XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_; fn != nil { fn(me) }
	me.SamplerCUBE.Walk()
 }

type XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_ struct {
	Bool3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3"`

}

//	If the W.XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_ instance.
func (me *XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_ struct {
	Int2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2"`

}

//	If the W.XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_ instance.
func (me *XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_ struct {
	SamplerRECT *TfxSamplerRECTType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerRECT"`

}

//	If the W.XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_ instance.
func (me *XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_; fn != nil { fn(me) }
	me.SamplerRECT.Walk()
 }

type XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_ struct {
	Float4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4"`

}

//	If the W.XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_ struct {
	Int4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4"`

}

//	If the W.XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_ instance.
func (me *XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_ struct {
	Int3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3"`

}

//	If the W.XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_ instance.
func (me *XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_ struct {
	Sampler3D *TfxSampler3DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler3D"`

}

//	If the W.XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_ instance.
func (me *XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_; fn != nil { fn(me) }
	me.Sampler3D.Walk()
 }

type XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_ struct {
	Bool2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2"`

}

//	If the W.XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_ instance.
func (me *XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_ struct {
	Float3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3"`

}

//	If the W.XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_ struct {
	Float2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x2"`

}

//	If the W.XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

//	If the W.XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_; fn != nil { fn(me) }
 }

//	The glsl_newarray_type element is used to creates a parameter of a one-dimensional array type.
type XsdGoPkgHasAttr_Length_XsdtPositiveInteger_ struct {
	Length xsdt.PositiveInteger `xml:"http://www.collada.org/2008/03/COLLADASchema length,attr"`

}

type TglslArrayType struct {
//	The length attribute specifies the length of the array.
	XsdGoPkgHasAttr_Length_XsdtPositiveInteger_

//	First element types the array.  If more than one then init entire array and must match length attribute.  If only one then repeat based on length attribute.
	XsdGoPkgHasGroup_GlslValueGroup

}

//	If the W.TglslArrayType function is not nil (ie. was set by outside code), calls it with this TglslArrayType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TglslArrayType instance.
func (me *TglslArrayType) Walk ()  { 
	if fn := W.TglslArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_ struct {
	Array *TglslArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	If the W.XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_ instance.
func (me *XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_; fn != nil { fn(me) }
	me.Array.Walk()
 }

type XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_ struct {
	Float4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x4"`

}

//	If the W.XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_ struct {
	Bool4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4"`

}

//	If the W.XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_ instance.
func (me *XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ struct {
	SamplerDEPTH *TfxSamplerDEPTHType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerDEPTH"`

}

//	If the W.XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ instance.
func (me *XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_; fn != nil { fn(me) }
	me.SamplerDEPTH.Walk()
 }

type TglEnumerationType xsdt.String

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFogCoordSrcEnum, but keep in mind the actual value may or may not be a valid TglFogCoordSrcEnum value.
func (me TglEnumerationType) ToTglFogCoordSrcEnum () TglFogCoordSrcEnum { return TglFogCoordSrcEnum(me) }

//	Since TglEnumerationType is just a simple String type, this merely sets the current value from the specified string.
func (me *TglEnumerationType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TglEnumerationType is just a simple String type, this merely returns the current string value.
func (me TglEnumerationType) String () string { return xsdt.String(me).String() }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglMaterialEnum, but keep in mind the actual value may or may not be a valid TglMaterialEnum value.
func (me TglEnumerationType) ToTglMaterialEnum () TglMaterialEnum { return TglMaterialEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglBlendEnum, but keep in mind the actual value may or may not be a valid TglBlendEnum value.
func (me TglEnumerationType) ToTglBlendEnum () TglBlendEnum { return TglBlendEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglShadeModelEnum, but keep in mind the actual value may or may not be a valid TglShadeModelEnum value.
func (me TglEnumerationType) ToTglShadeModelEnum () TglShadeModelEnum { return TglShadeModelEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFuncEnum, but keep in mind the actual value may or may not be a valid TglFuncEnum value.
func (me TglEnumerationType) ToTglFuncEnum () TglFuncEnum { return TglFuncEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglStencilOpEnum, but keep in mind the actual value may or may not be a valid TglStencilOpEnum value.
func (me TglEnumerationType) ToTglStencilOpEnum () TglStencilOpEnum { return TglStencilOpEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglPolygonModeEnum, but keep in mind the actual value may or may not be a valid TglPolygonModeEnum value.
func (me TglEnumerationType) ToTglPolygonModeEnum () TglPolygonModeEnum { return TglPolygonModeEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglLightModelColorControlEnum, but keep in mind the actual value may or may not be a valid TglLightModelColorControlEnum value.
func (me TglEnumerationType) ToTglLightModelColorControlEnum () TglLightModelColorControlEnum { return TglLightModelColorControlEnum(me) }

//	This convenience method just performs a simple type conversion to TglEnumerationType's alias type xsdt.String.
func (me TglEnumerationType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglBlendEquationEnum, but keep in mind the actual value may or may not be a valid TglBlendEquationEnum value.
func (me TglEnumerationType) ToTglBlendEquationEnum () TglBlendEquationEnum { return TglBlendEquationEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFaceEnum, but keep in mind the actual value may or may not be a valid TglFaceEnum value.
func (me TglEnumerationType) ToTglFaceEnum () TglFaceEnum { return TglFaceEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglLogicOpEnum, but keep in mind the actual value may or may not be a valid TglLogicOpEnum value.
func (me TglEnumerationType) ToTglLogicOpEnum () TglLogicOpEnum { return TglLogicOpEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFrontFaceEnum, but keep in mind the actual value may or may not be a valid TglFrontFaceEnum value.
func (me TglEnumerationType) ToTglFrontFaceEnum () TglFrontFaceEnum { return TglFrontFaceEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFogEnum, but keep in mind the actual value may or may not be a valid TglFogEnum value.
func (me TglEnumerationType) ToTglFogEnum () TglFogEnum { return TglFogEnum(me) }

type XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_ struct {
	Enum TglEnumerationType `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

//	If the W.XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_ instance.
func (me *XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasGroup_GlslValueGroup struct {
	XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_

	XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_

	XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_

	XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_

	XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_

	XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_

	XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_

	XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_

}

//	If the W.XsdGoPkgHasGroup_GlslValueGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_GlslValueGroup instance as the single argument. Then calls the Walk() method on 23/23 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_GlslValueGroup instance.
func (me *XsdGoPkgHasGroup_GlslValueGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_GlslValueGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_.Walk()
	me.XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_.Walk()
	me.XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_.Walk()
	me.XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_.Walk()
	me.XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_.Walk()
	me.XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_.Walk()
	me.XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_.Walk()
	me.XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_.Walk()
	me.XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_.Walk()
	me.XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_.Walk()
	me.XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_.Walk()
	me.XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_.Walk()
	me.XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_.Walk()
	me.XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_.Walk()
 }

type TxsdGlslProgramTypeSequenceBindUniform struct {
//	Bind uniforms to parameters
	XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_

	XsdGoPkgHasGroup_GlslValueGroup

//	shader variable name
	XsdGoPkgHasAttr_Symbol_XsdtToken_

}

//	If the W.TxsdGlslProgramTypeSequenceBindUniform function is not nil (ie. was set by outside code), calls it with this TxsdGlslProgramTypeSequenceBindUniform instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdGlslProgramTypeSequenceBindUniform instance.
func (me *TxsdGlslProgramTypeSequenceBindUniform) Walk ()  { 
	if fn := W.TxsdGlslProgramTypeSequenceBindUniform; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_.Walk()
	me.XsdGoPkgHasGroup_GlslValueGroup.Walk()
 }

type XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_ struct {
//	Bind uniforms and samplers
	BindUniforms []*TxsdGlslProgramTypeSequenceBindUniform `xml:"http://www.collada.org/2008/03/COLLADASchema bind_uniform"`

}

//	If the W.XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_ instance.
func (me *XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_; fn != nil { fn(me) }
	for _, x := range me.BindUniforms { x.Walk() }
 }

//	compile shader stages
//	Identify code fragments and bind their parameters to effect parameters to identify how their values will be filled in
type XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	GPU Pipeline stage for this programmable shader. Current standards are VERTEX (vertex shader), FRAGMENT (pixel or fragment shader).  These are recognized by both GLSL and CG
type TfxPipelineStageEnum xsdt.String

//	Returns true if the value of this enumerated TfxPipelineStageEnum is "FRAGMENT".
func (me TfxPipelineStageEnum) IsFragment () bool { return me == "FRAGMENT" }

//	Since TfxPipelineStageEnum is just a simple String type, this merely returns the current string value.
func (me TfxPipelineStageEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TfxPipelineStageEnum is "GEOMETRY".
func (me TfxPipelineStageEnum) IsGeometry () bool { return me == "GEOMETRY" }

//	Returns true if the value of this enumerated TfxPipelineStageEnum is "VERTEX".
func (me TfxPipelineStageEnum) IsVertex () bool { return me == "VERTEX" }

//	Since TfxPipelineStageEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxPipelineStageEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxPipelineStageEnum is "TESSELLATION".
func (me TfxPipelineStageEnum) IsTessellation () bool { return me == "TESSELLATION" }

//	This convenience method just performs a simple type conversion to TfxPipelineStageEnum's alias type xsdt.String.
func (me TfxPipelineStageEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasAttr_Stage_TfxPipelineStageEnum_ struct {
//	GPU Pipeline stage for this programmable shader. Current standards are VERTEX (vertex shader), FRAGMENT (pixel or fragment shader).  These are recognized by both GLSL and CG
	Stage TfxPipelineStageEnum `xml:"http://www.collada.org/2008/03/COLLADASchema stage,attr"`

}

//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
//	this is allows you to include some code right here....like a #define for an uber shader that is imported
type XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_ struct {
//	this is allows you to include some code right here....like a #define for an uber shader that is imported
	Inlines []xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema inline"`

}

//	If the W.XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_ instance.
func (me *XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_; fn != nil { fn(me) }
 }

//	Ref attribute identifies the sid of a code or include element
type TxsdFxSourcesTypeSequenceChoiceImport struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

}

//	If the W.TxsdFxSourcesTypeSequenceChoiceImport function is not nil (ie. was set by outside code), calls it with this TxsdFxSourcesTypeSequenceChoiceImport instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdFxSourcesTypeSequenceChoiceImport instance.
func (me *TxsdFxSourcesTypeSequenceChoiceImport) Walk ()  { 
	if fn := W.TxsdFxSourcesTypeSequenceChoiceImport; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_ struct {
//	Ref attribute identifies the sid of a code or include element
	Imports []*TxsdFxSourcesTypeSequenceChoiceImport `xml:"http://www.collada.org/2008/03/COLLADASchema import"`

}

//	If the W.XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_ instance.
func (me *XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_; fn != nil { fn(me) }
	for _, x := range me.Imports { x.Walk() }
 }

type TfxSourcesType struct {
//	this is allows you to include some code right here....like a #define for an uber shader that is imported
	XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_

//	Ref attribute identifies the sid of a code or include element
	XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_

}

//	If the W.TfxSourcesType function is not nil (ie. was set by outside code), calls it with this TfxSourcesType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TfxSourcesType instance.
func (me *TfxSourcesType) Walk ()  { 
	if fn := W.TfxSourcesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_.Walk()
	me.XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_.Walk()
 }

type XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_ struct {
//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
	Sources *TfxSourcesType `xml:"http://www.collada.org/2008/03/COLLADASchema sources"`

}

//	If the W.XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_ instance.
func (me *XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_; fn != nil { fn(me) }
	me.Sources.Walk()
 }

type TglslShaderType struct {
	XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_

//	GPU Pipeline stage for this programmable shader. Current standards are VERTEX (vertex shader), FRAGMENT (pixel or fragment shader).  These are recognized by both GLSL and CG
	XsdGoPkgHasAttr_Stage_TfxPipelineStageEnum_

//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
	XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_

}

//	If the W.TglslShaderType function is not nil (ie. was set by outside code), calls it with this TglslShaderType instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TglslShaderType instance.
func (me *TglslShaderType) Walk ()  { 
	if fn := W.TglslShaderType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_.Walk()
 }

type XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_ struct {
//	compile shader stages
	Shaders []*TglslShaderType `xml:"http://www.collada.org/2008/03/COLLADASchema shader"`

}

//	If the W.XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_ instance.
func (me *XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_; fn != nil { fn(me) }
	for _, x := range me.Shaders { x.Walk() }
 }

type TglslProgramType struct {
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
	XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_

//	Bind uniforms and samplers
	XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_

//	compile shader stages
	XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_

}

//	If the W.TglslProgramType function is not nil (ie. was set by outside code), calls it with this TglslProgramType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TglslProgramType instance.
func (me *TglslProgramType) Walk ()  { 
	if fn := W.TglslProgramType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_.Walk()
	me.XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_.Walk()
	me.XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_.Walk()
 }

type XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_ struct {
	Program *TglslProgramType `xml:"http://www.collada.org/2008/03/COLLADASchema program"`

}

//	If the W.XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_ instance.
func (me *XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_; fn != nil { fn(me) }
	me.Program.Walk()
 }

type XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_ struct {
	StencilTargets []*TfxStenciltargetType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_target"`

}

//	If the W.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_ instance.
func (me *XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_; fn != nil { fn(me) }
	for _, x := range me.StencilTargets { x.Walk() }
 }

type XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_ struct {
	DepthTargets []*TfxDepthtargetType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_target"`

}

//	If the W.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_ instance.
func (me *XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_; fn != nil { fn(me) }
	for _, x := range me.DepthTargets { x.Walk() }
 }

type XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_ struct {
	ColorClears []*TfxClearcolorType `xml:"http://www.collada.org/2008/03/COLLADASchema color_clear"`

}

//	If the W.XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_ instance.
func (me *XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_; fn != nil { fn(me) }
	for _, x := range me.ColorClears { x.Walk() }
 }

type XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_ struct {
	Draw TfxDrawType `xml:"http://www.collada.org/2008/03/COLLADASchema draw"`

}

//	If the W.XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_ instance.
func (me *XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_ struct {
	StencilClears []*TfxClearstencilType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_clear"`

}

//	If the W.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_ instance.
func (me *XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_; fn != nil { fn(me) }
	for _, x := range me.StencilClears { x.Walk() }
 }

type XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_ struct {
	DepthClears []*TfxCleardepthType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_clear"`

}

//	If the W.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_ instance.
func (me *XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_; fn != nil { fn(me) }
	for _, x := range me.DepthClears { x.Walk() }
 }

type XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_ struct {
	ColorTargets []*TfxColortargetType `xml:"http://www.collada.org/2008/03/COLLADASchema color_target"`

}

//	If the W.XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_ instance.
func (me *XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_; fn != nil { fn(me) }
	for _, x := range me.ColorTargets { x.Walk() }
 }

type TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate struct {
	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_

	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_

	XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_

	XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_

	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_

	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_

	XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_

}

//	If the W.TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate function is not nil (ie. was set by outside code), calls it with this TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate instance.
func (me *TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate) Walk ()  { 
	if fn := W.TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_.Walk()
	me.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_.Walk()
	me.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_.Walk()
	me.XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_.Walk()
	me.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_.Walk()
	me.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_.Walk()
	me.XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_.Walk()
 }

type XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_ struct {
	Evaluate *TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate"`

}

//	If the W.XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_ instance.
func (me *XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_; fn != nil { fn(me) }
	me.Evaluate.Walk()
 }

type XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ struct {
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdProfileGlslTypeSequenceTechniqueSequencePass struct {
	XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_

	XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_

	XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_

}

//	If the W.TxsdProfileGlslTypeSequenceTechniqueSequencePass function is not nil (ie. was set by outside code), calls it with this TxsdProfileGlslTypeSequenceTechniqueSequencePass instance as the single argument. Then calls the Walk() method on 5/6 embed(s) and 0/0 field(s) belonging to this TxsdProfileGlslTypeSequenceTechniqueSequencePass instance.
func (me *TxsdProfileGlslTypeSequenceTechniqueSequencePass) Walk ()  { 
	if fn := W.TxsdProfileGlslTypeSequenceTechniqueSequencePass; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_.Walk()
	me.XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_.Walk()
	me.XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_.Walk()
	me.XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_ struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	Passes []*TxsdProfileGlslTypeSequenceTechniqueSequencePass `xml:"http://www.collada.org/2008/03/COLLADASchema pass"`

}

//	If the W.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_ instance.
func (me *XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_; fn != nil { fn(me) }
	for _, x := range me.Passes { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ struct {
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

type TxsdProfileGlslTypeSequenceTechnique struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdProfileGlslTypeSequenceTechnique function is not nil (ie. was set by outside code), calls it with this TxsdProfileGlslTypeSequenceTechnique instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TxsdProfileGlslTypeSequenceTechnique instance.
func (me *TxsdProfileGlslTypeSequenceTechnique) Walk ()  { 
	if fn := W.TxsdProfileGlslTypeSequenceTechnique; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_.Walk()
	me.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_.Walk()
 }

type XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Techniques []*TxsdProfileGlslTypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The include element is used to import source code or precompiled binary shaders into the FX Runtime by referencing an external resource.
type TfxIncludeType struct {
//	The url attribute refers to resource.  This may refer to a local resource using a relative URL
//	fragment identifier that begins with the "#" character. The url attribute may refer to an external
//	resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TfxIncludeType function is not nil (ie. was set by outside code), calls it with this TfxIncludeType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TfxIncludeType instance.
func (me *TfxIncludeType) Walk ()  { 
	if fn := W.TfxIncludeType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_ struct {
	Includes []*TfxIncludeType `xml:"http://www.collada.org/2008/03/COLLADASchema include"`

}

//	If the W.XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_ instance.
func (me *XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_; fn != nil { fn(me) }
	for _, x := range me.Includes { x.Walk() }
 }

type XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_ struct {
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

type XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_ struct {
	Modifier TfxModifierEnum `xml:"http://www.collada.org/2008/03/COLLADASchema modifier"`

}

//	If the W.XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_ instance.
func (me *XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_ struct {
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

//	If the W.XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_; fn != nil { fn(me) }
 }

type TglslNewparamType struct {
	XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_

	XsdGoPkgHasGroup_GlslValueGroup

	XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_

}

//	If the W.TglslNewparamType function is not nil (ie. was set by outside code), calls it with this TglslNewparamType instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TglslNewparamType instance.
func (me *TglslNewparamType) Walk ()  { 
	if fn := W.TglslNewparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_.Walk()
	me.XsdGoPkgHasGroup_GlslValueGroup.Walk()
	me.XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_.Walk()
 }

type XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_ struct {
	Newparams []*TglslNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

//	The fx_code_common type allows you to specify an inline block of source code.
type TfxCodeType struct {
	XsdGoPkgValue xsdt.String `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TfxCodeType function is not nil (ie. was set by outside code), calls it with this TfxCodeType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TfxCodeType instance.
func (me *TfxCodeType) Walk ()  { 
	if fn := W.TfxCodeType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_ struct {
	Codes []*TfxCodeType `xml:"http://www.collada.org/2008/03/COLLADASchema code"`

}

//	If the W.XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_ instance.
func (me *XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_; fn != nil { fn(me) }
	for _, x := range me.Codes { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TprofileGlslType struct {
	XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_

	XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_

	XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_

//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	XsdGoPkgHasAttr_Platform_XsdtNCName_Pc

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_

	XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_

}

//	If the W.TprofileGlslType function is not nil (ie. was set by outside code), calls it with this TprofileGlslType instance as the single argument. Then calls the Walk() method on 6/8 embed(s) and 0/0 field(s) belonging to this TprofileGlslType instance.
func (me *TprofileGlslType) Walk ()  { 
	if fn := W.TprofileGlslType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_.Walk()
	me.XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_.Walk()
	me.XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_ struct {
	ProfileGlsl *TprofileGlslType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_GLSL"`

}

//	If the W.XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_ instance.
func (me *XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_; fn != nil { fn(me) }
	me.ProfileGlsl.Walk()
 }

//	Opens a block of CG platform-specific data types and technique declarations.
//	Create a new, named param object in the CG Runtime, assign it a type, an initial value, and additional attributes at declaration time.
//	A group that specifies the allowable types for CG profile parameters.
type XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_ struct {
	Half3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3"`

}

//	If the W.XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_ struct {
	Int4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4"`

}

//	If the W.XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_ instance.
func (me *XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_ struct {
	Bool2X1 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2x1"`

}

//	If the W.XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_ instance.
func (me *XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_ struct {
	Sampler2D *TfxSampler2DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler2D"`

}

//	If the W.XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_ instance.
func (me *XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_; fn != nil { fn(me) }
	me.Sampler2D.Walk()
 }

type XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_ struct {
	Int4X1 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4x1"`

}

//	If the W.XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_ instance.
func (me *XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_; fn != nil { fn(me) }
 }

type Tbool3X4Type TlistOfBoolsType

//	Since Tbool3X4Type is just a simple String type, this merely returns the current string value.
func (me Tbool3X4Type) String () string { return TlistOfBoolsType(me).String() }

//	Since Tbool3X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool3X4Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool3X4Type's alias type TlistOfBoolsType.
func (me Tbool3X4Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

type XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_ struct {
	Bool3X4 Tbool3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3x4"`

}

//	If the W.XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_ instance.
func (me *XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_; fn != nil { fn(me) }
 }

type Tbool4X4Type TlistOfBoolsType

//	Since Tbool4X4Type is just a simple String type, this merely returns the current string value.
func (me Tbool4X4Type) String () string { return TlistOfBoolsType(me).String() }

//	This convenience method just performs a simple type conversion to Tbool4X4Type's alias type TlistOfBoolsType.
func (me Tbool4X4Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool4X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool4X4Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_ struct {
	Bool4X4 Tbool4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4x4"`

}

//	If the W.XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_ instance.
func (me *XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_ struct {
	Sampler3D *TfxSampler3DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler3D"`

}

//	If the W.XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_ instance.
func (me *XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_; fn != nil { fn(me) }
	me.Sampler3D.Walk()
 }

type XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_ struct {
	Half4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4x3"`

}

//	If the W.XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_ instance.
func (me *XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_; fn != nil { fn(me) }
 }

type Tint4X2Type TlistOfIntsType

//	This convenience method just performs a simple type conversion to Tint4X2Type's alias type TlistOfIntsType.
func (me Tint4X2Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint4X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint4X2Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint4X2Type is just a simple String type, this merely returns the current string value.
func (me Tint4X2Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_ struct {
	Int4X2 Tint4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4x2"`

}

//	If the W.XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_ instance.
func (me *XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_ struct {
	Fixed2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2x2"`

}

//	If the W.XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_ struct {
	Fixed3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3x1"`

}

//	If the W.XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_; fn != nil { fn(me) }
 }

type Tbool2X2Type TlistOfBoolsType

//	Since Tbool2X2Type is just a simple String type, this merely returns the current string value.
func (me Tbool2X2Type) String () string { return TlistOfBoolsType(me).String() }

//	This convenience method just performs a simple type conversion to Tbool2X2Type's alias type TlistOfBoolsType.
func (me Tbool2X2Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool2X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool2X2Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_ struct {
	Bool2X2 Tbool2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2x2"`

}

//	If the W.XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_ instance.
func (me *XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_; fn != nil { fn(me) }
 }

type Tint2X3Type TlistOfIntsType

//	Since Tint2X3Type is just a simple String type, this merely returns the current string value.
func (me Tint2X3Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint2X3Type's alias type TlistOfIntsType.
func (me Tint2X3Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint2X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint2X3Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_ struct {
	Int2X3 Tint2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2x3"`

}

//	If the W.XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_ instance.
func (me *XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_ struct {
	Float3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x1"`

}

//	If the W.XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_ struct {
	Bool4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4"`

}

//	If the W.XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_ instance.
func (me *XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_ struct {
	Half2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2"`

}

//	If the W.XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_ struct {
	String xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema string"`

}

//	If the W.XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_ instance.
func (me *XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_ struct {
	Fixed3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3x4"`

}

//	If the W.XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_ instance.
func (me *XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_ struct {
	Int3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3"`

}

//	If the W.XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_ instance.
func (me *XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_; fn != nil { fn(me) }
 }

type Tint2X4Type TlistOfIntsType

//	Since Tint2X4Type is just a simple String type, this merely returns the current string value.
func (me Tint2X4Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint2X4Type's alias type TlistOfIntsType.
func (me Tint2X4Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint2X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint2X4Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_ struct {
	Int2X4 Tint2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2x4"`

}

//	If the W.XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_ instance.
func (me *XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_ struct {
	Fixed2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2x1"`

}

//	If the W.XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_ struct {
	Float2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x3"`

}

//	If the W.XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_ instance.
func (me *XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_ struct {
	Fixed3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3x2"`

}

//	If the W.XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_ instance.
func (me *XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_ struct {
	Float3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x2"`

}

//	If the W.XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_ instance.
func (me *XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_; fn != nil { fn(me) }
 }

type Tbool2X4Type TlistOfBoolsType

//	This convenience method just performs a simple type conversion to Tbool2X4Type's alias type TlistOfBoolsType.
func (me Tbool2X4Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool2X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool2X4Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool2X4Type is just a simple String type, this merely returns the current string value.
func (me Tbool2X4Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_ struct {
	Bool2X4 Tbool2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2x4"`

}

//	If the W.XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_ instance.
func (me *XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_ struct {
	Half2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2x3"`

}

//	If the W.XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_ instance.
func (me *XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_ struct {
	Fixed2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2"`

}

//	If the W.XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_; fn != nil { fn(me) }
 }

type Tbool2X3Type TlistOfBoolsType

//	This convenience method just performs a simple type conversion to Tbool2X3Type's alias type TlistOfBoolsType.
func (me Tbool2X3Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool2X3Type is just a simple String type, this merely returns the current string value.
func (me Tbool2X3Type) String () string { return TlistOfBoolsType(me).String() }

//	Since Tbool2X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool2X3Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_ struct {
	Bool2X3 Tbool2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2x3"`

}

//	If the W.XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_ instance.
func (me *XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_ struct {
	Half3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3x4"`

}

//	If the W.XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_ instance.
func (me *XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_ struct {
	Half4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4x1"`

}

//	If the W.XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_; fn != nil { fn(me) }
 }

type Tbool3X2Type TlistOfBoolsType

//	Since Tbool3X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool3X2Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool3X2Type is just a simple String type, this merely returns the current string value.
func (me Tbool3X2Type) String () string { return TlistOfBoolsType(me).String() }

//	This convenience method just performs a simple type conversion to Tbool3X2Type's alias type TlistOfBoolsType.
func (me Tbool3X2Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

type XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_ struct {
	Bool3X2 Tbool3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3x2"`

}

//	If the W.XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_ instance.
func (me *XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_ struct {
	Enum TglEnumerationType `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

//	If the W.XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_ instance.
func (me *XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_ struct {
	Float4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4"`

}

//	If the W.XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_; fn != nil { fn(me) }
 }

type Tint2X2Type TlistOfIntsType

//	This convenience method just performs a simple type conversion to Tint2X2Type's alias type TlistOfIntsType.
func (me Tint2X2Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint2X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint2X2Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint2X2Type is just a simple String type, this merely returns the current string value.
func (me Tint2X2Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_ struct {
	Int2X2 Tint2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2x2"`

}

//	If the W.XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_ instance.
func (me *XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_ struct {
	Float4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x4"`

}

//	If the W.XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_ struct {
	Fixed3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3"`

}

//	If the W.XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_ struct {
	Int2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2"`

}

//	If the W.XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_ instance.
func (me *XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_; fn != nil { fn(me) }
 }

//	Creates a parameter of a one-dimensional array type.
//	The array may be resized when changed because it is connected to a Cg unsized array.
type XsdGoPkgHasAttr_Resizable_XsdtBoolean_False struct {
//	The array may be resized when changed because it is connected to a Cg unsized array.
	Resizable xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema resizable,attr"`

}

//	Returns the default value for Resizable -- false
func (me XsdGoPkgHasAttr_Resizable_XsdtBoolean_False) ResizableDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type TcgArrayType struct {
//	The array may be resized when changed because it is connected to a Cg unsized array.
	XsdGoPkgHasAttr_Resizable_XsdtBoolean_False

//	The length attribute specifies the length of the array.
	XsdGoPkgHasAttr_Length_XsdtPositiveInteger_

//	First element types the array.  If more than one then init entire array and must match length attribute.  If only one then repeat based on length attribute.
	XsdGoPkgHasGroup_CgParamGroup

}

//	If the W.TcgArrayType function is not nil (ie. was set by outside code), calls it with this TcgArrayType instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TcgArrayType instance.
func (me *TcgArrayType) Walk ()  { 
	if fn := W.TcgArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_ struct {
	Array *TcgArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	If the W.XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_ instance.
func (me *XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_; fn != nil { fn(me) }
	me.Array.Walk()
 }

type XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_ struct {
	Half4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4"`

}

//	If the W.XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_ struct {
	Half4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4x2"`

}

//	If the W.XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_ instance.
func (me *XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_ struct {
	Float2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x2"`

}

//	If the W.XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_ struct {
	Half3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3x2"`

}

//	If the W.XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_ instance.
func (me *XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_; fn != nil { fn(me) }
 }

type Tint3X2Type TlistOfIntsType

//	This convenience method just performs a simple type conversion to Tint3X2Type's alias type TlistOfIntsType.
func (me Tint3X2Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint3X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint3X2Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint3X2Type is just a simple String type, this merely returns the current string value.
func (me Tint3X2Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_ struct {
	Int3X2 Tint3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3x2"`

}

//	If the W.XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_ instance.
func (me *XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_ struct {
	Int2X1 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2x1"`

}

//	If the W.XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_ instance.
func (me *XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_ struct {
	Fixed2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2x3"`

}

//	If the W.XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_ instance.
func (me *XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_ struct {
	Fixed4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4x1"`

}

//	If the W.XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_ struct {
	Half TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema half"`

}

//	If the W.XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_ instance.
func (me *XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_; fn != nil { fn(me) }
 }

type Tbool3X3Type TlistOfBoolsType

//	Since Tbool3X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool3X3Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool3X3Type is just a simple String type, this merely returns the current string value.
func (me Tbool3X3Type) String () string { return TlistOfBoolsType(me).String() }

//	This convenience method just performs a simple type conversion to Tbool3X3Type's alias type TlistOfBoolsType.
func (me Tbool3X3Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

type XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_ struct {
	Bool3X3 Tbool3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3x3"`

}

//	If the W.XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_ instance.
func (me *XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_; fn != nil { fn(me) }
 }

type Tint4X4Type TlistOfIntsType

//	This convenience method just performs a simple type conversion to Tint4X4Type's alias type TlistOfIntsType.
func (me Tint4X4Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint4X4Type is just a simple String type, this merely returns the current string value.
func (me Tint4X4Type) String () string { return TlistOfIntsType(me).String() }

//	Since Tint4X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint4X4Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_ struct {
	Int4X4 Tint4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4x4"`

}

//	If the W.XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_ instance.
func (me *XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_ struct {
	Fixed4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4"`

}

//	If the W.XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_ struct {
	Float4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x3"`

}

//	If the W.XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_ instance.
func (me *XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_ struct {
	Float3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3"`

}

//	If the W.XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_; fn != nil { fn(me) }
 }

type Tbool4X3Type TlistOfBoolsType

//	Since Tbool4X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool4X3Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool4X3Type's alias type TlistOfBoolsType.
func (me Tbool4X3Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool4X3Type is just a simple String type, this merely returns the current string value.
func (me Tbool4X3Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_ struct {
	Bool4X3 Tbool4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4x3"`

}

//	If the W.XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_ instance.
func (me *XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_ struct {
	Bool3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3"`

}

//	If the W.XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_ instance.
func (me *XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_ struct {
	Float4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x1"`

}

//	If the W.XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_ struct {
	Half4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4x4"`

}

//	If the W.XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_ struct {
	Float3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x3"`

}

//	If the W.XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_ struct {
	Bool3X1 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3x1"`

}

//	If the W.XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_ instance.
func (me *XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_ struct {
	Half3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3x3"`

}

//	If the W.XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_ struct {
	Float2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x1"`

}

//	If the W.XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ struct {
	SamplerDEPTH *TfxSamplerDEPTHType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerDEPTH"`

}

//	If the W.XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ instance.
func (me *XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_; fn != nil { fn(me) }
	me.SamplerDEPTH.Walk()
 }

type XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_ struct {
	Half3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3x1"`

}

//	If the W.XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

//	If the W.XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_ struct {
	Half2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2x1"`

}

//	If the W.XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_ struct {
	Fixed TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema fixed"`

}

//	If the W.XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_ instance.
func (me *XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_ struct {
	Fixed3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3x3"`

}

//	If the W.XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_ struct {
	Int3X1 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3x1"`

}

//	If the W.XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_ instance.
func (me *XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_ struct {
	Float2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x4"`

}

//	If the W.XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_ instance.
func (me *XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_ struct {
	Bool4X1 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4x1"`

}

//	If the W.XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_ instance.
func (me *XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_ struct {
	Fixed4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4x3"`

}

//	If the W.XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_ instance.
func (me *XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_ struct {
	Half2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2x4"`

}

//	If the W.XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_ instance.
func (me *XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_ struct {
	SamplerCUBE *TfxSamplerCUBEType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerCUBE"`

}

//	If the W.XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_ instance.
func (me *XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_; fn != nil { fn(me) }
	me.SamplerCUBE.Walk()
 }

type XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_ struct {
	Float3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x4"`

}

//	If the W.XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_ instance.
func (me *XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_ struct {
	Half2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2x2"`

}

//	If the W.XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type Tint3X4Type TlistOfIntsType

//	Since Tint3X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint3X4Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tint3X4Type's alias type TlistOfIntsType.
func (me Tint3X4Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint3X4Type is just a simple String type, this merely returns the current string value.
func (me Tint3X4Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_ struct {
	Int3X4 Tint3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3x4"`

}

//	If the W.XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_ instance.
func (me *XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_ struct {
	Float4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x2"`

}

//	If the W.XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_ instance.
func (me *XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_ struct {
	Fixed4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4x2"`

}

//	If the W.XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_ instance.
func (me *XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_ struct {
	Bool2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2"`

}

//	If the W.XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_ instance.
func (me *XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_ struct {
	SamplerRECT *TfxSamplerRECTType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerRECT"`

}

//	If the W.XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_ instance.
func (me *XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_; fn != nil { fn(me) }
	me.SamplerRECT.Walk()
 }

type Tint3X3Type TlistOfIntsType

//	Since Tint3X3Type is just a simple String type, this merely returns the current string value.
func (me Tint3X3Type) String () string { return TlistOfIntsType(me).String() }

//	Since Tint3X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint3X3Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tint3X3Type's alias type TlistOfIntsType.
func (me Tint3X3Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

type XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_ struct {
	Int3X3 Tint3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3x3"`

}

//	If the W.XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_ instance.
func (me *XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_; fn != nil { fn(me) }
 }

//	Creates an instance of a structured class.
//	Reference a code or include element which defines the usertype
type XsdGoPkgHasAttr_Source_XsdtNCName_ struct {
//	Reference a code or include element which defines the usertype
	Source xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema source,attr"`

}

type XsdGoPkgHasAttr_Typename_XsdtToken_ struct {
	Typename xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema typename,attr"`

}

//	Use a series of these to set the members by name.  The ref attribute will be relative to the usertype you are in right now.
//	Assigns a new value to a previously defined parameter.
type TcgSetparamType struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

	XsdGoPkgHasGroup_CgParamGroup

}

//	If the W.TcgSetparamType function is not nil (ie. was set by outside code), calls it with this TcgSetparamType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TcgSetparamType instance.
func (me *TcgSetparamType) Walk ()  { 
	if fn := W.TcgSetparamType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_ struct {
//	Use a series of these to set the members by name.  The ref attribute will be relative to the usertype you are in right now.
	Setparams []*TcgSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_ instance.
func (me *XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

type TcgUserType struct {
//	Reference a code or include element which defines the usertype
	XsdGoPkgHasAttr_Source_XsdtNCName_

	XsdGoPkgHasAttr_Typename_XsdtToken_

//	Some usertypes do not have data.  They may be used only to implement interface functions.
//	Use a series of these to set the members by name.  The ref attribute will be relative to the usertype you are in right now.
	XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_

}

//	If the W.TcgUserType function is not nil (ie. was set by outside code), calls it with this TcgUserType instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TcgUserType instance.
func (me *TcgUserType) Walk ()  { 
	if fn := W.TcgUserType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_.Walk()
 }

type XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_ struct {
	Usertype *TcgUserType `xml:"http://www.collada.org/2008/03/COLLADASchema usertype"`

}

//	If the W.XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_ instance.
func (me *XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_; fn != nil { fn(me) }
	me.Usertype.Walk()
 }

type XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_ struct {
	Fixed2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2x4"`

}

//	If the W.XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_ instance.
func (me *XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_; fn != nil { fn(me) }
 }

type Tbool4X2Type TlistOfBoolsType

//	This convenience method just performs a simple type conversion to Tbool4X2Type's alias type TlistOfBoolsType.
func (me Tbool4X2Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool4X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool4X2Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool4X2Type is just a simple String type, this merely returns the current string value.
func (me Tbool4X2Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_ struct {
	Bool4X2 Tbool4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4x2"`

}

//	If the W.XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_ instance.
func (me *XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_ struct {
	Sampler1D *TfxSampler1DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler1D"`

}

//	If the W.XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_ instance.
func (me *XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_; fn != nil { fn(me) }
	me.Sampler1D.Walk()
 }

type Tint4X3Type TlistOfIntsType

//	Since Tint4X3Type is just a simple String type, this merely returns the current string value.
func (me Tint4X3Type) String () string { return TlistOfIntsType(me).String() }

//	Since Tint4X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint4X3Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tint4X3Type's alias type TlistOfIntsType.
func (me Tint4X3Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

type XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_ struct {
	Int4X3 Tint4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4x3"`

}

//	If the W.XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_ instance.
func (me *XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_ struct {
	Fixed4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4x4"`

}

//	If the W.XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasGroup_CgParamGroup struct {
	XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_

	XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_

	XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_

	XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_

	XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_

	XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_

	XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_

	XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_

	XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_

	XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_

	XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_

	XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_

	XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_

	XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_

	XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_

	XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_

	XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_

	XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_

	XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_

	XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_

	XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_

	XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_

	XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_

	XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_

	XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_

	XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_

	XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_

	XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_

	XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_

	XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_

	XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_

	XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_

	XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_

	XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_

	XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_

	XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_

	XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_

	XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_

	XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_

	XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_

	XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_

	XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_

	XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_

	XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_

	XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_

	XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_

	XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_

	XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_

	XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_

	XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_

	XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_

}

//	If the W.XsdGoPkgHasGroup_CgParamGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_CgParamGroup instance as the single argument. Then calls the Walk() method on 90/90 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_CgParamGroup instance.
func (me *XsdGoPkgHasGroup_CgParamGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_CgParamGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_.Walk()
	me.XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_.Walk()
	me.XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_.Walk()
	me.XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_.Walk()
	me.XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_.Walk()
	me.XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_.Walk()
	me.XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_.Walk()
	me.XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_.Walk()
	me.XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_.Walk()
	me.XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_.Walk()
	me.XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_.Walk()
	me.XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_.Walk()
	me.XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_.Walk()
	me.XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_.Walk()
	me.XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_.Walk()
	me.XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_.Walk()
	me.XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_.Walk()
	me.XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_.Walk()
	me.XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_.Walk()
	me.XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_.Walk()
	me.XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_.Walk()
	me.XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_.Walk()
	me.XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_.Walk()
	me.XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_.Walk()
	me.XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_.Walk()
	me.XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_.Walk()
	me.XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_.Walk()
	me.XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_.Walk()
	me.XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_.Walk()
	me.XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_.Walk()
	me.XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_.Walk()
	me.XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_.Walk()
	me.XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_.Walk()
	me.XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_.Walk()
	me.XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_.Walk()
	me.XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_.Walk()
	me.XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_.Walk()
	me.XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_.Walk()
	me.XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_.Walk()
	me.XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_.Walk()
	me.XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_.Walk()
	me.XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_.Walk()
	me.XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_.Walk()
	me.XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_.Walk()
	me.XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_.Walk()
	me.XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_.Walk()
	me.XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_.Walk()
	me.XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_.Walk()
	me.XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_.Walk()
	me.XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_.Walk()
	me.XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_.Walk()
	me.XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_.Walk()
	me.XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_.Walk()
	me.XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_.Walk()
	me.XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_.Walk()
	me.XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_.Walk()
	me.XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_.Walk()
	me.XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_.Walk()
	me.XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_.Walk()
	me.XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_.Walk()
	me.XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_.Walk()
 }

//	The annotate element allows you to specify an annotation for this new param.
type XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_ struct {
//	The annotate element allows you to specify an annotation for this new param.
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

//	The modifier element allows you to specify a modifier for this new param.
type XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_ struct {
//	The modifier element allows you to specify a modifier for this new param.
	Modifier TfxModifierEnum `xml:"http://www.collada.org/2008/03/COLLADASchema modifier"`

}

//	If the W.XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_ instance.
func (me *XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_; fn != nil { fn(me) }
 }

//	The semantic element allows you to specify a semantic for this new param.
type XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_ struct {
//	The semantic element allows you to specify a semantic for this new param.
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

//	If the W.XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_; fn != nil { fn(me) }
 }

type TcgNewparamType struct {
//	The modifier element allows you to specify a modifier for this new param.
	XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_

//	The semantic element allows you to specify a semantic for this new param.
	XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasGroup_CgParamGroup

//	The annotate element allows you to specify an annotation for this new param.
	XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_

}

//	If the W.TcgNewparamType function is not nil (ie. was set by outside code), calls it with this TcgNewparamType instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TcgNewparamType instance.
func (me *TcgNewparamType) Walk ()  { 
	if fn := W.TcgNewparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_.Walk()
	me.XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_.Walk()
	me.XsdGoPkgHasGroup_CgParamGroup.Walk()
 }

type XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_ struct {
	Newparams []*TcgNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
type XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The technique element may contain an asset element.
type XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_ struct {
//	The technique element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_ struct {
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
type XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_ struct {
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

//	Declare and prepare a shader for execution in the rendering pipeline of a pass.
//	collect the sources together for the shader.  Use concat to make the final string.
//	entry function name for this shader
type XsdGoPkgHasAttr_Entry_XsdtToken_ struct {
//	entry function name for this shader
	Entry xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema entry,attr"`

}

type TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources struct {
	TfxSourcesType

//	entry function name for this shader
	XsdGoPkgHasAttr_Entry_XsdtToken_

}

//	If the W.TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources function is not nil (ie. was set by outside code), calls it with this TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources instance.
func (me *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources) Walk ()  { 
	if fn := W.TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources; fn != nil { fn(me) }
	me.TfxSourcesType.Walk()
 }

type XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_ struct {
//	collect the sources together for the shader.  Use concat to make the final string.
	Sources *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources `xml:"http://www.collada.org/2008/03/COLLADASchema sources"`

}

//	If the W.XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_ instance.
func (me *XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_; fn != nil { fn(me) }
	me.Sources.Walk()
 }

//	Binds values to uniform inputs of a shader.
//	References a predefined parameter in shader binding declarations.
type TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam struct {
	XsdGoPkgHasAttr_Ref_XsdtNCName_

}

//	If the W.TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam function is not nil (ie. was set by outside code), calls it with this TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam instance.
func (me *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam) Walk ()  { 
	if fn := W.TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_ struct {
//	References a predefined parameter in shader binding declarations.
	Param *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_ instance.
func (me *XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform struct {
//	The identifier for a uniform input parameter to the shader (a formal function parameter or in-scope
//	global) that will be bound to an external resource.
	XsdGoPkgHasAttr_Symbol_XsdtNCName_

//	References a predefined parameter in shader binding declarations.
	XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_

	XsdGoPkgHasGroup_CgParamGroup

}

//	If the W.TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform function is not nil (ie. was set by outside code), calls it with this TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform instance.
func (me *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform) Walk ()  { 
	if fn := W.TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_.Walk()
	me.XsdGoPkgHasGroup_CgParamGroup.Walk()
 }

type XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_ struct {
//	Binds values to uniform inputs of a shader.
	BindUniforms []*TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform `xml:"http://www.collada.org/2008/03/COLLADASchema bind_uniform"`

}

//	If the W.XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_ instance.
func (me *XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_; fn != nil { fn(me) }
	for _, x := range me.BindUniforms { x.Walk() }
 }

//	identify the platform_sku and compiler options to build a binary
//	compiler or linker results symbol.  Ex arbvp1, arbfp1, glslv, glslf, hlslv, hlslf, vs_3_0, ps_3_0
type XsdGoPkgHasAttr_Target_XsdtString_ struct {
//	compiler or linker results symbol.  Ex arbvp1, arbfp1, glslv, glslf, hlslv, hlslf, vs_3_0, ps_3_0
	Target xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema target,attr"`

}

//	compiler or linker options
type XsdGoPkgHasAttr_Options_XsdtString_ struct {
//	compiler or linker options
	Options xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema options,attr"`

}

type XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_ struct {
	Ref xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

//	If the W.XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_ instance.
func (me *XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_; fn != nil { fn(me) }
 }

//	contains a sequence of hexadecimal encoded binary
//	The format attribute is a text string value that indicates the image format.  Examples include "DDS", "EXR", "BMP", "JPG", and "PNG".  Note that all of these formats have internal descriptors of size, bpp, etc.
type XsdGoPkgHasAttr_Format_XsdtToken_ struct {
//	The format attribute is a text string value that indicates the image format.  Examples include "DDS", "EXR", "BMP", "JPG", and "PNG".  Note that all of these formats have internal descriptors of size, bpp, etc.
	Format xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema format,attr"`

}

type TlistOfHexBinaryType xsdt.String

//	This convenience method just performs a simple type conversion to TlistOfHexBinaryType's alias type xsdt.String.
func (me TlistOfHexBinaryType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	TlistOfHexBinaryType defines a String containing a whitespace-separated list of xsdt.HexBinary values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfHexBinaryType) Values () (list []xsdt.HexBinary) { var svals = xsdt.ListValues(string(me)); list = make([]xsdt.HexBinary, len(svals)); for i, s := range svals { list[i] = xsdt.HexBinary(s) }; return }

//	Since TlistOfHexBinaryType is just a simple String type, this merely returns the current string value.
func (me TlistOfHexBinaryType) String () string { return xsdt.String(me).String() }

//	Since TlistOfHexBinaryType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfHexBinaryType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type TxsdFxTargetTypeSequenceBinaryChoiceHex struct {
	XsdGoPkgValue TlistOfHexBinaryType `xml:",chardata"`

//	binary format which may include target device identificatrion
	XsdGoPkgHasAttr_Format_XsdtToken_

}

//	If the W.TxsdFxTargetTypeSequenceBinaryChoiceHex function is not nil (ie. was set by outside code), calls it with this TxsdFxTargetTypeSequenceBinaryChoiceHex instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdFxTargetTypeSequenceBinaryChoiceHex instance.
func (me *TxsdFxTargetTypeSequenceBinaryChoiceHex) Walk ()  { 
	if fn := W.TxsdFxTargetTypeSequenceBinaryChoiceHex; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_ struct {
//	contains a sequence of hexadecimal encoded binary
	Hex *TxsdFxTargetTypeSequenceBinaryChoiceHex `xml:"http://www.collada.org/2008/03/COLLADASchema hex"`

}

//	If the W.XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_ instance.
func (me *XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_; fn != nil { fn(me) }
	me.Hex.Walk()
 }

type TxsdFxTargetTypeSequenceBinary struct {
	XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_

//	contains a sequence of hexadecimal encoded binary
	XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_

}

//	If the W.TxsdFxTargetTypeSequenceBinary function is not nil (ie. was set by outside code), calls it with this TxsdFxTargetTypeSequenceBinary instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdFxTargetTypeSequenceBinary instance.
func (me *TxsdFxTargetTypeSequenceBinary) Walk ()  { 
	if fn := W.TxsdFxTargetTypeSequenceBinary; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_.Walk()
	me.XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_.Walk()
 }

type XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_ struct {
	Binary *TxsdFxTargetTypeSequenceBinary `xml:"http://www.collada.org/2008/03/COLLADASchema binary"`

}

//	If the W.XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_ instance.
func (me *XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_; fn != nil { fn(me) }
	me.Binary.Walk()
 }

//	Name of sub-platform.  May be identical to the platform_series
type XsdGoPkgHasAttr_Platform_XsdtString_ struct {
//	Name of sub-platform.  May be identical to the platform_series
	Platform xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema platform,attr"`

}

type TfxTargetType struct {
//	compiler or linker results symbol.  Ex arbvp1, arbfp1, glslv, glslf, hlslv, hlslf, vs_3_0, ps_3_0
	XsdGoPkgHasAttr_Target_XsdtString_

//	compiler or linker options
	XsdGoPkgHasAttr_Options_XsdtString_

	XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_

//	Name of sub-platform.  May be identical to the platform_series
	XsdGoPkgHasAttr_Platform_XsdtString_

}

//	If the W.TfxTargetType function is not nil (ie. was set by outside code), calls it with this TfxTargetType instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TfxTargetType instance.
func (me *TfxTargetType) Walk ()  { 
	if fn := W.TfxTargetType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_.Walk()
 }

type XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_ struct {
	Compilers []*TfxTargetType `xml:"http://www.collada.org/2008/03/COLLADASchema compiler"`

}

//	If the W.XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_ instance.
func (me *XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_; fn != nil { fn(me) }
	for _, x := range me.Compilers { x.Walk() }
 }

type TxsdCgPassTypeSequenceProgramSequenceShader struct {
//	collect the sources together for the shader.  Use concat to make the final string.
	XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_

//	Binds values to uniform inputs of a shader.
	XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_

	XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_

//	In which pipeline stage this programmable shader is designed to execute, for example, VERTEX, FRAGMENT, etc.
	XsdGoPkgHasAttr_Stage_TfxPipelineStageEnum_

}

//	If the W.TxsdCgPassTypeSequenceProgramSequenceShader function is not nil (ie. was set by outside code), calls it with this TxsdCgPassTypeSequenceProgramSequenceShader instance as the single argument. Then calls the Walk() method on 3/4 embed(s) and 0/0 field(s) belonging to this TxsdCgPassTypeSequenceProgramSequenceShader instance.
func (me *TxsdCgPassTypeSequenceProgramSequenceShader) Walk ()  { 
	if fn := W.TxsdCgPassTypeSequenceProgramSequenceShader; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_.Walk()
	me.XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_.Walk()
	me.XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_.Walk()
 }

type XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_ struct {
//	Declare and prepare a shader for execution in the rendering pipeline of a pass.
	Shaders []*TxsdCgPassTypeSequenceProgramSequenceShader `xml:"http://www.collada.org/2008/03/COLLADASchema shader"`

}

//	If the W.XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_ instance.
func (me *XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_; fn != nil { fn(me) }
	for _, x := range me.Shaders { x.Walk() }
 }

type TxsdCgPassTypeSequenceProgram struct {
//	Declare and prepare a shader for execution in the rendering pipeline of a pass.
	XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_

}

//	If the W.TxsdCgPassTypeSequenceProgram function is not nil (ie. was set by outside code), calls it with this TxsdCgPassTypeSequenceProgram instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdCgPassTypeSequenceProgram instance.
func (me *TxsdCgPassTypeSequenceProgram) Walk ()  { 
	if fn := W.TxsdCgPassTypeSequenceProgram; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_.Walk()
 }

type XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_ struct {
	Program *TxsdCgPassTypeSequenceProgram `xml:"http://www.collada.org/2008/03/COLLADASchema program"`

}

//	If the W.XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_ instance.
func (me *XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_; fn != nil { fn(me) }
	me.Program.Walk()
 }

type TxsdCgPassTypeSequenceStates struct {
	XsdGoPkgHasGroup_GlPipelineSettingsGroup

}

//	If the W.TxsdCgPassTypeSequenceStates function is not nil (ie. was set by outside code), calls it with this TxsdCgPassTypeSequenceStates instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdCgPassTypeSequenceStates instance.
func (me *TxsdCgPassTypeSequenceStates) Walk ()  { 
	if fn := W.TxsdCgPassTypeSequenceStates; fn != nil { fn(me) }
	me.XsdGoPkgHasGroup_GlPipelineSettingsGroup.Walk()
 }

type XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_ struct {
	States *TxsdCgPassTypeSequenceStates `xml:"http://www.collada.org/2008/03/COLLADASchema states"`

}

//	If the W.XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_ instance.
func (me *XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_; fn != nil { fn(me) }
	me.States.Walk()
 }

type XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_ struct {
	DepthTargets []*TfxDepthtargetType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_target"`

}

//	If the W.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_ instance.
func (me *XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_; fn != nil { fn(me) }
	for _, x := range me.DepthTargets { x.Walk() }
 }

type XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_ struct {
	DepthClears []*TfxCleardepthType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_clear"`

}

//	If the W.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_ instance.
func (me *XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_; fn != nil { fn(me) }
	for _, x := range me.DepthClears { x.Walk() }
 }

type XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_ struct {
	Draw TfxDrawType `xml:"http://www.collada.org/2008/03/COLLADASchema draw"`

}

//	If the W.XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_ instance.
func (me *XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_ struct {
	StencilClears []*TfxClearstencilType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_clear"`

}

//	If the W.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_ instance.
func (me *XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_; fn != nil { fn(me) }
	for _, x := range me.StencilClears { x.Walk() }
 }

type XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_ struct {
	StencilTargets []*TfxStenciltargetType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_target"`

}

//	If the W.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_ instance.
func (me *XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_; fn != nil { fn(me) }
	for _, x := range me.StencilTargets { x.Walk() }
 }

type XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_ struct {
	ColorClears []*TfxClearcolorType `xml:"http://www.collada.org/2008/03/COLLADASchema color_clear"`

}

//	If the W.XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_ instance.
func (me *XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_; fn != nil { fn(me) }
	for _, x := range me.ColorClears { x.Walk() }
 }

type XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_ struct {
	ColorTargets []*TfxColortargetType `xml:"http://www.collada.org/2008/03/COLLADASchema color_target"`

}

//	If the W.XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_ instance.
func (me *XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_; fn != nil { fn(me) }
	for _, x := range me.ColorTargets { x.Walk() }
 }

type TxsdCgPassTypeSequenceEvaluate struct {
	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_

	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_

	XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_

	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_

	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_

	XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_

	XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_

}

//	If the W.TxsdCgPassTypeSequenceEvaluate function is not nil (ie. was set by outside code), calls it with this TxsdCgPassTypeSequenceEvaluate instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdCgPassTypeSequenceEvaluate instance.
func (me *TxsdCgPassTypeSequenceEvaluate) Walk ()  { 
	if fn := W.TxsdCgPassTypeSequenceEvaluate; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_.Walk()
	me.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_.Walk()
	me.XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_.Walk()
	me.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_.Walk()
	me.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_.Walk()
	me.XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_.Walk()
	me.XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_.Walk()
 }

type XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_ struct {
	Evaluate *TxsdCgPassTypeSequenceEvaluate `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate"`

}

//	If the W.XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_ instance.
func (me *XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_; fn != nil { fn(me) }
	me.Evaluate.Walk()
 }

type XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TcgPassType struct {
//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_

	XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_

	XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_

}

//	If the W.TcgPassType function is not nil (ie. was set by outside code), calls it with this TcgPassType instance as the single argument. Then calls the Walk() method on 5/6 embed(s) and 0/0 field(s) belonging to this TcgPassType instance.
func (me *TcgPassType) Walk ()  { 
	if fn := W.TcgPassType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_.Walk()
	me.XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_.Walk()
	me.XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_.Walk()
 }

type XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_ struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	Passes []*TcgPassType `xml:"http://www.collada.org/2008/03/COLLADASchema pass"`

}

//	If the W.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_ instance.
func (me *XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_; fn != nil { fn(me) }
	for _, x := range me.Passes { x.Walk() }
 }

type TxsdProfileCgTypeSequenceTechnique struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_

//	The technique element may contain an asset element.
	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_

}

//	If the W.TxsdProfileCgTypeSequenceTechnique function is not nil (ie. was set by outside code), calls it with this TxsdProfileCgTypeSequenceTechnique instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TxsdProfileCgTypeSequenceTechnique instance.
func (me *TxsdProfileCgTypeSequenceTechnique) Walk ()  { 
	if fn := W.TxsdProfileCgTypeSequenceTechnique; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_.Walk()
	me.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_.Walk()
 }

type XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Techniques []*TxsdProfileCgTypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_ struct {
	Codes []*TfxCodeType `xml:"http://www.collada.org/2008/03/COLLADASchema code"`

}

//	If the W.XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_ instance.
func (me *XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_; fn != nil { fn(me) }
	for _, x := range me.Codes { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_ struct {
	Includes []*TfxIncludeType `xml:"http://www.collada.org/2008/03/COLLADASchema include"`

}

//	If the W.XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_ instance.
func (me *XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_; fn != nil { fn(me) }
	for _, x := range me.Includes { x.Walk() }
 }

type TprofileCgType struct {
	XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_

	XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_

//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	XsdGoPkgHasAttr_Platform_XsdtNCName_Pc

}

//	If the W.TprofileCgType function is not nil (ie. was set by outside code), calls it with this TprofileCgType instance as the single argument. Then calls the Walk() method on 6/8 embed(s) and 0/0 field(s) belonging to this TprofileCgType instance.
func (me *TprofileCgType) Walk ()  { 
	if fn := W.TprofileCgType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_.Walk()
	me.XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_.Walk()
	me.XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_.Walk()
 }

type XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_ struct {
	ProfileCg *TprofileCgType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_CG"`

}

//	If the W.XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_ instance.
func (me *XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_; fn != nil { fn(me) }
	me.ProfileCg.Walk()
 }

//	FX for OpenGL ES 2.0
//	Declare a new parameter in the profile to be bound to the pipeline state or shaders
//	New parameters may choose to type themselves by value, providing a default.
type XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_ struct {
	Bvec4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bvec4"`

}

//	If the W.XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_ instance.
func (me *XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_ struct {
	Ivec3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema ivec3"`

}

//	If the W.XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_ instance.
func (me *XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_ struct {
	Bvec2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bvec2"`

}

//	If the W.XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_ instance.
func (me *XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_; fn != nil { fn(me) }
 }

type TxsdGles2ValueGroupChoiceArray struct {
	XsdGoPkgHasGroup_Gles2ValueGroup

//	Enable applications to validate element count without shader having been compiled
	XsdGoPkgHasAttr_Length_XsdtPositiveInteger_

}

//	If the W.TxsdGles2ValueGroupChoiceArray function is not nil (ie. was set by outside code), calls it with this TxsdGles2ValueGroupChoiceArray instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2ValueGroupChoiceArray instance.
func (me *TxsdGles2ValueGroupChoiceArray) Walk ()  { 
	if fn := W.TxsdGles2ValueGroupChoiceArray; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_ struct {
	Array *TxsdGles2ValueGroupChoiceArray `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	If the W.XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_ instance.
func (me *XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_; fn != nil { fn(me) }
	me.Array.Walk()
 }

type XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_ struct {
	Mat2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema mat2"`

}

//	If the W.XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_; fn != nil { fn(me) }
 }

//	not in baseline spec but probably available in extensions
type XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_ struct {
//	not in baseline spec but probably available in extensions
	Sampler3D *TfxSampler3DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler3D"`

}

//	If the W.XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_ instance.
func (me *XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_; fn != nil { fn(me) }
	me.Sampler3D.Walk()
 }

type XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_ struct {
	Enum TglEnumerationType `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

//	If the W.XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_ instance.
func (me *XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_ struct {
	Mat4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema mat4"`

}

//	If the W.XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

//	Use a series of these to set the members by name.  The ref attribute will be relative to the struct you are in right now.
type TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam struct {
	XsdGoPkgHasGroup_Gles2ValueGroup

//	Symbol name of the member
	XsdGoPkgHasAttr_Ref_XsdtToken_

}

//	If the W.TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam function is not nil (ie. was set by outside code), calls it with this TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam instance.
func (me *TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam) Walk ()  { 
	if fn := W.TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_ struct {
//	Use a series of these to set the members by name.  The ref attribute will be relative to the struct you are in right now.
	Setparams []*TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_ instance.
func (me *XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

type TxsdGles2ValueGroupChoiceUsertype struct {
//	Symbol for type or structure in shader code.   This aids in type-checking, resolution of bindings, and support interfaces
	XsdGoPkgHasAttr_Typename_XsdtToken_

//	Use a series of these to set the members by name.  The ref attribute will be relative to the struct you are in right now.
	XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_

}

//	If the W.TxsdGles2ValueGroupChoiceUsertype function is not nil (ie. was set by outside code), calls it with this TxsdGles2ValueGroupChoiceUsertype instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2ValueGroupChoiceUsertype instance.
func (me *TxsdGles2ValueGroupChoiceUsertype) Walk ()  { 
	if fn := W.TxsdGles2ValueGroupChoiceUsertype; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_.Walk()
 }

type XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_ struct {
	Usertype *TxsdGles2ValueGroupChoiceUsertype `xml:"http://www.collada.org/2008/03/COLLADASchema usertype"`

}

//	If the W.XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_ instance.
func (me *XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_; fn != nil { fn(me) }
	me.Usertype.Walk()
 }

type XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ struct {
	SamplerCUBE *TfxSamplerCUBEType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerCUBE"`

}

//	If the W.XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ instance.
func (me *XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_; fn != nil { fn(me) }
	me.SamplerCUBE.Walk()
 }

type XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_ struct {
	Sampler2D *TfxSampler2DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler2D"`

}

//	If the W.XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_ instance.
func (me *XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_; fn != nil { fn(me) }
	me.Sampler2D.Walk()
 }

type XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_ struct {
	Vec2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema vec2"`

}

//	If the W.XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_ struct {
	Bvec3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bvec3"`

}

//	If the W.XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_ instance.
func (me *XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_ struct {
	Vec3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema vec3"`

}

//	If the W.XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_ struct {
	Mat3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema mat3"`

}

//	If the W.XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_ struct {
	Vec4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema vec4"`

}

//	If the W.XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

//	not in baseline spec but probably available in extensions
type XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ struct {
//	not in baseline spec but probably available in extensions
	SamplerDEPTH *TfxSamplerDEPTHType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerDEPTH"`

}

//	If the W.XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ instance.
func (me *XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_; fn != nil { fn(me) }
	me.SamplerDEPTH.Walk()
 }

type XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_ struct {
	Ivec2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema ivec2"`

}

//	If the W.XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_ instance.
func (me *XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_ struct {
	Ivec4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema ivec4"`

}

//	If the W.XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_ instance.
func (me *XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasGroup_Gles2ValueGroup struct {
	XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_

	XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_

	XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_

	XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_

	XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_

	XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_

	XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_

	XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_

	XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_

//	not in baseline spec but probably available in extensions
	XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_

	XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_

	XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_

	XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_

	XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_

	XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_

	XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_

	XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_

//	not in baseline spec but probably available in extensions
	XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_

	XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_

	XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_

}

//	If the W.XsdGoPkgHasGroup_Gles2ValueGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_Gles2ValueGroup instance as the single argument. Then calls the Walk() method on 22/22 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_Gles2ValueGroup instance.
func (me *XsdGoPkgHasGroup_Gles2ValueGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_Gles2ValueGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_.Walk()
	me.XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_.Walk()
	me.XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_.Walk()
	me.XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_.Walk()
	me.XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_.Walk()
	me.XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_.Walk()
	me.XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_.Walk()
	me.XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_.Walk()
	me.XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_.Walk()
	me.XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_.Walk()
	me.XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_.Walk()
	me.XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_.Walk()
	me.XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_.Walk()
 }

type XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_ struct {
	Modifier TfxModifierEnum `xml:"http://www.collada.org/2008/03/COLLADASchema modifier"`

}

//	If the W.XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_ instance.
func (me *XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_; fn != nil { fn(me) }
 }

//	The semantic element allows you to specify a semantic for this new param.
type XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_ struct {
//	The semantic element allows you to specify a semantic for this new param.
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

//	If the W.XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_ struct {
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

type Tgles2NewparamType struct {
//	The semantic element allows you to specify a semantic for this new param.
	XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_

	XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasGroup_Gles2ValueGroup

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_

}

//	If the W.Tgles2NewparamType function is not nil (ie. was set by outside code), calls it with this Tgles2NewparamType instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this Tgles2NewparamType instance.
func (me *Tgles2NewparamType) Walk ()  { 
	if fn := W.Tgles2NewparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_.Walk()
	me.XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasGroup_Gles2ValueGroup.Walk()
	me.XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_.Walk()
 }

type TxsdProfileGles2TypeSequenceNewparam struct {
	Tgles2NewparamType

}

//	If the W.TxsdProfileGles2TypeSequenceNewparam function is not nil (ie. was set by outside code), calls it with this TxsdProfileGles2TypeSequenceNewparam instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdProfileGles2TypeSequenceNewparam instance.
func (me *TxsdProfileGles2TypeSequenceNewparam) Walk ()  { 
	if fn := W.TxsdProfileGles2TypeSequenceNewparam; fn != nil { fn(me) }
	me.Tgles2NewparamType.Walk()
 }

type XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_ struct {
	Newparams []*TxsdProfileGles2TypeSequenceNewparam `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
//	Set up pipeline state and shaders for rendering
//	Add metadata to this pass that may be used by games or tools to make decisions
type XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_ struct {
//	Add metadata to this pass that may be used by games or tools to make decisions
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

//	runtime execution helpers
//	Identify that this pass is intended to render it's stencil bits into a surface parameter
type XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_ struct {
//	Identify that this pass is intended to render it's stencil bits into a surface parameter
	StencilTargets []*TfxStenciltargetType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_target"`

}

//	If the W.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_ instance.
func (me *XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_; fn != nil { fn(me) }
	for _, x := range me.StencilTargets { x.Walk() }
 }

//	The indexed color render target is supposed to be cleared to this color
type XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_ struct {
//	The indexed color render target is supposed to be cleared to this color
	ColorClears []*TfxClearcolorType `xml:"http://www.collada.org/2008/03/COLLADASchema color_clear"`

}

//	If the W.XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_ instance.
func (me *XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_; fn != nil { fn(me) }
	for _, x := range me.ColorClears { x.Walk() }
 }

//	Identify what type of goemetry should be drawn durring this pass.  See comments in fx_draw_common for a list of common strings.
type XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_ struct {
//	Identify what type of goemetry should be drawn durring this pass.  See comments in fx_draw_common for a list of common strings.
	Draw TfxDrawType `xml:"http://www.collada.org/2008/03/COLLADASchema draw"`

}

//	If the W.XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_ instance.
func (me *XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_; fn != nil { fn(me) }
 }

//	Identify that this pass is intended to render it's colors into a surface parameter
type XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_ struct {
//	Identify that this pass is intended to render it's colors into a surface parameter
	ColorTargets []*TfxColortargetType `xml:"http://www.collada.org/2008/03/COLLADASchema color_target"`

}

//	If the W.XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_ instance.
func (me *XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_; fn != nil { fn(me) }
	for _, x := range me.ColorTargets { x.Walk() }
 }

//	Identify that this pass is intended to render it's depthinto a surface parameter
type XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_ struct {
//	Identify that this pass is intended to render it's depthinto a surface parameter
	DepthTargets []*TfxDepthtargetType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_target"`

}

//	If the W.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_ instance.
func (me *XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_; fn != nil { fn(me) }
	for _, x := range me.DepthTargets { x.Walk() }
 }

//	The indexed depth render target is supposed to be cleared to this color
type XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_ struct {
//	The indexed depth render target is supposed to be cleared to this color
	DepthClears []*TfxCleardepthType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_clear"`

}

//	If the W.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_ instance.
func (me *XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_; fn != nil { fn(me) }
	for _, x := range me.DepthClears { x.Walk() }
 }

//	The indexed stencil bits render target is supposed to be cleared to this color
type XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_ struct {
//	The indexed stencil bits render target is supposed to be cleared to this color
	StencilClears []*TfxClearstencilType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_clear"`

}

//	If the W.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_ instance.
func (me *XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_; fn != nil { fn(me) }
	for _, x := range me.StencilClears { x.Walk() }
 }

type TxsdGles2PassTypeSequenceEvaluate struct {
//	Identify that this pass is intended to render it's stencil bits into a surface parameter
	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_

//	The indexed color render target is supposed to be cleared to this color
	XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_

//	Identify what type of goemetry should be drawn durring this pass.  See comments in fx_draw_common for a list of common strings.
	XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_

//	Identify that this pass is intended to render it's colors into a surface parameter
	XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_

//	Identify that this pass is intended to render it's depthinto a surface parameter
	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_

//	The indexed depth render target is supposed to be cleared to this color
	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_

//	The indexed stencil bits render target is supposed to be cleared to this color
	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_

}

//	If the W.TxsdGles2PassTypeSequenceEvaluate function is not nil (ie. was set by outside code), calls it with this TxsdGles2PassTypeSequenceEvaluate instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdGles2PassTypeSequenceEvaluate instance.
func (me *TxsdGles2PassTypeSequenceEvaluate) Walk ()  { 
	if fn := W.TxsdGles2PassTypeSequenceEvaluate; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_.Walk()
	me.XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_.Walk()
	me.XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_.Walk()
	me.XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_.Walk()
	me.XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_.Walk()
	me.XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_.Walk()
	me.XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_.Walk()
 }

type XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_ struct {
//	runtime execution helpers
	Evaluate *TxsdGles2PassTypeSequenceEvaluate `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate"`

}

//	If the W.XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_ instance.
func (me *XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_; fn != nil { fn(me) }
	me.Evaluate.Walk()
 }

type XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	A vertex_shader and fragment_shader are linked together to produce a OpenGL ES 2 program.
//	a program is one or more shaders linked together
//	compile shader stages
//	Identify code fragments and bind their parameters to effect parameters to identify how their values will be filled in
type XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	Not used by GLSL.  This identifies a very specific binary target format for such things as a specific generation of GPU.  Ex. NV4x
type XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_ struct {
//	Not used by GLSL.  This identifies a very specific binary target format for such things as a specific generation of GPU.  Ex. NV4x
	Compilers []*TfxTargetType `xml:"http://www.collada.org/2008/03/COLLADASchema compiler"`

}

//	If the W.XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_ instance.
func (me *XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_; fn != nil { fn(me) }
	for _, x := range me.Compilers { x.Walk() }
 }

//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
//	Not used by GLSL.  Some languages require functional entry points.  GLSL always uses "main".  CG requires an entry point
type XsdGoPkgHasAttr_Entry_XsdtToken_Main struct {
//	Not used by GLSL.  Some languages require functional entry points.  GLSL always uses "main".  CG requires an entry point
	Entry xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema entry,attr"`

}

//	Returns the default value for Entry -- "main"
func (me XsdGoPkgHasAttr_Entry_XsdtToken_Main) EntryDefault () xsdt.Token { return xsdt.Token("main") }

type TxsdGles2ShaderTypeSequenceSources struct {
//	Not used by GLSL.  Some languages require functional entry points.  GLSL always uses "main".  CG requires an entry point
	XsdGoPkgHasAttr_Entry_XsdtToken_Main

	TfxSourcesType

}

//	If the W.TxsdGles2ShaderTypeSequenceSources function is not nil (ie. was set by outside code), calls it with this TxsdGles2ShaderTypeSequenceSources instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2ShaderTypeSequenceSources instance.
func (me *TxsdGles2ShaderTypeSequenceSources) Walk ()  { 
	if fn := W.TxsdGles2ShaderTypeSequenceSources; fn != nil { fn(me) }
	me.TfxSourcesType.Walk()
 }

type XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_ struct {
//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
	Sources *TxsdGles2ShaderTypeSequenceSources `xml:"http://www.collada.org/2008/03/COLLADASchema sources"`

}

//	If the W.XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_ instance.
func (me *XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_; fn != nil { fn(me) }
	me.Sources.Walk()
 }

type Tgles2ShaderType struct {
//	GPU Pipeline stage for this programmable shader. Current standards are VERTEX (vertex shader), FRAGMENT (pixel or fragment shader).  These are recognized by both GLSL and CG
	XsdGoPkgHasAttr_Stage_TfxPipelineStageEnum_

	XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_

//	Not used by GLSL.  This identifies a very specific binary target format for such things as a specific generation of GPU.  Ex. NV4x
	XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_

//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
	XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_

}

//	If the W.Tgles2ShaderType function is not nil (ie. was set by outside code), calls it with this Tgles2ShaderType instance as the single argument. Then calls the Walk() method on 3/4 embed(s) and 0/0 field(s) belonging to this Tgles2ShaderType instance.
func (me *Tgles2ShaderType) Walk ()  { 
	if fn := W.Tgles2ShaderType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_.Walk()
	me.XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_.Walk()
 }

type XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_ struct {
//	compile shader stages
	Shaders []*Tgles2ShaderType `xml:"http://www.collada.org/2008/03/COLLADASchema shader"`

}

//	If the W.XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_ instance.
func (me *XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_; fn != nil { fn(me) }
	for _, x := range me.Shaders { x.Walk() }
 }

//	link shaders into program
type XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_ struct {
//	link shaders into program
	Linkers []*TfxTargetType `xml:"http://www.collada.org/2008/03/COLLADASchema linker"`

}

//	If the W.XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_ instance.
func (me *XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_; fn != nil { fn(me) }
	for _, x := range me.Linkers { x.Walk() }
 }

//	Bind uniforms and samplers
//	Bind uniforms to parameters
type TxsdGles2ProgramTypeSequenceBindUniformChoiceParam struct {
//	SID of parameter
	XsdGoPkgHasAttr_Ref_XsdtNCName_

}

//	If the W.TxsdGles2ProgramTypeSequenceBindUniformChoiceParam function is not nil (ie. was set by outside code), calls it with this TxsdGles2ProgramTypeSequenceBindUniformChoiceParam instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdGles2ProgramTypeSequenceBindUniformChoiceParam instance.
func (me *TxsdGles2ProgramTypeSequenceBindUniformChoiceParam) Walk ()  { 
	if fn := W.TxsdGles2ProgramTypeSequenceBindUniformChoiceParam; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_ struct {
//	Bind uniforms to parameters
	Param *TxsdGles2ProgramTypeSequenceBindUniformChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_ instance.
func (me *XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type TxsdGles2ProgramTypeSequenceBindUniform struct {
	XsdGoPkgHasGroup_Gles2ValueGroup

//	Bind uniforms to parameters
	XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_

//	shader variable name
	XsdGoPkgHasAttr_Symbol_XsdtToken_

}

//	If the W.TxsdGles2ProgramTypeSequenceBindUniform function is not nil (ie. was set by outside code), calls it with this TxsdGles2ProgramTypeSequenceBindUniform instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdGles2ProgramTypeSequenceBindUniform instance.
func (me *TxsdGles2ProgramTypeSequenceBindUniform) Walk ()  { 
	if fn := W.TxsdGles2ProgramTypeSequenceBindUniform; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_.Walk()
	me.XsdGoPkgHasGroup_Gles2ValueGroup.Walk()
 }

type XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_ struct {
//	Bind uniforms and samplers
	BindUniforms []*TxsdGles2ProgramTypeSequenceBindUniform `xml:"http://www.collada.org/2008/03/COLLADASchema bind_uniform"`

}

//	If the W.XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_ instance.
func (me *XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_; fn != nil { fn(me) }
	for _, x := range me.BindUniforms { x.Walk() }
 }

//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
type XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_ struct {
//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
	Semantic xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

//	If the W.XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_ instance.
func (me *XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_; fn != nil { fn(me) }
 }

type TxsdGles2ProgramTypeSequenceBindAttribute struct {
//	shader variable name
	XsdGoPkgHasAttr_Symbol_XsdtToken_

//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
	XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_

}

//	If the W.TxsdGles2ProgramTypeSequenceBindAttribute function is not nil (ie. was set by outside code), calls it with this TxsdGles2ProgramTypeSequenceBindAttribute instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2ProgramTypeSequenceBindAttribute instance.
func (me *TxsdGles2ProgramTypeSequenceBindAttribute) Walk ()  { 
	if fn := W.TxsdGles2ProgramTypeSequenceBindAttribute; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_.Walk()
 }

type XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_ struct {
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
	BindAttributes []*TxsdGles2ProgramTypeSequenceBindAttribute `xml:"http://www.collada.org/2008/03/COLLADASchema bind_attribute"`

}

//	If the W.XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_ instance.
func (me *XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_; fn != nil { fn(me) }
	for _, x := range me.BindAttributes { x.Walk() }
 }

type Tgles2ProgramType struct {
//	compile shader stages
	XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_

//	link shaders into program
	XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_

//	Bind uniforms and samplers
	XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_

//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
	XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_

}

//	If the W.Tgles2ProgramType function is not nil (ie. was set by outside code), calls it with this Tgles2ProgramType instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this Tgles2ProgramType instance.
func (me *Tgles2ProgramType) Walk ()  { 
	if fn := W.Tgles2ProgramType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_.Walk()
	me.XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_.Walk()
	me.XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_.Walk()
	me.XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_.Walk()
 }

type XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_ struct {
//	A vertex_shader and fragment_shader are linked together to produce a OpenGL ES 2 program.
	Program *Tgles2ProgramType `xml:"http://www.collada.org/2008/03/COLLADASchema program"`

}

//	If the W.XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_ instance.
func (me *XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_; fn != nil { fn(me) }
	me.Program.Walk()
 }

//	API state
//	All of the pass state settings for OpenGL ES 2 API
type XsdGoPkgHasAttr_Param_XsdtToken_ struct {
	Param xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema param,attr"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail struct {
	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ struct {
	Zfail *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

//	If the W.XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ instance.
func (me *XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_; fn != nil { fn(me) }
	me.Zfail.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass struct {
	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ struct {
	Zpass *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

//	If the W.XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ instance.
func (me *XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_; fn != nil { fn(me) }
	me.Zpass.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace struct {
	XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ struct {
	Face *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

//	If the W.XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ instance.
func (me *XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_; fn != nil { fn(me) }
	me.Face.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ struct {
	Fail *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

//	If the W.XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ instance.
func (me *XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_; fn != nil { fn(me) }
	me.Fail.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate struct {
	XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_

	XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_

	XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_

	XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_.Walk()
	me.XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_.Walk()
	me.XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_.Walk()
	me.XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_.Walk()
 }

type XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_ struct {
	StencilOpSeparate *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op_separate"`

}

//	If the W.XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_ instance.
func (me *XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_; fn != nil { fn(me) }
	me.StencilOpSeparate.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ struct {
	Mask *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

//	If the W.XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ instance.
func (me *XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_; fn != nil { fn(me) }
	me.Mask.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ struct {
	Face *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

//	If the W.XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ instance.
func (me *XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_; fn != nil { fn(me) }
	me.Face.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate struct {
	XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_

	XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_.Walk()
	me.XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_.Walk()
 }

type XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_ struct {
	StencilMaskSeparate *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask_separate"`

}

//	If the W.XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_ instance.
func (me *XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_; fn != nil { fn(me) }
	me.StencilMaskSeparate.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_ struct {
	ScissorTestEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema scissor_test_enable"`

}

//	If the W.XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_ instance.
func (me *XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_; fn != nil { fn(me) }
	me.ScissorTestEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoicePointSize struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

//	If the W.TxsdGles2PipelineSettingsGroupChoicePointSize function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoicePointSize instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoicePointSize instance.
func (me *TxsdGles2PipelineSettingsGroupChoicePointSize) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoicePointSize; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_ struct {
	PointSize *TxsdGles2PipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_size"`

}

//	If the W.XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_ instance.
func (me *XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_; fn != nil { fn(me) }
	me.PointSize.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_ struct {
	PolygonOffsetFillEnable *TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_fill_enable"`

}

//	If the W.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_ instance.
func (me *XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_; fn != nil { fn(me) }
	me.PolygonOffsetFillEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest struct {
	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_ struct {
	Dest *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest `xml:"http://www.collada.org/2008/03/COLLADASchema dest"`

}

//	If the W.XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_ instance.
func (me *XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_; fn != nil { fn(me) }
	me.Dest.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglBlendEnum_One

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_ struct {
	Src *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc `xml:"http://www.collada.org/2008/03/COLLADASchema src"`

}

//	If the W.XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_ instance.
func (me *XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_; fn != nil { fn(me) }
	me.Src.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendFunc struct {
	XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_

	XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendFunc function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendFunc instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendFunc instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendFunc) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendFunc; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_.Walk()
	me.XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_.Walk()
 }

type XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_ struct {
	BlendFunc *TxsdGles2PipelineSettingsGroupChoiceBlendFunc `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func"`

}

//	If the W.XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_ instance.
func (me *XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_; fn != nil { fn(me) }
	me.BlendFunc.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceCullFace struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglFaceEnum_Back

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceCullFace function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceCullFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceCullFace instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceCullFace) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceCullFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_ struct {
	CullFace *TxsdGles2PipelineSettingsGroupChoiceCullFace `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face"`

}

//	If the W.XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_ instance.
func (me *XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_; fn != nil { fn(me) }
	me.CullFace.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ struct {
	Alpha *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema alpha"`

}

//	If the W.XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ instance.
func (me *XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_; fn != nil { fn(me) }
	me.Alpha.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ struct {
	Rgb *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb `xml:"http://www.collada.org/2008/03/COLLADASchema rgb"`

}

//	If the W.XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ instance.
func (me *XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_; fn != nil { fn(me) }
	me.Rgb.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate struct {
	XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_

	XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_.Walk()
	me.XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_.Walk()
 }

type XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_ struct {
	BlendEquationSeparate *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema blend_equation_separate"`

}

//	If the W.XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_ instance.
func (me *XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_; fn != nil { fn(me) }
	me.BlendEquationSeparate.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack struct {
	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ struct {
	Back *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack `xml:"http://www.collada.org/2008/03/COLLADASchema back"`

}

//	If the W.XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ instance.
func (me *XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_; fn != nil { fn(me) }
	me.Back.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ struct {
	Ref *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

//	If the W.XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ instance.
func (me *XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_; fn != nil { fn(me) }
	me.Ref.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront struct {
	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ struct {
	Front *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront `xml:"http://www.collada.org/2008/03/COLLADASchema front"`

}

//	If the W.XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ instance.
func (me *XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_; fn != nil { fn(me) }
	me.Front.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ struct {
	Mask *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

//	If the W.XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ instance.
func (me *XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_; fn != nil { fn(me) }
	me.Mask.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate struct {
	XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_

	XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_

	XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_

	XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_.Walk()
	me.XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_.Walk()
	me.XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_.Walk()
	me.XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_.Walk()
 }

type XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_ struct {
	StencilFuncSeparate *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func_separate"`

}

//	If the W.XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_ instance.
func (me *XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_; fn != nil { fn(me) }
	me.StencilFuncSeparate.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ struct {
	SampleAlphaToCoverageEnable *TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_coverage_enable"`

}

//	If the W.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ instance.
func (me *XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_; fn != nil { fn(me) }
	me.SampleAlphaToCoverageEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_ struct {
	Ref *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

//	If the W.XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_ instance.
func (me *XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_; fn != nil { fn(me) }
	me.Ref.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_ struct {
	Func *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

//	If the W.XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_ instance.
func (me *XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_; fn != nil { fn(me) }
	me.Func.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask struct {
	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_ struct {
	Mask *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

//	If the W.XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_ instance.
func (me *XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_; fn != nil { fn(me) }
	me.Mask.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilFunc struct {
	XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_

	XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_

	XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilFunc function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilFunc instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilFunc instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilFunc) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilFunc; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_.Walk()
	me.XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_.Walk()
	me.XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_.Walk()
 }

type XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_ struct {
	StencilFunc *TxsdGles2PipelineSettingsGroupChoiceStencilFunc `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func"`

}

//	If the W.XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_ instance.
func (me *XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_; fn != nil { fn(me) }
	me.StencilFunc.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceFrontFace struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceFrontFace function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceFrontFace instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceFrontFace instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceFrontFace) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceFrontFace; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_ struct {
	FrontFace *TxsdGles2PipelineSettingsGroupChoiceFrontFace `xml:"http://www.collada.org/2008/03/COLLADASchema front_face"`

}

//	If the W.XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_ instance.
func (me *XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_; fn != nil { fn(me) }
	me.FrontFace.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceDepthRange struct {
	XsdGoPkgHasAttr_Value_Tfloat2Type_01

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceDepthRange function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceDepthRange instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceDepthRange instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceDepthRange) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceDepthRange; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_ struct {
	DepthRange *TxsdGles2PipelineSettingsGroupChoiceDepthRange `xml:"http://www.collada.org/2008/03/COLLADASchema depth_range"`

}

//	If the W.XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_ instance.
func (me *XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_; fn != nil { fn(me) }
	me.DepthRange.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_ struct {
	Zpass *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

//	If the W.XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_ instance.
func (me *XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_; fn != nil { fn(me) }
	me.Zpass.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_ struct {
	Fail *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

//	If the W.XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_ instance.
func (me *XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_; fn != nil { fn(me) }
	me.Fail.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail struct {
	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_ struct {
	Zfail *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

//	If the W.XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_ instance.
func (me *XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_; fn != nil { fn(me) }
	me.Zfail.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilOp struct {
	XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_

	XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_

	XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilOp function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilOp instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilOp instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilOp) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilOp; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_.Walk()
	me.XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_.Walk()
	me.XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_.Walk()
 }

type XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_ struct {
	StencilOp *TxsdGles2PipelineSettingsGroupChoiceStencilOp `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op"`

}

//	If the W.XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_ instance.
func (me *XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_; fn != nil { fn(me) }
	me.StencilOp.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendColor struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendColor function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendColor instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendColor instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendColor) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendColor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_ struct {
	BlendColor *TxsdGles2PipelineSettingsGroupChoiceBlendColor `xml:"http://www.collada.org/2008/03/COLLADASchema blend_color"`

}

//	If the W.XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_ instance.
func (me *XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_; fn != nil { fn(me) }
	me.BlendColor.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_ struct {
	DepthTestEnable *TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_test_enable"`

}

//	If the W.XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_ instance.
func (me *XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_; fn != nil { fn(me) }
	me.DepthTestEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoicePolygonOffset struct {
	XsdGoPkgHasAttr_Value_Tfloat2Type_00

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoicePolygonOffset function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoicePolygonOffset instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoicePolygonOffset instance.
func (me *TxsdGles2PipelineSettingsGroupChoicePolygonOffset) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoicePolygonOffset; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_ struct {
	PolygonOffset *TxsdGles2PipelineSettingsGroupChoicePolygonOffset `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset"`

}

//	If the W.XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_ instance.
func (me *XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_; fn != nil { fn(me) }
	me.PolygonOffset.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilMask struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TintType_4294967295

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilMask function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilMask instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilMask) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_ struct {
	StencilMask *TxsdGles2PipelineSettingsGroupChoiceStencilMask `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask"`

}

//	If the W.XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_ instance.
func (me *XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_; fn != nil { fn(me) }
	me.StencilMask.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_ struct {
	SampleCoverageEnable *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_coverage_enable"`

}

//	If the W.XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_ instance.
func (me *XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_; fn != nil { fn(me) }
	me.SampleCoverageEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendEquation struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendEquation function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendEquation instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendEquation instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendEquation) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendEquation; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_ struct {
	BlendEquation *TxsdGles2PipelineSettingsGroupChoiceBlendEquation `xml:"http://www.collada.org/2008/03/COLLADASchema blend_equation"`

}

//	If the W.XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_ instance.
func (me *XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_; fn != nil { fn(me) }
	me.BlendEquation.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_ struct {
	StencilTestEnable *TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_test_enable"`

}

//	If the W.XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_ instance.
func (me *XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_; fn != nil { fn(me) }
	me.StencilTestEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceDitherEnable struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtBoolean_True

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceDitherEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceDitherEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceDitherEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceDitherEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceDitherEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_ struct {
	DitherEnable *TxsdGles2PipelineSettingsGroupChoiceDitherEnable `xml:"http://www.collada.org/2008/03/COLLADASchema dither_enable"`

}

//	If the W.XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_ instance.
func (me *XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_; fn != nil { fn(me) }
	me.DitherEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceColorMask struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_Tbool4Type_TrueTrueTrueTrue

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceColorMask function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceColorMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceColorMask instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceColorMask) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceColorMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_ struct {
	ColorMask *TxsdGles2PipelineSettingsGroupChoiceColorMask `xml:"http://www.collada.org/2008/03/COLLADASchema color_mask"`

}

//	If the W.XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_ instance.
func (me *XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_; fn != nil { fn(me) }
	me.ColorMask.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceDepthFunc struct {
	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceDepthFunc function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceDepthFunc instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceDepthFunc instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceDepthFunc) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceDepthFunc; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_ struct {
	DepthFunc *TxsdGles2PipelineSettingsGroupChoiceDepthFunc `xml:"http://www.collada.org/2008/03/COLLADASchema depth_func"`

}

//	If the W.XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_ instance.
func (me *XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_; fn != nil { fn(me) }
	me.DepthFunc.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ struct {
	DestRgb *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb `xml:"http://www.collada.org/2008/03/COLLADASchema dest_rgb"`

}

//	If the W.XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ instance.
func (me *XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_; fn != nil { fn(me) }
	me.DestRgb.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb struct {
	XsdGoPkgHasAttr_Value_TglBlendEnum_One

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ struct {
	SrcRgb *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb `xml:"http://www.collada.org/2008/03/COLLADASchema src_rgb"`

}

//	If the W.XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ instance.
func (me *XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_; fn != nil { fn(me) }
	me.SrcRgb.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ struct {
	DestAlpha *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema dest_alpha"`

}

//	If the W.XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ instance.
func (me *XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_; fn != nil { fn(me) }
	me.DestAlpha.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha struct {
	XsdGoPkgHasAttr_Value_TglBlendEnum_One

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ struct {
	SrcAlpha *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema src_alpha"`

}

//	If the W.XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ instance.
func (me *XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_; fn != nil { fn(me) }
	me.SrcAlpha.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate struct {
	XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_

	XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_

	XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_

	XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_.Walk()
	me.XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_.Walk()
	me.XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_.Walk()
	me.XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_.Walk()
 }

type XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_ struct {
	BlendFuncSeparate *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func_separate"`

}

//	If the W.XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_ instance.
func (me *XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_; fn != nil { fn(me) }
	me.BlendFuncSeparate.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceScissor struct {
	XsdGoPkgHasAttr_Value_Tint4Type_

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceScissor function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceScissor instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceScissor instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceScissor) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceScissor; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_ struct {
	Scissor *TxsdGles2PipelineSettingsGroupChoiceScissor `xml:"http://www.collada.org/2008/03/COLLADASchema scissor"`

}

//	If the W.XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_ instance.
func (me *XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_; fn != nil { fn(me) }
	me.Scissor.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_ struct {
	CullFaceEnable *TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face_enable"`

}

//	If the W.XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_ instance.
func (me *XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_; fn != nil { fn(me) }
	me.CullFaceEnable.Walk()
 }

type XsdGoPkgHasAttr_Value_XsdtBoolean_ struct {
	Value xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_ struct {
	Invert *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert `xml:"http://www.collada.org/2008/03/COLLADASchema invert"`

}

//	If the W.XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_ instance.
func (me *XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_; fn != nil { fn(me) }
	me.Invert.Walk()
 }

type XsdGoPkgHasAttr_Value_XsdtFloat_ struct {
	Value xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue struct {
	XsdGoPkgHasAttr_Value_XsdtFloat_

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_ struct {
	Value *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_ instance.
func (me *XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceSampleCoverage struct {
	XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_

	XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceSampleCoverage function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceSampleCoverage instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceSampleCoverage instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceSampleCoverage) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceSampleCoverage; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_.Walk()
	me.XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_.Walk()
 }

type XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_ struct {
	SampleCoverage *TxsdGles2PipelineSettingsGroupChoiceSampleCoverage `xml:"http://www.collada.org/2008/03/COLLADASchema sample_coverage"`

}

//	If the W.XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_ instance.
func (me *XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_; fn != nil { fn(me) }
	me.SampleCoverage.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoicePointSizeEnable struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGles2PipelineSettingsGroupChoicePointSizeEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoicePointSizeEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoicePointSizeEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoicePointSizeEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoicePointSizeEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_ struct {
	PointSizeEnable *TxsdGles2PipelineSettingsGroupChoicePointSizeEnable `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_enable"`

}

//	If the W.XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_ instance.
func (me *XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_; fn != nil { fn(me) }
	me.PointSizeEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceLineWidth struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtToken_

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceLineWidth function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceLineWidth instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceLineWidth instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceLineWidth) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceLineWidth; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_ struct {
	LineWidth *TxsdGles2PipelineSettingsGroupChoiceLineWidth `xml:"http://www.collada.org/2008/03/COLLADASchema line_width"`

}

//	If the W.XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_ instance.
func (me *XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_; fn != nil { fn(me) }
	me.LineWidth.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceBlendEnable struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceBlendEnable function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceBlendEnable instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceBlendEnable instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceBlendEnable) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceBlendEnable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_ struct {
	BlendEnable *TxsdGles2PipelineSettingsGroupChoiceBlendEnable `xml:"http://www.collada.org/2008/03/COLLADASchema blend_enable"`

}

//	If the W.XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_ instance.
func (me *XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_; fn != nil { fn(me) }
	me.BlendEnable.Walk()
 }

type TxsdGles2PipelineSettingsGroupChoiceDepthMask struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtBoolean_True

}

//	If the W.TxsdGles2PipelineSettingsGroupChoiceDepthMask function is not nil (ie. was set by outside code), calls it with this TxsdGles2PipelineSettingsGroupChoiceDepthMask instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdGles2PipelineSettingsGroupChoiceDepthMask instance.
func (me *TxsdGles2PipelineSettingsGroupChoiceDepthMask) Walk ()  { 
	if fn := W.TxsdGles2PipelineSettingsGroupChoiceDepthMask; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_ struct {
	DepthMask *TxsdGles2PipelineSettingsGroupChoiceDepthMask `xml:"http://www.collada.org/2008/03/COLLADASchema depth_mask"`

}

//	If the W.XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_ instance.
func (me *XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_; fn != nil { fn(me) }
	me.DepthMask.Walk()
 }

type XsdGoPkgHasGroup_Gles2PipelineSettingsGroup struct {
	XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_

	XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_

	XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_

	XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_

	XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_

	XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_

	XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_

	XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_

	XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_

	XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_

	XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_

	XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_

	XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_

	XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_

	XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_

	XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_

	XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_

	XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_

	XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_

	XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_

	XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_

	XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_

	XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_

	XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_

	XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_

	XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_

	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_

	XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_

	XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_

	XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_

	XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_

	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_

}

//	If the W.XsdGoPkgHasGroup_Gles2PipelineSettingsGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_Gles2PipelineSettingsGroup instance as the single argument. Then calls the Walk() method on 32/32 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_Gles2PipelineSettingsGroup instance.
func (me *XsdGoPkgHasGroup_Gles2PipelineSettingsGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_Gles2PipelineSettingsGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_.Walk()
	me.XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_.Walk()
	me.XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_.Walk()
	me.XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_.Walk()
	me.XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_.Walk()
	me.XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_.Walk()
	me.XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_.Walk()
	me.XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_.Walk()
	me.XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_.Walk()
	me.XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_.Walk()
	me.XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_.Walk()
	me.XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_.Walk()
	me.XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_.Walk()
	me.XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_.Walk()
	me.XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_.Walk()
	me.XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_.Walk()
	me.XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_.Walk()
	me.XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_.Walk()
	me.XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_.Walk()
	me.XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_.Walk()
	me.XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_.Walk()
	me.XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_.Walk()
	me.XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_.Walk()
	me.XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_.Walk()
	me.XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_.Walk()
	me.XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_.Walk()
	me.XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_.Walk()
	me.XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_.Walk()
	me.XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_.Walk()
	me.XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_.Walk()
	me.XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_.Walk()
	me.XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_.Walk()
 }

type TxsdGles2PassTypeSequenceStates struct {
	XsdGoPkgHasGroup_Gles2PipelineSettingsGroup

}

//	If the W.TxsdGles2PassTypeSequenceStates function is not nil (ie. was set by outside code), calls it with this TxsdGles2PassTypeSequenceStates instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdGles2PassTypeSequenceStates instance.
func (me *TxsdGles2PassTypeSequenceStates) Walk ()  { 
	if fn := W.TxsdGles2PassTypeSequenceStates; fn != nil { fn(me) }
	me.XsdGoPkgHasGroup_Gles2PipelineSettingsGroup.Walk()
 }

type XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_ struct {
//	API state
	States *TxsdGles2PassTypeSequenceStates `xml:"http://www.collada.org/2008/03/COLLADASchema states"`

}

//	If the W.XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_ instance.
func (me *XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_; fn != nil { fn(me) }
	me.States.Walk()
 }

type Tgles2PassType struct {
//	Add metadata to this pass that may be used by games or tools to make decisions
	XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	runtime execution helpers
	XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_

	XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_

//	A vertex_shader and fragment_shader are linked together to produce a OpenGL ES 2 program.
	XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_

//	API state
	XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_

}

//	If the W.Tgles2PassType function is not nil (ie. was set by outside code), calls it with this Tgles2PassType instance as the single argument. Then calls the Walk() method on 5/6 embed(s) and 0/0 field(s) belonging to this Tgles2PassType instance.
func (me *Tgles2PassType) Walk ()  { 
	if fn := W.Tgles2PassType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_.Walk()
	me.XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_.Walk()
	me.XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_.Walk()
	me.XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_ struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	Passes []*Tgles2PassType `xml:"http://www.collada.org/2008/03/COLLADASchema pass"`

}

//	If the W.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_ instance.
func (me *XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_; fn != nil { fn(me) }
	for _, x := range me.Passes { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	Add metadata to this pass that may be used by games or tools to make decisions
type XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_ struct {
//	Add metadata to this pass that may be used by games or tools to make decisions
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

type TxsdProfileGles2TypeSequenceTechnique struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_

	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_

//	Add metadata to this pass that may be used by games or tools to make decisions
	XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasAttr_Id_XsdtId_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdProfileGles2TypeSequenceTechnique function is not nil (ie. was set by outside code), calls it with this TxsdProfileGles2TypeSequenceTechnique instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TxsdProfileGles2TypeSequenceTechnique instance.
func (me *TxsdProfileGles2TypeSequenceTechnique) Walk ()  { 
	if fn := W.TxsdProfileGles2TypeSequenceTechnique; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_.Walk()
	me.XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_.Walk()
 }

type XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Techniques []*TxsdProfileGles2TypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	Shading language that will be used.  This is not an enum to support future languages.  Current known languages at this time are GLSL-ES, CG
type XsdGoPkgHasAttr_Language_XsdtNCName_ struct {
//	Shading language that will be used.  This is not an enum to support future languages.  Current known languages at this time are GLSL-ES, CG
	Language xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema language,attr"`

}

//	Support for multiple OpenGL ES 2.0 platforms
type XsdGoPkgHasAttr_Platforms_TlistOfNamesType_ struct {
//	Support for multiple OpenGL ES 2.0 platforms
	Platforms TlistOfNamesType `xml:"http://www.collada.org/2008/03/COLLADASchema platforms,attr"`

}

//	Include shader code from a remote URI.  If binary, assume raw.
type XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_ struct {
//	Include shader code from a remote URI.  If binary, assume raw.
	Includes []*TfxIncludeType `xml:"http://www.collada.org/2008/03/COLLADASchema include"`

}

//	If the W.XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_ instance.
func (me *XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_; fn != nil { fn(me) }
	for _, x := range me.Includes { x.Walk() }
 }

//	The fx_code_profile type allows you to specify an inline block of source code.  It is HIGHLY recommended to use a CDATA block inside to avoid issues with
type XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_ struct {
//	The fx_code_profile type allows you to specify an inline block of source code.  It is HIGHLY recommended to use a CDATA block inside to avoid issues with
	Codes []*TfxCodeType `xml:"http://www.collada.org/2008/03/COLLADASchema code"`

}

//	If the W.XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_ instance.
func (me *XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_; fn != nil { fn(me) }
	for _, x := range me.Codes { x.Walk() }
 }

type TprofileGles2Type struct {
//	Unique identifier for referencing
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_

//	Shading language that will be used.  This is not an enum to support future languages.  Current known languages at this time are GLSL-ES, CG
	XsdGoPkgHasAttr_Language_XsdtNCName_

//	Support for multiple OpenGL ES 2.0 platforms
	XsdGoPkgHasAttr_Platforms_TlistOfNamesType_

//	Include shader code from a remote URI.  If binary, assume raw.
	XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_

//	The fx_code_profile type allows you to specify an inline block of source code.  It is HIGHLY recommended to use a CDATA block inside to avoid issues with
	XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_

	XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_

}

//	If the W.TprofileGles2Type function is not nil (ie. was set by outside code), calls it with this TprofileGles2Type instance as the single argument. Then calls the Walk() method on 6/9 embed(s) and 0/0 field(s) belonging to this TprofileGles2Type instance.
func (me *TprofileGles2Type) Walk ()  { 
	if fn := W.TprofileGles2Type; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_.Walk()
	me.XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_.Walk()
	me.XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_.Walk()
	me.XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_.Walk()
 }

type XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_ struct {
	ProfileGles2 *TprofileGles2Type `xml:"http://www.collada.org/2008/03/COLLADASchema profile_GLES2"`

}

//	If the W.XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_ instance.
func (me *XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_; fn != nil { fn(me) }
	me.ProfileGles2.Walk()
 }

type XsdGoPkgHasGroup_FxProfileGroup struct {
	XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_

	XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_

	XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_

	XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_

	XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_

	XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_

}

//	If the W.XsdGoPkgHasGroup_FxProfileGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_FxProfileGroup instance as the single argument. Then calls the Walk() method on 6/6 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_FxProfileGroup instance.
func (me *XsdGoPkgHasGroup_FxProfileGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_FxProfileGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_.Walk()
	me.XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_.Walk()
	me.XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_.Walk()
	me.XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_.Walk()
	me.XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_.Walk()
	me.XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The annotate element allows you to specify an annotation on this effect.
type XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_ struct {
//	The annotate element allows you to specify an annotation on this effect.
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

//	The effect element may contain an asset element.
type XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_ struct {
//	The effect element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The newparam element allows you to create new effect parameters which can be shared by multipe profiles.
//	This element creates a new, named param object in the FX Runtime, assigns it a type, an initial value, and additional attributes at declaration time.
//	A group that specifies the allowable types for effect scoped parameters.
type XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_ struct {
	Float2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x4"`

}

//	If the W.XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_ instance.
func (me *XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_ struct {
	Float2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x1"`

}

//	If the W.XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_ struct {
	Float4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x3"`

}

//	If the W.XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_ instance.
func (me *XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_ struct {
	Float3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x3"`

}

//	If the W.XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_ struct {
	Float2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x3"`

}

//	If the W.XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_ instance.
func (me *XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_ struct {
	Float4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4"`

}

//	If the W.XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_ struct {
	Bool4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4"`

}

//	If the W.XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_ instance.
func (me *XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_ struct {
	SamplerCUBE *TfxSamplerCUBEType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerCUBE"`

}

//	If the W.XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_ instance.
func (me *XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_; fn != nil { fn(me) }
	me.SamplerCUBE.Walk()
 }

type XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_ struct {
	Bool2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2"`

}

//	If the W.XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_ instance.
func (me *XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_ struct {
	Float2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x2"`

}

//	If the W.XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_ struct {
	Float3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3"`

}

//	If the W.XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_ struct {
	Sampler3D *TfxSampler3DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler3D"`

}

//	If the W.XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_ instance.
func (me *XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_; fn != nil { fn(me) }
	me.Sampler3D.Walk()
 }

type XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_ struct {
	SamplerRECT *TfxSamplerRECTType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerRECT"`

}

//	If the W.XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_ instance.
func (me *XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_; fn != nil { fn(me) }
	me.SamplerRECT.Walk()
 }

type XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_ struct {
	Float3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x1"`

}

//	If the W.XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_ struct {
	Float4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x4"`

}

//	If the W.XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_ struct {
	Float4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x1"`

}

//	If the W.XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_ struct {
	Enum xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

//	If the W.XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_ instance.
func (me *XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_ struct {
	Float3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x2"`

}

//	If the W.XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_ instance.
func (me *XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ struct {
	SamplerDEPTH *TfxSamplerDEPTHType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerDEPTH"`

}

//	If the W.XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ instance.
func (me *XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_; fn != nil { fn(me) }
	me.SamplerDEPTH.Walk()
 }

type XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

//	If the W.XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_ struct {
	Float4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x2"`

}

//	If the W.XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_ instance.
func (me *XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_ struct {
	Bool3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3"`

}

//	If the W.XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_ instance.
func (me *XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_ struct {
	Int2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2"`

}

//	If the W.XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_ instance.
func (me *XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_ struct {
	Sampler1D *TfxSampler1DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler1D"`

}

//	If the W.XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_ instance.
func (me *XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_; fn != nil { fn(me) }
	me.Sampler1D.Walk()
 }

type XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_ struct {
	Sampler2D *TfxSampler2DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler2D"`

}

//	If the W.XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_ instance.
func (me *XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_; fn != nil { fn(me) }
	me.Sampler2D.Walk()
 }

type XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_ struct {
	Int4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4"`

}

//	If the W.XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_ instance.
func (me *XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_ struct {
	Int3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3"`

}

//	If the W.XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_ instance.
func (me *XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_ struct {
	Float3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x4"`

}

//	If the W.XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_ instance.
func (me *XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasGroup_FxNewparamGroup struct {
	XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_

	XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_

	XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_

	XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_

	XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_

	XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_

	XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_

	XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_

	XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_

	XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_

	XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_

}

//	If the W.XsdGoPkgHasGroup_FxNewparamGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_FxNewparamGroup instance as the single argument. Then calls the Walk() method on 31/31 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_FxNewparamGroup instance.
func (me *XsdGoPkgHasGroup_FxNewparamGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_FxNewparamGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_.Walk()
	me.XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_.Walk()
	me.XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_.Walk()
	me.XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_.Walk()
	me.XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_.Walk()
	me.XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_.Walk()
	me.XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_.Walk()
	me.XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_.Walk()
	me.XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_.Walk()
	me.XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_.Walk()
	me.XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_.Walk()
	me.XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_.Walk()
	me.XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_.Walk()
	me.XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_.Walk()
	me.XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_.Walk()
	me.XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_.Walk()
	me.XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_.Walk()
	me.XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_.Walk()
	me.XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_.Walk()
	me.XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_.Walk()
 }

//	The modifier element allows you to specify a modifier for this new param.
type XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_ struct {
//	The modifier element allows you to specify a modifier for this new param.
	Modifier TfxModifierEnum `xml:"http://www.collada.org/2008/03/COLLADASchema modifier"`

}

//	If the W.XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_ instance.
func (me *XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_; fn != nil { fn(me) }
 }

//	The semantic element allows you to specify a semantic for this new param.
type XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_ struct {
//	The semantic element allows you to specify a semantic for this new param.
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

//	If the W.XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_ instance.
func (me *XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_; fn != nil { fn(me) }
 }

//	The annotate element allows you to specify an annotation for this new param.
type XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_ struct {
//	The annotate element allows you to specify an annotation for this new param.
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	If the W.XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_ instance.
func (me *XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_; fn != nil { fn(me) }
	for _, x := range me.Annotates { x.Walk() }
 }

type TfxNewparamType struct {
//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasGroup_FxNewparamGroup

//	The modifier element allows you to specify a modifier for this new param.
	XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_

//	The semantic element allows you to specify a semantic for this new param.
	XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_

//	The annotate element allows you to specify an annotation for this new param.
	XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_

}

//	If the W.TfxNewparamType function is not nil (ie. was set by outside code), calls it with this TfxNewparamType instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TfxNewparamType instance.
func (me *TfxNewparamType) Walk ()  { 
	if fn := W.TfxNewparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_.Walk()
	me.XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasGroup_FxNewparamGroup.Walk()
	me.XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_.Walk()
 }

type XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_ struct {
//	The newparam element allows you to create new effect parameters which can be shared by multipe profiles.
	Newparams []*TfxNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type TeffectType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The effect element may contain an asset element.
	XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_

//	The newparam element allows you to create new effect parameters which can be shared by multipe profiles.
	XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_

	XsdGoPkgHasGroup_FxProfileGroup

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_

//	The annotate element allows you to specify an annotation on this effect.
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

}

//	If the W.TeffectType function is not nil (ie. was set by outside code), calls it with this TeffectType instance as the single argument. Then calls the Walk() method on 5/7 embed(s) and 0/0 field(s) belonging to this TeffectType instance.
func (me *TeffectType) Walk ()  { 
	if fn := W.TeffectType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_.Walk()
	me.XsdGoPkgHasGroup_FxProfileGroup.Walk()
 }

type XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_ struct {
//	There must be at least one effect element.
	Effects []*TeffectType `xml:"http://www.collada.org/2008/03/COLLADASchema effect"`

}

//	If the W.XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_ instance.
func (me *XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_; fn != nil { fn(me) }
	for _, x := range me.Effects { x.Walk() }
 }

type TlibraryEffectsType struct {
//	There must be at least one effect element.
	XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_

//	The library_effects element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TlibraryEffectsType function is not nil (ie. was set by outside code), calls it with this TlibraryEffectsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryEffectsType instance.
func (me *TlibraryEffectsType) Walk ()  { 
	if fn := W.TlibraryEffectsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_ struct {
//	The COLLADA element may contain any
//	number of library_effects elements.
	EffectsLibraries []*TlibraryEffectsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_effects"`

}

//	If the W.XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_ instance.
func (me *XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_; fn != nil { fn(me) }
	for _, x := range me.EffectsLibraries { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TminmaxType struct {
	XsdGoPkgValue TfloatType `xml:",chardata"`

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TminmaxType function is not nil (ie. was set by outside code), calls it with this TminmaxType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/1 field(s) belonging to this TminmaxType instance.
func (me *TminmaxType) Walk ()  { 
	if fn := W.TminmaxType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_ struct {
	Min *TminmaxType `xml:"http://www.collada.org/2008/03/COLLADASchema min"`

}

//	If the W.XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_ instance.
func (me *XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_; fn != nil { fn(me) }
	me.Min.Walk()
 }

type XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_ struct {
	Max *TminmaxType `xml:"http://www.collada.org/2008/03/COLLADASchema max"`

}

//	If the W.XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_ instance.
func (me *XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_; fn != nil { fn(me) }
	me.Max.Walk()
 }

type TjointLimitsType struct {
	XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_

	XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_

}

//	If the W.TjointLimitsType function is not nil (ie. was set by outside code), calls it with this TjointLimitsType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TjointLimitsType instance.
func (me *TjointLimitsType) Walk ()  { 
	if fn := W.TjointLimitsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_.Walk()
	me.XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_.Walk()
 }

type XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_ struct {
	Limits *TjointLimitsType `xml:"http://www.collada.org/2008/03/COLLADASchema limits"`

}

//	If the W.XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_ instance.
func (me *XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_; fn != nil { fn(me) }
	me.Limits.Walk()
 }

type TaxisType struct {
	XsdGoPkgValue Tfloat3Type `xml:",chardata"`

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TaxisType function is not nil (ie. was set by outside code), calls it with this TaxisType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/1 field(s) belonging to this TaxisType instance.
func (me *TaxisType) Walk ()  { 
	if fn := W.TaxisType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_ struct {
	Axis *TaxisType `xml:"http://www.collada.org/2008/03/COLLADASchema axis"`

}

//	If the W.XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_ instance.
func (me *XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_; fn != nil { fn(me) }
	me.Axis.Walk()
 }

type TaxisConstraintType struct {
	XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_

}

//	If the W.TaxisConstraintType function is not nil (ie. was set by outside code), calls it with this TaxisConstraintType instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TaxisConstraintType instance.
func (me *TaxisConstraintType) Walk ()  { 
	if fn := W.TaxisConstraintType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_.Walk()
	me.XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_.Walk()
 }

type XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_ struct {
	Revolutes []*TaxisConstraintType `xml:"http://www.collada.org/2008/03/COLLADASchema revolute"`

}

//	If the W.XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_ instance.
func (me *XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_; fn != nil { fn(me) }
	for _, x := range me.Revolutes { x.Walk() }
 }

type XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_ struct {
	Prismatics []*TaxisConstraintType `xml:"http://www.collada.org/2008/03/COLLADASchema prismatic"`

}

//	If the W.XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_ instance.
func (me *XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_; fn != nil { fn(me) }
	for _, x := range me.Prismatics { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TjointType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_

	XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TjointType function is not nil (ie. was set by outside code), calls it with this TjointType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TjointType instance.
func (me *TjointType) Walk ()  { 
	if fn := W.TjointType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_.Walk()
	me.XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_.Walk()
	me.XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_ struct {
	Joints []*TjointType `xml:"http://www.collada.org/2008/03/COLLADASchema joint"`

}

//	If the W.XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_ instance.
func (me *XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_; fn != nil { fn(me) }
	for _, x := range me.Joints { x.Walk() }
 }

type TlibraryJointsType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_

}

//	If the W.TlibraryJointsType function is not nil (ie. was set by outside code), calls it with this TlibraryJointsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryJointsType instance.
func (me *TlibraryJointsType) Walk ()  { 
	if fn := W.TlibraryJointsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_ struct {
	JointsLibraries []*TlibraryJointsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_joints"`

}

//	If the W.XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_ instance.
func (me *XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_; fn != nil { fn(me) }
	for _, x := range me.JointsLibraries { x.Walk() }
 }

//	The scene embodies the entire set of information that can be visualized from the
//	contents of a COLLADA resource. The scene element declares the base of the scene
//	hierarchy or scene graph. The scene contains elements that comprise much of the
//	visual and transformational information content as created by the authoring tools.
type XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type TkinematicsConnectParamType struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

}

//	If the W.TkinematicsConnectParamType function is not nil (ie. was set by outside code), calls it with this TkinematicsConnectParamType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TkinematicsConnectParamType instance.
func (me *TkinematicsConnectParamType) Walk ()  { 
	if fn := W.TkinematicsConnectParamType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ struct {
	ConnectParam *TkinematicsConnectParamType `xml:"http://www.collada.org/2008/03/COLLADASchema connect_param"`

}

//	If the W.XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ instance.
func (me *XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_; fn != nil { fn(me) }
	me.ConnectParam.Walk()
 }

type XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type TsidrefType xsdt.String

//	Since TsidrefType is just a simple String type, this merely returns the current string value.
func (me TsidrefType) String () string { return xsdt.String(me).String() }

//	Since TsidrefType is just a simple String type, this merely sets the current value from the specified string.
func (me *TsidrefType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TsidrefType's alias type xsdt.String.
func (me TsidrefType) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_ struct {
	Sidref TsidrefType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF"`

}

//	If the W.XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_ instance.
func (me *XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_; fn != nil { fn(me) }
 }

type TkinematicsSetparamType struct {
	XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_

	XsdGoPkgHasAttr_Ref_XsdtToken_

	XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_

	XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_

}

//	If the W.TkinematicsSetparamType function is not nil (ie. was set by outside code), calls it with this TkinematicsSetparamType instance as the single argument. Then calls the Walk() method on 5/6 embed(s) and 0/0 field(s) belonging to this TkinematicsSetparamType instance.
func (me *TkinematicsSetparamType) Walk ()  { 
	if fn := W.TkinematicsSetparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_.Walk()
	me.XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_.Walk()
 }

type XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_ struct {
	Setparams []*TkinematicsSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_ instance.
func (me *XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

type XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_ struct {
	Sidref TsidrefType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF"`

}

//	If the W.XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_ instance.
func (me *XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_; fn != nil { fn(me) }
 }

type TkinematicsNewparamType struct {
	XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_

}

//	If the W.TkinematicsNewparamType function is not nil (ie. was set by outside code), calls it with this TkinematicsNewparamType instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TkinematicsNewparamType instance.
func (me *TkinematicsNewparamType) Walk ()  { 
	if fn := W.TkinematicsNewparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_.Walk()
	me.XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_.Walk()
 }

type XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_ struct {
	Newparams []*TkinematicsNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type XsdGoPkgHasAttr_Node_XsdtToken_ struct {
	Node xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema node,attr"`

}

type XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_ struct {
	Sidref TsidrefType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF"`

}

//	If the W.XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_ instance.
func (me *XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_; fn != nil { fn(me) }
 }

type TcommonParamType struct {
	XsdGoPkgValue xsdt.Token `xml:",chardata"`

}

//	If the W.TcommonParamType function is not nil (ie. was set by outside code), calls it with this TcommonParamType instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this TcommonParamType instance.
func (me *TcommonParamType) Walk ()  { 
	if fn := W.TcommonParamType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_ struct {
	Param *TcommonParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_ instance.
func (me *XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type TcommonSidrefOrParamType struct {
	XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_

	XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_

}

//	If the W.TcommonSidrefOrParamType function is not nil (ie. was set by outside code), calls it with this TcommonSidrefOrParamType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TcommonSidrefOrParamType instance.
func (me *TcommonSidrefOrParamType) Walk ()  { 
	if fn := W.TcommonSidrefOrParamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_.Walk()
	me.XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_.Walk()
 }

type TbindKinematicsModelType struct {
	XsdGoPkgHasAttr_Node_XsdtToken_

	TcommonSidrefOrParamType

}

//	If the W.TbindKinematicsModelType function is not nil (ie. was set by outside code), calls it with this TbindKinematicsModelType instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TbindKinematicsModelType instance.
func (me *TbindKinematicsModelType) Walk ()  { 
	if fn := W.TbindKinematicsModelType; fn != nil { fn(me) }
	me.TcommonSidrefOrParamType.Walk()
 }

type XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_ struct {
	BindKinematicsModels []*TbindKinematicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema bind_kinematics_model"`

}

//	If the W.XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_ instance.
func (me *XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_; fn != nil { fn(me) }
	for _, x := range me.BindKinematicsModels { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_ struct {
	Param *TcommonParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_ instance.
func (me *XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type TcommonFloatOrParamType struct {
	XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_

	XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_

}

//	If the W.TcommonFloatOrParamType function is not nil (ie. was set by outside code), calls it with this TcommonFloatOrParamType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TcommonFloatOrParamType instance.
func (me *TcommonFloatOrParamType) Walk ()  { 
	if fn := W.TcommonFloatOrParamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_.Walk()
	me.XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_.Walk()
 }

type XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_ struct {
	Value *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

//	If the W.XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_; fn != nil { fn(me) }
	me.Value.Walk()
 }

type XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_ struct {
	Axis *TcommonSidrefOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema axis"`

}

//	If the W.XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_ instance.
func (me *XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_; fn != nil { fn(me) }
	me.Axis.Walk()
 }

type TbindJointAxisType struct {
	XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_

	XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_

	XsdGoPkgHasAttr_Target_XsdtToken_

}

//	If the W.TbindJointAxisType function is not nil (ie. was set by outside code), calls it with this TbindJointAxisType instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TbindJointAxisType instance.
func (me *TbindJointAxisType) Walk ()  { 
	if fn := W.TbindJointAxisType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_.Walk()
 }

type XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_ struct {
	BindJointAxises []*TbindJointAxisType `xml:"http://www.collada.org/2008/03/COLLADASchema bind_joint_axis"`

}

//	If the W.XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_ instance.
func (me *XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_; fn != nil { fn(me) }
	for _, x := range me.BindJointAxises { x.Walk() }
 }

type TinstanceKinematicsSceneType struct {
	XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_

	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_

}

//	If the W.TinstanceKinematicsSceneType function is not nil (ie. was set by outside code), calls it with this TinstanceKinematicsSceneType instance as the single argument. Then calls the Walk() method on 6/9 embed(s) and 0/0 field(s) belonging to this TinstanceKinematicsSceneType instance.
func (me *TinstanceKinematicsSceneType) Walk ()  { 
	if fn := W.TinstanceKinematicsSceneType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_.Walk()
	me.XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_.Walk()
 }

type XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_ struct {
	KinematicsSceneInstances []*TinstanceKinematicsSceneType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_kinematics_scene"`

}

//	If the W.XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_ instance.
func (me *XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_; fn != nil { fn(me) }
	for _, x := range me.KinematicsSceneInstances { x.Walk() }
 }

//	The instance_visual_scene
//	element declares the
//	instantiation of a COLLADA
//	visual_scene resource. The
//	instance_visual_scene element
//	may only appear once.
type XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_ struct {
//	The instance_visual_scene
//	element declares the
//	instantiation of a COLLADA
//	visual_scene resource. The
//	instance_visual_scene element
//	may only appear once.
	InstanceVisualScene *TinstanceWithExtraType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_visual_scene"`

}

//	If the W.XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_ instance.
func (me *XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_; fn != nil { fn(me) }
	me.InstanceVisualScene.Walk()
 }

//	The extra element may appear any
//	number of times.
type XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_ struct {
//	The extra element may appear any
//	number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The instance_physics_scene
//	element declares the
//	instantiation of a COLLADA
//	physics_scene resource. The
//	instance_physics_scene element
//	may appear any number of times.
type XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_ struct {
//	The instance_physics_scene
//	element declares the
//	instantiation of a COLLADA
//	physics_scene resource. The
//	instance_physics_scene element
//	may appear any number of times.
	PhysicsSceneInstances []*TinstanceWithExtraType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_scene"`

}

//	If the W.XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_ instance.
func (me *XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsSceneInstances { x.Walk() }
 }

type TxsdColladaSequenceScene struct {
	XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_

//	The instance_visual_scene
//	element declares the
//	instantiation of a COLLADA
//	visual_scene resource. The
//	instance_visual_scene element
//	may only appear once.
	XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_

//	The extra element may appear any
//	number of times.
	XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_

//	The instance_physics_scene
//	element declares the
//	instantiation of a COLLADA
//	physics_scene resource. The
//	instance_physics_scene element
//	may appear any number of times.
	XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_

}

//	If the W.TxsdColladaSequenceScene function is not nil (ie. was set by outside code), calls it with this TxsdColladaSequenceScene instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdColladaSequenceScene instance.
func (me *TxsdColladaSequenceScene) Walk ()  { 
	if fn := W.TxsdColladaSequenceScene; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_.Walk()
	me.XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_.Walk()
	me.XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_.Walk()
 }

type XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_ struct {
//	The scene embodies the entire set of information that can be visualized from the
//	contents of a COLLADA resource. The scene element declares the base of the scene
//	hierarchy or scene graph. The scene contains elements that comprise much of the
//	visual and transformational information content as created by the authoring tools.
	Scene *TxsdColladaSequenceScene `xml:"http://www.collada.org/2008/03/COLLADASchema scene"`

}

//	If the W.XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_ instance.
func (me *XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_; fn != nil { fn(me) }
	me.Scene.Walk()
 }

//	The COLLADA element may contain any
//	number of library_animations elements.
//	The library_animations element declares a module of animation elements.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The library_animations element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_ struct {
//	The library_animations element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	There must be at least one animation element.
//	The animation element categorizes the declaration of animation information. The animation
//	hierarchy contains elements that describe the animation's key-frame data and sampler functions,
//	ordered in such a way to group together animations that should be executed together.
//	The animation element may contain any number of source elements.
//	The source element declares a data repository that provides values according to the semantics of an
//	input element that refers to it.
//	The source element may contain an
//	IDREF_array.
//	The IDREF_array element declares the storage for a homogenous array of ID reference values.
//	The count attribute indicates the number of values in the array. Required attribute.
type XsdGoPkgHasAttr_Count_TuintType_ struct {
//	The count attribute indicates the number of values in the array. Required attribute.
	Count TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema count,attr"`

}

type TidrefArrayType struct {
	XsdGoPkgValue xsdt.Idrefs `xml:",chardata"`

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TidrefArrayType function is not nil (ie. was set by outside code), calls it with this TidrefArrayType instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/1 field(s) belonging to this TidrefArrayType instance.
func (me *TidrefArrayType) Walk ()  { 
	if fn := W.TidrefArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_ struct {
//	The source element may contain an
//	IDREF_array.
	IdrefArray *TidrefArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema IDREF_array"`

}

//	If the W.XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_ instance.
func (me *XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_; fn != nil { fn(me) }
	me.IdrefArray.Walk()
 }

//	The source element may contain a
//	bool_array.
//	The bool_array element declares the storage for a homogenous array of boolean values.
type TboolArrayType struct {
	XsdGoPkgValue TlistOfBoolsType `xml:",chardata"`

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TboolArrayType function is not nil (ie. was set by outside code), calls it with this TboolArrayType instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/1 field(s) belonging to this TboolArrayType instance.
func (me *TboolArrayType) Walk ()  { 
	if fn := W.TboolArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_ struct {
//	The source element may contain a
//	bool_array.
	BoolArray *TboolArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema bool_array"`

}

//	If the W.XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_ instance.
func (me *XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_; fn != nil { fn(me) }
	me.BoolArray.Walk()
 }

//	The source element may contain an
//	int_array.
//	The int_array element declares the storage for a homogenous array of integer values.
//	The minInclusive attribute indicates the smallest integer value that can be contained in
//	the array. The default value is -2147483648. Optional attribute.
type XsdGoPkgHasAttr_MinInclusive_XsdtInteger_2147483648 struct {
//	The minInclusive attribute indicates the smallest integer value that can be contained in
//	the array. The default value is -2147483648. Optional attribute.
	MinInclusive xsdt.Integer `xml:"http://www.collada.org/2008/03/COLLADASchema minInclusive,attr"`

}

//	Returns the default value for MinInclusive -- -2147483648
func (me XsdGoPkgHasAttr_MinInclusive_XsdtInteger_2147483648) MinInclusiveDefault () xsdt.Integer { return xsdt.Integer(-2147483648) }

//	The maxInclusive attribute indicates the largest integer value that can be contained in
//	the array. The default value is 2147483647. Optional attribute.
type XsdGoPkgHasAttr_MaxInclusive_XsdtInteger_2147483647 struct {
//	The maxInclusive attribute indicates the largest integer value that can be contained in
//	the array. The default value is 2147483647. Optional attribute.
	MaxInclusive xsdt.Integer `xml:"http://www.collada.org/2008/03/COLLADASchema maxInclusive,attr"`

}

//	Returns the default value for MaxInclusive -- 2147483647
func (me XsdGoPkgHasAttr_MaxInclusive_XsdtInteger_2147483647) MaxInclusiveDefault () xsdt.Integer { return xsdt.Integer(2147483647) }

type TintArrayType struct {
	XsdGoPkgValue TlistOfIntsType `xml:",chardata"`

//	The minInclusive attribute indicates the smallest integer value that can be contained in
//	the array. The default value is -2147483648. Optional attribute.
	XsdGoPkgHasAttr_MinInclusive_XsdtInteger_2147483648

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The maxInclusive attribute indicates the largest integer value that can be contained in
//	the array. The default value is 2147483647. Optional attribute.
	XsdGoPkgHasAttr_MaxInclusive_XsdtInteger_2147483647

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TintArrayType function is not nil (ie. was set by outside code), calls it with this TintArrayType instance as the single argument. Then calls the Walk() method on 0/5 embed(s) and 0/1 field(s) belonging to this TintArrayType instance.
func (me *TintArrayType) Walk ()  { 
	if fn := W.TintArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_ struct {
//	The source element may contain an
//	int_array.
	IntArray *TintArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema int_array"`

}

//	If the W.XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_ instance.
func (me *XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_; fn != nil { fn(me) }
	me.IntArray.Walk()
 }

//	The source element may contain an asset element.
type XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_ struct {
//	The source element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The source element may contain a
//	float_array.
//	The float_array element declares the storage for a homogenous array of floating point values.
//	The magnitude attribute indicates the largest exponent of the float values that can be contained
//	in the array. The default value is 38. Optional attribute.
type TmagnitudeType xsdt.Short

//	Since TmagnitudeType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TmagnitudeType) SetFromString (s string)  { (*xsdt.Short)(me).SetFromString(s) }

//	Returns a string representation of this TmagnitudeType's current non-string scalar value.
func (me TmagnitudeType) String () string { return xsdt.Short(me).String() }

//	This convenience method just performs a simple type conversion to TmagnitudeType's alias type xsdt.Short.
func (me TmagnitudeType) ToXsdtShort () xsdt.Short { return xsdt.Short(me) }

type XsdGoPkgHasAttr_Magnitude_TmagnitudeType_38 struct {
//	The magnitude attribute indicates the largest exponent of the float values that can be contained
//	in the array. The default value is 38. Optional attribute.
	Magnitude TmagnitudeType `xml:"http://www.collada.org/2008/03/COLLADASchema magnitude,attr"`

}

//	Returns the default value for Magnitude -- 38
func (me XsdGoPkgHasAttr_Magnitude_TmagnitudeType_38) MagnitudeDefault () TmagnitudeType { return TmagnitudeType(38) }

//	The digits attribute indicates the number of significant decimal digits of the float values that
//	can be contained in the array. The default value is 6. Optional attribute.
type TdigitsType xsdt.UnsignedByte

//	This convenience method just performs a simple type conversion to TdigitsType's alias type xsdt.UnsignedByte.
func (me TdigitsType) ToXsdtUnsignedByte () xsdt.UnsignedByte { return xsdt.UnsignedByte(me) }

//	Returns a string representation of this TdigitsType's current non-string scalar value.
func (me TdigitsType) String () string { return xsdt.UnsignedByte(me).String() }

//	Since TdigitsType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TdigitsType) SetFromString (s string)  { (*xsdt.UnsignedByte)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Digits_TdigitsType_6 struct {
//	The digits attribute indicates the number of significant decimal digits of the float values that
//	can be contained in the array. The default value is 6. Optional attribute.
	Digits TdigitsType `xml:"http://www.collada.org/2008/03/COLLADASchema digits,attr"`

}

//	Returns the default value for Digits -- 6
func (me XsdGoPkgHasAttr_Digits_TdigitsType_6) DigitsDefault () TdigitsType { return TdigitsType(6) }

type TfloatArrayType struct {
	XsdGoPkgValue TlistOfFloatsType `xml:",chardata"`

//	The digits attribute indicates the number of significant decimal digits of the float values that
//	can be contained in the array. The default value is 6. Optional attribute.
	XsdGoPkgHasAttr_Digits_TdigitsType_6

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The magnitude attribute indicates the largest exponent of the float values that can be contained
//	in the array. The default value is 38. Optional attribute.
	XsdGoPkgHasAttr_Magnitude_TmagnitudeType_38

}

//	If the W.TfloatArrayType function is not nil (ie. was set by outside code), calls it with this TfloatArrayType instance as the single argument. Then calls the Walk() method on 0/5 embed(s) and 0/1 field(s) belonging to this TfloatArrayType instance.
func (me *TfloatArrayType) Walk ()  { 
	if fn := W.TfloatArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_ struct {
//	The source element may contain a
//	float_array.
	FloatArray *TfloatArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema float_array"`

}

//	If the W.XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_ instance.
func (me *XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_; fn != nil { fn(me) }
	me.FloatArray.Walk()
 }

//	The source element may contain a
//	Name_array.
//	The Name_array element declares the storage for a homogenous array of Name string values.
type TnameArrayType struct {
	XsdGoPkgValue TlistOfNamesType `xml:",chardata"`

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TnameArrayType function is not nil (ie. was set by outside code), calls it with this TnameArrayType instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/1 field(s) belonging to this TnameArrayType instance.
func (me *TnameArrayType) Walk ()  { 
	if fn := W.TnameArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_ struct {
//	The source element may contain a
//	Name_array.
	NameArray *TnameArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema Name_array"`

}

//	If the W.XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_ instance.
func (me *XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_; fn != nil { fn(me) }
	me.NameArray.Walk()
 }

//	The SIDREF_array element declares the storage for a homogenous array of SID reference values.
type TlistOfSidrefsType xsdt.String

//	Since TlistOfSidrefsType is just a simple String type, this merely returns the current string value.
func (me TlistOfSidrefsType) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TlistOfSidrefsType's alias type xsdt.String.
func (me TlistOfSidrefsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TlistOfSidrefsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfSidrefsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	TlistOfSidrefsType defines a String containing a whitespace-separated list of TsidrefType values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfSidrefsType) Values () (list []TsidrefType) { var svals = xsdt.ListValues(string(me)); list = make([]TsidrefType, len(svals)); for i, s := range svals { list[i] = TsidrefType(s) }; return }

type TsidrefArrayType struct {
	XsdGoPkgValue TlistOfSidrefsType `xml:",chardata"`

//	The id attribute is a text string
//	containing the unique identifier of this
//	element. This value must be unique
//	within the instance document. Optional
//	attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string
//	name of this element. Optional
//	attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number
//	of values in the array. Required
//	attribute.
	XsdGoPkgHasAttr_Count_TuintType_

}

//	If the W.TsidrefArrayType function is not nil (ie. was set by outside code), calls it with this TsidrefArrayType instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/1 field(s) belonging to this TsidrefArrayType instance.
func (me *TsidrefArrayType) Walk ()  { 
	if fn := W.TsidrefArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_ struct {
	SidrefArray *TsidrefArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF_array"`

}

//	If the W.XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_ instance.
func (me *XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_; fn != nil { fn(me) }
	me.SidrefArray.Walk()
 }

//	The source element may contain a token_array.
//	The token_array_type element declares the storage for a homogenous array of xs:token string values.
type TlistOfTokensType xsdt.String

//	Since TlistOfTokensType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfTokensType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TlistOfTokensType's alias type xsdt.String.
func (me TlistOfTokensType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	TlistOfTokensType defines a String containing a whitespace-separated list of xsdt.Token values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfTokensType) Values () (list []xsdt.Token) { var svals = xsdt.ListValues(string(me)); list = make([]xsdt.Token, len(svals)); for i, s := range svals { list[i] = xsdt.Token(s) }; return }

//	Since TlistOfTokensType is just a simple String type, this merely returns the current string value.
func (me TlistOfTokensType) String () string { return xsdt.String(me).String() }

type TtokenArrayType struct {
	XsdGoPkgValue TlistOfTokensType `xml:",chardata"`

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

}

//	If the W.TtokenArrayType function is not nil (ie. was set by outside code), calls it with this TtokenArrayType instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/1 field(s) belonging to this TtokenArrayType instance.
func (me *TtokenArrayType) Walk ()  { 
	if fn := W.TtokenArrayType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_ struct {
//	The source element may contain a token_array.
	TokenArray *TtokenArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema token_array"`

}

//	If the W.XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_ instance.
func (me *XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_; fn != nil { fn(me) }
	me.TokenArray.Walk()
 }

//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

//	The technique common specifies the common method for accessing this source element's data.
//	The source's technique_common must have one and only one accessor.
//	The accessor element declares an access pattern to one of the array elements: float_array,
//	int_array, Name_array, bool_array, token_array, and IDREF_array. The accessor element describes access
//	to arrays that are organized in either an interleaved or non-interleaved manner, depending
//	on the offset and stride attributes.
//	The offset attribute indicates the index of the first value to be read from the array.
//	The default value is 0. Optional attribute.
type XsdGoPkgHasAttr_Offset_TuintType_0 struct {
//	The offset attribute indicates the index of the first value to be read from the array.
//	The default value is 0. Optional attribute.
	Offset TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema offset,attr"`

}

//	Returns the default value for Offset -- 0
func (me XsdGoPkgHasAttr_Offset_TuintType_0) OffsetDefault () TuintType { return TuintType(0) }

//	The source attribute indicates the location of the data source. Required attribute.
type XsdGoPkgHasAttr_Source_XsdtAnyURI_ struct {
//	The source attribute indicates the location of the data source. Required attribute.
	Source xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema source,attr"`

}

//	The accessor element may have any number of param elements.
type XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_ struct {
//	The accessor element may have any number of param elements.
	Params []*TparamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_ instance.
func (me *XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_; fn != nil { fn(me) }
	for _, x := range me.Params { x.Walk() }
 }

//	The stride attribute indicates number of values to be considered a unit during each access to
//	the array. The default value is 1, indicating that a single value is accessed. Optional attribute.
type XsdGoPkgHasAttr_Stride_TuintType_1 struct {
//	The stride attribute indicates number of values to be considered a unit during each access to
//	the array. The default value is 1, indicating that a single value is accessed. Optional attribute.
	Stride TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema stride,attr"`

}

//	Returns the default value for Stride -- 1
func (me XsdGoPkgHasAttr_Stride_TuintType_1) StrideDefault () TuintType { return TuintType(1) }

type TaccessorType struct {
//	The accessor element may have any number of param elements.
	XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_

//	The stride attribute indicates number of values to be considered a unit during each access to
//	the array. The default value is 1, indicating that a single value is accessed. Optional attribute.
	XsdGoPkgHasAttr_Stride_TuintType_1

//	The count attribute indicates the number of times the array is accessed. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The offset attribute indicates the index of the first value to be read from the array.
//	The default value is 0. Optional attribute.
	XsdGoPkgHasAttr_Offset_TuintType_0

//	The source attribute indicates the location of the array to access using a URL expression. Required attribute.
	XsdGoPkgHasAttr_Source_XsdtAnyURI_

}

//	If the W.TaccessorType function is not nil (ie. was set by outside code), calls it with this TaccessorType instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TaccessorType instance.
func (me *TaccessorType) Walk ()  { 
	if fn := W.TaccessorType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_.Walk()
 }

type XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_ struct {
//	The source's technique_common must have one and only one accessor.
	Accessor *TaccessorType `xml:"http://www.collada.org/2008/03/COLLADASchema accessor"`

}

//	If the W.XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_ instance.
func (me *XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_; fn != nil { fn(me) }
	me.Accessor.Walk()
 }

type TxsdSourceTypeSequenceTechniqueCommon struct {
//	The source's technique_common must have one and only one accessor.
	XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_

}

//	If the W.TxsdSourceTypeSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdSourceTypeSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdSourceTypeSequenceTechniqueCommon instance.
func (me *TxsdSourceTypeSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdSourceTypeSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_ struct {
//	The technique common specifies the common method for accessing this source element's data.
	TechniqueCommon *TxsdSourceTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

type TsourceType struct {
//	The source element may contain an asset element.
	XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_

//	The source element may contain a
//	float_array.
	XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_

//	The source element may contain a
//	Name_array.
	XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_

	XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_

//	The source element may contain a token_array.
	XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Required attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_

//	The technique common specifies the common method for accessing this source element's data.
	XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The source element may contain an
//	IDREF_array.
	XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_

//	The source element may contain a
//	bool_array.
	XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_

//	The source element may contain an
//	int_array.
	XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_

}

//	If the W.TsourceType function is not nil (ie. was set by outside code), calls it with this TsourceType instance as the single argument. Then calls the Walk() method on 10/12 embed(s) and 0/0 field(s) belonging to this TsourceType instance.
func (me *TsourceType) Walk ()  { 
	if fn := W.TsourceType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_.Walk()
	me.XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_.Walk()
	me.XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_.Walk()
	me.XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_.Walk()
	me.XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_.Walk()
	me.XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_.Walk()
	me.XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_.Walk()
	me.XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_.Walk()
 }

type XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_ struct {
//	The animation element may contain any number of source elements.
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

type XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_ struct {
	Animations []*TanimationType `xml:"http://www.collada.org/2008/03/COLLADASchema animation"`

}

//	If the W.XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_ instance.
func (me *XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_; fn != nil { fn(me) }
 }

//	The animation element may contain any number of sampler elements.
//	The sampler element declares an N-dimensional function used for animation. Animation function curves
//	are represented by 1-D sampler elements in COLLADA. The sampler defines sampling points and how to
//	interpolate between them.
//	Indicates what the sampled value should be after the last key.
//	An enumerated type specifying the acceptable sampler pre and post behavior attribute types.
type TsamplerBehaviorEnum xsdt.String

//	This convenience method just performs a simple type conversion to TsamplerBehaviorEnum's alias type xsdt.String.
func (me TsamplerBehaviorEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "CONSTANT".
func (me TsamplerBehaviorEnum) IsConstant () bool { return me == "CONSTANT" }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "UNDEFINED".
func (me TsamplerBehaviorEnum) IsUndefined () bool { return me == "UNDEFINED" }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "CYCLE".
func (me TsamplerBehaviorEnum) IsCycle () bool { return me == "CYCLE" }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "GRADIENT".
func (me TsamplerBehaviorEnum) IsGradient () bool { return me == "GRADIENT" }

//	Since TsamplerBehaviorEnum is just a simple String type, this merely returns the current string value.
func (me TsamplerBehaviorEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "CYCLE_RELATIVE".
func (me TsamplerBehaviorEnum) IsCycleRelative () bool { return me == "CYCLE_RELATIVE" }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "OSCILLATE".
func (me TsamplerBehaviorEnum) IsOscillate () bool { return me == "OSCILLATE" }

//	Since TsamplerBehaviorEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TsamplerBehaviorEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type XsdGoPkgHasAttr_PostBehavior_TsamplerBehaviorEnum_ struct {
//	Indicates what the sampled value should be after the last key.
	PostBehavior TsamplerBehaviorEnum `xml:"http://www.collada.org/2008/03/COLLADASchema post_behavior,attr"`

}

//	The input element must occur at least one time. These inputs are local inputs.
//	The input_local_type element is used to represent inputs that can only reference resources declared in the same document.
//	The source attribute indicates the location of the data source. Required attribute.
//	This urifragment_type element is used for URI reference which can only reference a resource declared within it's same document.
type TurifragmentType xsdt.String

//	Since TurifragmentType is just a simple String type, this merely sets the current value from the specified string.
func (me *TurifragmentType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TurifragmentType is just a simple String type, this merely returns the current string value.
func (me TurifragmentType) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TurifragmentType's alias type xsdt.String.
func (me TurifragmentType) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasAttr_Source_TurifragmentType_ struct {
//	The source attribute indicates the location of the data source. Required attribute.
	Source TurifragmentType `xml:"http://www.collada.org/2008/03/COLLADASchema source,attr"`

}

type TinputLocalType struct {
//	The semantic attribute is the user-defined meaning of the input connection. Required attribute.
	XsdGoPkgHasAttr_Semantic_XsdtNmtoken_

//	The source attribute indicates the location of the data source. Required attribute.
	XsdGoPkgHasAttr_Source_TurifragmentType_

}

//	If the W.TinputLocalType function is not nil (ie. was set by outside code), calls it with this TinputLocalType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TinputLocalType instance.
func (me *TinputLocalType) Walk ()  { 
	if fn := W.TinputLocalType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_ struct {
//	The input element must occur at least one time. These inputs are local inputs.
	Inputs []*TinputLocalType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_ instance.
func (me *XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

//	Indicates what the sampled value should be before the first key.
type XsdGoPkgHasAttr_PreBehavior_TsamplerBehaviorEnum_ struct {
//	Indicates what the sampled value should be before the first key.
	PreBehavior TsamplerBehaviorEnum `xml:"http://www.collada.org/2008/03/COLLADASchema pre_behavior,attr"`

}

type TsamplerType struct {
//	The input element must occur at least one time. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	Indicates what the sampled value should be before the first key.
	XsdGoPkgHasAttr_PreBehavior_TsamplerBehaviorEnum_

//	Indicates what the sampled value should be after the last key.
	XsdGoPkgHasAttr_PostBehavior_TsamplerBehaviorEnum_

}

//	If the W.TsamplerType function is not nil (ie. was set by outside code), calls it with this TsamplerType instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TsamplerType instance.
func (me *TsamplerType) Walk ()  { 
	if fn := W.TsamplerType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_.Walk()
 }

type XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ struct {
//	The animation element may contain any number of sampler elements.
	Samplers []*TsamplerType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler"`

}

//	If the W.XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ instance.
func (me *XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_; fn != nil { fn(me) }
	for _, x := range me.Samplers { x.Walk() }
 }

//	The animation element may contain any number of channel elements.
//	The channel element declares an output channel of an animation.
type TchannelType struct {
//	The target attribute indicates the location of the element bound to the output of the sampler.
//	This text string is a path-name following a simple syntax described in Address Syntax.
//	Required attribute.
	XsdGoPkgHasAttr_Target_XsdtToken_

//	The source attribute indicates the location of the sampler using a URL expression.
//	The sampler must be declared within the same document. Required attribute.
	XsdGoPkgHasAttr_Source_TurifragmentType_

}

//	If the W.TchannelType function is not nil (ie. was set by outside code), calls it with this TchannelType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TchannelType instance.
func (me *TchannelType) Walk ()  { 
	if fn := W.TchannelType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_ struct {
//	The animation element may contain any number of channel elements.
	Channels []*TchannelType `xml:"http://www.collada.org/2008/03/COLLADASchema channel"`

}

//	If the W.XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_ instance.
func (me *XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_; fn != nil { fn(me) }
	for _, x := range me.Channels { x.Walk() }
 }

type XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_ struct {
	Channels []*TchannelType `xml:"http://www.collada.org/2008/03/COLLADASchema channel"`

}

//	If the W.XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_ instance.
func (me *XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_; fn != nil { fn(me) }
	for _, x := range me.Channels { x.Walk() }
 }

//	The animation may be hierarchical and may contain any number of other animation elements.
type XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ struct {
//	The animation may be hierarchical and may contain any number of other animation elements.
	Animations []*TanimationType `xml:"http://www.collada.org/2008/03/COLLADASchema animation"`

}

//	If the W.XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ instance.
func (me *XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_ struct {
	Animations []*TanimationType `xml:"http://www.collada.org/2008/03/COLLADASchema animation"`

}

//	If the W.XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_ instance.
func (me *XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ struct {
	Animations []*TanimationType `xml:"http://www.collada.org/2008/03/COLLADASchema animation"`

}

//	If the W.XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ instance.
func (me *XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_; fn != nil { fn(me) }
 }

//	The animation element may contain an asset element.
type XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_ struct {
//	The animation element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ struct {
	Samplers []*TsamplerType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler"`

}

//	If the W.XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ instance.
func (me *XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_; fn != nil { fn(me) }
	for _, x := range me.Samplers { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TanimationType struct {
	XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_

//	The animation element may contain any number of sampler elements.
	XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_

//	The animation element may contain any number of channel elements.
	XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_

	XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_

//	The animation may be hierarchical and may contain any number of other animation elements.
	XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_

	XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_

	XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_

//	The animation element may contain an asset element.
	XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The animation element may contain any number of source elements.
	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TanimationType function is not nil (ie. was set by outside code), calls it with this TanimationType instance as the single argument. Then calls the Walk() method on 11/13 embed(s) and 0/0 field(s) belonging to this TanimationType instance.
func (me *TanimationType) Walk ()  { 
	if fn := W.TanimationType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_.Walk()
	me.XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_.Walk()
	me.XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_.Walk()
	me.XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_.Walk()
	me.XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_.Walk()
	me.XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_.Walk()
	me.XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_.Walk()
 }

type XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_ struct {
//	There must be at least one animation element.
	Animations []*TanimationType `xml:"http://www.collada.org/2008/03/COLLADASchema animation"`

}

//	If the W.XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_ instance.
func (me *XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_; fn != nil { fn(me) }
	for _, x := range me.Animations { x.Walk() }
 }

type TlibraryAnimationsType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_

//	The library_animations element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_

//	There must be at least one animation element.
	XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TlibraryAnimationsType function is not nil (ie. was set by outside code), calls it with this TlibraryAnimationsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryAnimationsType instance.
func (me *TlibraryAnimationsType) Walk ()  { 
	if fn := W.TlibraryAnimationsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_.Walk()
 }

type XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_ struct {
//	The COLLADA element may contain any
//	number of library_animations elements.
	AnimationsLibraries []*TlibraryAnimationsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_animations"`

}

//	If the W.XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_ instance.
func (me *XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_; fn != nil { fn(me) }
	for _, x := range me.AnimationsLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_cameras elements.
//	The library_cameras element declares a module of camera elements.
//	There must be at least one camera element.
//	The camera element declares a view into the scene hierarchy or scene graph. The camera contains
//	elements that describe the camera's optics and imager.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The camera element may contain an asset element.
type XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_ struct {
//	The camera element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	Imagers represent the image sensor of a camera (for example film or CCD).
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	This element may contain any number of non-common profile techniques.
//	There is no common technique for imager.
type XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
//	There is no common technique for imager.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type TxsdCameraTypeSequenceImager struct {
//	This element may contain any number of non-common profile techniques.
//	There is no common technique for imager.
	XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_

}

//	If the W.TxsdCameraTypeSequenceImager function is not nil (ie. was set by outside code), calls it with this TxsdCameraTypeSequenceImager instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdCameraTypeSequenceImager instance.
func (me *TxsdCameraTypeSequenceImager) Walk ()  { 
	if fn := W.TxsdCameraTypeSequenceImager; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_ struct {
//	Imagers represent the image sensor of a camera (for example film or CCD).
	Imager *TxsdCameraTypeSequenceImager `xml:"http://www.collada.org/2008/03/COLLADASchema imager"`

}

//	If the W.XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_ instance.
func (me *XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_; fn != nil { fn(me) }
	me.Imager.Walk()
 }

//	Optics represents the apparatus on a camera that projects the image onto the image sensor.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The technique_common element specifies the optics information for the common profile
//	which all COLLADA implementations need to support.
//	The orthographic element describes the field of view of an orthographic camera.
//	The targetable_float_type element is used to represent elements which contain a single float value which can
//	be targeted for animation.
type TtargetableFloatType struct {
	XsdGoPkgValue TfloatType `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TtargetableFloatType function is not nil (ie. was set by outside code), calls it with this TtargetableFloatType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TtargetableFloatType instance.
func (me *TtargetableFloatType) Walk ()  { 
	if fn := W.TtargetableFloatType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ struct {
	AspectRatio *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema aspect_ratio"`

}

//	If the W.XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_; fn != nil { fn(me) }
	me.AspectRatio.Walk()
 }

type XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ struct {
	Ymag *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema ymag"`

}

//	If the W.XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_; fn != nil { fn(me) }
	me.Ymag.Walk()
 }

//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
type XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ struct {
//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
	Znear *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema znear"`

}

//	If the W.XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_; fn != nil { fn(me) }
	me.Znear.Walk()
 }

//	The aspect_ratio element contains a floating point number describing the aspect ratio of
//	the field of view. If the aspect_ratio element is not present the aspect ratio is to be
//	calculated from the xmag or ymag elements and the current viewport.
type XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ struct {
//	The aspect_ratio element contains a floating point number describing the aspect ratio of
//	the field of view. If the aspect_ratio element is not present the aspect ratio is to be
//	calculated from the xmag or ymag elements and the current viewport.
	AspectRatio *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema aspect_ratio"`

}

//	If the W.XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_; fn != nil { fn(me) }
	me.AspectRatio.Walk()
 }

//	The xmag element contains a floating point number describing the horizontal
//	magnification of the view.
type XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_ struct {
//	The xmag element contains a floating point number describing the horizontal
//	magnification of the view.
	Xmag *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema xmag"`

}

//	If the W.XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_; fn != nil { fn(me) }
	me.Xmag.Walk()
 }

//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
type XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ struct {
//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
	Zfar *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema zfar"`

}

//	If the W.XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_; fn != nil { fn(me) }
	me.Zfar.Walk()
 }

//	The ymag element contains a floating point number describing the vertical
//	magnification of the view.  It can also have a sid.
type XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ struct {
//	The ymag element contains a floating point number describing the vertical
//	magnification of the view.  It can also have a sid.
	Ymag *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema ymag"`

}

//	If the W.XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_; fn != nil { fn(me) }
	me.Ymag.Walk()
 }

type TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic struct {
//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
	XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_

//	The aspect_ratio element contains a floating point number describing the aspect ratio of
//	the field of view. If the aspect_ratio element is not present the aspect ratio is to be
//	calculated from the xmag or ymag elements and the current viewport.
	XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_

//	The xmag element contains a floating point number describing the horizontal
//	magnification of the view.
	XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_

//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
	XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_

//	The ymag element contains a floating point number describing the vertical
//	magnification of the view.  It can also have a sid.
	XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_

	XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_

	XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_

}

//	If the W.TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic function is not nil (ie. was set by outside code), calls it with this TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic instance.
func (me *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic) Walk ()  { 
	if fn := W.TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_.Walk()
 }

type XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_ struct {
//	The orthographic element describes the field of view of an orthographic camera.
	Orthographic *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic `xml:"http://www.collada.org/2008/03/COLLADASchema orthographic"`

}

//	If the W.XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_ instance.
func (me *XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_; fn != nil { fn(me) }
	me.Orthographic.Walk()
 }

//	The perspective element describes the optics of a perspective camera.
//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
type XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ struct {
//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
	Zfar *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema zfar"`

}

//	If the W.XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_; fn != nil { fn(me) }
	me.Zfar.Walk()
 }

type XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ struct {
	AspectRatio *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema aspect_ratio"`

}

//	If the W.XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_; fn != nil { fn(me) }
	me.AspectRatio.Walk()
 }

type XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ struct {
	Yfov *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema yfov"`

}

//	If the W.XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_; fn != nil { fn(me) }
	me.Yfov.Walk()
 }

//	The aspect_ratio element contains a floating point number describing the aspect ratio of the field
//	of view. If the aspect_ratio element is not present the aspect ratio is to be calculated from the
//	xfov or yfov elements and the current viewport.
type XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ struct {
//	The aspect_ratio element contains a floating point number describing the aspect ratio of the field
//	of view. If the aspect_ratio element is not present the aspect ratio is to be calculated from the
//	xfov or yfov elements and the current viewport.
	AspectRatio *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema aspect_ratio"`

}

//	If the W.XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_; fn != nil { fn(me) }
	me.AspectRatio.Walk()
 }

//	The xfov element contains a floating point number describing the horizontal field of view in degrees.
type XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_ struct {
//	The xfov element contains a floating point number describing the horizontal field of view in degrees.
	Xfov *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema xfov"`

}

//	If the W.XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_; fn != nil { fn(me) }
	me.Xfov.Walk()
 }

//	The yfov element contains a floating point number describing the verticle field of view in degrees.
type XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ struct {
//	The yfov element contains a floating point number describing the verticle field of view in degrees.
	Yfov *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema yfov"`

}

//	If the W.XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_; fn != nil { fn(me) }
	me.Yfov.Walk()
 }

//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
type XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ struct {
//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
	Znear *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema znear"`

}

//	If the W.XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_; fn != nil { fn(me) }
	me.Znear.Walk()
 }

type TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective struct {
//	The yfov element contains a floating point number describing the verticle field of view in degrees.
	XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_

//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
	XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_

//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
	XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_

	XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_

	XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_

//	The aspect_ratio element contains a floating point number describing the aspect ratio of the field
//	of view. If the aspect_ratio element is not present the aspect ratio is to be calculated from the
//	xfov or yfov elements and the current viewport.
	XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_

//	The xfov element contains a floating point number describing the horizontal field of view in degrees.
	XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_

}

//	If the W.TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective function is not nil (ie. was set by outside code), calls it with this TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective instance.
func (me *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective) Walk ()  { 
	if fn := W.TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_.Walk()
 }

type XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_ struct {
//	The perspective element describes the optics of a perspective camera.
	Perspective *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective `xml:"http://www.collada.org/2008/03/COLLADASchema perspective"`

}

//	If the W.XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_ instance.
func (me *XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_; fn != nil { fn(me) }
	me.Perspective.Walk()
 }

type TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon struct {
//	The perspective element describes the optics of a perspective camera.
	XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_

//	The orthographic element describes the field of view of an orthographic camera.
	XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_

}

//	If the W.TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon instance.
func (me *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_.Walk()
	me.XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the optics information for the common profile
//	which all COLLADA implementations need to support.
	TechniqueCommon *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type TxsdCameraTypeSequenceOptics struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_

//	The technique_common element specifies the optics information for the common profile
//	which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_

}

//	If the W.TxsdCameraTypeSequenceOptics function is not nil (ie. was set by outside code), calls it with this TxsdCameraTypeSequenceOptics instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdCameraTypeSequenceOptics instance.
func (me *TxsdCameraTypeSequenceOptics) Walk ()  { 
	if fn := W.TxsdCameraTypeSequenceOptics; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_.Walk()
	me.XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_.Walk()
 }

type XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_ struct {
//	Optics represents the apparatus on a camera that projects the image onto the image sensor.
	Optics *TxsdCameraTypeSequenceOptics `xml:"http://www.collada.org/2008/03/COLLADASchema optics"`

}

//	If the W.XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_ instance.
func (me *XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_; fn != nil { fn(me) }
	me.Optics.Walk()
 }

type TcameraType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The camera element may contain an asset element.
	XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	Imagers represent the image sensor of a camera (for example film or CCD).
	XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_

//	Optics represents the apparatus on a camera that projects the image onto the image sensor.
	XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_

}

//	If the W.TcameraType function is not nil (ie. was set by outside code), calls it with this TcameraType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TcameraType instance.
func (me *TcameraType) Walk ()  { 
	if fn := W.TcameraType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_.Walk()
	me.XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_.Walk()
	me.XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_ struct {
//	There must be at least one camera element.
	Cameras []*TcameraType `xml:"http://www.collada.org/2008/03/COLLADASchema camera"`

}

//	If the W.XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_ instance.
func (me *XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_; fn != nil { fn(me) }
	for _, x := range me.Cameras { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The library_cameras element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_ struct {
//	The library_cameras element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TlibraryCamerasType struct {
//	The library_cameras element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	There must be at least one camera element.
	XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_

}

//	If the W.TlibraryCamerasType function is not nil (ie. was set by outside code), calls it with this TlibraryCamerasType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryCamerasType instance.
func (me *TlibraryCamerasType) Walk ()  { 
	if fn := W.TlibraryCamerasType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_.Walk()
 }

type XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_ struct {
//	The COLLADA element may contain any
//	number of library_cameras elements.
	CamerasLibraries []*TlibraryCamerasType `xml:"http://www.collada.org/2008/03/COLLADASchema library_cameras"`

}

//	If the W.XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_ instance.
func (me *XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_; fn != nil { fn(me) }
	for _, x := range me.CamerasLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_physics_models
//	elements.
//	The library_physics_models element declares a module of physics_model elements.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The library_physics_models element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_ struct {
//	The library_physics_models element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	There must be at least one physics_model element.
//	This element allows for building complex combinations of rigid-bodies and constraints that
//	may be instantiated multiple times.
//	The physics_model may instance any number of other physics_model elements.
//	This element allows instancing physics model within another physics model, or in a physics scene.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The instance_physics_model element may instance any number of force_field elements.
//	The instance_force_field element declares the instantiation of a COLLADA force_field resource.
type TinstanceForceFieldType struct {
	TinstanceWithExtraType

}

//	If the W.TinstanceForceFieldType function is not nil (ie. was set by outside code), calls it with this TinstanceForceFieldType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TinstanceForceFieldType instance.
func (me *TinstanceForceFieldType) Walk ()  { 
	if fn := W.TinstanceForceFieldType; fn != nil { fn(me) }
	me.TinstanceWithExtraType.Walk()
 }

type XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_ struct {
//	The instance_physics_model element may instance any number of force_field elements.
	ForceFieldInstances []*TinstanceForceFieldType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_force_field"`

}

//	If the W.XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_ instance.
func (me *XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_; fn != nil { fn(me) }
	for _, x := range me.ForceFieldInstances { x.Walk() }
 }

//	The instance_physics_model element may instance any number of rigid_constraint elements.
//	This element allows instancing a rigid_constraint within an instance_physics_model.
//	The constraint attribute indicates which rigid_constraing to instantiate. Required attribute.
type XsdGoPkgHasAttr_Constraint_XsdtNCName_ struct {
//	The constraint attribute indicates which rigid_constraing to instantiate. Required attribute.
	Constraint xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema constraint,attr"`

}

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TinstanceRigidConstraintType struct {
//	The constraint attribute indicates which rigid_constraing to instantiate. Required attribute.
	XsdGoPkgHasAttr_Constraint_XsdtNCName_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TinstanceRigidConstraintType function is not nil (ie. was set by outside code), calls it with this TinstanceRigidConstraintType instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TinstanceRigidConstraintType instance.
func (me *TinstanceRigidConstraintType) Walk ()  { 
	if fn := W.TinstanceRigidConstraintType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_ struct {
//	The instance_physics_model element may instance any number of rigid_constraint elements.
	RigidConstraintInstances []*TinstanceRigidConstraintType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_rigid_constraint"`

}

//	If the W.XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_ instance.
func (me *XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_; fn != nil { fn(me) }
	for _, x := range me.RigidConstraintInstances { x.Walk() }
 }

//	The instance_physics_model element may instance any number of rigid_body elements.
//	This element allows instancing a rigid_body within an instance_physics_model.
//	The body attribute indicates which rigid_body to instantiate. Required attribute.
type XsdGoPkgHasAttr_Body_XsdtNCName_ struct {
//	The body attribute indicates which rigid_body to instantiate. Required attribute.
	Body xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema body,attr"`

}

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The technique_common element specifies the instance_rigid_body information for the common
//	profile which all COLLADA implementations need to support.
type TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic struct {
	XsdGoPkgValue xsdt.Boolean `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic function is not nil (ie. was set by outside code), calls it with this TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic instance.
func (me *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic) Walk ()  { 
	if fn := W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True struct {
	Dynamic *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic `xml:"http://www.collada.org/2008/03/COLLADASchema dynamic"`

}

//	If the W.XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True instance.
func (me *XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True; fn != nil { fn(me) }
	me.Dynamic.Walk()
 }

//	Returns the default value for Dynamic -- true
func (me XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True) DynamicDefault () xsdt.Boolean { return xsdt.Boolean(true) }

type XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ struct {
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

//	A cylinder primitive that is centered on, and aligned with. the local Y axis.
//	A float value that represents the length of the cylinder along the Y axis.
type XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_ struct {
//	A float value that represents the length of the cylinder along the Y axis.
	Height TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema height"`

}

//	If the W.XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_ instance.
func (me *XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_; fn != nil { fn(me) }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	float2 values that represent the radii of the cylinder.
type XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_ struct {
//	float2 values that represent the radii of the cylinder.
	Radius Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_; fn != nil { fn(me) }
 }

type TcylinderType struct {
//	A float value that represents the length of the cylinder along the Y axis.
	XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_

//	float2 values that represent the radii of the cylinder.
	XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_

}

//	If the W.TcylinderType function is not nil (ie. was set by outside code), calls it with this TcylinderType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TcylinderType instance.
func (me *TcylinderType) Walk ()  { 
	if fn := W.TcylinderType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_.Walk()
	me.XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_ struct {
	Cylinder *TcylinderType `xml:"http://www.collada.org/2008/03/COLLADASchema cylinder"`

}

//	If the W.XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_ instance.
func (me *XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_; fn != nil { fn(me) }
	me.Cylinder.Walk()
 }

type XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ struct {
	Mass *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema mass"`

}

//	If the W.XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_; fn != nil { fn(me) }
	me.Mass.Walk()
 }

//	An axis-aligned, centered box primitive.
//	3 float values that represent the extents of the box
type XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_ struct {
//	3 float values that represent the extents of the box
	HalfExtents Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half_extents"`

}

//	If the W.XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_; fn != nil { fn(me) }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TboxType struct {
//	3 float values that represent the extents of the box
	XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_

}

//	If the W.TboxType function is not nil (ie. was set by outside code), calls it with this TboxType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TboxType instance.
func (me *TboxType) Walk ()  { 
	if fn := W.TboxType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_ struct {
	Box *TboxType `xml:"http://www.collada.org/2008/03/COLLADASchema box"`

}

//	If the W.XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_ instance.
func (me *XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_; fn != nil { fn(me) }
	me.Box.Walk()
 }

//	This element defines the physical properties of an object. It contains a technique/profile with
//	parameters. The COMMON profile defines the built-in names, such as static_friction.
//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

//	The physics_material element may contain an asset element.
type XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_ struct {
//	The physics_material element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The technique_common element specifies the physics_material information for the common profile
//	which all COLLADA implementations need to support.
//	Dynamic friction coefficient
type XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_ struct {
//	Dynamic friction coefficient
	DynamicFriction *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema dynamic_friction"`

}

//	If the W.XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_; fn != nil { fn(me) }
	me.DynamicFriction.Walk()
 }

//	The proportion of the kinetic energy preserved in the impact (typically ranges from 0.0 to 1.0)
type XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_ struct {
//	The proportion of the kinetic energy preserved in the impact (typically ranges from 0.0 to 1.0)
	Restitution *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema restitution"`

}

//	If the W.XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_; fn != nil { fn(me) }
	me.Restitution.Walk()
 }

//	Static friction coefficient
type XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_ struct {
//	Static friction coefficient
	StaticFriction *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema static_friction"`

}

//	If the W.XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_; fn != nil { fn(me) }
	me.StaticFriction.Walk()
 }

type TxsdPhysicsMaterialTypeSequenceTechniqueCommon struct {
//	Static friction coefficient
	XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_

//	Dynamic friction coefficient
	XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_

//	The proportion of the kinetic energy preserved in the impact (typically ranges from 0.0 to 1.0)
	XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_

}

//	If the W.TxsdPhysicsMaterialTypeSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdPhysicsMaterialTypeSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdPhysicsMaterialTypeSequenceTechniqueCommon instance.
func (me *TxsdPhysicsMaterialTypeSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdPhysicsMaterialTypeSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the physics_material information for the common profile
//	which all COLLADA implementations need to support.
	TechniqueCommon *TxsdPhysicsMaterialTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TphysicsMaterialType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_

//	The physics_material element may contain an asset element.
	XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_

//	The technique_common element specifies the physics_material information for the common profile
//	which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_

}

//	If the W.TphysicsMaterialType function is not nil (ie. was set by outside code), calls it with this TphysicsMaterialType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TphysicsMaterialType instance.
func (me *TphysicsMaterialType) Walk ()  { 
	if fn := W.TphysicsMaterialType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_.Walk()
	me.XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ struct {
	PhysicsMaterial *TphysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_material"`

}

//	If the W.XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance.
func (me *XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_; fn != nil { fn(me) }
	me.PhysicsMaterial.Walk()
 }

type XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ struct {
	InstanceGeometry *TinstanceGeometryType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_geometry"`

}

//	If the W.XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ instance.
func (me *XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_; fn != nil { fn(me) }
	me.InstanceGeometry.Walk()
 }

type XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_ struct {
	Density *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema density"`

}

//	If the W.XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_; fn != nil { fn(me) }
	me.Density.Walk()
 }

//	A centered sphere primitive.
//	A float value that represents the radius of the sphere
type XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_ struct {
//	A float value that represents the radius of the sphere
	Radius TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_ instance.
func (me *XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_; fn != nil { fn(me) }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TsphereType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_

//	A float value that represents the radius of the sphere
	XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_

}

//	If the W.TsphereType function is not nil (ie. was set by outside code), calls it with this TsphereType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TsphereType instance.
func (me *TsphereType) Walk ()  { 
	if fn := W.TsphereType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_.Walk()
 }

type XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_ struct {
	Sphere *TsphereType `xml:"http://www.collada.org/2008/03/COLLADASchema sphere"`

}

//	If the W.XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_ instance.
func (me *XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_; fn != nil { fn(me) }
	me.Sphere.Walk()
 }

//	A capsule primitive that is centered on and aligned with the local Y axis.
//	Three float values that represent the radii of the capsule (it may be elliptical).
type XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_ struct {
//	Three float values that represent the radii of the capsule (it may be elliptical).
	Radius Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_; fn != nil { fn(me) }
 }

//	A float value that represents the length of the line segment connecting the centers
//	of the capping hemispheres.
type XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_ struct {
//	A float value that represents the length of the line segment connecting the centers
//	of the capping hemispheres.
	Height TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema height"`

}

//	If the W.XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_ instance.
func (me *XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_; fn != nil { fn(me) }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TcapsuleType struct {
//	Three float values that represent the radii of the capsule (it may be elliptical).
	XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_

//	A float value that represents the length of the line segment connecting the centers
//	of the capping hemispheres.
	XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_

}

//	If the W.TcapsuleType function is not nil (ie. was set by outside code), calls it with this TcapsuleType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TcapsuleType instance.
func (me *TcapsuleType) Walk ()  { 
	if fn := W.TcapsuleType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_.Walk()
	me.XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_ struct {
	Capsule *TcapsuleType `xml:"http://www.collada.org/2008/03/COLLADASchema capsule"`

}

//	If the W.XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_ instance.
func (me *XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_; fn != nil { fn(me) }
	me.Capsule.Walk()
 }

//	An infinite plane primitive.
//	4 float values that represent the coefficients for the plane's equation:    Ax + By + Cz + D = 0
type XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_ struct {
//	4 float values that represent the coefficients for the plane's equation:    Ax + By + Cz + D = 0
	Equation Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema equation"`

}

//	If the W.XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_; fn != nil { fn(me) }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TplaneType struct {
//	4 float values that represent the coefficients for the plane's equation:    Ax + By + Cz + D = 0
	XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_

}

//	If the W.TplaneType function is not nil (ie. was set by outside code), calls it with this TplaneType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TplaneType instance.
func (me *TplaneType) Walk ()  { 
	if fn := W.TplaneType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_ struct {
	Plane *TplaneType `xml:"http://www.collada.org/2008/03/COLLADASchema plane"`

}

//	If the W.XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_ instance.
func (me *XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_; fn != nil { fn(me) }
	me.Plane.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ struct {
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

//	The instance_physics_material element declares the instantiation of a COLLADA physics_material
//	resource.
type TinstancePhysicsMaterialType struct {
	TinstanceWithExtraType

}

//	If the W.TinstancePhysicsMaterialType function is not nil (ie. was set by outside code), calls it with this TinstancePhysicsMaterialType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TinstancePhysicsMaterialType instance.
func (me *TinstancePhysicsMaterialType) Walk ()  { 
	if fn := W.TinstancePhysicsMaterialType; fn != nil { fn(me) }
	me.TinstanceWithExtraType.Walk()
 }

type XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ struct {
	InstancePhysicsMaterial *TinstancePhysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_material"`

}

//	If the W.XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ instance.
func (me *XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_; fn != nil { fn(me) }
	me.InstancePhysicsMaterial.Walk()
 }

type TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow struct {
	XsdGoPkgValue xsdt.Boolean `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element. This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow function is not nil (ie. was set by outside code), calls it with this TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow instance.
func (me *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow) Walk ()  { 
	if fn := W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ struct {
	Hollow *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow `xml:"http://www.collada.org/2008/03/COLLADASchema hollow"`

}

//	If the W.XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ instance.
func (me *XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_; fn != nil { fn(me) }
	me.Hollow.Walk()
 }

type TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape struct {
	XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_

	XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_

	XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_

	XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_

	XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_

	XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_

	XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_

	XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_

	XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_

	XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_

	XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_

}

//	If the W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape function is not nil (ie. was set by outside code), calls it with this TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape instance as the single argument. Then calls the Walk() method on 14/14 embed(s) and 0/0 field(s) belonging to this TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape instance.
func (me *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape) Walk ()  { 
	if fn := W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_.Walk()
	me.XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_.Walk()
	me.XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_.Walk()
	me.XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_.Walk()
	me.XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_.Walk()
	me.XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_.Walk()
	me.XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_.Walk()
	me.XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_.Walk()
	me.XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_.Walk()
 }

type XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_ struct {
	Shapes []*TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape `xml:"http://www.collada.org/2008/03/COLLADASchema shape"`

}

//	If the W.XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_ instance.
func (me *XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_; fn != nil { fn(me) }
	for _, x := range me.Shapes { x.Walk() }
 }

type XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ struct {
	PhysicsMaterial *TphysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_material"`

}

//	If the W.XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance.
func (me *XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_; fn != nil { fn(me) }
	me.PhysicsMaterial.Walk()
 }

type XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ struct {
	Mass *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema mass"`

}

//	If the W.XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_; fn != nil { fn(me) }
	me.Mass.Walk()
 }

type XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ struct {
	InstancePhysicsMaterial *TinstancePhysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_material"`

}

//	If the W.XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ instance.
func (me *XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_; fn != nil { fn(me) }
	me.InstancePhysicsMaterial.Walk()
 }

type XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ struct {
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

type XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ struct {
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

type TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame struct {
	XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_

}

//	If the W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame function is not nil (ie. was set by outside code), calls it with this TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame instance.
func (me *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame) Walk ()  { 
	if fn := W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_.Walk()
 }

type XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ struct {
	MassFrame *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame `xml:"http://www.collada.org/2008/03/COLLADASchema mass_frame"`

}

//	If the W.XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ instance.
func (me *XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_; fn != nil { fn(me) }
	me.MassFrame.Walk()
 }

//	Specifies the initial linear velocity of the rigid_body instance.
type XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000 struct {
//	Specifies the initial linear velocity of the rigid_body instance.
	Velocity Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema velocity"`

}

//	Returns the default value for Velocity -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000) VelocityDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

//	If the W.XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000 instance.
func (me *XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000; fn != nil { fn(me) }
 }

//	Specifies the initial angular velocity of the rigid_body instance in degrees per second
//	around each axis, in the form of an X-Y-Z Euler rotation.
type XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000 struct {
//	Specifies the initial angular velocity of the rigid_body instance in degrees per second
//	around each axis, in the form of an X-Y-Z Euler rotation.
	AngularVelocity Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema angular_velocity"`

}

//	If the W.XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000 instance.
func (me *XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000; fn != nil { fn(me) }
 }

//	Returns the default value for AngularVelocity -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000) AngularVelocityDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

type XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_ struct {
	Inertia *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema inertia"`

}

//	If the W.XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_ instance.
func (me *XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_; fn != nil { fn(me) }
	me.Inertia.Walk()
 }

type TxsdInstanceRigidBodyTypeSequenceTechniqueCommon struct {
	XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True

	XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_

	XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_

	XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_

	XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_

	XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_

//	Specifies the initial linear velocity of the rigid_body instance.
	XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000

//	Specifies the initial angular velocity of the rigid_body instance in degrees per second
//	around each axis, in the form of an X-Y-Z Euler rotation.
	XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000

	XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_

}

//	If the W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdInstanceRigidBodyTypeSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 9/9 embed(s) and 0/0 field(s) belonging to this TxsdInstanceRigidBodyTypeSequenceTechniqueCommon instance.
func (me *TxsdInstanceRigidBodyTypeSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdInstanceRigidBodyTypeSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_.Walk()
	me.XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True.Walk()
	me.XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_.Walk()
	me.XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_.Walk()
	me.XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_.Walk()
	me.XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_.Walk()
	me.XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000.Walk()
	me.XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the instance_rigid_body information for the common
//	profile which all COLLADA implementations need to support.
	TechniqueCommon *TxsdInstanceRigidBodyTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type TinstanceRigidBodyType struct {
//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The body attribute indicates which rigid_body to instantiate. Required attribute.
	XsdGoPkgHasAttr_Body_XsdtNCName_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_

//	The technique_common element specifies the instance_rigid_body information for the common
//	profile which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_

//	The target attribute indicates which node is influenced by this rigid_body instance.
//	Required attribute
	XsdGoPkgHasAttr_Target_XsdtAnyURI_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_

}

//	If the W.TinstanceRigidBodyType function is not nil (ie. was set by outside code), calls it with this TinstanceRigidBodyType instance as the single argument. Then calls the Walk() method on 3/7 embed(s) and 0/0 field(s) belonging to this TinstanceRigidBodyType instance.
func (me *TinstanceRigidBodyType) Walk ()  { 
	if fn := W.TinstanceRigidBodyType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_.Walk()
	me.XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_.Walk()
 }

type XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_ struct {
//	The instance_physics_model element may instance any number of rigid_body elements.
	RigidBodyInstances []*TinstanceRigidBodyType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_rigid_body"`

}

//	If the W.XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_ instance.
func (me *XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_; fn != nil { fn(me) }
	for _, x := range me.RigidBodyInstances { x.Walk() }
 }

//	The parent attribute points to the id of a node in the visual scene. This allows a physics model
//	to be instantiated under a specific transform node, which will dictate the initial position and
//	orientation, and could be animated to influence kinematic rigid bodies.
type XsdGoPkgHasAttr_Parent_XsdtAnyURI_ struct {
//	The parent attribute points to the id of a node in the visual scene. This allows a physics model
//	to be instantiated under a specific transform node, which will dictate the initial position and
//	orientation, and could be animated to influence kinematic rigid bodies.
	Parent xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema parent,attr"`

}

type TinstancePhysicsModelType struct {
//	The parent attribute points to the id of a node in the visual scene. This allows a physics model
//	to be instantiated under a specific transform node, which will dictate the initial position and
//	orientation, and could be animated to influence kinematic rigid bodies.
	XsdGoPkgHasAttr_Parent_XsdtAnyURI_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_

//	The instance_physics_model element may instance any number of force_field elements.
	XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_

//	The instance_physics_model element may instance any number of rigid_constraint elements.
	XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The url attribute refers to resource.  This may refer to a local resource using a relative URL
//	fragment identifier that begins with the "#" character. The url attribute may refer to an external
//	resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	The instance_physics_model element may instance any number of rigid_body elements.
	XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_

}

//	If the W.TinstancePhysicsModelType function is not nil (ie. was set by outside code), calls it with this TinstancePhysicsModelType instance as the single argument. Then calls the Walk() method on 4/8 embed(s) and 0/0 field(s) belonging to this TinstancePhysicsModelType instance.
func (me *TinstancePhysicsModelType) Walk ()  { 
	if fn := W.TinstancePhysicsModelType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_.Walk()
	me.XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_.Walk()
	me.XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_.Walk()
 }

type XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ struct {
//	The physics_model may instance any number of other physics_model elements.
	PhysicsModelInstances []*TinstancePhysicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_model"`

}

//	If the W.XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ instance.
func (me *XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsModelInstances { x.Walk() }
 }

//	The physics_model may define any number of rigid_constraint elements.
//	This element allows for connecting components, such as rigid_body into complex physics models
//	with moveable parts.
//	Defines an attachment to a rigid-body or a node.
//	Allows you to "position" the attachment point.
type XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ struct {
//	Allows you to "position" the attachment point.
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

//	Allows you to "position" the attachment point.
type XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ struct {
//	Allows you to "position" the attachment point.
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

//	The "rigid_body" attribute is a relative reference to a rigid-body within the same
//	physics_model.
type XsdGoPkgHasAttr_RigidBody_XsdtAnyURI_ struct {
//	The "rigid_body" attribute is a relative reference to a rigid-body within the same
//	physics_model.
	RigidBody xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema rigid_body,attr"`

}

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdRigidConstraintTypeSequenceAttachment struct {
//	Allows you to "position" the attachment point.
	XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_

//	Allows you to "position" the attachment point.
	XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_

//	The "rigid_body" attribute is a relative reference to a rigid-body within the same physics_model.
	XsdGoPkgHasAttr_RigidBody_XsdtAnyURI_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_

}

//	If the W.TxsdRigidConstraintTypeSequenceAttachment function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceAttachment instance as the single argument. Then calls the Walk() method on 3/4 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceAttachment instance.
func (me *TxsdRigidConstraintTypeSequenceAttachment) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceAttachment; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_.Walk()
	me.XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_ struct {
//	Defines an attachment to a rigid-body or a node.
	Attachment *TxsdRigidConstraintTypeSequenceAttachment `xml:"http://www.collada.org/2008/03/COLLADASchema attachment"`

}

//	If the W.XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_ instance.
func (me *XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_; fn != nil { fn(me) }
	me.Attachment.Walk()
 }

//	The technique_common element specifies the rigid_constraint information for the common profile
//	which all COLLADA implementations need to support.
//	Indicates whether the attached rigid bodies may inter-penetrate.
type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate struct {
	XsdGoPkgValue xsdt.Boolean `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False struct {
//	Indicates whether the attached rigid bodies may inter-penetrate.
	Interpenetrate *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate `xml:"http://www.collada.org/2008/03/COLLADASchema interpenetrate"`

}

//	Returns the default value for Interpenetrate -- false
func (me XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False) InterpenetrateDefault () xsdt.Boolean { return xsdt.Boolean(false) }

//	If the W.XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False instance.
func (me *XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False; fn != nil { fn(me) }
	me.Interpenetrate.Walk()
 }

//	If false, the constraint doesn't exert any force or influence on the rigid bodies.
type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled struct {
	XsdGoPkgValue xsdt.Boolean `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True struct {
//	If false, the constraint doesn't exert any force or influence on the rigid bodies.
	Enabled *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled `xml:"http://www.collada.org/2008/03/COLLADASchema enabled"`

}

//	If the W.XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True instance.
func (me *XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True; fn != nil { fn(me) }
	me.Enabled.Walk()
 }

//	Returns the default value for Enabled -- true
func (me XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True) EnabledDefault () xsdt.Boolean { return xsdt.Boolean(true) }

//	Spring, based on distance ("LINEAR") or angle ("ANGULAR").
//	The angular spring properties.
//	The spring damping coefficient.
type XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 struct {
//	The spring damping coefficient.
	Damping *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema damping"`

}

//	Returns the default value for Damping -- 0.0
func (me XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00) DampingDefault () TfloatType { return TfloatType(0.0) }

//	If the W.XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00; fn != nil { fn(me) }
	me.Damping.Walk()
 }

//	The stiffness (also called spring coefficient) has units of force/angle in degrees.
type XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 struct {
//	The stiffness (also called spring coefficient) has units of force/angle in degrees.
	Stiffness *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema stiffness"`

}

//	Returns the default value for Stiffness -- 1.0
func (me XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10) StiffnessDefault () TfloatType { return TfloatType(1.0) }

//	If the W.XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 instance.
func (me *XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10; fn != nil { fn(me) }
	me.Stiffness.Walk()
 }

//	The spring's target or resting distance.
type XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 struct {
//	The spring's target or resting distance.
	TargetValue *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema target_value"`

}

//	If the W.XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00; fn != nil { fn(me) }
	me.TargetValue.Walk()
 }

//	Returns the default value for TargetValue -- 0.0
func (me XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00) TargetValueDefault () TfloatType { return TfloatType(0.0) }

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular struct {
//	The stiffness (also called spring coefficient) has units of force/angle in degrees.
	XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10

//	The spring's target or resting distance.
	XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00

//	The spring damping coefficient.
	XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00.Walk()
	me.XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10.Walk()
	me.XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00.Walk()
 }

type XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_ struct {
//	The angular spring properties.
	Angular *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular `xml:"http://www.collada.org/2008/03/COLLADASchema angular"`

}

//	If the W.XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_ instance.
func (me *XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_; fn != nil { fn(me) }
	me.Angular.Walk()
 }

//	The linear spring properties.
//	The stiffness (also called spring coefficient) has units of force/distance.
type XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 struct {
//	The stiffness (also called spring coefficient) has units of force/distance.
	Stiffness *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema stiffness"`

}

//	Returns the default value for Stiffness -- 1.0
func (me XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10) StiffnessDefault () TfloatType { return TfloatType(1.0) }

//	If the W.XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 instance.
func (me *XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10; fn != nil { fn(me) }
	me.Stiffness.Walk()
 }

//	The spring damping coefficient.
type XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 struct {
//	The spring damping coefficient.
	Damping *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema damping"`

}

//	If the W.XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00; fn != nil { fn(me) }
	me.Damping.Walk()
 }

//	Returns the default value for Damping -- 0.0
func (me XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00) DampingDefault () TfloatType { return TfloatType(0.0) }

//	The spring's target or resting distance.
type XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 struct {
//	The spring's target or resting distance.
	TargetValue *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema target_value"`

}

//	Returns the default value for TargetValue -- 0.0
func (me XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00) TargetValueDefault () TfloatType { return TfloatType(0.0) }

//	If the W.XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00; fn != nil { fn(me) }
	me.TargetValue.Walk()
 }

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear struct {
//	The stiffness (also called spring coefficient) has units of force/distance.
	XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10

//	The spring damping coefficient.
	XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00

//	The spring's target or resting distance.
	XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10.Walk()
	me.XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00.Walk()
	me.XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00.Walk()
 }

type XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_ struct {
//	The linear spring properties.
	Linear *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear `xml:"http://www.collada.org/2008/03/COLLADASchema linear"`

}

//	If the W.XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_ instance.
func (me *XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_; fn != nil { fn(me) }
	me.Linear.Walk()
 }

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring struct {
//	The angular spring properties.
	XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_

//	The linear spring properties.
	XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_.Walk()
	me.XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_.Walk()
 }

type XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_ struct {
//	Spring, based on distance ("LINEAR") or angle ("ANGULAR").
	Spring *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring `xml:"http://www.collada.org/2008/03/COLLADASchema spring"`

}

//	If the W.XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_ instance.
func (me *XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_; fn != nil { fn(me) }
	me.Spring.Walk()
 }

//	The limits element provides a flexible way to specify the constraint limits (degrees of freedom
//	and ranges).
//	The linear element describes linear (translational) limits along each axis.
//	The minimum values for the limit.
type XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 struct {
//	The minimum values for the limit.
	Min *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema min"`

}

//	Returns the default value for Min -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000) MinDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

//	If the W.XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 instance.
func (me *XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000; fn != nil { fn(me) }
	me.Min.Walk()
 }

//	The maximum values for the limit.
type XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 struct {
//	The maximum values for the limit.
	Max *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema max"`

}

//	If the W.XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 instance.
func (me *XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000; fn != nil { fn(me) }
	me.Max.Walk()
 }

//	Returns the default value for Max -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000) MaxDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear struct {
//	The minimum values for the limit.
	XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000

//	The maximum values for the limit.
	XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000.Walk()
	me.XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000.Walk()
 }

type XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_ struct {
//	The linear element describes linear (translational) limits along each axis.
	Linear *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear `xml:"http://www.collada.org/2008/03/COLLADASchema linear"`

}

//	If the W.XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_ instance.
func (me *XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_; fn != nil { fn(me) }
	me.Linear.Walk()
 }

//	The swing_cone_and_twist element describes the angular limits along each rotation axis in degrees.
//	The the X and Y limits describe a "swing cone" and the Z limits describe the "twist angle" range
//	The maximum values for the limit.
type XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 struct {
//	The maximum values for the limit.
	Max *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema max"`

}

//	If the W.XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 instance.
func (me *XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000; fn != nil { fn(me) }
	me.Max.Walk()
 }

//	Returns the default value for Max -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000) MaxDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

//	The minimum values for the limit.
type XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 struct {
//	The minimum values for the limit.
	Min *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema min"`

}

//	Returns the default value for Min -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000) MinDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

//	If the W.XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 instance.
func (me *XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000; fn != nil { fn(me) }
	me.Min.Walk()
 }

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist struct {
//	The minimum values for the limit.
	XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000

//	The maximum values for the limit.
	XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000.Walk()
	me.XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000.Walk()
 }

type XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_ struct {
//	The swing_cone_and_twist element describes the angular limits along each rotation axis in degrees.
//	The the X and Y limits describe a "swing cone" and the Z limits describe the "twist angle" range
	SwingConeAndTwist *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist `xml:"http://www.collada.org/2008/03/COLLADASchema swing_cone_and_twist"`

}

//	If the W.XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_ instance.
func (me *XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_; fn != nil { fn(me) }
	me.SwingConeAndTwist.Walk()
 }

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits struct {
//	The linear element describes linear (translational) limits along each axis.
	XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_

//	The swing_cone_and_twist element describes the angular limits along each rotation axis in degrees.
//	The the X and Y limits describe a "swing cone" and the Z limits describe the "twist angle" range
	XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_.Walk()
	me.XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_.Walk()
 }

type XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_ struct {
//	The limits element provides a flexible way to specify the constraint limits (degrees of freedom
//	and ranges).
	Limits *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits `xml:"http://www.collada.org/2008/03/COLLADASchema limits"`

}

//	If the W.XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_ instance.
func (me *XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_; fn != nil { fn(me) }
	me.Limits.Walk()
 }

type TxsdRigidConstraintTypeSequenceTechniqueCommon struct {
//	Indicates whether the attached rigid bodies may inter-penetrate.
	XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False

//	If false, the constraint doesn't exert any force or influence on the rigid bodies.
	XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True

//	Spring, based on distance ("LINEAR") or angle ("ANGULAR").
	XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_

//	The limits element provides a flexible way to specify the constraint limits (degrees of freedom
//	and ranges).
	XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_

}

//	If the W.TxsdRigidConstraintTypeSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceTechniqueCommon instance.
func (me *TxsdRigidConstraintTypeSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_.Walk()
	me.XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_.Walk()
	me.XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False.Walk()
	me.XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the rigid_constraint information for the common profile
//	which all COLLADA implementations need to support.
	TechniqueCommon *TxsdRigidConstraintTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

//	Defines the attachment (to a rigid_body or a node) to be used as the reference-frame.
//	Allows you to "position" the attachment point.
type XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ struct {
//	Allows you to "position" the attachment point.
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

//	Allows you to "position" the attachment point.
type XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ struct {
//	Allows you to "position" the attachment point.
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdRigidConstraintTypeSequenceRefAttachment struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_

//	Allows you to "position" the attachment point.
	XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_

//	Allows you to "position" the attachment point.
	XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_

//	The "rigid_body" attribute is a relative reference to a rigid-body within the same
//	physics_model.
	XsdGoPkgHasAttr_RigidBody_XsdtAnyURI_

}

//	If the W.TxsdRigidConstraintTypeSequenceRefAttachment function is not nil (ie. was set by outside code), calls it with this TxsdRigidConstraintTypeSequenceRefAttachment instance as the single argument. Then calls the Walk() method on 3/4 embed(s) and 0/0 field(s) belonging to this TxsdRigidConstraintTypeSequenceRefAttachment instance.
func (me *TxsdRigidConstraintTypeSequenceRefAttachment) Walk ()  { 
	if fn := W.TxsdRigidConstraintTypeSequenceRefAttachment; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_.Walk()
	me.XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_.Walk()
 }

type XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_ struct {
//	Defines the attachment (to a rigid_body or a node) to be used as the reference-frame.
	RefAttachment *TxsdRigidConstraintTypeSequenceRefAttachment `xml:"http://www.collada.org/2008/03/COLLADASchema ref_attachment"`

}

//	If the W.XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_ instance.
func (me *XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_; fn != nil { fn(me) }
	me.RefAttachment.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type TrigidConstraintType struct {
//	Defines the attachment (to a rigid_body or a node) to be used as the reference-frame.
	XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	Defines an attachment to a rigid-body or a node.
	XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The technique_common element specifies the rigid_constraint information for the common profile
//	which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_

}

//	If the W.TrigidConstraintType function is not nil (ie. was set by outside code), calls it with this TrigidConstraintType instance as the single argument. Then calls the Walk() method on 5/7 embed(s) and 0/0 field(s) belonging to this TrigidConstraintType instance.
func (me *TrigidConstraintType) Walk ()  { 
	if fn := W.TrigidConstraintType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_.Walk()
	me.XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_.Walk()
	me.XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_.Walk()
 }

type XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_ struct {
//	The physics_model may define any number of rigid_constraint elements.
	RigidConstraints []*TrigidConstraintType `xml:"http://www.collada.org/2008/03/COLLADASchema rigid_constraint"`

}

//	If the W.XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_ instance.
func (me *XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_; fn != nil { fn(me) }
	for _, x := range me.RigidConstraints { x.Walk() }
 }

//	The physics_model may define any number of rigid_body elements.
//	This element allows for describing simulated bodies that do not deform. These bodies may or may
//	not be connected by constraints (hinge, ball-joint etc.).  Rigid-bodies, constraints etc. are
//	encapsulated in physics_model elements to allow for instantiating complex models.
//	The technique_common element specifies the rigid_body information for the common profile which all
//	COLLADA implementations need to support.
//	The total mass of the rigid-body
type XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ struct {
//	The total mass of the rigid-body
	Mass *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema mass"`

}

//	If the W.XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_; fn != nil { fn(me) }
	me.Mass.Walk()
 }

//	References a physics_material for the rigid_body.
type XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ struct {
//	References a physics_material for the rigid_body.
	InstancePhysicsMaterial *TinstancePhysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_material"`

}

//	If the W.XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ instance.
func (me *XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_; fn != nil { fn(me) }
	me.InstancePhysicsMaterial.Walk()
 }

//	This element allows for describing components of a rigid_body.
//	Defines a box to use for this shape.
type XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_ struct {
//	Defines a box to use for this shape.
	Box *TboxType `xml:"http://www.collada.org/2008/03/COLLADASchema box"`

}

//	If the W.XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_ instance.
func (me *XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_; fn != nil { fn(me) }
	me.Box.Walk()
 }

//	If true, the mass is distributed along the surface of the shape
type TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow struct {
	XsdGoPkgValue xsdt.Boolean `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow function is not nil (ie. was set by outside code), calls it with this TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow instance.
func (me *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow) Walk ()  { 
	if fn := W.TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ struct {
//	If true, the mass is distributed along the surface of the shape
	Hollow *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow `xml:"http://www.collada.org/2008/03/COLLADASchema hollow"`

}

//	If the W.XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ instance.
func (me *XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_; fn != nil { fn(me) }
	me.Hollow.Walk()
 }

//	Defines a plane to use for this shape.
type XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_ struct {
//	Defines a plane to use for this shape.
	Plane *TplaneType `xml:"http://www.collada.org/2008/03/COLLADASchema plane"`

}

//	If the W.XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_ instance.
func (me *XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_; fn != nil { fn(me) }
	me.Plane.Walk()
 }

//	The density of the shape.
type XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_ struct {
//	The density of the shape.
	Density *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema density"`

}

//	If the W.XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_; fn != nil { fn(me) }
	me.Density.Walk()
 }

//	Defines a physics_material for the shape.
type XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ struct {
//	Defines a physics_material for the shape.
	PhysicsMaterial *TphysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_material"`

}

//	If the W.XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance.
func (me *XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_; fn != nil { fn(me) }
	me.PhysicsMaterial.Walk()
 }

//	References a physics_material for the shape.
type XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ struct {
//	References a physics_material for the shape.
	InstancePhysicsMaterial *TinstancePhysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_material"`

}

//	If the W.XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ instance.
func (me *XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_; fn != nil { fn(me) }
	me.InstancePhysicsMaterial.Walk()
 }

//	The mass of the shape.
type XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ struct {
//	The mass of the shape.
	Mass *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema mass"`

}

//	If the W.XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_; fn != nil { fn(me) }
	me.Mass.Walk()
 }

//	Defines a cyliner to use for this shape.
type XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_ struct {
//	Defines a cyliner to use for this shape.
	Cylinder *TcylinderType `xml:"http://www.collada.org/2008/03/COLLADASchema cylinder"`

}

//	If the W.XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_ instance.
func (me *XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_; fn != nil { fn(me) }
	me.Cylinder.Walk()
 }

//	Defines a capsule to use for this shape.
type XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_ struct {
//	Defines a capsule to use for this shape.
	Capsule *TcapsuleType `xml:"http://www.collada.org/2008/03/COLLADASchema capsule"`

}

//	If the W.XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_ instance.
func (me *XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_; fn != nil { fn(me) }
	me.Capsule.Walk()
 }

//	Defines a sphere to use for this shape.
type XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_ struct {
//	Defines a sphere to use for this shape.
	Sphere *TsphereType `xml:"http://www.collada.org/2008/03/COLLADASchema sphere"`

}

//	If the W.XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_ instance.
func (me *XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_; fn != nil { fn(me) }
	me.Sphere.Walk()
 }

//	Allows a tranformation for the shape.
type XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ struct {
//	Allows a tranformation for the shape.
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

//	Instances a geometry to use to define this shape.
type XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ struct {
//	Instances a geometry to use to define this shape.
	InstanceGeometry *TinstanceGeometryType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_geometry"`

}

//	If the W.XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ instance.
func (me *XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_; fn != nil { fn(me) }
	me.InstanceGeometry.Walk()
 }

//	Allows a tranformation for the shape.
type XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ struct {
//	Allows a tranformation for the shape.
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape struct {
//	Instances a geometry to use to define this shape.
	XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_

//	Allows a tranformation for the shape.
	XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_

//	Defines a box to use for this shape.
	XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_

//	If true, the mass is distributed along the surface of the shape
	XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_

//	Defines a plane to use for this shape.
	XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_

//	The density of the shape.
	XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_

//	Defines a physics_material for the shape.
	XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_

//	References a physics_material for the shape.
	XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_

//	The mass of the shape.
	XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_

//	Defines a cyliner to use for this shape.
	XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_

//	Defines a capsule to use for this shape.
	XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_

//	Defines a sphere to use for this shape.
	XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_

//	Allows a tranformation for the shape.
	XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_

}

//	If the W.TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape function is not nil (ie. was set by outside code), calls it with this TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape instance as the single argument. Then calls the Walk() method on 14/14 embed(s) and 0/0 field(s) belonging to this TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape instance.
func (me *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape) Walk ()  { 
	if fn := W.TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_.Walk()
	me.XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_.Walk()
	me.XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_.Walk()
	me.XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_.Walk()
	me.XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_.Walk()
	me.XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_.Walk()
	me.XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_.Walk()
	me.XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_.Walk()
	me.XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_.Walk()
 }

type XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_ struct {
//	This element allows for describing components of a rigid_body.
	Shapes []*TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape `xml:"http://www.collada.org/2008/03/COLLADASchema shape"`

}

//	If the W.XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_ instance.
func (me *XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_; fn != nil { fn(me) }
	for _, x := range me.Shapes { x.Walk() }
 }

//	If false, the rigid_body is not moveable
type TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic struct {
	XsdGoPkgValue xsdt.Boolean `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic function is not nil (ie. was set by outside code), calls it with this TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic instance.
func (me *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic) Walk ()  { 
	if fn := W.TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_ struct {
//	If false, the rigid_body is not moveable
	Dynamic *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic `xml:"http://www.collada.org/2008/03/COLLADASchema dynamic"`

}

//	If the W.XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_ instance.
func (me *XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_; fn != nil { fn(me) }
	me.Dynamic.Walk()
 }

//	float3 - The diagonal elements of the inertia tensor (moments of inertia), which is represented
//	in the local frame of the center of mass. See above.
type XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_ struct {
//	float3 - The diagonal elements of the inertia tensor (moments of inertia), which is represented
//	in the local frame of the center of mass. See above.
	Inertia *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema inertia"`

}

//	If the W.XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_ instance.
func (me *XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_; fn != nil { fn(me) }
	me.Inertia.Walk()
 }

//	Defines a physics_material for the rigid_body.
type XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ struct {
//	Defines a physics_material for the rigid_body.
	PhysicsMaterial *TphysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_material"`

}

//	If the W.XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance.
func (me *XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_; fn != nil { fn(me) }
	me.PhysicsMaterial.Walk()
 }

//	Defines the center and orientation of mass of the rigid-body relative to the local origin of the
//	"root" shape.This makes the off-diagonal elements of the inertia tensor (products of inertia) all
//	0 and allows us to just store the diagonal elements (moments of inertia).
type XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ struct {
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

type XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ struct {
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

type TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame struct {
	XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_

}

//	If the W.TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame function is not nil (ie. was set by outside code), calls it with this TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame instance.
func (me *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame) Walk ()  { 
	if fn := W.TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_.Walk()
 }

type XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ struct {
//	Defines the center and orientation of mass of the rigid-body relative to the local origin of the
//	"root" shape.This makes the off-diagonal elements of the inertia tensor (products of inertia) all
//	0 and allows us to just store the diagonal elements (moments of inertia).
	MassFrame *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame `xml:"http://www.collada.org/2008/03/COLLADASchema mass_frame"`

}

//	If the W.XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ instance.
func (me *XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_; fn != nil { fn(me) }
	me.MassFrame.Walk()
 }

type TxsdRigidBodyTypeSequenceTechniqueCommon struct {
//	If false, the rigid_body is not moveable
	XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_

//	float3 - The diagonal elements of the inertia tensor (moments of inertia), which is represented
//	in the local frame of the center of mass. See above.
	XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_

//	Defines a physics_material for the rigid_body.
	XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_

//	Defines the center and orientation of mass of the rigid-body relative to the local origin of the
//	"root" shape.This makes the off-diagonal elements of the inertia tensor (products of inertia) all
//	0 and allows us to just store the diagonal elements (moments of inertia).
	XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_

//	The total mass of the rigid-body
	XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_

//	References a physics_material for the rigid_body.
	XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_

//	This element allows for describing components of a rigid_body.
	XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_

}

//	If the W.TxsdRigidBodyTypeSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdRigidBodyTypeSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdRigidBodyTypeSequenceTechniqueCommon instance.
func (me *TxsdRigidBodyTypeSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdRigidBodyTypeSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_.Walk()
	me.XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_.Walk()
	me.XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_.Walk()
	me.XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_.Walk()
	me.XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_.Walk()
	me.XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_.Walk()
	me.XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the rigid_body information for the common profile which all
//	COLLADA implementations need to support.
	TechniqueCommon *TxsdRigidBodyTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type TrigidBodyType struct {
//	The technique_common element specifies the rigid_body information for the common profile which all
//	COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TrigidBodyType function is not nil (ie. was set by outside code), calls it with this TrigidBodyType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TrigidBodyType instance.
func (me *TrigidBodyType) Walk ()  { 
	if fn := W.TrigidBodyType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_.Walk()
	me.XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_.Walk()
 }

type XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_ struct {
//	The physics_model may define any number of rigid_body elements.
	RigidBodies []*TrigidBodyType `xml:"http://www.collada.org/2008/03/COLLADASchema rigid_body"`

}

//	If the W.XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_ instance.
func (me *XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_; fn != nil { fn(me) }
	for _, x := range me.RigidBodies { x.Walk() }
 }

//	The physics_model element may contain an asset element.
type XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_ struct {
//	The physics_model element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TphysicsModelType struct {
//	The physics_model may define any number of rigid_body elements.
	XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_

//	The physics_model element may contain an asset element.
	XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_

//	The physics_model may instance any number of other physics_model elements.
	XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_

//	The physics_model may define any number of rigid_constraint elements.
	XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_

}

//	If the W.TphysicsModelType function is not nil (ie. was set by outside code), calls it with this TphysicsModelType instance as the single argument. Then calls the Walk() method on 5/7 embed(s) and 0/0 field(s) belonging to this TphysicsModelType instance.
func (me *TphysicsModelType) Walk ()  { 
	if fn := W.TphysicsModelType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_.Walk()
	me.XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_.Walk()
	me.XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_.Walk()
	me.XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_ struct {
//	There must be at least one physics_model element.
	PhysicsModels []*TphysicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_model"`

}

//	If the W.XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_ instance.
func (me *XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsModels { x.Walk() }
 }

type TlibraryPhysicsModelsType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The library_physics_models element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_

//	There must be at least one physics_model element.
	XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_

}

//	If the W.TlibraryPhysicsModelsType function is not nil (ie. was set by outside code), calls it with this TlibraryPhysicsModelsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryPhysicsModelsType instance.
func (me *TlibraryPhysicsModelsType) Walk ()  { 
	if fn := W.TlibraryPhysicsModelsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_ struct {
//	The COLLADA element may contain any
//	number of library_physics_models
//	elements.
	PhysicsModelsLibraries []*TlibraryPhysicsModelsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_physics_models"`

}

//	If the W.XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_ instance.
func (me *XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsModelsLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_images elements.
//	The library_images element declares a module of image elements.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one image element.
//	The image element may contain an asset element.
type XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_ struct {
//	The image element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	Initialize a custom 2d image
//	Image size should be relative to the size of the viewport.  Ex 1,1 is the same size as the viewport.  0.5,0.5 is 1/2 the size of the viewport
type XsdGoPkgHasAttr_Height_XsdtFloat_ struct {
	Height xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema height,attr"`

}

type XsdGoPkgHasAttr_Width_XsdtFloat_ struct {
	Width xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema width,attr"`

}

type TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio struct {
	XsdGoPkgHasAttr_Width_XsdtFloat_

	XsdGoPkgHasAttr_Height_XsdtFloat_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio instance.
func (me *TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_ struct {
//	Image size should be relative to the size of the viewport.  Ex 1,1 is the same size as the viewport.  0.5,0.5 is 1/2 the size of the viewport
	SizeRatio *TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio `xml:"http://www.collada.org/2008/03/COLLADASchema size_ratio"`

}

//	If the W.XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_ instance.
func (me *XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_; fn != nil { fn(me) }
	me.SizeRatio.Walk()
 }

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
type XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0 struct {
	ArrayIndex xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema array_index,attr"`

}

//	Returns the default value for ArrayIndex -- 0
func (me XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0) ArrayIndexDefault () xsdt.UnsignedInt { return xsdt.UnsignedInt(0) }

type XsdGoPkgHasAttr_MipIndex_XsdtUnsignedInt_ struct {
	MipIndex xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema mip_index,attr"`

}

//	The data element contains a sequence of hexadecimal encoded binary octets representing the embedded image data.  The format attribute is use the determine which codec decodes the image's descriptions and data.
type TxsdImageSourceTypeChoiceHex struct {
	XsdGoPkgValue TlistOfHexBinaryType `xml:",chardata"`

//	The format attribute is a text string value that indicates the image format.  Examples include "DDS", "EXR", "BMP", "JPG", and "PNG".  Note that all of these formats have internal descriptors of size, bpp, etc.
	XsdGoPkgHasAttr_Format_XsdtToken_

}

//	If the W.TxsdImageSourceTypeChoiceHex function is not nil (ie. was set by outside code), calls it with this TxsdImageSourceTypeChoiceHex instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/1 field(s) belonging to this TxsdImageSourceTypeChoiceHex instance.
func (me *TxsdImageSourceTypeChoiceHex) Walk ()  { 
	if fn := W.TxsdImageSourceTypeChoiceHex; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_ struct {
//	The data element contains a sequence of hexadecimal encoded binary octets representing the embedded image data.  The format attribute is use the determine which codec decodes the image's descriptions and data.
	Hex *TxsdImageSourceTypeChoiceHex `xml:"http://www.collada.org/2008/03/COLLADASchema hex"`

}

//	If the W.XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_ instance.
func (me *XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_; fn != nil { fn(me) }
	me.Hex.Walk()
 }

//	Initialize purely from a file.  Assume the characteristics of the file.  If it is a complex format like DDS this may include cube maps, volumes,  mips, etc.
type XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_ struct {
//	Initialize purely from a file.  Assume the characteristics of the file.  If it is a complex format like DDS this may include cube maps, volumes,  mips, etc.
	Ref xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

//	If the W.XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_ instance.
func (me *XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_; fn != nil { fn(me) }
 }

type TimageSourceType struct {
//	The data element contains a sequence of hexadecimal encoded binary octets representing the embedded image data.  The format attribute is use the determine which codec decodes the image's descriptions and data.
	XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_

//	Initialize purely from a file.  Assume the characteristics of the file.  If it is a complex format like DDS this may include cube maps, volumes,  mips, etc.
	XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_

}

//	If the W.TimageSourceType function is not nil (ie. was set by outside code), calls it with this TimageSourceType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TimageSourceType instance.
func (me *TimageSourceType) Walk ()  { 
	if fn := W.TimageSourceType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_.Walk()
	me.XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_.Walk()
 }

type TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom struct {
	XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0

	XsdGoPkgHasAttr_MipIndex_XsdtUnsignedInt_

	TimageSourceType

}

//	If the W.TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom instance.
func (me *TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom; fn != nil { fn(me) }
	me.TimageSourceType.Walk()
 }

type XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_ struct {
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	InitFroms []*TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom `xml:"http://www.collada.org/2008/03/COLLADASchema init_from"`

}

//	If the W.XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_ instance.
func (me *XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_; fn != nil { fn(me) }
	for _, x := range me.InitFroms { x.Walk() }
 }

//	Unnormalized addressing of texels.  (0-W, 0-H).  This cannot be used with mips since the addressing is not uniform per level.  This is equivilant to OpenGL textureRECT extension.
type XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_ struct {
//	Unnormalized addressing of texels.  (0-W, 0-H).  This cannot be used with mips since the addressing is not uniform per level.  This is equivilant to OpenGL textureRECT extension.
	Unnormalized xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema unnormalized"`

}

//	If the W.XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_ instance.
func (me *XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_; fn != nil { fn(me) }
 }

//	The surface should be sized to these exact dimensions
type XsdGoPkgHasAttr_Height_XsdtUnsignedInt_ struct {
	Height xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema height,attr"`

}

type XsdGoPkgHasAttr_Width_XsdtUnsignedInt_ struct {
	Width xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema width,attr"`

}

type TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact struct {
	XsdGoPkgHasAttr_Height_XsdtUnsignedInt_

	XsdGoPkgHasAttr_Width_XsdtUnsignedInt_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact instance.
func (me *TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_ struct {
//	The surface should be sized to these exact dimensions
	SizeExact *TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact `xml:"http://www.collada.org/2008/03/COLLADASchema size_exact"`

}

//	If the W.XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_ instance.
func (me *XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_; fn != nil { fn(me) }
	me.SizeExact.Walk()
 }

//	regenerate the mipmaps based on information loaded into mip0
type XsdGoPkgHasAttr_AutoGenerate_XsdtBoolean_ struct {
//	regenerate the mipmaps based on information loaded into mip0
	AutoGenerate xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema auto_generate,attr"`

}

//	Zero is max levels = 1 + floor(log2(max(w, h, d)))
//	in both OpenGL and DirectX.  One is no mips.
type XsdGoPkgHasAttr_Levels_XsdtUnsignedInt_ struct {
//	Zero is max levels = 1 + floor(log2(max(w, h, d)))
//	in both OpenGL and DirectX.  One is no mips.
	Levels xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema levels,attr"`

}

type TimageMipsType struct {
//	regenerate the mipmaps based on information loaded into mip0
	XsdGoPkgHasAttr_AutoGenerate_XsdtBoolean_

//	Zero is max levels = 1 + floor(log2(max(w, h, d)))
//	in both OpenGL and DirectX.  One is no mips.
	XsdGoPkgHasAttr_Levels_XsdtUnsignedInt_

}

//	If the W.TimageMipsType function is not nil (ie. was set by outside code), calls it with this TimageMipsType instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TimageMipsType instance.
func (me *TimageMipsType) Walk ()  { 
	if fn := W.TimageMipsType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_ struct {
	Mips *TimageMipsType `xml:"http://www.collada.org/2008/03/COLLADASchema mips"`

}

//	If the W.XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_ instance.
func (me *XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_; fn != nil { fn(me) }
	me.Mips.Walk()
 }

//	If not present it is assumed to be R8G8B8A8 linear.
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
type XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_ struct {
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	Exact xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema exact"`

}

//	If the W.XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_ instance.
func (me *XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_; fn != nil { fn(me) }
 }

//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
type TimageFormatHintPrecisionEnum xsdt.String

//	Since TimageFormatHintPrecisionEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TimageFormatHintPrecisionEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TimageFormatHintPrecisionEnum is just a simple String type, this merely returns the current string value.
func (me TimageFormatHintPrecisionEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "DEFAULT".
func (me TimageFormatHintPrecisionEnum) IsDefault () bool { return me == "DEFAULT" }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "LOW".
func (me TimageFormatHintPrecisionEnum) IsLow () bool { return me == "LOW" }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "MID".
func (me TimageFormatHintPrecisionEnum) IsMid () bool { return me == "MID" }

//	This convenience method just performs a simple type conversion to TimageFormatHintPrecisionEnum's alias type xsdt.String.
func (me TimageFormatHintPrecisionEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "MAX".
func (me TimageFormatHintPrecisionEnum) IsMax () bool { return me == "MAX" }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "HIGH".
func (me TimageFormatHintPrecisionEnum) IsHigh () bool { return me == "HIGH" }

type XsdGoPkgHasAttr_Precision_TimageFormatHintPrecisionEnum_Default struct {
//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
	Precision TimageFormatHintPrecisionEnum `xml:"http://www.collada.org/2008/03/COLLADASchema precision,attr"`

}

//	Returns the default value for Precision -- "DEFAULT"
func (me XsdGoPkgHasAttr_Precision_TimageFormatHintPrecisionEnum_Default) PrecisionDefault () TimageFormatHintPrecisionEnum { return TimageFormatHintPrecisionEnum("DEFAULT") }

//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
type TimageFormatHintRangeEnum xsdt.String

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "UNORM".
func (me TimageFormatHintRangeEnum) IsUnorm () bool { return me == "UNORM" }

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "UINT".
func (me TimageFormatHintRangeEnum) IsUint () bool { return me == "UINT" }

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "SINT".
func (me TimageFormatHintRangeEnum) IsSint () bool { return me == "SINT" }

//	Since TimageFormatHintRangeEnum is just a simple String type, this merely returns the current string value.
func (me TimageFormatHintRangeEnum) String () string { return xsdt.String(me).String() }

//	Since TimageFormatHintRangeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TimageFormatHintRangeEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "SNORM".
func (me TimageFormatHintRangeEnum) IsSnorm () bool { return me == "SNORM" }

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "FLOAT".
func (me TimageFormatHintRangeEnum) IsFloat () bool { return me == "FLOAT" }

//	This convenience method just performs a simple type conversion to TimageFormatHintRangeEnum's alias type xsdt.String.
func (me TimageFormatHintRangeEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasAttr_Range_TimageFormatHintRangeEnum_ struct {
//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
	Range TimageFormatHintRangeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema range,attr"`

}

//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
type TimageFormatHintChannelsEnum xsdt.String

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "RGB".
func (me TimageFormatHintChannelsEnum) IsRgb () bool { return me == "RGB" }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "RGBE".
func (me TimageFormatHintChannelsEnum) IsRgbe () bool { return me == "RGBE" }

//	Since TimageFormatHintChannelsEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TimageFormatHintChannelsEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "RGBA".
func (me TimageFormatHintChannelsEnum) IsRgba () bool { return me == "RGBA" }

//	This convenience method just performs a simple type conversion to TimageFormatHintChannelsEnum's alias type xsdt.String.
func (me TimageFormatHintChannelsEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "LA".
func (me TimageFormatHintChannelsEnum) IsLa () bool { return me == "LA" }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "L".
func (me TimageFormatHintChannelsEnum) IsL () bool { return me == "L" }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "D".
func (me TimageFormatHintChannelsEnum) IsD () bool { return me == "D" }

//	Since TimageFormatHintChannelsEnum is just a simple String type, this merely returns the current string value.
func (me TimageFormatHintChannelsEnum) String () string { return xsdt.String(me).String() }

type XsdGoPkgHasAttr_Channels_TimageFormatHintChannelsEnum_ struct {
//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
	Channels TimageFormatHintChannelsEnum `xml:"http://www.collada.org/2008/03/COLLADASchema channels,attr"`

}

//	linear(default), sRGB
type XsdGoPkgHasAttr_Space_XsdtToken_ struct {
//	linear(default), sRGB
	Space xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema space,attr"`

}

type TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint struct {
//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
	XsdGoPkgHasAttr_Precision_TimageFormatHintPrecisionEnum_Default

//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
	XsdGoPkgHasAttr_Range_TimageFormatHintRangeEnum_

//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
	XsdGoPkgHasAttr_Channels_TimageFormatHintChannelsEnum_

//	linear(default), sRGB
	XsdGoPkgHasAttr_Space_XsdtToken_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint instance.
func (me *TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_ struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	Hint *TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint `xml:"http://www.collada.org/2008/03/COLLADASchema hint"`

}

//	If the W.XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_ instance.
func (me *XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_; fn != nil { fn(me) }
	me.Hint.Walk()
 }

type TxsdImageTypeSequenceChoiceCreate2DSequenceFormat struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_

//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate2DSequenceFormat function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate2DSequenceFormat instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate2DSequenceFormat instance.
func (me *TxsdImageTypeSequenceChoiceCreate2DSequenceFormat) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate2DSequenceFormat; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_.Walk()
	me.XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_.Walk()
 }

type XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_ struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	Format *TxsdImageTypeSequenceChoiceCreate2DSequenceFormat `xml:"http://www.collada.org/2008/03/COLLADASchema format"`

}

//	If the W.XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_ instance.
func (me *XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_; fn != nil { fn(me) }
	me.Format.Walk()
 }

type TxsdImageTypeSequenceChoiceCreate2DSequenceArray struct {
	XsdGoPkgHasAttr_Length_XsdtPositiveInteger_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate2DSequenceArray function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate2DSequenceArray instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate2DSequenceArray instance.
func (me *TxsdImageTypeSequenceChoiceCreate2DSequenceArray) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate2DSequenceArray; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_ struct {
	Array *TxsdImageTypeSequenceChoiceCreate2DSequenceArray `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	If the W.XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_ instance.
func (me *XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_; fn != nil { fn(me) }
	me.Array.Walk()
 }

type TxsdImageTypeSequenceChoiceCreate2D struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_

	XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_

//	sizing
//	Image size should be relative to the size of the viewport.  Ex 1,1 is the same size as the viewport.  0.5,0.5 is 1/2 the size of the viewport
	XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_

//	mips and texel addressing
//	Unnormalized addressing of texels.  (0-W, 0-H).  This cannot be used with mips since the addressing is not uniform per level.  This is equivilant to OpenGL textureRECT extension.
	XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_

//	sizing
//	The surface should be sized to these exact dimensions
	XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_

//	mips and texel addressing
	XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate2D function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate2D instance as the single argument. Then calls the Walk() method on 7/7 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate2D instance.
func (me *TxsdImageTypeSequenceChoiceCreate2D) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate2D; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_.Walk()
	me.XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_.Walk()
	me.XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_.Walk()
	me.XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_.Walk()
	me.XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_.Walk()
	me.XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_.Walk()
	me.XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_.Walk()
 }

type XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_ struct {
//	Initialize a custom 2d image
	Create2D *TxsdImageTypeSequenceChoiceCreate2D `xml:"http://www.collada.org/2008/03/COLLADASchema create_2d"`

}

//	If the W.XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_ instance.
func (me *XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_; fn != nil { fn(me) }
	me.Create2D.Walk()
 }

//	This image is renderable  if this element is used
//	As a render target, true = shared across all users, false = unique per instance
type XsdGoPkgHasAttr_Share_XsdtBoolean_ struct {
//	As a render target, true = shared across all users, false = unique per instance
	Share xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema share,attr"`

}

type TxsdImageTypeSequenceRenderable struct {
//	As a render target, true = shared across all users, false = unique per instance
	XsdGoPkgHasAttr_Share_XsdtBoolean_

}

//	If the W.TxsdImageTypeSequenceRenderable function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceRenderable instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceRenderable instance.
func (me *TxsdImageTypeSequenceRenderable) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceRenderable; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_ struct {
//	This image is renderable  if this element is used
	Renderable *TxsdImageTypeSequenceRenderable `xml:"http://www.collada.org/2008/03/COLLADASchema renderable"`

}

//	If the W.XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_ instance.
func (me *XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_; fn != nil { fn(me) }
	me.Renderable.Walk()
 }

//	Initialize a custom 3d image
//	Zero is not an array
type XsdGoPkgHasAttr_Length_XsdtUnsignedInt_ struct {
//	Zero is not an array
	Length xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema length,attr"`

}

type TxsdImageTypeSequenceChoiceCreate3DSequenceArray struct {
//	Zero is not an array
	XsdGoPkgHasAttr_Length_XsdtUnsignedInt_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate3DSequenceArray function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate3DSequenceArray instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate3DSequenceArray instance.
func (me *TxsdImageTypeSequenceChoiceCreate3DSequenceArray) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate3DSequenceArray; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_ struct {
	Array *TxsdImageTypeSequenceChoiceCreate3DSequenceArray `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	If the W.XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_ instance.
func (me *XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_; fn != nil { fn(me) }
	me.Array.Walk()
 }

//	If not present it is assumed to be R8G8B8A8 linear.
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
type XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_ struct {
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	Exact xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema exact"`

}

//	If the W.XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_ instance.
func (me *XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_; fn != nil { fn(me) }
 }

//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
type TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint struct {
//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
	XsdGoPkgHasAttr_Precision_TimageFormatHintPrecisionEnum_Default

//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
	XsdGoPkgHasAttr_Range_TimageFormatHintRangeEnum_

//	linear(default), sRGB
	XsdGoPkgHasAttr_Space_XsdtToken_

//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
	XsdGoPkgHasAttr_Channels_TimageFormatHintChannelsEnum_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint instance.
func (me *TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_ struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	Hint *TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint `xml:"http://www.collada.org/2008/03/COLLADASchema hint"`

}

//	If the W.XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_ instance.
func (me *XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_; fn != nil { fn(me) }
	me.Hint.Walk()
 }

type TxsdImageTypeSequenceChoiceCreate3DSequenceFormat struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_

//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate3DSequenceFormat function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate3DSequenceFormat instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate3DSequenceFormat instance.
func (me *TxsdImageTypeSequenceChoiceCreate3DSequenceFormat) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate3DSequenceFormat; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_.Walk()
	me.XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_.Walk()
 }

type XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_ struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	Format *TxsdImageTypeSequenceChoiceCreate3DSequenceFormat `xml:"http://www.collada.org/2008/03/COLLADASchema format"`

}

//	If the W.XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_ instance.
func (me *XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_; fn != nil { fn(me) }
	me.Format.Walk()
 }

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
type XsdGoPkgHasAttr_Depth_XsdtUnsignedInt_ struct {
	Depth xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema depth,attr"`

}

type TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom struct {
	TimageSourceType

	XsdGoPkgHasAttr_Depth_XsdtUnsignedInt_

	XsdGoPkgHasAttr_MipIndex_XsdtUnsignedInt_

	XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0

}

//	If the W.TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom instance.
func (me *TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom; fn != nil { fn(me) }
	me.TimageSourceType.Walk()
 }

type XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_ struct {
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	InitFroms []*TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom `xml:"http://www.collada.org/2008/03/COLLADASchema init_from"`

}

//	If the W.XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_ instance.
func (me *XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_; fn != nil { fn(me) }
	for _, x := range me.InitFroms { x.Walk() }
 }

type XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_ struct {
	Mips *TimageMipsType `xml:"http://www.collada.org/2008/03/COLLADASchema mips"`

}

//	If the W.XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_ instance.
func (me *XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_; fn != nil { fn(me) }
	me.Mips.Walk()
 }

//	The surface should be sized to these exact dimensions
type TxsdImageTypeSequenceChoiceCreate3DSequenceSize struct {
	XsdGoPkgHasAttr_Depth_XsdtUnsignedInt_

	XsdGoPkgHasAttr_Height_XsdtUnsignedInt_

	XsdGoPkgHasAttr_Width_XsdtUnsignedInt_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate3DSequenceSize function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate3DSequenceSize instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate3DSequenceSize instance.
func (me *TxsdImageTypeSequenceChoiceCreate3DSequenceSize) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate3DSequenceSize; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_ struct {
//	The surface should be sized to these exact dimensions
	Size *TxsdImageTypeSequenceChoiceCreate3DSequenceSize `xml:"http://www.collada.org/2008/03/COLLADASchema size"`

}

//	If the W.XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_ instance.
func (me *XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_; fn != nil { fn(me) }
	me.Size.Walk()
 }

type TxsdImageTypeSequenceChoiceCreate3D struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_

	XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_

//	The surface should be sized to these exact dimensions
	XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_

	XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_

}

//	If the W.TxsdImageTypeSequenceChoiceCreate3D function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreate3D instance as the single argument. Then calls the Walk() method on 5/5 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreate3D instance.
func (me *TxsdImageTypeSequenceChoiceCreate3D) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreate3D; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_.Walk()
	me.XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_.Walk()
	me.XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_.Walk()
	me.XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_.Walk()
	me.XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_.Walk()
 }

type XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_ struct {
//	Initialize a custom 3d image
	Create3D *TxsdImageTypeSequenceChoiceCreate3D `xml:"http://www.collada.org/2008/03/COLLADASchema create_3d"`

}

//	If the W.XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_ instance.
func (me *XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_; fn != nil { fn(me) }
	me.Create3D.Walk()
 }

//	Initialize a custom cube image
type XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_ struct {
	Mips *TimageMipsType `xml:"http://www.collada.org/2008/03/COLLADASchema mips"`

}

//	If the W.XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_ instance.
func (me *XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_; fn != nil { fn(me) }
	me.Mips.Walk()
 }

type TxsdImageTypeSequenceChoiceCreateCubeSequenceArray struct {
//	Zero is not an array
	XsdGoPkgHasAttr_Length_XsdtUnsignedInt_

}

//	If the W.TxsdImageTypeSequenceChoiceCreateCubeSequenceArray function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreateCubeSequenceArray instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreateCubeSequenceArray instance.
func (me *TxsdImageTypeSequenceChoiceCreateCubeSequenceArray) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreateCubeSequenceArray; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_ struct {
	Array *TxsdImageTypeSequenceChoiceCreateCubeSequenceArray `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	If the W.XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_ instance.
func (me *XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_; fn != nil { fn(me) }
	me.Array.Walk()
 }

//	If not present it is assumed to be R8G8B8A8 linear.
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
type XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_ struct {
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	Exact xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema exact"`

}

//	If the W.XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_ instance.
func (me *XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_; fn != nil { fn(me) }
 }

//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
type TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint struct {
//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
	XsdGoPkgHasAttr_Range_TimageFormatHintRangeEnum_

//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
	XsdGoPkgHasAttr_Channels_TimageFormatHintChannelsEnum_

//	linear(default), sRGB
	XsdGoPkgHasAttr_Space_XsdtToken_

//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
	XsdGoPkgHasAttr_Precision_TimageFormatHintPrecisionEnum_Default

}

//	If the W.TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint instance.
func (me *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_ struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	Hint *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint `xml:"http://www.collada.org/2008/03/COLLADASchema hint"`

}

//	If the W.XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_ instance.
func (me *XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_; fn != nil { fn(me) }
	me.Hint.Walk()
 }

type TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_

//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_

}

//	If the W.TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat instance.
func (me *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_.Walk()
	me.XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_.Walk()
 }

type XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_ struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	Format *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat `xml:"http://www.collada.org/2008/03/COLLADASchema format"`

}

//	If the W.XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_ instance.
func (me *XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_; fn != nil { fn(me) }
	me.Format.Walk()
 }

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
type XsdGoPkgHasAttr_Face_TimageFaceEnum_ struct {
	Face TimageFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema face,attr"`

}

type TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom struct {
	XsdGoPkgHasAttr_MipIndex_XsdtUnsignedInt_

	XsdGoPkgHasAttr_Face_TimageFaceEnum_

	TimageSourceType

	XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0

}

//	If the W.TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom instance.
func (me *TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom; fn != nil { fn(me) }
	me.TimageSourceType.Walk()
 }

type XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_ struct {
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	InitFroms []*TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom `xml:"http://www.collada.org/2008/03/COLLADASchema init_from"`

}

//	If the W.XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_ instance.
func (me *XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_; fn != nil { fn(me) }
	for _, x := range me.InitFroms { x.Walk() }
 }

//	The surface should be sized to these exact dimensions
type TxsdImageTypeSequenceChoiceCreateCubeSequenceSize struct {
	XsdGoPkgHasAttr_Width_XsdtUnsignedInt_

}

//	If the W.TxsdImageTypeSequenceChoiceCreateCubeSequenceSize function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreateCubeSequenceSize instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreateCubeSequenceSize instance.
func (me *TxsdImageTypeSequenceChoiceCreateCubeSequenceSize) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreateCubeSequenceSize; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_ struct {
//	The surface should be sized to these exact dimensions
	Size *TxsdImageTypeSequenceChoiceCreateCubeSequenceSize `xml:"http://www.collada.org/2008/03/COLLADASchema size"`

}

//	If the W.XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_ instance.
func (me *XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_; fn != nil { fn(me) }
	me.Size.Walk()
 }

type TxsdImageTypeSequenceChoiceCreateCube struct {
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_

//	The surface should be sized to these exact dimensions
	XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_

	XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_

	XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_

//	If not present it is assumed to be R8G8B8A8 linear.
	XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_

}

//	If the W.TxsdImageTypeSequenceChoiceCreateCube function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceCreateCube instance as the single argument. Then calls the Walk() method on 5/5 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceCreateCube instance.
func (me *TxsdImageTypeSequenceChoiceCreateCube) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceCreateCube; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_.Walk()
	me.XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_.Walk()
	me.XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_.Walk()
	me.XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_.Walk()
	me.XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_.Walk()
 }

type XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_ struct {
//	Initialize a custom cube image
	CreateCube *TxsdImageTypeSequenceChoiceCreateCube `xml:"http://www.collada.org/2008/03/COLLADASchema create_cube"`

}

//	If the W.XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_ instance.
func (me *XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_; fn != nil { fn(me) }
	me.CreateCube.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	initialize the whole image structure and data from formats like DDS
//	If true, unless mips already exist in data, generate the mipmaps based on information loaded into mip0,
type XsdGoPkgHasAttr_MipsGenerate_XsdtBoolean_True struct {
//	If true, unless mips already exist in data, generate the mipmaps based on information loaded into mip0,
	MipsGenerate xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema mips_generate,attr"`

}

//	Returns the default value for MipsGenerate -- true
func (me XsdGoPkgHasAttr_MipsGenerate_XsdtBoolean_True) MipsGenerateDefault () xsdt.Boolean { return xsdt.Boolean(true) }

type TxsdImageTypeSequenceChoiceInitFrom struct {
//	If true, unless mips already exist in data, generate the mipmaps based on information loaded into mip0,
	XsdGoPkgHasAttr_MipsGenerate_XsdtBoolean_True

	TimageSourceType

}

//	If the W.TxsdImageTypeSequenceChoiceInitFrom function is not nil (ie. was set by outside code), calls it with this TxsdImageTypeSequenceChoiceInitFrom instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TxsdImageTypeSequenceChoiceInitFrom instance.
func (me *TxsdImageTypeSequenceChoiceInitFrom) Walk ()  { 
	if fn := W.TxsdImageTypeSequenceChoiceInitFrom; fn != nil { fn(me) }
	me.TimageSourceType.Walk()
 }

type XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_ struct {
//	initialize the whole image structure and data from formats like DDS
	InitFrom *TxsdImageTypeSequenceChoiceInitFrom `xml:"http://www.collada.org/2008/03/COLLADASchema init_from"`

}

//	If the W.XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_ instance.
func (me *XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_; fn != nil { fn(me) }
	me.InitFrom.Walk()
 }

type TimageType struct {
//	The image element may contain an asset element.
	XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	sub identifier
	XsdGoPkgHasAttr_Sid_TsidType_

//	Initialize a custom 2d image
	XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_

//	This image is renderable  if this element is used
	XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	Initialize a custom 3d image
	XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_

//	Initialize a custom cube image
	XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_

//	initialize the whole image structure and data from formats like DDS
	XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_

}

//	If the W.TimageType function is not nil (ie. was set by outside code), calls it with this TimageType instance as the single argument. Then calls the Walk() method on 7/10 embed(s) and 0/0 field(s) belonging to this TimageType instance.
func (me *TimageType) Walk ()  { 
	if fn := W.TimageType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_.Walk()
	me.XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_.Walk()
	me.XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_.Walk()
	me.XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_.Walk()
	me.XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_.Walk()
	me.XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_ struct {
//	There must be at least one image element.
	Images []*TimageType `xml:"http://www.collada.org/2008/03/COLLADASchema image"`

}

//	If the W.XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_ instance.
func (me *XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_; fn != nil { fn(me) }
	for _, x := range me.Images { x.Walk() }
 }

//	The library_images element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_ struct {
//	The library_images element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TlibraryImagesType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_

//	There must be at least one image element.
	XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The library_images element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_

}

//	If the W.TlibraryImagesType function is not nil (ie. was set by outside code), calls it with this TlibraryImagesType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryImagesType instance.
func (me *TlibraryImagesType) Walk ()  { 
	if fn := W.TlibraryImagesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_.Walk()
 }

type XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_ struct {
//	The COLLADA element may contain any
//	number of library_images elements.
	ImagesLibraries []*TlibraryImagesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_images"`

}

//	If the W.XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_ instance.
func (me *XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_; fn != nil { fn(me) }
	for _, x := range me.ImagesLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_force_fields elements.
//	The library_force_fields element declares a module of force_field elements.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one force_field element.
//	A general container for force-fields. At the moment, it only has techniques and extra elements.
//	The force_field element may contain an asset element.
type XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_ struct {
//	The force_field element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	This element must contain at least one non-common profile technique.
type XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_ struct {
//	This element must contain at least one non-common profile technique.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TforceFieldType struct {
//	The force_field element may contain an asset element.
	XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_

//	This element must contain at least one non-common profile technique.
	XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TforceFieldType function is not nil (ie. was set by outside code), calls it with this TforceFieldType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TforceFieldType instance.
func (me *TforceFieldType) Walk ()  { 
	if fn := W.TforceFieldType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_.Walk()
 }

type XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_ struct {
//	There must be at least one force_field element.
	ForceFields []*TforceFieldType `xml:"http://www.collada.org/2008/03/COLLADASchema force_field"`

}

//	If the W.XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_ instance.
func (me *XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_; fn != nil { fn(me) }
	for _, x := range me.ForceFields { x.Walk() }
 }

//	The library_force_fields element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_ struct {
//	The library_force_fields element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TlibraryForceFieldsType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	There must be at least one force_field element.
	XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_

//	The library_force_fields element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_

}

//	If the W.TlibraryForceFieldsType function is not nil (ie. was set by outside code), calls it with this TlibraryForceFieldsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryForceFieldsType instance.
func (me *TlibraryForceFieldsType) Walk ()  { 
	if fn := W.TlibraryForceFieldsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_.Walk()
 }

type XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_ struct {
//	The COLLADA element may contain any
//	number of library_force_fields elements.
	ForceFieldsLibraries []*TlibraryForceFieldsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_force_fields"`

}

//	If the W.XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_ instance.
func (me *XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_; fn != nil { fn(me) }
	for _, x := range me.ForceFieldsLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_materials elements.
//	The library_physics_materials element declares a module of physics_material elements.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one physics_material element.
type XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_ struct {
//	There must be at least one physics_material element.
	PhysicsMaterials []*TphysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_material"`

}

//	If the W.XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_ instance.
func (me *XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsMaterials { x.Walk() }
 }

//	The library_physics_materials element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_ struct {
//	The library_physics_materials element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TlibraryPhysicsMaterialsType struct {
//	The library_physics_materials element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_

//	There must be at least one physics_material element.
	XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TlibraryPhysicsMaterialsType function is not nil (ie. was set by outside code), calls it with this TlibraryPhysicsMaterialsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryPhysicsMaterialsType instance.
func (me *TlibraryPhysicsMaterialsType) Walk ()  { 
	if fn := W.TlibraryPhysicsMaterialsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_ struct {
//	The COLLADA element may contain any
//	number of library_materials elements.
	PhysicsMaterialsLibraries []*TlibraryPhysicsMaterialsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_physics_materials"`

}

//	If the W.XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_ instance.
func (me *XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsMaterialsLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_animation_clips
//	elements.
//	The library_animation_clips element declares a module of animation_clip elements.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one animation_clip element.
//	The animation_clip element defines a section of the animation curves to be used together as
//	an animation clip.
//	The animation_clip element may contain an asset element.
type XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_ struct {
//	The animation_clip element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The start attribute is the time in seconds of the beginning of the clip.  This time is
//	the same as that used in the key-frame data and is used to determine which set of
//	key-frames will be included in the clip.  The start time does not specify when the clip
//	will be played.  If the time falls between two keyframes of a referenced animation, an
//	interpolated value should be used.  The default value is 0.0.  Optional attribute.
type XsdGoPkgHasAttr_Start_TfloatType_00 struct {
//	The start attribute is the time in seconds of the beginning of the clip.  This time is
//	the same as that used in the key-frame data and is used to determine which set of
//	key-frames will be included in the clip.  The start time does not specify when the clip
//	will be played.  If the time falls between two keyframes of a referenced animation, an
//	interpolated value should be used.  The default value is 0.0.  Optional attribute.
	Start TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema start,attr"`

}

//	Returns the default value for Start -- 0.0
func (me XsdGoPkgHasAttr_Start_TfloatType_00) StartDefault () TfloatType { return TfloatType(0.0) }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The animation_clip must instance at least one animation element.
type XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_ struct {
//	The animation_clip must instance at least one animation element.
	AnimationInstances []*TinstanceWithExtraType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_animation"`

}

//	If the W.XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_ instance.
func (me *XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_; fn != nil { fn(me) }
	for _, x := range me.AnimationInstances { x.Walk() }
 }

//	The end attribute is the time in seconds of the end of the clip.  This is used in the
//	same way as the start time.  If end is not specified, the value is taken to be the end
//	time of the longest animation.  Optional attribute.
type XsdGoPkgHasAttr_End_TfloatType_ struct {
//	The end attribute is the time in seconds of the end of the clip.  This is used in the
//	same way as the start time.  If end is not specified, the value is taken to be the end
//	time of the longest animation.  Optional attribute.
	End TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema end,attr"`

}

type XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_ struct {
	Sidref TsidrefType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF"`

}

//	If the W.XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_ instance.
func (me *XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ struct {
	ConnectParam *TkinematicsConnectParamType `xml:"http://www.collada.org/2008/03/COLLADASchema connect_param"`

}

//	If the W.XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ instance.
func (me *XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_; fn != nil { fn(me) }
	me.ConnectParam.Walk()
 }

type XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type TformulaSetparamType struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

	XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

}

//	If the W.TformulaSetparamType function is not nil (ie. was set by outside code), calls it with this TformulaSetparamType instance as the single argument. Then calls the Walk() method on 5/6 embed(s) and 0/0 field(s) belonging to this TformulaSetparamType instance.
func (me *TformulaSetparamType) Walk ()  { 
	if fn := W.TformulaSetparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_.Walk()
	me.XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_.Walk()
	me.XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_.Walk()
 }

type XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_ struct {
	Setparams []*TformulaSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_ instance.
func (me *XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

type TinstanceFormulaType struct {
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_

}

//	If the W.TinstanceFormulaType function is not nil (ie. was set by outside code), calls it with this TinstanceFormulaType instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TinstanceFormulaType instance.
func (me *TinstanceFormulaType) Walk ()  { 
	if fn := W.TinstanceFormulaType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_.Walk()
 }

type XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_ struct {
	FormulaInstances []*TinstanceFormulaType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_formula"`

}

//	If the W.XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_ instance.
func (me *XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_; fn != nil { fn(me) }
	for _, x := range me.FormulaInstances { x.Walk() }
 }

type TanimationClipType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_

//	The animation_clip must instance at least one animation element.
	XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_

//	The end attribute is the time in seconds of the end of the clip.  This is used in the
//	same way as the start time.  If end is not specified, the value is taken to be the end
//	time of the longest animation.  Optional attribute.
	XsdGoPkgHasAttr_End_TfloatType_

	XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_

//	The animation_clip element may contain an asset element.
	XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The start attribute is the time in seconds of the beginning of the clip.  This time is
//	the same as that used in the key-frame data and is used to determine which set of
//	key-frames will be included in the clip.  The start time does not specify when the clip
//	will be played.  If the time falls between two keyframes of a referenced animation, an
//	interpolated value should be used.  The default value is 0.0.  Optional attribute.
	XsdGoPkgHasAttr_Start_TfloatType_00

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TanimationClipType function is not nil (ie. was set by outside code), calls it with this TanimationClipType instance as the single argument. Then calls the Walk() method on 4/8 embed(s) and 0/0 field(s) belonging to this TanimationClipType instance.
func (me *TanimationClipType) Walk ()  { 
	if fn := W.TanimationClipType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_.Walk()
	me.XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_.Walk()
 }

type XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_ struct {
//	There must be at least one animation_clip element.
	AnimationClips []*TanimationClipType `xml:"http://www.collada.org/2008/03/COLLADASchema animation_clip"`

}

//	If the W.XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_ instance.
func (me *XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_; fn != nil { fn(me) }
	for _, x := range me.AnimationClips { x.Walk() }
 }

//	The library_animation_clips element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_ struct {
//	The library_animation_clips element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TlibraryAnimationClipsType struct {
//	There must be at least one animation_clip element.
	XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The library_animation_clips element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TlibraryAnimationClipsType function is not nil (ie. was set by outside code), calls it with this TlibraryAnimationClipsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryAnimationClipsType instance.
func (me *TlibraryAnimationClipsType) Walk ()  { 
	if fn := W.TlibraryAnimationClipsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_ struct {
//	The COLLADA element may contain any
//	number of library_animation_clips
//	elements.
	AnimationClipsLibraries []*TlibraryAnimationClipsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_animation_clips"`

}

//	If the W.XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_ instance.
func (me *XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_; fn != nil { fn(me) }
	for _, x := range me.AnimationClipsLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_geometriess elements.
//	The library_geometries element declares a module of geometry elements.
//	The library_geometries element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_ struct {
//	The library_geometries element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	There must be at least one geometry element.
//	Geometry describes the visual shape and appearance of an object in the scene.
//	The geometry element categorizes the declaration of geometric information. Geometry is a
//	branch of mathematics that deals with the measurement, properties, and relationships of
//	points, lines, angles, surfaces, and solids.
//	The geometry element may contain an asset element.
type XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_ struct {
//	The geometry element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The geometry element may contain only
//	one mesh or convex_mesh.
//	The definition of the convex_mesh element is identical to the mesh element with the exception that
//	instead of a complete description (source, vertices, polygons etc.), it may simply point to another
//	geometry to derive its shape. The latter case means that the convex hull of that geometry should
//	be computed and is indicated by the optional "convex_hull_of" attribute.
//	The polygons element provides the information needed to bind vertex attributes together and
//	then organize those vertices into individual polygons. The polygons described can contain
//	arbitrary numbers of vertices. These polygons may be self intersecting and may also contain holes.
//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. If the material attribute is not specified then the lighting and
//	shading results are application defined. Optional attribute.
type XsdGoPkgHasAttr_Material_XsdtNCName_ struct {
//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. If the material attribute is not specified then the lighting and
//	shading results are application defined. Optional attribute.
	Material xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema material,attr"`

}

//	The ph element may occur any number of times. It describes a polygon with holes.
//	There may only be one p element.
//	The p element represents primitive data for the primitive types (lines, linestrips, polygons,
//	polylist, triangles, trifans, tristrips). The p element contains indices that reference into
//	the parent's source elements referenced by the input elements.
type TlistOfUintsType xsdt.String

//	TlistOfUintsType defines a String containing a whitespace-separated list of TuintType values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfUintsType) Values () (list []TuintType) { var btv = new(TuintType); var svals = xsdt.ListValues(string(me)); list = make([]TuintType, len(svals)); for i, s := range svals { btv.SetFromString(s); list[i] = *btv }; return }

//	Since TlistOfUintsType is just a simple String type, this merely returns the current string value.
func (me TlistOfUintsType) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TlistOfUintsType's alias type xsdt.String.
func (me TlistOfUintsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TlistOfUintsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfUintsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type TpType struct {
	XsdGoPkgValue TlistOfUintsType `xml:",chardata"`

}

//	If the W.TpType function is not nil (ie. was set by outside code), calls it with this TpType instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this TpType instance.
func (me *TpType) Walk ()  { 
	if fn := W.TpType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_ struct {
//	There may only be one p element.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

//	The h element represents a hole in the polygon specified. There must be at least one h element.
type XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_ struct {
//	The h element represents a hole in the polygon specified. There must be at least one h element.
	Hs []TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema h"`

}

//	If the W.XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_ instance.
func (me *XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_; fn != nil { fn(me) }
 }

type TxsdPolygonsTypeSequenceChoicePh struct {
//	There may only be one p element.
	XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_

//	The h element represents a hole in the polygon specified. There must be at least one h element.
	XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_

}

//	If the W.TxsdPolygonsTypeSequenceChoicePh function is not nil (ie. was set by outside code), calls it with this TxsdPolygonsTypeSequenceChoicePh instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdPolygonsTypeSequenceChoicePh instance.
func (me *TxsdPolygonsTypeSequenceChoicePh) Walk ()  { 
	if fn := W.TxsdPolygonsTypeSequenceChoicePh; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_.Walk()
 }

type XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_ struct {
//	The ph element may occur any number of times. It describes a polygon with holes.
	Phs []*TxsdPolygonsTypeSequenceChoicePh `xml:"http://www.collada.org/2008/03/COLLADASchema ph"`

}

//	If the W.XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_ instance.
func (me *XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_; fn != nil { fn(me) }
	for _, x := range me.Phs { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
//	The input_local_offset_type element is used to represent indexed inputs that can only reference resources declared in the same document.
//	The offset attribute represents the offset into the list of indices.  If two input elements share
//	the same offset, they will be indexed the same.  This works as a simple form of compression for the
//	list of indices as well as defining the order the inputs should be used in.  Required attribute.
type XsdGoPkgHasAttr_Offset_TuintType_ struct {
//	The offset attribute represents the offset into the list of indices.  If two input elements share
//	the same offset, they will be indexed the same.  This works as a simple form of compression for the
//	list of indices as well as defining the order the inputs should be used in.  Required attribute.
	Offset TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema offset,attr"`

}

//	The set attribute indicates which inputs should be grouped together as a single set. This is helpful
//	when multiple inputs share the same semantics.
type XsdGoPkgHasAttr_Set_TuintType_ struct {
//	The set attribute indicates which inputs should be grouped together as a single set. This is helpful
//	when multiple inputs share the same semantics.
	Set TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema set,attr"`

}

type TinputLocalOffsetType struct {
//	The source attribute indicates the location of the data source. Required attribute.
	XsdGoPkgHasAttr_Source_TurifragmentType_

//	The semantic attribute is the user-defined meaning of the input connection. Required attribute.
	XsdGoPkgHasAttr_Semantic_XsdtNmtoken_

//	The set attribute indicates which inputs should be grouped together as a single set. This is helpful
//	when multiple inputs share the same semantics.
	XsdGoPkgHasAttr_Set_TuintType_

//	The offset attribute represents the offset into the list of indices.  If two input elements share
//	the same offset, they will be indexed the same.  This works as a simple form of compression for the
//	list of indices as well as defining the order the inputs should be used in.  Required attribute.
	XsdGoPkgHasAttr_Offset_TuintType_

}

//	If the W.TinputLocalOffsetType function is not nil (ie. was set by outside code), calls it with this TinputLocalOffsetType instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TinputLocalOffsetType instance.
func (me *TinputLocalOffsetType) Walk ()  { 
	if fn := W.TinputLocalOffsetType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

//	The p element may occur any number of times.
type XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_ struct {
//	The p element may occur any number of times.
	Ps []*TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_; fn != nil { fn(me) }
	for _, x := range me.Ps { x.Walk() }
 }

type TpolygonsType struct {
//	The count attribute indicates the number of polygon primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_

//	The p element may occur any number of times.
	XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material
//	at the time of instantiation. If the material attribute is not specified then the lighting
//	and shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The ph element may occur any number of times. It describes a polygon with holes.
	XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_

}

//	If the W.TpolygonsType function is not nil (ie. was set by outside code), calls it with this TpolygonsType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TpolygonsType instance.
func (me *TpolygonsType) Walk ()  { 
	if fn := W.TpolygonsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_.Walk()
 }

type XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_ struct {
	Polygonses []*TpolygonsType `xml:"http://www.collada.org/2008/03/COLLADASchema polygons"`

}

//	If the W.XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_ instance.
func (me *XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_; fn != nil { fn(me) }
	for _, x := range me.Polygonses { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The tristrips element provides the information needed to bind vertex attributes together and then
//	organize those vertices into connected triangles. Each triangle described by the mesh has three
//	vertices. The first triangle is formed from first, second, and third vertices. Each subsequent
//	triangle is formed from the current vertex, reusing the previous two vertices.
//	The tristrips element may have any number of p elements.
type XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_ struct {
//	The tristrips element may have any number of p elements.
	Ps []*TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_; fn != nil { fn(me) }
	for _, x := range me.Ps { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
type XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TtristripsType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_

//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_

//	The count attribute indicates the number of triangle strip primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material
//	at the time of instantiation. If the material attribute is not specified then the lighting
//	and shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The tristrips element may have any number of p elements.
	XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TtristripsType function is not nil (ie. was set by outside code), calls it with this TtristripsType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TtristripsType instance.
func (me *TtristripsType) Walk ()  { 
	if fn := W.TtristripsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_.Walk()
 }

type XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_ struct {
	Tristripses []*TtristripsType `xml:"http://www.collada.org/2008/03/COLLADASchema tristrips"`

}

//	If the W.XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_ instance.
func (me *XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_; fn != nil { fn(me) }
	for _, x := range me.Tristripses { x.Walk() }
 }

//	The lines element provides the information needed to bind vertex attributes together and then
//	organize those vertices into individual lines. Each line described by the mesh has two vertices.
//	The first line is formed from first and second vertices. The second line is formed from the
//	third and fourth vertices and so on.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The lines element may have zero or one p element.
type XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_ struct {
//	The lines element may have zero or one p element.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
type XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TlinesType struct {
//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_

//	The lines element may have zero or one p element.
	XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_

//	The count attribute indicates the number of line primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. If the material attribute is not specified then the lighting and
//	shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

}

//	If the W.TlinesType function is not nil (ie. was set by outside code), calls it with this TlinesType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TlinesType instance.
func (me *TlinesType) Walk ()  { 
	if fn := W.TlinesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_.Walk()
 }

type XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_ struct {
	Lineses []*TlinesType `xml:"http://www.collada.org/2008/03/COLLADASchema lines"`

}

//	If the W.XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_ instance.
func (me *XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_; fn != nil { fn(me) }
	for _, x := range me.Lineses { x.Walk() }
 }

//	The trifans element provides the information needed to bind vertex attributes together and then
//	organize those vertices into connected triangles. Each triangle described by the mesh has three
//	vertices. The first triangle is formed from first, second, and third vertices. Each subsequent
//	triangle is formed from the current vertex, reusing the first and the previous vertices.
//	The trifans element may have any number of p elements.
type XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_ struct {
//	The trifans element may have any number of p elements.
	Ps []*TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_; fn != nil { fn(me) }
	for _, x := range me.Ps { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
type XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TtrifansType struct {
//	The trifans element may have any number of p elements.
	XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_

//	The count attribute indicates the number of triangle fan primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material
//	at the time of instantiation. If the material attribute is not specified then the lighting
//	and shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TtrifansType function is not nil (ie. was set by outside code), calls it with this TtrifansType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TtrifansType instance.
func (me *TtrifansType) Walk ()  { 
	if fn := W.TtrifansType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_.Walk()
 }

type XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_ struct {
	Trifanses []*TtrifansType `xml:"http://www.collada.org/2008/03/COLLADASchema trifans"`

}

//	If the W.XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_ instance.
func (me *XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_; fn != nil { fn(me) }
	for _, x := range me.Trifanses { x.Walk() }
 }

//	The polylist element provides the information needed to bind vertex attributes together and
//	then organize those vertices into individual polygons. The polygons described in polylist can
//	contain arbitrary numbers of vertices. Unlike the polygons element, the polylist element cannot
//	contain polygons with holes.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
type XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

//	The vcount element contains a list of integers describing the number of sides for each polygon
//	described by the polylist element. The vcount element may occur once.
type XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_ struct {
//	The vcount element contains a list of integers describing the number of sides for each polygon
//	described by the polylist element. The vcount element may occur once.
	Vcount TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema vcount"`

}

//	If the W.XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_ instance.
func (me *XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_; fn != nil { fn(me) }
 }

//	The polylist element may have zero or one p element.
type XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_ struct {
//	The polylist element may have zero or one p element.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

type TpolylistType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_

//	The count attribute indicates the number of polygon primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The vcount element contains a list of integers describing the number of sides for each polygon
//	described by the polylist element. The vcount element may occur once.
	XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. If the material attribute is not specified then the lighting and
//	shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The polylist element may have zero or one p element.
	XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_

}

//	If the W.TpolylistType function is not nil (ie. was set by outside code), calls it with this TpolylistType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TpolylistType instance.
func (me *TpolylistType) Walk ()  { 
	if fn := W.TpolylistType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_.Walk()
	me.XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_.Walk()
 }

type XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_ struct {
	Polylists []*TpolylistType `xml:"http://www.collada.org/2008/03/COLLADASchema polylist"`

}

//	If the W.XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_ instance.
func (me *XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_; fn != nil { fn(me) }
	for _, x := range me.Polylists { x.Walk() }
 }

//	The vertices element declares the attributes and identity of mesh-vertices. The vertices element
//	describes mesh-vertices in a mesh geometry. The mesh-vertices represent the position (identity)
//	of the vertices comprising the mesh and other vertex attributes that are invariant to tessellation.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element must occur at least one time. These inputs are local inputs.
type XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_ struct {
//	The input element must occur at least one time. These inputs are local inputs.
	Inputs []*TinputLocalType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_ instance.
func (me *XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TverticesType struct {
//	The input element must occur at least one time. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element. This
//	value must be unique within the instance document. Required attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TverticesType function is not nil (ie. was set by outside code), calls it with this TverticesType instance as the single argument. Then calls the Walk() method on 2/4 embed(s) and 0/0 field(s) belonging to this TverticesType instance.
func (me *TverticesType) Walk ()  { 
	if fn := W.TverticesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_.Walk()
 }

type XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_ struct {
	Vertices *TverticesType `xml:"http://www.collada.org/2008/03/COLLADASchema vertices"`

}

//	If the W.XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_ instance.
func (me *XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_; fn != nil { fn(me) }
	me.Vertices.Walk()
 }

//	The convex_hull_of attribute is a URI string of geometry to compute the convex hull of.
//	Optional attribute.
type XsdGoPkgHasAttr_ConvexHullOf_XsdtAnyURI_ struct {
//	The convex_hull_of attribute is a URI string of geometry to compute the convex hull of.
//	Optional attribute.
	ConvexHullOf xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema convex_hull_of,attr"`

}

//	The triangles element provides the information needed to bind vertex attributes together and
//	then organize those vertices into individual triangles.	Each triangle described by the mesh has
//	three vertices. The first triangle is formed from the first, second, and third vertices. The
//	second triangle is formed from the fourth, fifth, and sixth vertices, and so on.
//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
type XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The triangles element may have zero or one p element.
type XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_ struct {
//	The triangles element may have zero or one p element.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

type TtrianglesType struct {
//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_

//	The count attribute indicates the number of triangle primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The triangles element may have zero or one p element.
	XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. Optional attribute. If the material attribute is not specified then
//	the lighting and shading results are application defined.
	XsdGoPkgHasAttr_Material_XsdtNCName_

}

//	If the W.TtrianglesType function is not nil (ie. was set by outside code), calls it with this TtrianglesType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TtrianglesType instance.
func (me *TtrianglesType) Walk ()  { 
	if fn := W.TtrianglesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_ struct {
	Triangleses []*TtrianglesType `xml:"http://www.collada.org/2008/03/COLLADASchema triangles"`

}

//	If the W.XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_ instance.
func (me *XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_; fn != nil { fn(me) }
	for _, x := range me.Triangleses { x.Walk() }
 }

//	The linestrips element provides the information needed to bind vertex attributes together and
//	then organize those vertices into connected line-strips. Each line-strip described by the mesh
//	has an arbitrary number of vertices. Each line segment within the line-strip is formed from the
//	current vertex and the preceding vertex.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The linestrips element may have any number of p elements.
type XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_ struct {
//	The linestrips element may have any number of p elements.
	Ps []*TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_; fn != nil { fn(me) }
	for _, x := range me.Ps { x.Walk() }
 }

//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
type XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TlinestripsType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The linestrips element may have any number of p elements.
	XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_

//	The count attribute indicates the number of linestrip primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material
//	at the time of instantiation. If the material attribute is not specified then the lighting
//	and shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

}

//	If the W.TlinestripsType function is not nil (ie. was set by outside code), calls it with this TlinestripsType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TlinestripsType instance.
func (me *TlinestripsType) Walk ()  { 
	if fn := W.TlinestripsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_.Walk()
 }

type XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_ struct {
	Linestripses []*TlinestripsType `xml:"http://www.collada.org/2008/03/COLLADASchema linestrips"`

}

//	If the W.XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_ instance.
func (me *XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_; fn != nil { fn(me) }
	for _, x := range me.Linestripses { x.Walk() }
 }

type XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_ struct {
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

type TconvexMeshType struct {
	XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_

	XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_

//	The convex_hull_of attribute is a URI string of geometry to compute the convex hull of.
//	Optional attribute.
	XsdGoPkgHasAttr_ConvexHullOf_XsdtAnyURI_

	XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_

	XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_

	XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_

	XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_

	XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_

	XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_

}

//	If the W.TconvexMeshType function is not nil (ie. was set by outside code), calls it with this TconvexMeshType instance as the single argument. Then calls the Walk() method on 10/11 embed(s) and 0/0 field(s) belonging to this TconvexMeshType instance.
func (me *TconvexMeshType) Walk ()  { 
	if fn := W.TconvexMeshType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_.Walk()
	me.XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_.Walk()
	me.XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_.Walk()
	me.XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_.Walk()
	me.XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_.Walk()
	me.XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_.Walk()
	me.XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_.Walk()
	me.XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_.Walk()
 }

type XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_ struct {
//	The geometry element may contain only
//	one mesh or convex_mesh.
	ConvexMesh *TconvexMeshType `xml:"http://www.collada.org/2008/03/COLLADASchema convex_mesh"`

}

//	If the W.XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_ instance.
func (me *XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_; fn != nil { fn(me) }
	me.ConvexMesh.Walk()
 }

//	The geometry element may contain only
//	one mesh or convex_mesh.
//	The mesh element contains vertex and primitive information sufficient to describe basic geometric meshes.
//	The mesh element must contain one or more source elements.
type XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_ struct {
//	The mesh element must contain one or more source elements.
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The mesh element must contain one vertices element.
type XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_ struct {
//	The mesh element must contain one vertices element.
	Vertices *TverticesType `xml:"http://www.collada.org/2008/03/COLLADASchema vertices"`

}

//	If the W.XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_ instance.
func (me *XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_; fn != nil { fn(me) }
	me.Vertices.Walk()
 }

//	The mesh element may contain any number of linestrips elements.
type XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_ struct {
//	The mesh element may contain any number of linestrips elements.
	Linestripses []*TlinestripsType `xml:"http://www.collada.org/2008/03/COLLADASchema linestrips"`

}

//	If the W.XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_ instance.
func (me *XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_; fn != nil { fn(me) }
	for _, x := range me.Linestripses { x.Walk() }
 }

//	The mesh element may contain any number of triangles elements.
type XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_ struct {
//	The mesh element may contain any number of triangles elements.
	Triangleses []*TtrianglesType `xml:"http://www.collada.org/2008/03/COLLADASchema triangles"`

}

//	If the W.XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_ instance.
func (me *XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_; fn != nil { fn(me) }
	for _, x := range me.Triangleses { x.Walk() }
 }

//	The mesh element may contain any number of polylist elements.
type XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_ struct {
//	The mesh element may contain any number of polylist elements.
	Polylists []*TpolylistType `xml:"http://www.collada.org/2008/03/COLLADASchema polylist"`

}

//	If the W.XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_ instance.
func (me *XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_; fn != nil { fn(me) }
	for _, x := range me.Polylists { x.Walk() }
 }

//	The mesh element may contain any number of tristrips elements.
type XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_ struct {
//	The mesh element may contain any number of tristrips elements.
	Tristripses []*TtristripsType `xml:"http://www.collada.org/2008/03/COLLADASchema tristrips"`

}

//	If the W.XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_ instance.
func (me *XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_; fn != nil { fn(me) }
	for _, x := range me.Tristripses { x.Walk() }
 }

//	The mesh element may contain any number of lines elements.
type XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_ struct {
//	The mesh element may contain any number of lines elements.
	Lineses []*TlinesType `xml:"http://www.collada.org/2008/03/COLLADASchema lines"`

}

//	If the W.XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_ instance.
func (me *XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_; fn != nil { fn(me) }
	for _, x := range me.Lineses { x.Walk() }
 }

//	The mesh element may contain any number of polygons elements.
type XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_ struct {
//	The mesh element may contain any number of polygons elements.
	Polygonses []*TpolygonsType `xml:"http://www.collada.org/2008/03/COLLADASchema polygons"`

}

//	If the W.XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_ instance.
func (me *XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_; fn != nil { fn(me) }
	for _, x := range me.Polygonses { x.Walk() }
 }

//	The mesh element may contain any number of trifans elements.
type XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_ struct {
//	The mesh element may contain any number of trifans elements.
	Trifanses []*TtrifansType `xml:"http://www.collada.org/2008/03/COLLADASchema trifans"`

}

//	If the W.XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_ instance.
func (me *XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_; fn != nil { fn(me) }
	for _, x := range me.Trifanses { x.Walk() }
 }

type TmeshType struct {
//	The mesh element must contain one or more source elements.
	XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_

//	The mesh element must contain one vertices element.
	XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_

//	The mesh element may contain any number of linestrips elements.
	XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_

//	The mesh element may contain any number of triangles elements.
	XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_

//	The mesh element may contain any number of polylist elements.
	XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_

//	The mesh element may contain any number of tristrips elements.
	XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_

//	The mesh element may contain any number of lines elements.
	XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_

//	The mesh element may contain any number of polygons elements.
	XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_

//	The mesh element may contain any number of trifans elements.
	XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_

}

//	If the W.TmeshType function is not nil (ie. was set by outside code), calls it with this TmeshType instance as the single argument. Then calls the Walk() method on 10/10 embed(s) and 0/0 field(s) belonging to this TmeshType instance.
func (me *TmeshType) Walk ()  { 
	if fn := W.TmeshType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_.Walk()
	me.XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_.Walk()
	me.XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_.Walk()
	me.XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_.Walk()
	me.XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_.Walk()
	me.XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_.Walk()
	me.XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_.Walk()
	me.XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_.Walk()
	me.XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_.Walk()
 }

type XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_ struct {
//	The geometry element may contain only
//	one mesh or convex_mesh.
	Mesh *TmeshType `xml:"http://www.collada.org/2008/03/COLLADASchema mesh"`

}

//	If the W.XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_ instance.
func (me *XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_; fn != nil { fn(me) }
	me.Mesh.Walk()
 }

//	The brep element contains the complete topological     description of a static structure. There are also the     corresponding geometrical descriptions of the vertices,     edges and faces.
//	The surfaces element holds all the surfaces
//	that are needed for the brep structure. Here
//	are the surfaces that describes the kind of
//	a face. This element is needed, if the faces
//	element is present.
type XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	A surfaceType defines the attributes of a surface     element. With rotate and translate the surface can be     positioned to its right location.
type XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_ struct {
	Radius TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_ instance.
func (me *XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdSurfaceTypeSequenceChoiceCylinder struct {
	XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_

	XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_

}

//	If the W.TxsdSurfaceTypeSequenceChoiceCylinder function is not nil (ie. was set by outside code), calls it with this TxsdSurfaceTypeSequenceChoiceCylinder instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdSurfaceTypeSequenceChoiceCylinder instance.
func (me *TxsdSurfaceTypeSequenceChoiceCylinder) Walk ()  { 
	if fn := W.TxsdSurfaceTypeSequenceChoiceCylinder; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_.Walk()
	me.XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_ struct {
	Cylinder *TxsdSurfaceTypeSequenceChoiceCylinder `xml:"http://www.collada.org/2008/03/COLLADASchema cylinder"`

}

//	If the W.XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_ instance.
func (me *XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_; fn != nil { fn(me) }
	me.Cylinder.Walk()
 }

type XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_ struct {
	Plane *TplaneType `xml:"http://www.collada.org/2008/03/COLLADASchema plane"`

}

//	If the W.XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_ instance.
func (me *XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_; fn != nil { fn(me) }
	me.Plane.Walk()
 }

//	Describes a surface of linear extrusion ("extruded     surface"), e.g. a generalized cylinder. Such a surface     is obtained by sweeping a curve (called the "extruded     curve" or "basis") in a given direction (referred to as     the "direction of extrusion" and defined by a unit     vector). The u parameter is along the extruded curve.     The v parameter is along the direction of extrusion. The     parameter range for the u parameter is defined by the     reference curve. The parameter range for the v parameter     is ] - infinity, + infinity [. The position of the curve     gives the origin of the v parameter. The form of a     surface of linear extrusion is generally a ruled     surface. It can be: - a cylindrical surface, if the     extruded curve is a circle, or a trimmed circle, with an     axis parallel to the direction of extrusion, or - a     planar surface, if the extruded curve is a line.
type XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_ struct {
	Axis Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema axis"`

}

//	If the W.XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_ struct {
	Origin Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema origin"`

}

//	If the W.XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_; fn != nil { fn(me) }
 }

//	A curveType defines the attributes of a curve element.     With rotate and translate the surface can be positioned     to its right location.
//	Describes an infinite line. A line is defined and     positioned in space with an axis which gives it an     origin and a unit vector. The Geom_Line line is     parameterized: P (U) = O + U*Dir, where: - P is the     point of parameter U, - O is the origin and Dir the unit     vector of its positioning axis. The parameter range is ]     -infinite, +infinite [. The orientation of the line is     given by the unit vector of its positioning axis.
type XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_ struct {
	Direction Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema direction"`

}

//	If the W.XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_ struct {
	Origin Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema origin"`

}

//	If the W.XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_; fn != nil { fn(me) }
 }

type TlineType struct {
	XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_

	XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_

	XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_

}

//	If the W.TlineType function is not nil (ie. was set by outside code), calls it with this TlineType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TlineType instance.
func (me *TlineType) Walk ()  { 
	if fn := W.TlineType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_ struct {
	Line *TlineType `xml:"http://www.collada.org/2008/03/COLLADASchema line"`

}

//	If the W.XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_ instance.
func (me *XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_; fn != nil { fn(me) }
	me.Line.Walk()
 }

type ToriginType struct {
	XsdGoPkgValue Tfloat3Type `xml:",chardata"`

}

//	If the W.ToriginType function is not nil (ie. was set by outside code), calls it with this ToriginType instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this ToriginType instance.
func (me *ToriginType) Walk ()  { 
	if fn := W.ToriginType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_ struct {
	Origin *ToriginType `xml:"http://www.collada.org/2008/03/COLLADASchema origin"`

}

//	If the W.XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_ instance.
func (me *XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_; fn != nil { fn(me) }
	me.Origin.Walk()
 }

//	Describes an ellipse in 3D space. An ellipse is defined     by its major and minor radii and, as with any conic     curve, is positioned in space with a right-handed     coordinate system where: - the origin is the center of     the ellipse, - the "X Direction" defines the     major axis, and - the "Y Direction" defines     the minor axis. The origin, "X Direction" and     "Y Direction" of this coordinate system define     the plane of the ellipse. The coordinate system is the     local coordinate system of the ellipse. The "main     Direction" of this coordinate system is the vector     normal to the plane of the ellipse. The axis, of which     the origin and unit vector are respectively the origin     and "main Direction" of the local coordinate     system, is termed the "Axis" or "main     Axis" of the ellipse. The "main     Direction" of the local coordinate system gives an     explicit orientation to the ellipse (definition of the     trigonometric sense), determining the direction in which     the parameter increases along the ellipse. The     Geom_Ellipse ellipse is parameterized by an angle: P(U)     = O + MajorRad*Cos(U)*XDir + MinorRad*Sin(U)*YDir where:     - P is the point of parameter U, - O, XDir and YDir are     respectively the origin, "X <br>     Direction" and "Y Direction" of its local     coordinate system, - MajorRad and MinorRad are the major     and minor radii of the ellipse. The "X Axis"     of the local coordinate system therefore defines the     origin of the parameter of the ellipse. An ellipse is a     closed and periodic curve. The period is 2.*Pi and the     parameter range is [ 0, 2.*Pi [.
type XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_ struct {
	Radius Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TellipseType struct {
	XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_

	XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_

}

//	If the W.TellipseType function is not nil (ie. was set by outside code), calls it with this TellipseType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TellipseType instance.
func (me *TellipseType) Walk ()  { 
	if fn := W.TellipseType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_.Walk()
 }

type XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_ struct {
	Ellipse *TellipseType `xml:"http://www.collada.org/2008/03/COLLADASchema ellipse"`

}

//	If the W.XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_ instance.
func (me *XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_; fn != nil { fn(me) }
	me.Ellipse.Walk()
 }

//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
//	The input element must occur at least one time. These inputs are local inputs.
type XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_ struct {
//	The input element must occur at least one time. These inputs are local inputs.
	Inputs []*TinputLocalType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_ instance.
func (me *XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdNurbsTypeSequenceControlVertices struct {
//	The input element must occur at least one time. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_

}

//	If the W.TxsdNurbsTypeSequenceControlVertices function is not nil (ie. was set by outside code), calls it with this TxsdNurbsTypeSequenceControlVertices instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdNurbsTypeSequenceControlVertices instance.
func (me *TxsdNurbsTypeSequenceControlVertices) Walk ()  { 
	if fn := W.TxsdNurbsTypeSequenceControlVertices; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_.Walk()
 }

type XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_ struct {
//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
	ControlVertices *TxsdNurbsTypeSequenceControlVertices `xml:"http://www.collada.org/2008/03/COLLADASchema control_vertices"`

}

//	If the W.XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_ instance.
func (me *XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_; fn != nil { fn(me) }
	me.ControlVertices.Walk()
 }

type XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_ struct {
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

type XsdGoPkgHasAttr_Closed_XsdtBoolean_False struct {
	Closed xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema closed,attr"`

}

//	Returns the default value for Closed -- false
func (me XsdGoPkgHasAttr_Closed_XsdtBoolean_False) ClosedDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type XsdGoPkgHasAttr_Degree_TuintType_ struct {
	Degree TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema degree,attr"`

}

type TnurbsType struct {
//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
	XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_

	XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_

	XsdGoPkgHasAttr_Closed_XsdtBoolean_False

	XsdGoPkgHasAttr_Degree_TuintType_

}

//	If the W.TnurbsType function is not nil (ie. was set by outside code), calls it with this TnurbsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TnurbsType instance.
func (me *TnurbsType) Walk ()  { 
	if fn := W.TnurbsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_.Walk()
	me.XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_.Walk()
 }

type XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_ struct {
	Nurbs *TnurbsType `xml:"http://www.collada.org/2008/03/COLLADASchema nurbs"`

}

//	If the W.XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_ instance.
func (me *XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_; fn != nil { fn(me) }
	me.Nurbs.Walk()
 }

//	Describes a circle. A circle is defined by its radius     and, as with any conic curve, is positioned in space     with a right-handed coordinate system where: - the     origin is the center of the circle, and - the origin, "X     Direction" and "Y Direction" define the plane of the     circle. This coordinate system is the local coordinate     system of the circle. The "main Direction" of this     coordinate system is the vector normal to the plane of     the circle. The axis, of which the origin and unit     vector are respectively the origin and "main Direction"     of the local coordinate system, is termed the "Axis" or     "main Axis" of the circle. The "main Direction" of the     local coordinate system gives an explicit orientation to     the circle (definition of the trigonometric sense),     determining the direction in which the parameter     increases along the circle. The Geom_Circle circle is     parameterized by an angle: P(U) = O + R*Cos(U)*XDir +     R*Sin(U)*YDir, where: - P is the point of parameter U, -     O, XDir and YDir are respectively the origin, "X     Direction" and "Y Direction" of its local coordinate     system, - R is the radius of the circle. The "X     Axis" of the local coordinate system therefore     defines the origin of the parameter of the circle.     The parameter is the angle with this "X Direction".     A circle is a closed and periodic curve. The period     is 2.*Pi and the parameter range is [ 0, 2.*Pi [.
type XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_ struct {
	Radius TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_ instance.
func (me *XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_; fn != nil { fn(me) }
 }

type TcircleType struct {
	XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_

	XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_

}

//	If the W.TcircleType function is not nil (ie. was set by outside code), calls it with this TcircleType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TcircleType instance.
func (me *TcircleType) Walk ()  { 
	if fn := W.TcircleType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_.Walk()
	me.XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_ struct {
	Circle *TcircleType `xml:"http://www.collada.org/2008/03/COLLADASchema circle"`

}

//	If the W.XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_ instance.
func (me *XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_; fn != nil { fn(me) }
	me.Circle.Walk()
 }

type TorientType struct {
	XsdGoPkgValue Tfloat4Type `xml:",chardata"`

}

//	If the W.TorientType function is not nil (ie. was set by outside code), calls it with this TorientType instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this TorientType instance.
func (me *TorientType) Walk ()  { 
	if fn := W.TorientType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_ struct {
	Orients []*TorientType `xml:"http://www.collada.org/2008/03/COLLADASchema orient"`

}

//	If the W.XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_ instance.
func (me *XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_; fn != nil { fn(me) }
	for _, x := range me.Orients { x.Walk() }
 }

//	Describes a branch of a hyperbola in 3D space. A     hyperbola is defined by its major and minor radii and,     as with any conic curve, is positioned in space with a     right-handed coordinate system where: - the origin is     the center of the hyperbola, - the "X Direction" defines     the major axis, and - the "Y Direction" defines the     minor axis. The origin, "X Direction" and "Y Direction"     of this coordinate system define the plane of the     hyperbola. The coordinate system is the local coordinate     system of the hyperbola. The branch of the hyperbola     described is the one located on the positive side of the     major axis. The "main Direction" of the local coordinate     system is a vector normal to the plane of the hyperbola.     The axis, of which the origin and unit vector are     respectively the origin and "main Direction" of the     local coordinate system, is termed the "Axis" or "main     Axis" of the hyperbola. The "main Direction" of the     local coordinate system gives an explicit orientation to     the hyperbola, determining the direction in which the     parameter increases along the hyperbola. The     Geom_Hyperbola hyperbola is parameterized as follows:     P(U) = O + MajRad*Cosh(U)*XDir + MinRad*Sinh(U)*YDir,     where: - P is the point of parameter U, - O, XDir and     YDir are respectively the origin, "X Direction" and "Y     Direction" of its local coordinate system, - MajRad and     MinRad are the major and minor radii of the hyperbola.     The "X Axis" of the local coordinate system therefore     defines the origin of the parameter of the hyperbola.     The parameter range is ] -infinite, +infinite [.
type XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_ struct {
	Radius Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_; fn != nil { fn(me) }
 }

type ThyperbolaType struct {
	XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_

	XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_

}

//	If the W.ThyperbolaType function is not nil (ie. was set by outside code), calls it with this ThyperbolaType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this ThyperbolaType instance.
func (me *ThyperbolaType) Walk ()  { 
	if fn := W.ThyperbolaType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_ struct {
	Hyperbola *ThyperbolaType `xml:"http://www.collada.org/2008/03/COLLADASchema hyperbola"`

}

//	If the W.XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_ instance.
func (me *XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_; fn != nil { fn(me) }
	me.Hyperbola.Walk()
 }

//	Describes a parabola in 3D space. A parabola is defined     by its focal length (i.e. the distance between its focus     and its apex) and is positioned in space with a     coordinate system where: - the origin is     the apex of the parabola, - the "X Axis"     defines the axis of symmetry; the parabola is on the     positive side of this axis, - the origin, "X     Direction" and "Y Direction" define the     plane of the parabola. This coordinate system is the     local coordinate system of the parabola. The "main     Direction" of this coordinate system is a vector     normal to the plane of the parabola. The axis, of which     the origin and unit vector are respectively the origin     and "main Direction" of the local coordinate     system, is termed the "Axis" or "main     Axis" of the parabola. The "main     Direction" of the local coordinate system gives an     explicit orientation to the parabola, determining the     direction in which the parameter increases along the     parabola. The Geom_Parabola parabola is parameterized as     follows: P(U) = O + U*U/(4.*F)*XDir + U*YDir where: - P     is the point of parameter U, - O, XDir and YDir are     respectively the origin, "X <br>     Direction" and "Y Direction" of its local     coordinate system, - F is the focal length of the     parabola. The parameter of the parabola is therefore its     Y coordinate in the local coordinate system, with the     "X <br> Axis" of the local coordinate     system defining the origin of the parameter. The     parameter range is ] -infinite, +infinite [.
type XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_ struct {
	Focal TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema focal"`

}

//	If the W.XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_ instance.
func (me *XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_; fn != nil { fn(me) }
 }

type TparabolaType struct {
	XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_

	XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_

}

//	If the W.TparabolaType function is not nil (ie. was set by outside code), calls it with this TparabolaType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TparabolaType instance.
func (me *TparabolaType) Walk ()  { 
	if fn := W.TparabolaType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_ struct {
	Parabola *TparabolaType `xml:"http://www.collada.org/2008/03/COLLADASchema parabola"`

}

//	If the W.XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_ instance.
func (me *XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_; fn != nil { fn(me) }
	me.Parabola.Walk()
 }

type TcurveType struct {
//	The id of a curve.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_

	XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_

	XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_

	XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_

//	The name of a curve.
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_

	XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_

	XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_

	XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_

}

//	If the W.TcurveType function is not nil (ie. was set by outside code), calls it with this TcurveType instance as the single argument. Then calls the Walk() method on 8/10 embed(s) and 0/0 field(s) belonging to this TcurveType instance.
func (me *TcurveType) Walk ()  { 
	if fn := W.TcurveType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_.Walk()
	me.XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_.Walk()
	me.XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_.Walk()
	me.XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_.Walk()
	me.XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_.Walk()
	me.XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_.Walk()
	me.XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_.Walk()
	me.XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_.Walk()
 }

type XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_ struct {
	Curve *TcurveType `xml:"http://www.collada.org/2008/03/COLLADASchema curve"`

}

//	If the W.XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_ instance.
func (me *XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_; fn != nil { fn(me) }
	me.Curve.Walk()
 }

type XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_ struct {
	Direction Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema direction"`

}

//	If the W.XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_; fn != nil { fn(me) }
 }

type TsweptSurfaceType struct {
	XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_

	XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_

	XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_

	XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_

}

//	If the W.TsweptSurfaceType function is not nil (ie. was set by outside code), calls it with this TsweptSurfaceType instance as the single argument. Then calls the Walk() method on 5/5 embed(s) and 0/0 field(s) belonging to this TsweptSurfaceType instance.
func (me *TsweptSurfaceType) Walk ()  { 
	if fn := W.TsweptSurfaceType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_.Walk()
	me.XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_.Walk()
 }

type XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_ struct {
	SweptSurface *TsweptSurfaceType `xml:"http://www.collada.org/2008/03/COLLADASchema swept_surface"`

}

//	If the W.XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_ instance.
func (me *XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_; fn != nil { fn(me) }
	me.SweptSurface.Walk()
 }

type XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_ struct {
	Sphere *TsphereType `xml:"http://www.collada.org/2008/03/COLLADASchema sphere"`

}

//	If the W.XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_ instance.
func (me *XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_; fn != nil { fn(me) }
	me.Sphere.Walk()
 }

type XsdGoPkgHasAttr_DegreeU_TuintType_ struct {
	DegreeU TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema degree_u,attr"`

}

type XsdGoPkgHasAttr_ClosedV_XsdtBoolean_False struct {
	ClosedV xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema closed_v,attr"`

}

//	Returns the default value for ClosedV -- false
func (me XsdGoPkgHasAttr_ClosedV_XsdtBoolean_False) ClosedVDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type XsdGoPkgHasAttr_DegreeV_TuintType_ struct {
	DegreeV TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema degree_v,attr"`

}

//	The control vertices element must occur
//	exactly one time. It is used to describe the
//	CVs of the spline.
//	The extra element may appear any
//	number of times.
type XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any
//	number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element must occur at
//	least one time. These inputs are
//	local inputs.
type XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_ struct {
//	The input element must occur at
//	least one time. These inputs are
//	local inputs.
	Inputs []*TinputLocalType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_ instance.
func (me *XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TxsdNurbsSurfaceTypeSequenceControlVertices struct {
//	The input element must occur at
//	least one time. These inputs are
//	local inputs.
	XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_

//	The extra element may appear any
//	number of times.
	XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_

}

//	If the W.TxsdNurbsSurfaceTypeSequenceControlVertices function is not nil (ie. was set by outside code), calls it with this TxsdNurbsSurfaceTypeSequenceControlVertices instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdNurbsSurfaceTypeSequenceControlVertices instance.
func (me *TxsdNurbsSurfaceTypeSequenceControlVertices) Walk ()  { 
	if fn := W.TxsdNurbsSurfaceTypeSequenceControlVertices; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_.Walk()
 }

type XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_ struct {
//	The control vertices element must occur
//	exactly one time. It is used to describe the
//	CVs of the spline.
	ControlVertices *TxsdNurbsSurfaceTypeSequenceControlVertices `xml:"http://www.collada.org/2008/03/COLLADASchema control_vertices"`

}

//	If the W.XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_ instance.
func (me *XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_; fn != nil { fn(me) }
	me.ControlVertices.Walk()
 }

type XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_ struct {
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

type XsdGoPkgHasAttr_ClosedU_XsdtBoolean_False struct {
	ClosedU xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema closed_u,attr"`

}

//	Returns the default value for ClosedU -- false
func (me XsdGoPkgHasAttr_ClosedU_XsdtBoolean_False) ClosedUDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TnurbsSurfaceType struct {
	XsdGoPkgHasAttr_DegreeV_TuintType_

//	The control vertices element must occur
//	exactly one time. It is used to describe the
//	CVs of the spline.
	XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_

	XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_

	XsdGoPkgHasAttr_ClosedU_XsdtBoolean_False

	XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_DegreeU_TuintType_

	XsdGoPkgHasAttr_ClosedV_XsdtBoolean_False

}

//	If the W.TnurbsSurfaceType function is not nil (ie. was set by outside code), calls it with this TnurbsSurfaceType instance as the single argument. Then calls the Walk() method on 3/7 embed(s) and 0/0 field(s) belonging to this TnurbsSurfaceType instance.
func (me *TnurbsSurfaceType) Walk ()  { 
	if fn := W.TnurbsSurfaceType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_.Walk()
	me.XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_.Walk()
	me.XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_ struct {
	NurbsSurface *TnurbsSurfaceType `xml:"http://www.collada.org/2008/03/COLLADASchema nurbs_surface"`

}

//	If the W.XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_ instance.
func (me *XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_; fn != nil { fn(me) }
	me.NurbsSurface.Walk()
 }

type XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_ struct {
	Origin *ToriginType `xml:"http://www.collada.org/2008/03/COLLADASchema origin"`

}

//	If the W.XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_ instance.
func (me *XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_; fn != nil { fn(me) }
	me.Origin.Walk()
 }

type XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_ struct {
	Angle xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema angle"`

}

//	If the W.XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_ instance.
func (me *XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_ struct {
	Radius TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_ instance.
func (me *XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_; fn != nil { fn(me) }
 }

type TconeType struct {
	XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_

	XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_

	XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_

}

//	If the W.TconeType function is not nil (ie. was set by outside code), calls it with this TconeType instance as the single argument. Then calls the Walk() method on 3/3 embed(s) and 0/0 field(s) belonging to this TconeType instance.
func (me *TconeType) Walk ()  { 
	if fn := W.TconeType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_.Walk()
	me.XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_.Walk()
 }

type XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_ struct {
	Cone *TconeType `xml:"http://www.collada.org/2008/03/COLLADASchema cone"`

}

//	If the W.XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_ instance.
func (me *XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_; fn != nil { fn(me) }
	me.Cone.Walk()
 }

type XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_ struct {
	Orients []*TorientType `xml:"http://www.collada.org/2008/03/COLLADASchema orient"`

}

//	If the W.XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_ instance.
func (me *XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_; fn != nil { fn(me) }
	for _, x := range me.Orients { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_ struct {
	Radius Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

//	If the W.XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_; fn != nil { fn(me) }
 }

type TtorusType struct {
	XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_

}

//	If the W.TtorusType function is not nil (ie. was set by outside code), calls it with this TtorusType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TtorusType instance.
func (me *TtorusType) Walk ()  { 
	if fn := W.TtorusType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_.Walk()
 }

type XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_ struct {
	Torus *TtorusType `xml:"http://www.collada.org/2008/03/COLLADASchema torus"`

}

//	If the W.XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_ instance.
func (me *XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_; fn != nil { fn(me) }
	me.Torus.Walk()
 }

type TsurfaceType struct {
	XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_

//	The name of the surface.
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_

	XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_

	XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_

	XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_

	XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_

	XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_

	XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_

	XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_

//	The id of the surface.
	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TsurfaceType function is not nil (ie. was set by outside code), calls it with this TsurfaceType instance as the single argument. Then calls the Walk() method on 9/11 embed(s) and 0/0 field(s) belonging to this TsurfaceType instance.
func (me *TsurfaceType) Walk ()  { 
	if fn := W.TsurfaceType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_.Walk()
	me.XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_.Walk()
	me.XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_.Walk()
	me.XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_.Walk()
	me.XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_.Walk()
	me.XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_.Walk()
	me.XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_.Walk()
	me.XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_.Walk()
	me.XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_.Walk()
 }

type XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_ struct {
	Surfaces []*TsurfaceType `xml:"http://www.collada.org/2008/03/COLLADASchema surface"`

}

//	If the W.XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_ instance.
func (me *XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_; fn != nil { fn(me) }
	for _, x := range me.Surfaces { x.Walk() }
 }

type TsurfacesType struct {
	XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_

}

//	If the W.TsurfacesType function is not nil (ie. was set by outside code), calls it with this TsurfacesType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TsurfacesType instance.
func (me *TsurfacesType) Walk ()  { 
	if fn := W.TsurfacesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_.Walk()
	me.XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_ struct {
//	The surfaces element holds all the surfaces
//	that are needed for the brep structure. Here
//	are the surfaces that describes the kind of
//	a face. This element is needed, if the faces
//	element is present.
	Surfaces *TsurfacesType `xml:"http://www.collada.org/2008/03/COLLADASchema surfaces"`

}

//	If the W.XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_ instance.
func (me *XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_; fn != nil { fn(me) }
	me.Surfaces.Walk()
 }

type XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	This element defines all the shells of the
//	brep structure.
//	This element defines all the shells used in the brep     structure.
type XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The indices of the faces for each shell.
type XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_ struct {
//	The indices of the faces for each shell.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

type XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_ struct {
	Vcount TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema vcount"`

}

//	If the W.XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_ instance.
func (me *XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_; fn != nil { fn(me) }
 }

//	One input elements is needed to define a
//	shell by its faces. The second is need for
//	the orientation of the faces
type XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_ struct {
//	One input elements is needed to define a
//	shell by its faces. The second is need for
//	the orientation of the faces
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TshellsType struct {
	XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_

//	The indices of the faces for each shell.
	XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_

	XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Count_TuintType_

//	One input elements is needed to define a
//	shell by its faces. The second is need for
//	the orientation of the faces
	XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TshellsType function is not nil (ie. was set by outside code), calls it with this TshellsType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TshellsType instance.
func (me *TshellsType) Walk ()  { 
	if fn := W.TshellsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_.Walk()
	me.XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_.Walk()
 }

type XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_ struct {
//	This element defines all the shells of the
//	brep structure.
	Shells *TshellsType `xml:"http://www.collada.org/2008/03/COLLADASchema shells"`

}

//	If the W.XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_ instance.
func (me *XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_; fn != nil { fn(me) }
	me.Shells.Walk()
 }

//	The curves element holds all the curves that
//	are needed for the brep structure. Here are
//	the curves that describes the kind of an
//	edge, but here are also the curves that are
//	needed to create a extrusion for a surface.
//	This element is needed, if the edges element
//	is present.
//	This element holds all the curves that are needed for
//	the geometrical description of the topological entities
//	edges.
type XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_ struct {
	Curves []*TcurveType `xml:"http://www.collada.org/2008/03/COLLADASchema curve"`

}

//	If the W.XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_ instance.
func (me *XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_; fn != nil { fn(me) }
	for _, x := range me.Curves { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TcurvesType struct {
	XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_

	XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_

}

//	If the W.TcurvesType function is not nil (ie. was set by outside code), calls it with this TcurvesType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TcurvesType instance.
func (me *TcurvesType) Walk ()  { 
	if fn := W.TcurvesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_.Walk()
 }

type XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_ struct {
//	The curves element holds all the curves that
//	are needed for the brep structure. Here are
//	the curves that describes the kind of an
//	edge, but here are also the curves that are
//	needed to create a extrusion for a surface.
//	This element is needed, if the edges element
//	is present.
	Curves *TcurvesType `xml:"http://www.collada.org/2008/03/COLLADASchema curves"`

}

//	If the W.XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_ instance.
func (me *XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_; fn != nil { fn(me) }
	me.Curves.Walk()
 }

//	This element defines all the vertices of an
//	brep structure. Vertices are the base
//	topological entity for all brep structures,
//	so this element is ever needed.
type XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_ struct {
//	This element defines all the vertices of an
//	brep structure. Vertices are the base
//	topological entity for all brep structures,
//	so this element is ever needed.
	Vertices *TverticesType `xml:"http://www.collada.org/2008/03/COLLADASchema vertices"`

}

//	If the W.XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_ instance.
func (me *XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_; fn != nil { fn(me) }
	me.Vertices.Walk()
 }

type XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_ struct {
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

//	The first two inputs are needed to reference
//	the edge-face-connection. The third input
//	references the pcurve.
type XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_ struct {
//	The first two inputs are needed to reference
//	the edge-face-connection. The third input
//	references the pcurve.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_ struct {
	Vcount TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema vcount"`

}

//	If the W.XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_ instance.
func (me *XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_; fn != nil { fn(me) }
 }

type TpcurvesType struct {
//	The first two inputs are needed to reference
//	the edge-face-connection. The third input
//	references the pcurve.
	XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_

	XsdGoPkgHasAttr_Count_TuintType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TpcurvesType function is not nil (ie. was set by outside code), calls it with this TpcurvesType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TpcurvesType instance.
func (me *TpcurvesType) Walk ()  { 
	if fn := W.TpcurvesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_.Walk()
	me.XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_.Walk()
 }

type XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_ struct {
	Pcurves *TpcurvesType `xml:"http://www.collada.org/2008/03/COLLADASchema pcurves"`

}

//	If the W.XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_ instance.
func (me *XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_; fn != nil { fn(me) }
	me.Pcurves.Walk()
 }

//	This element defines all the solids of the
//	brep structure.
//	This element defines all the solids used in the brep     structure.
type XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_ struct {
	Vcount TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema vcount"`

}

//	If the W.XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_ instance.
func (me *XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_; fn != nil { fn(me) }
 }

//	The indices of the shells for each solid.
type XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_ struct {
//	The indices of the shells for each solid.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

type XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	One input elements is needed to define a
//	solid by its shells. The second is need fo
//	the orientation of the shells.
type XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_ struct {
//	One input elements is needed to define a
//	solid by its shells. The second is need fo
//	the orientation of the shells.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TsolidsType struct {
//	The indices of the shells for each solid.
	XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Count_TuintType_

//	One input elements is needed to define a
//	solid by its shells. The second is need fo
//	the orientation of the shells.
	XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_

}

//	If the W.TsolidsType function is not nil (ie. was set by outside code), calls it with this TsolidsType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TsolidsType instance.
func (me *TsolidsType) Walk ()  { 
	if fn := W.TsolidsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_.Walk()
	me.XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_.Walk()
 }

type XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_ struct {
//	This element defines all the solids of the
//	brep structure.
	Solids *TsolidsType `xml:"http://www.collada.org/2008/03/COLLADASchema solids"`

}

//	If the W.XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_ instance.
func (me *XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_; fn != nil { fn(me) }
	me.Solids.Walk()
 }

//	The source elements define the access of the
//	elements vertices, edges and faces to their
//	geometric entities. At least one source
//	element is needed for the vertices. If there
//	are edges a second source element is needed
//	for accessing the curves in the curve
//	element by an IDREF_array. If there are
//	faces the third source element is needed for
//	accessing the surfaces in the surface
//	element by an IDREF_array.
type XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_ struct {
//	The source elements define the access of the
//	elements vertices, edges and faces to their
//	geometric entities. At least one source
//	element is needed for the vertices. If there
//	are edges a second source element is needed
//	for accessing the curves in the curve
//	element by an IDREF_array. If there are
//	faces the third source element is needed for
//	accessing the surfaces in the surface
//	element by an IDREF_array.
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

//	This element defines all the wires of the
//	brep structure.
//	This element defines all the wires used in the brep     structure.
//	The indices of the edges for each wire.
type XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_ struct {
//	The indices of the edges for each wire.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

//	One input elements is needed to define a
//	wire by its edges. The second is needed for
//	orientation of the edges
type XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_ struct {
//	One input elements is needed to define a
//	wire by its edges. The second is needed for
//	orientation of the edges
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_ struct {
	Vcount TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema vcount"`

}

//	If the W.XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_ instance.
func (me *XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_; fn != nil { fn(me) }
 }

type TwiresType struct {
	XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasAttr_Name_XsdtToken_

//	The indices of the edges for each wire.
	XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_

//	One input elements is needed to define a
//	wire by its edges. The second is needed for
//	orientation of the edges
	XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Count_TuintType_

}

//	If the W.TwiresType function is not nil (ie. was set by outside code), calls it with this TwiresType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TwiresType instance.
func (me *TwiresType) Walk ()  { 
	if fn := W.TwiresType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_.Walk()
 }

type XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_ struct {
//	This element defines all the wires of the
//	brep structure.
	Wires *TwiresType `xml:"http://www.collada.org/2008/03/COLLADASchema wires"`

}

//	If the W.XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_ instance.
func (me *XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_; fn != nil { fn(me) }
	me.Wires.Walk()
 }

//	This element defines all the faces of the
//	brep structure.
//	This element defines all the faces used in the brep     structure.
type XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	Two input elements are needed to define a
//	face, one for referencing the surface and
//	one for referencing the wires themselfs. The
//	third is needed for the orientation of each
//	wires.
type XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_ struct {
//	Two input elements are needed to define a
//	face, one for referencing the surface and
//	one for referencing the wires themselfs. The
//	third is needed for the orientation of each
//	wires.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

//	The indices for referencing the surface and
//	wires for each face.
type XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_ struct {
//	The indices for referencing the surface and
//	wires for each face.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

type XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_ struct {
	Vcount TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema vcount"`

}

//	If the W.XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_ instance.
func (me *XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_; fn != nil { fn(me) }
 }

type TfacesType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The indices for referencing the surface and
//	wires for each face.
	XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_

	XsdGoPkgHasAttr_Count_TuintType_

	XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_

//	Two input elements are needed to define a
//	face, one for referencing the surface and
//	one for referencing the wires themselfs. The
//	third is needed for the orientation of each
//	wires.
	XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_

}

//	If the W.TfacesType function is not nil (ie. was set by outside code), calls it with this TfacesType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TfacesType instance.
func (me *TfacesType) Walk ()  { 
	if fn := W.TfacesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_.Walk()
 }

type XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_ struct {
//	This element defines all the faces of the
//	brep structure.
	Faces *TfacesType `xml:"http://www.collada.org/2008/03/COLLADASchema faces"`

}

//	If the W.XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_ instance.
func (me *XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_; fn != nil { fn(me) }
	me.Faces.Walk()
 }

//	This element defines all the edges of the
//	brep structure.
//	This element defines all the edges used in the brep     structure.
type XsdGoPkgHasAttr_Count_XsdtInt_ struct {
	Count xsdt.Int `xml:"http://www.collada.org/2008/03/COLLADASchema count,attr"`

}

type XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The indices for refrencing curves and        vertices.
type XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_ struct {
//	The indices for refrencing curves and        vertices.
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

//	If the W.XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_ instance.
func (me *XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_; fn != nil { fn(me) }
	me.P.Walk()
 }

//	Five input elements are needed to define an
//	edge, one for referencing the curve, two for
//	referencing the two vertices, one for the
//	orientation of the first vertex (the second
//	is the opposite of the first) and one for
//	the parametric values of the curve.
type XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_ struct {
//	Five input elements are needed to define an
//	edge, one for referencing the curve, two for
//	referencing the two vertices, one for the
//	orientation of the first vertex (the second
//	is the opposite of the first) and one for
//	the parametric values of the curve.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TedgesType struct {
//	The indices for refrencing curves and        vertices.
	XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

//	Five input elements are needed to define an
//	edge, one for referencing the curve, two for
//	referencing the two vertices, one for the
//	orientation of the first vertex (the second
//	is the opposite of the first) and one for
//	the parametric values of the curve.
	XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasAttr_Count_XsdtInt_

	XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_

}

//	If the W.TedgesType function is not nil (ie. was set by outside code), calls it with this TedgesType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TedgesType instance.
func (me *TedgesType) Walk ()  { 
	if fn := W.TedgesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_.Walk()
	me.XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_.Walk()
 }

type XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_ struct {
//	This element defines all the edges of the
//	brep structure.
	Edges *TedgesType `xml:"http://www.collada.org/2008/03/COLLADASchema edges"`

}

//	If the W.XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_ instance.
func (me *XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_; fn != nil { fn(me) }
	me.Edges.Walk()
 }

//	This element holds all the pcurves that are needed for
//	the geometrical description of the topological entities
//	edges on the surfaces they lie on.
type XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_ struct {
	Curves []*TcurveType `xml:"http://www.collada.org/2008/03/COLLADASchema curve"`

}

//	If the W.XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_ instance.
func (me *XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_; fn != nil { fn(me) }
	for _, x := range me.Curves { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TsurfaceCurvesType struct {
	XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_

	XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_

}

//	If the W.TsurfaceCurvesType function is not nil (ie. was set by outside code), calls it with this TsurfaceCurvesType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TsurfaceCurvesType instance.
func (me *TsurfaceCurvesType) Walk ()  { 
	if fn := W.TsurfaceCurvesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_.Walk()
 }

type XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_ struct {
	SurfaceCurves *TsurfaceCurvesType `xml:"http://www.collada.org/2008/03/COLLADASchema surface_curves"`

}

//	If the W.XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_ instance.
func (me *XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_; fn != nil { fn(me) }
	me.SurfaceCurves.Walk()
 }

type TbrepType struct {
//	This element defines all the faces of the
//	brep structure.
	XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_

//	This element defines all the edges of the
//	brep structure.
	XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_

	XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_

//	The surfaces element holds all the surfaces
//	that are needed for the brep structure. Here
//	are the surfaces that describes the kind of
//	a face. This element is needed, if the faces
//	element is present.
	XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_

	XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_

//	This element defines all the shells of the
//	brep structure.
	XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_

//	The curves element holds all the curves that
//	are needed for the brep structure. Here are
//	the curves that describes the kind of an
//	edge, but here are also the curves that are
//	needed to create a extrusion for a surface.
//	This element is needed, if the edges element
//	is present.
	XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_

//	This element defines all the vertices of an
//	brep structure. Vertices are the base
//	topological entity for all brep structures,
//	so this element is ever needed.
	XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_

	XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_

//	This element defines all the solids of the
//	brep structure.
	XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_

//	The source elements define the access of the
//	elements vertices, edges and faces to their
//	geometric entities. At least one source
//	element is needed for the vertices. If there
//	are edges a second source element is needed
//	for accessing the curves in the curve
//	element by an IDREF_array. If there are
//	faces the third source element is needed for
//	accessing the surfaces in the surface
//	element by an IDREF_array.
	XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_

//	This element defines all the wires of the
//	brep structure.
	XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_

}

//	If the W.TbrepType function is not nil (ie. was set by outside code), calls it with this TbrepType instance as the single argument. Then calls the Walk() method on 12/12 embed(s) and 0/0 field(s) belonging to this TbrepType instance.
func (me *TbrepType) Walk ()  { 
	if fn := W.TbrepType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_.Walk()
	me.XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_.Walk()
	me.XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_.Walk()
	me.XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_.Walk()
	me.XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_.Walk()
	me.XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_.Walk()
	me.XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_.Walk()
	me.XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_.Walk()
	me.XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_.Walk()
	me.XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_.Walk()
	me.XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_.Walk()
 }

type XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_ struct {
	Brep *TbrepType `xml:"http://www.collada.org/2008/03/COLLADASchema brep"`

}

//	If the W.XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_ instance.
func (me *XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_; fn != nil { fn(me) }
	me.Brep.Walk()
 }

//	The spline element contains control vertex information sufficient to describe basic splines.
//	The mesh element must contain one or more source elements.
type XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_ struct {
//	The mesh element must contain one or more source elements.
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element must occur at least one time. These inputs are local inputs.
type XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_ struct {
//	The input element must occur at least one time. These inputs are local inputs.
	Inputs []*TinputLocalType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_ instance.
func (me *XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TxsdSplineTypeSequenceControlVertices struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_

//	The input element must occur at least one time. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_

}

//	If the W.TxsdSplineTypeSequenceControlVertices function is not nil (ie. was set by outside code), calls it with this TxsdSplineTypeSequenceControlVertices instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdSplineTypeSequenceControlVertices instance.
func (me *TxsdSplineTypeSequenceControlVertices) Walk ()  { 
	if fn := W.TxsdSplineTypeSequenceControlVertices; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_.Walk()
 }

type XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_ struct {
//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
	ControlVertices *TxsdSplineTypeSequenceControlVertices `xml:"http://www.collada.org/2008/03/COLLADASchema control_vertices"`

}

//	If the W.XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_ instance.
func (me *XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_; fn != nil { fn(me) }
	me.ControlVertices.Walk()
 }

type TsplineType struct {
//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
	XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_

	XsdGoPkgHasAttr_Closed_XsdtBoolean_False

//	The mesh element must contain one or more source elements.
	XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_

}

//	If the W.TsplineType function is not nil (ie. was set by outside code), calls it with this TsplineType instance as the single argument. Then calls the Walk() method on 3/4 embed(s) and 0/0 field(s) belonging to this TsplineType instance.
func (me *TsplineType) Walk ()  { 
	if fn := W.TsplineType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_.Walk()
	me.XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_.Walk()
	me.XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_ struct {
	Spline *TsplineType `xml:"http://www.collada.org/2008/03/COLLADASchema spline"`

}

//	If the W.XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_ instance.
func (me *XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_; fn != nil { fn(me) }
	me.Spline.Walk()
 }

type TgeometryType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_

//	The geometry element may contain only
//	one mesh or convex_mesh.
	XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_

//	The geometry element may contain only
//	one mesh or convex_mesh.
	XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_

	XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The geometry element may contain an asset element.
	XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_

}

//	If the W.TgeometryType function is not nil (ie. was set by outside code), calls it with this TgeometryType instance as the single argument. Then calls the Walk() method on 6/8 embed(s) and 0/0 field(s) belonging to this TgeometryType instance.
func (me *TgeometryType) Walk ()  { 
	if fn := W.TgeometryType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_.Walk()
	me.XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_.Walk()
	me.XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_.Walk()
	me.XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_.Walk()
 }

type XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_ struct {
//	There must be at least one geometry element.
	Geometries []*TgeometryType `xml:"http://www.collada.org/2008/03/COLLADASchema geometry"`

}

//	If the W.XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_ instance.
func (me *XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_; fn != nil { fn(me) }
	for _, x := range me.Geometries { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TlibraryGeometriesType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_

//	The library_geometries element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_

//	There must be at least one geometry element.
	XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_

}

//	If the W.TlibraryGeometriesType function is not nil (ie. was set by outside code), calls it with this TlibraryGeometriesType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryGeometriesType instance.
func (me *TlibraryGeometriesType) Walk ()  { 
	if fn := W.TlibraryGeometriesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_.Walk()
 }

type XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_ struct {
//	The COLLADA element may contain any
//	number of library_geometriess elements.
	GeometriesLibraries []*TlibraryGeometriesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_geometries"`

}

//	If the W.XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_ instance.
func (me *XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_; fn != nil { fn(me) }
	for _, x := range me.GeometriesLibraries { x.Walk() }
 }

//	The COLLADA element must contain an asset element.
type XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_ struct {
//	The COLLADA element must contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_ struct {
	Target *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema target"`

}

//	If the W.XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_; fn != nil { fn(me) }
	me.Target.Walk()
 }

type TformulaTechniqueType struct {
	math.XsdGoPkgHasElem_Math

}

//	If the W.TformulaTechniqueType function is not nil (ie. was set by outside code), calls it with this TformulaTechniqueType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TformulaTechniqueType instance.
func (me *TformulaTechniqueType) Walk ()  { 
	if fn := W.TformulaTechniqueType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_ struct {
	TechniqueCommon *TformulaTechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

type XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_ struct {
	Sidref TsidrefType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF"`

}

//	If the W.XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_ instance.
func (me *XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_; fn != nil { fn(me) }
 }

type TformulaNewparamType struct {
	XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_

	XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_

}

//	If the W.TformulaNewparamType function is not nil (ie. was set by outside code), calls it with this TformulaNewparamType instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TformulaNewparamType instance.
func (me *TformulaNewparamType) Walk ()  { 
	if fn := W.TformulaNewparamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_.Walk()
 }

type XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_ struct {
	Newparams []*TformulaNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_ struct {
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type TformulaType struct {
	XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_

	XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_

}

//	If the W.TformulaType function is not nil (ie. was set by outside code), calls it with this TformulaType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TformulaType instance.
func (me *TformulaType) Walk ()  { 
	if fn := W.TformulaType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_.Walk()
	me.XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_.Walk()
 }

type XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_ struct {
	Formulas []*TformulaType `xml:"http://www.collada.org/2008/03/COLLADASchema formula"`

}

//	If the W.XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_ instance.
func (me *XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_; fn != nil { fn(me) }
	for _, x := range me.Formulas { x.Walk() }
 }

type TlibraryFormulasType struct {
	XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_

	XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TlibraryFormulasType function is not nil (ie. was set by outside code), calls it with this TlibraryFormulasType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryFormulasType instance.
func (me *TlibraryFormulasType) Walk ()  { 
	if fn := W.TlibraryFormulasType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_.Walk()
 }

type XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_ struct {
	FormulasLibraries []*TlibraryFormulasType `xml:"http://www.collada.org/2008/03/COLLADASchema library_formulas"`

}

//	If the W.XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_ instance.
func (me *XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_; fn != nil { fn(me) }
	for _, x := range me.FormulasLibraries { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_ struct {
	Newparams []*TkinematicsNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_ struct {
	Joints []*TjointType `xml:"http://www.collada.org/2008/03/COLLADASchema joint"`

}

//	If the W.XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_ instance.
func (me *XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_; fn != nil { fn(me) }
	for _, x := range me.Joints { x.Walk() }
 }

type XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_ struct {
	Formulas []*TformulaType `xml:"http://www.collada.org/2008/03/COLLADASchema formula"`

}

//	If the W.XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_ instance.
func (me *XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_; fn != nil { fn(me) }
	for _, x := range me.Formulas { x.Walk() }
 }

type XsdGoPkgHasAttr_Joint_XsdtToken_ struct {
	Joint xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema joint,attr"`

}

type XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_ struct {
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

type XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_ struct {
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

type TxsdLinkTypeSequenceChoiceAttachmentEnd struct {
	XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_

	XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_

	XsdGoPkgHasAttr_Joint_XsdtToken_

}

//	If the W.TxsdLinkTypeSequenceChoiceAttachmentEnd function is not nil (ie. was set by outside code), calls it with this TxsdLinkTypeSequenceChoiceAttachmentEnd instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdLinkTypeSequenceChoiceAttachmentEnd instance.
func (me *TxsdLinkTypeSequenceChoiceAttachmentEnd) Walk ()  { 
	if fn := W.TxsdLinkTypeSequenceChoiceAttachmentEnd; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_.Walk()
	me.XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_.Walk()
 }

type XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_ struct {
	AttachmentEnds []*TxsdLinkTypeSequenceChoiceAttachmentEnd `xml:"http://www.collada.org/2008/03/COLLADASchema attachment_end"`

}

//	If the W.XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_ instance.
func (me *XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_; fn != nil { fn(me) }
	for _, x := range me.AttachmentEnds { x.Walk() }
 }

type XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_ struct {
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

type XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_ struct {
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

type XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_ struct {
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

type XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_ struct {
	Link *TlinkType `xml:"http://www.collada.org/2008/03/COLLADASchema link"`

}

//	If the W.XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_ instance.
func (me *XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_; fn != nil { fn(me) }
 }

type TxsdLinkTypeSequenceChoiceAttachmentFull struct {
	XsdGoPkgHasAttr_Joint_XsdtToken_

	XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_

	XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_

	XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_

}

//	If the W.TxsdLinkTypeSequenceChoiceAttachmentFull function is not nil (ie. was set by outside code), calls it with this TxsdLinkTypeSequenceChoiceAttachmentFull instance as the single argument. Then calls the Walk() method on 3/4 embed(s) and 0/0 field(s) belonging to this TxsdLinkTypeSequenceChoiceAttachmentFull instance.
func (me *TxsdLinkTypeSequenceChoiceAttachmentFull) Walk ()  { 
	if fn := W.TxsdLinkTypeSequenceChoiceAttachmentFull; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_.Walk()
	me.XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_.Walk()
	me.XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_.Walk()
 }

type XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_ struct {
	AttachmentFulls []*TxsdLinkTypeSequenceChoiceAttachmentFull `xml:"http://www.collada.org/2008/03/COLLADASchema attachment_full"`

}

//	If the W.XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_ instance.
func (me *XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_; fn != nil { fn(me) }
	for _, x := range me.AttachmentFulls { x.Walk() }
 }

type XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_ struct {
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

type XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_ struct {
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

type XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_ struct {
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

type TxsdLinkTypeSequenceChoiceAttachmentStart struct {
	XsdGoPkgHasAttr_Joint_XsdtToken_

	XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_

	XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_

}

//	If the W.TxsdLinkTypeSequenceChoiceAttachmentStart function is not nil (ie. was set by outside code), calls it with this TxsdLinkTypeSequenceChoiceAttachmentStart instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TxsdLinkTypeSequenceChoiceAttachmentStart instance.
func (me *TxsdLinkTypeSequenceChoiceAttachmentStart) Walk ()  { 
	if fn := W.TxsdLinkTypeSequenceChoiceAttachmentStart; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_.Walk()
 }

type XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_ struct {
	AttachmentStarts []*TxsdLinkTypeSequenceChoiceAttachmentStart `xml:"http://www.collada.org/2008/03/COLLADASchema attachment_start"`

}

//	If the W.XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_ instance.
func (me *XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_; fn != nil { fn(me) }
	for _, x := range me.AttachmentStarts { x.Walk() }
 }

type TlinkType struct {
	XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_

	XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_

	XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_

}

//	If the W.TlinkType function is not nil (ie. was set by outside code), calls it with this TlinkType instance as the single argument. Then calls the Walk() method on 5/7 embed(s) and 0/0 field(s) belonging to this TlinkType instance.
func (me *TlinkType) Walk ()  { 
	if fn := W.TlinkType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_.Walk()
	me.XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_.Walk()
	me.XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_.Walk()
	me.XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_.Walk()
 }

type XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_ struct {
	Links []*TlinkType `xml:"http://www.collada.org/2008/03/COLLADASchema link"`

}

//	If the W.XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_ instance.
func (me *XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_; fn != nil { fn(me) }
	for _, x := range me.Links { x.Walk() }
 }

type TinstanceJointType struct {
	TinstanceWithExtraType

}

//	If the W.TinstanceJointType function is not nil (ie. was set by outside code), calls it with this TinstanceJointType instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TinstanceJointType instance.
func (me *TinstanceJointType) Walk ()  { 
	if fn := W.TinstanceJointType; fn != nil { fn(me) }
	me.TinstanceWithExtraType.Walk()
 }

type XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_ struct {
	JointInstances []*TinstanceJointType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_joint"`

}

//	If the W.XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_ instance.
func (me *XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_; fn != nil { fn(me) }
	for _, x := range me.JointInstances { x.Walk() }
 }

type XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_ struct {
	FormulaInstances []*TinstanceFormulaType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_formula"`

}

//	If the W.XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_ instance.
func (me *XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_; fn != nil { fn(me) }
	for _, x := range me.FormulaInstances { x.Walk() }
 }

type TkinematicsModelTechniqueType struct {
	XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_

	XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_

	XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_

	XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_

	XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_

}

//	If the W.TkinematicsModelTechniqueType function is not nil (ie. was set by outside code), calls it with this TkinematicsModelTechniqueType instance as the single argument. Then calls the Walk() method on 6/6 embed(s) and 0/0 field(s) belonging to this TkinematicsModelTechniqueType instance.
func (me *TkinematicsModelTechniqueType) Walk ()  { 
	if fn := W.TkinematicsModelTechniqueType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_.Walk()
	me.XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_.Walk()
	me.XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_.Walk()
	me.XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_.Walk()
	me.XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_.Walk()
	me.XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_ struct {
	TechniqueCommon *TkinematicsModelTechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

type XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_ struct {
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TkinematicsModelType struct {
	XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_

	XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TkinematicsModelType function is not nil (ie. was set by outside code), calls it with this TkinematicsModelType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TkinematicsModelType instance.
func (me *TkinematicsModelType) Walk ()  { 
	if fn := W.TkinematicsModelType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_.Walk()
	me.XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_.Walk()
 }

type XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_ struct {
	KinematicsModels []*TkinematicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema kinematics_model"`

}

//	If the W.XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_ instance.
func (me *XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_; fn != nil { fn(me) }
	for _, x := range me.KinematicsModels { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TlibraryKinematicsModelsType struct {
	XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_

}

//	If the W.TlibraryKinematicsModelsType function is not nil (ie. was set by outside code), calls it with this TlibraryKinematicsModelsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryKinematicsModelsType instance.
func (me *TlibraryKinematicsModelsType) Walk ()  { 
	if fn := W.TlibraryKinematicsModelsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_.Walk()
 }

type XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_ struct {
	KinematicsModelsLibraries []*TlibraryKinematicsModelsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_kinematics_models"`

}

//	If the W.XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_ instance.
func (me *XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_; fn != nil { fn(me) }
	for _, x := range me.KinematicsModelsLibraries { x.Walk() }
 }

type XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_ struct {
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_ struct {
	Newparams []*TkinematicsNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_ struct {
	Sidref TsidrefType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF"`

}

//	If the W.XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_ instance.
func (me *XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_; fn != nil { fn(me) }
 }

type TkinematicsParamType struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

}

//	If the W.TkinematicsParamType function is not nil (ie. was set by outside code), calls it with this TkinematicsParamType instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TkinematicsParamType instance.
func (me *TkinematicsParamType) Walk ()  { 
	if fn := W.TkinematicsParamType; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_ struct {
	Param *TkinematicsParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_ instance.
func (me *XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type TkinematicsBindType struct {
	XsdGoPkgHasAttr_Symbol_XsdtNCName_

	XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_

	XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_

	XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_

}

//	If the W.TkinematicsBindType function is not nil (ie. was set by outside code), calls it with this TkinematicsBindType instance as the single argument. Then calls the Walk() method on 5/6 embed(s) and 0/0 field(s) belonging to this TkinematicsBindType instance.
func (me *TkinematicsBindType) Walk ()  { 
	if fn := W.TkinematicsBindType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_.Walk()
	me.XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_.Walk()
	me.XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_.Walk()
 }

type XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_ struct {
	Binds []*TkinematicsBindType `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

//	If the W.XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_ instance.
func (me *XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_; fn != nil { fn(me) }
	for _, x := range me.Binds { x.Walk() }
 }

type XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_ struct {
	Setparams []*TkinematicsSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_ instance.
func (me *XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

type TinstanceArticulatedSystemType struct {
	XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_

	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasAttr_Sid_TsidType_

}

//	If the W.TinstanceArticulatedSystemType function is not nil (ie. was set by outside code), calls it with this TinstanceArticulatedSystemType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TinstanceArticulatedSystemType instance.
func (me *TinstanceArticulatedSystemType) Walk ()  { 
	if fn := W.TinstanceArticulatedSystemType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_.Walk()
	me.XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_.Walk()
 }

type XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ struct {
	InstanceArticulatedSystem *TinstanceArticulatedSystemType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_articulated_system"`

}

//	If the W.XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ instance.
func (me *XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_; fn != nil { fn(me) }
	me.InstanceArticulatedSystem.Walk()
 }

type XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_ struct {
	Param *TcommonParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_ instance.
func (me *XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

//	If the W.XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_; fn != nil { fn(me) }
 }

type TcommonFloat2OrParamType struct {
	XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_

	XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_

}

//	If the W.TcommonFloat2OrParamType function is not nil (ie. was set by outside code), calls it with this TcommonFloat2OrParamType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TcommonFloat2OrParamType instance.
func (me *TcommonFloat2OrParamType) Walk ()  { 
	if fn := W.TcommonFloat2OrParamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_.Walk()
 }

type XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_ struct {
	Deceleration *TcommonFloat2OrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema deceleration"`

}

//	If the W.XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_ instance.
func (me *XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_; fn != nil { fn(me) }
	me.Deceleration.Walk()
 }

type XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_ struct {
	Jerk *TcommonFloat2OrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema jerk"`

}

//	If the W.XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_ instance.
func (me *XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_; fn != nil { fn(me) }
	me.Jerk.Walk()
 }

type XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_ struct {
	Speed *TcommonFloat2OrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema speed"`

}

//	If the W.XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_ instance.
func (me *XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_; fn != nil { fn(me) }
	me.Speed.Walk()
 }

type XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_ struct {
	Acceleration *TcommonFloat2OrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema acceleration"`

}

//	If the W.XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_ instance.
func (me *XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_; fn != nil { fn(me) }
	me.Acceleration.Walk()
 }

type XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_ struct {
	Newparams []*TkinematicsNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_ struct {
	Binds []*TkinematicsBindType `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

//	If the W.XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_ instance.
func (me *XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_; fn != nil { fn(me) }
	for _, x := range me.Binds { x.Walk() }
 }

type XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_ struct {
	Setparams []*TkinematicsSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_ instance.
func (me *XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

type TmotionEffectorInfoType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_

	XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_

	XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_

	XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_

	XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_

}

//	If the W.TmotionEffectorInfoType function is not nil (ie. was set by outside code), calls it with this TmotionEffectorInfoType instance as the single argument. Then calls the Walk() method on 7/9 embed(s) and 0/0 field(s) belonging to this TmotionEffectorInfoType instance.
func (me *TmotionEffectorInfoType) Walk ()  { 
	if fn := W.TmotionEffectorInfoType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_.Walk()
	me.XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_.Walk()
	me.XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_.Walk()
	me.XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_.Walk()
	me.XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_.Walk()
	me.XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_.Walk()
	me.XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_.Walk()
 }

type XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_ struct {
	EffectorInfo *TmotionEffectorInfoType `xml:"http://www.collada.org/2008/03/COLLADASchema effector_info"`

}

//	If the W.XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_ instance.
func (me *XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_; fn != nil { fn(me) }
	me.EffectorInfo.Walk()
 }

type XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_ struct {
	Acceleration *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema acceleration"`

}

//	If the W.XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_; fn != nil { fn(me) }
	me.Acceleration.Walk()
 }

type XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_ struct {
	Deceleration *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema deceleration"`

}

//	If the W.XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_; fn != nil { fn(me) }
	me.Deceleration.Walk()
 }

type XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_ struct {
	Newparams []*TkinematicsNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_ struct {
	Binds []*TkinematicsBindType `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

//	If the W.XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_ instance.
func (me *XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_; fn != nil { fn(me) }
	for _, x := range me.Binds { x.Walk() }
 }

type XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_ struct {
	Speed *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema speed"`

}

//	If the W.XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_; fn != nil { fn(me) }
	me.Speed.Walk()
 }

type XsdGoPkgHasAttr_Axis_XsdtToken_ struct {
	Axis xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema axis,attr"`

}

type XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_ struct {
	Jerk *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema jerk"`

}

//	If the W.XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_; fn != nil { fn(me) }
	me.Jerk.Walk()
 }

type XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_ struct {
	Setparams []*TkinematicsSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_ instance.
func (me *XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

type TmotionAxisInfoType struct {
	XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_

	XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_

	XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_

	XsdGoPkgHasAttr_Axis_XsdtToken_

	XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_

	XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_

}

//	If the W.TmotionAxisInfoType function is not nil (ie. was set by outside code), calls it with this TmotionAxisInfoType instance as the single argument. Then calls the Walk() method on 7/10 embed(s) and 0/0 field(s) belonging to this TmotionAxisInfoType instance.
func (me *TmotionAxisInfoType) Walk ()  { 
	if fn := W.TmotionAxisInfoType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_.Walk()
	me.XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_.Walk()
	me.XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_.Walk()
 }

type XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_ struct {
	AxisInfos []*TmotionAxisInfoType `xml:"http://www.collada.org/2008/03/COLLADASchema axis_info"`

}

//	If the W.XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_ instance.
func (me *XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_; fn != nil { fn(me) }
	for _, x := range me.AxisInfos { x.Walk() }
 }

type TmotionTechniqueType struct {
	XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_

	XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_

}

//	If the W.TmotionTechniqueType function is not nil (ie. was set by outside code), calls it with this TmotionTechniqueType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TmotionTechniqueType instance.
func (me *TmotionTechniqueType) Walk ()  { 
	if fn := W.TmotionTechniqueType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_.Walk()
	me.XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_ struct {
	TechniqueCommon *TmotionTechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

type TmotionType struct {
	XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_

	XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_

	XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_

}

//	If the W.TmotionType function is not nil (ie. was set by outside code), calls it with this TmotionType instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TmotionType instance.
func (me *TmotionType) Walk ()  { 
	if fn := W.TmotionType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_.Walk()
	me.XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_.Walk()
 }

type XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_ struct {
	Motion *TmotionType `xml:"http://www.collada.org/2008/03/COLLADASchema motion"`

}

//	If the W.XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_ instance.
func (me *XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_; fn != nil { fn(me) }
	me.Motion.Walk()
 }

type XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_ struct {
	Newparams []*TkinematicsNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_ struct {
	Setparams []*TkinematicsSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_ instance.
func (me *XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

type XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_ struct {
	Binds []*TkinematicsBindType `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

//	If the W.XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_ instance.
func (me *XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_; fn != nil { fn(me) }
	for _, x := range me.Binds { x.Walk() }
 }

type TinstanceKinematicsModelType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_

	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_

}

//	If the W.TinstanceKinematicsModelType function is not nil (ie. was set by outside code), calls it with this TinstanceKinematicsModelType instance as the single argument. Then calls the Walk() method on 4/7 embed(s) and 0/0 field(s) belonging to this TinstanceKinematicsModelType instance.
func (me *TinstanceKinematicsModelType) Walk ()  { 
	if fn := W.TinstanceKinematicsModelType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_.Walk()
	me.XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_.Walk()
 }

type XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ struct {
	KinematicsModelInstances []*TinstanceKinematicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_kinematics_model"`

}

//	If the W.XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ instance.
func (me *XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_; fn != nil { fn(me) }
	for _, x := range me.KinematicsModelInstances { x.Walk() }
 }

type XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_ struct {
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

type XsdGoPkgHasAttr_Link_XsdtToken_ struct {
	Link xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema link,attr"`

}

type XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_ struct {
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	If the W.XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_ instance.
func (me *XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_; fn != nil { fn(me) }
	for _, x := range me.Rotates { x.Walk() }
 }

type XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_ struct {
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	If the W.XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_ instance.
func (me *XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_; fn != nil { fn(me) }
	for _, x := range me.Translates { x.Walk() }
 }

type TkinematicsFrameType struct {
	XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_

	XsdGoPkgHasAttr_Link_XsdtToken_

}

//	If the W.TkinematicsFrameType function is not nil (ie. was set by outside code), calls it with this TkinematicsFrameType instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TkinematicsFrameType instance.
func (me *TkinematicsFrameType) Walk ()  { 
	if fn := W.TkinematicsFrameType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_.Walk()
	me.XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_.Walk()
 }

type XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_ struct {
	FrameOrigin *TkinematicsFrameType `xml:"http://www.collada.org/2008/03/COLLADASchema frame_origin"`

}

//	If the W.XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_ instance.
func (me *XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_; fn != nil { fn(me) }
	me.FrameOrigin.Walk()
 }

type XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_ struct {
	FrameTip *TkinematicsFrameType `xml:"http://www.collada.org/2008/03/COLLADASchema frame_tip"`

}

//	If the W.XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_ instance.
func (me *XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_; fn != nil { fn(me) }
	me.FrameTip.Walk()
 }

type XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_ struct {
	FrameObject *TkinematicsFrameType `xml:"http://www.collada.org/2008/03/COLLADASchema frame_object"`

}

//	If the W.XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_ instance.
func (me *XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_; fn != nil { fn(me) }
	me.FrameObject.Walk()
 }

type XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_ struct {
	Min *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema min"`

}

//	If the W.XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_; fn != nil { fn(me) }
	me.Min.Walk()
 }

type XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_ struct {
	Max *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema max"`

}

//	If the W.XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_ instance.
func (me *XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_; fn != nil { fn(me) }
	me.Max.Walk()
 }

type TkinematicsLimitsType struct {
	XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_

	XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_

}

//	If the W.TkinematicsLimitsType function is not nil (ie. was set by outside code), calls it with this TkinematicsLimitsType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TkinematicsLimitsType instance.
func (me *TkinematicsLimitsType) Walk ()  { 
	if fn := W.TkinematicsLimitsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_.Walk()
	me.XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_.Walk()
 }

type XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_ struct {
	Limits *TkinematicsLimitsType `xml:"http://www.collada.org/2008/03/COLLADASchema limits"`

}

//	If the W.XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_ instance.
func (me *XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_; fn != nil { fn(me) }
	me.Limits.Walk()
 }

type XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_ struct {
	Param *TcommonParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_ instance.
func (me *XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type TcommonBoolOrParamType struct {
	XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_

}

//	If the W.TcommonBoolOrParamType function is not nil (ie. was set by outside code), calls it with this TcommonBoolOrParamType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TcommonBoolOrParamType instance.
func (me *TcommonBoolOrParamType) Walk ()  { 
	if fn := W.TcommonBoolOrParamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_.Walk()
	me.XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_.Walk()
 }

type XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_ struct {
	Locked *TcommonBoolOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema locked"`

}

//	If the W.XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_ instance.
func (me *XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_; fn != nil { fn(me) }
	me.Locked.Walk()
 }

type XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_ struct {
	FormulaInstances []*TinstanceFormulaType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_formula"`

}

//	If the W.XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_ instance.
func (me *XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_; fn != nil { fn(me) }
	for _, x := range me.FormulaInstances { x.Walk() }
 }

type XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_ struct {
	Formulas []*TformulaType `xml:"http://www.collada.org/2008/03/COLLADASchema formula"`

}

//	If the W.XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_ instance.
func (me *XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_; fn != nil { fn(me) }
	for _, x := range me.Formulas { x.Walk() }
 }

type XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_ struct {
	Active *TcommonBoolOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema active"`

}

//	If the W.XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_ instance.
func (me *XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_; fn != nil { fn(me) }
	me.Active.Walk()
 }

type XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_ struct {
	Param *TcommonParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	If the W.XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_ instance.
func (me *XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_; fn != nil { fn(me) }
	me.Param.Walk()
 }

type XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_; fn != nil { fn(me) }
 }

type TcommonIntOrParamType struct {
	XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_

	XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_

}

//	If the W.TcommonIntOrParamType function is not nil (ie. was set by outside code), calls it with this TcommonIntOrParamType instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TcommonIntOrParamType instance.
func (me *TcommonIntOrParamType) Walk ()  { 
	if fn := W.TcommonIntOrParamType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_.Walk()
 }

type TkinematicsIndexType struct {
	XsdGoPkgHasAttr_Semantic_XsdtNmtoken_

	TcommonIntOrParamType

}

//	If the W.TkinematicsIndexType function is not nil (ie. was set by outside code), calls it with this TkinematicsIndexType instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TkinematicsIndexType instance.
func (me *TkinematicsIndexType) Walk ()  { 
	if fn := W.TkinematicsIndexType; fn != nil { fn(me) }
	me.TcommonIntOrParamType.Walk()
 }

type XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_ struct {
	Indexs []*TkinematicsIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index"`

}

//	If the W.XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_ instance.
func (me *XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_; fn != nil { fn(me) }
	for _, x := range me.Indexs { x.Walk() }
 }

type XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_ struct {
	Newparams []*TkinematicsNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	If the W.XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_ instance.
func (me *XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_; fn != nil { fn(me) }
	for _, x := range me.Newparams { x.Walk() }
 }

type TkinematicsAxisInfoType struct {
	XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_

	XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_

	XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_

	XsdGoPkgHasAttr_Axis_XsdtToken_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_

	XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_

}

//	If the W.TkinematicsAxisInfoType function is not nil (ie. was set by outside code), calls it with this TkinematicsAxisInfoType instance as the single argument. Then calls the Walk() method on 7/10 embed(s) and 0/0 field(s) belonging to this TkinematicsAxisInfoType instance.
func (me *TkinematicsAxisInfoType) Walk ()  { 
	if fn := W.TkinematicsAxisInfoType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_.Walk()
	me.XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_.Walk()
	me.XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_.Walk()
	me.XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_.Walk()
	me.XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_.Walk()
	me.XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_.Walk()
	me.XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_.Walk()
 }

type XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_ struct {
	AxisInfos []*TkinematicsAxisInfoType `xml:"http://www.collada.org/2008/03/COLLADASchema axis_info"`

}

//	If the W.XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_ instance.
func (me *XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_; fn != nil { fn(me) }
	for _, x := range me.AxisInfos { x.Walk() }
 }

type XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_ struct {
	FrameTcp *TkinematicsFrameType `xml:"http://www.collada.org/2008/03/COLLADASchema frame_tcp"`

}

//	If the W.XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_ instance.
func (me *XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_; fn != nil { fn(me) }
	me.FrameTcp.Walk()
 }

type TkinematicsTechniqueType struct {
	XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_

	XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_

	XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_

	XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_

	XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_

}

//	If the W.TkinematicsTechniqueType function is not nil (ie. was set by outside code), calls it with this TkinematicsTechniqueType instance as the single argument. Then calls the Walk() method on 5/5 embed(s) and 0/0 field(s) belonging to this TkinematicsTechniqueType instance.
func (me *TkinematicsTechniqueType) Walk ()  { 
	if fn := W.TkinematicsTechniqueType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_.Walk()
	me.XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_.Walk()
	me.XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_.Walk()
	me.XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_.Walk()
	me.XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_ struct {
	TechniqueCommon *TkinematicsTechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

type TkinematicsType struct {
	XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_

	XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_

	XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_

}

//	If the W.TkinematicsType function is not nil (ie. was set by outside code), calls it with this TkinematicsType instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TkinematicsType instance.
func (me *TkinematicsType) Walk ()  { 
	if fn := W.TkinematicsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_.Walk()
	me.XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_.Walk()
 }

type XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_ struct {
	Kinematics *TkinematicsType `xml:"http://www.collada.org/2008/03/COLLADASchema kinematics"`

}

//	If the W.XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_ instance.
func (me *XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_; fn != nil { fn(me) }
	me.Kinematics.Walk()
 }

type TarticulatedSystemType struct {
	XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_

	XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_

}

//	If the W.TarticulatedSystemType function is not nil (ie. was set by outside code), calls it with this TarticulatedSystemType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TarticulatedSystemType instance.
func (me *TarticulatedSystemType) Walk ()  { 
	if fn := W.TarticulatedSystemType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_.Walk()
	me.XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_.Walk()
 }

type XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_ struct {
	ArticulatedSystems []*TarticulatedSystemType `xml:"http://www.collada.org/2008/03/COLLADASchema articulated_system"`

}

//	If the W.XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_ instance.
func (me *XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_; fn != nil { fn(me) }
	for _, x := range me.ArticulatedSystems { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TlibraryArticulatedSystemsType struct {
	XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_

}

//	If the W.TlibraryArticulatedSystemsType function is not nil (ie. was set by outside code), calls it with this TlibraryArticulatedSystemsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryArticulatedSystemsType instance.
func (me *TlibraryArticulatedSystemsType) Walk ()  { 
	if fn := W.TlibraryArticulatedSystemsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_.Walk()
 }

type XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_ struct {
	ArticulatedSystemsLibraries []*TlibraryArticulatedSystemsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_articulated_systems"`

}

//	If the W.XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_ instance.
func (me *XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_; fn != nil { fn(me) }
	for _, x := range me.ArticulatedSystemsLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_materials elements.
//	The library_materials element declares a module of material elements.
//	The library_materials element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_ struct {
//	The library_materials element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	There must be at least one material element.
//	Materials describe the visual appearance of a geometric object.
//	The material must instance an effect.
//	The instance_effect element declares the instantiation of a COLLADA effect resource.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	Assigns a new value to a previously defined parameter
//	A group that specifies the allowable types for effect scoped parameters.
type XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_ struct {
	Float4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x2"`

}

//	If the W.XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_ instance.
func (me *XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_ struct {
	Int3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3"`

}

//	If the W.XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_ instance.
func (me *XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_ struct {
	Float4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x3"`

}

//	If the W.XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_ instance.
func (me *XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_ struct {
	Float2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x3"`

}

//	If the W.XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_ instance.
func (me *XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_ struct {
	Float2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x1"`

}

//	If the W.XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

//	If the W.XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_ instance.
func (me *XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_ struct {
	Float4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x1"`

}

//	If the W.XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

//	If the W.XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_ instance.
func (me *XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_; fn != nil { fn(me) }
 }

type TxsdFxSetparamGroupChoiceSamplerStates struct {
	XsdGoPkgHasGroup_FxSamplerStatesGroup

}

//	If the W.TxsdFxSetparamGroupChoiceSamplerStates function is not nil (ie. was set by outside code), calls it with this TxsdFxSetparamGroupChoiceSamplerStates instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdFxSetparamGroupChoiceSamplerStates instance.
func (me *TxsdFxSetparamGroupChoiceSamplerStates) Walk ()  { 
	if fn := W.TxsdFxSetparamGroupChoiceSamplerStates; fn != nil { fn(me) }
	me.XsdGoPkgHasGroup_FxSamplerStatesGroup.Walk()
 }

type XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_ struct {
	SamplerStates *TxsdFxSetparamGroupChoiceSamplerStates `xml:"http://www.collada.org/2008/03/COLLADASchema sampler_states"`

}

//	If the W.XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_ instance.
func (me *XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_; fn != nil { fn(me) }
	me.SamplerStates.Walk()
 }

type XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

//	If the W.XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_ instance.
func (me *XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

//	If the W.XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_ instance.
func (me *XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_ struct {
	Float3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x2"`

}

//	If the W.XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_ instance.
func (me *XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_ struct {
	Float2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x2"`

}

//	If the W.XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_ instance.
func (me *XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_ struct {
	Int4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4"`

}

//	If the W.XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_ instance.
func (me *XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_ struct {
	Int2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2"`

}

//	If the W.XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_ instance.
func (me *XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_ struct {
	Enum xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

//	If the W.XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_ instance.
func (me *XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_ struct {
	Bool4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4"`

}

//	If the W.XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_ instance.
func (me *XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_ struct {
	Float3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3"`

}

//	If the W.XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_ struct {
	Float3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x3"`

}

//	If the W.XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_ instance.
func (me *XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_ struct {
	Float4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x4"`

}

//	If the W.XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_ struct {
	Float4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4"`

}

//	If the W.XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_ instance.
func (me *XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_ struct {
	Float3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x1"`

}

//	If the W.XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_ instance.
func (me *XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_ struct {
	Float3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x4"`

}

//	If the W.XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_ instance.
func (me *XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_ struct {
	Bool3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3"`

}

//	If the W.XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_ instance.
func (me *XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_ struct {
	Bool2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2"`

}

//	If the W.XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_ instance.
func (me *XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_ struct {
	SamplerImage *TinstanceImageType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler_image"`

}

//	If the W.XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_ instance.
func (me *XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_; fn != nil { fn(me) }
	me.SamplerImage.Walk()
 }

type XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_ struct {
	Float2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x4"`

}

//	If the W.XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_ instance.
func (me *XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_; fn != nil { fn(me) }
 }

type XsdGoPkgHasGroup_FxSetparamGroup struct {
	XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_

	XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_

	XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_

	XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_

	XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_

	XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_

	XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_

	XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_

}

//	If the W.XsdGoPkgHasGroup_FxSetparamGroup function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasGroup_FxSetparamGroup instance as the single argument. Then calls the Walk() method on 27/27 embed(s) and 0/0 field(s) belonging to this XsdGoPkgHasGroup_FxSetparamGroup instance.
func (me *XsdGoPkgHasGroup_FxSetparamGroup) Walk ()  { 
	if fn := W.XsdGoPkgHasGroup_FxSetparamGroup; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_.Walk()
	me.XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_.Walk()
	me.XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_.Walk()
	me.XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_.Walk()
	me.XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_.Walk()
	me.XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_.Walk()
	me.XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_.Walk()
	me.XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_.Walk()
	me.XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_.Walk()
	me.XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_.Walk()
	me.XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_.Walk()
	me.XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_.Walk()
	me.XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_.Walk()
	me.XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_.Walk()
	me.XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_.Walk()
	me.XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_.Walk()
	me.XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_.Walk()
	me.XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_.Walk()
	me.XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_.Walk()
	me.XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_.Walk()
	me.XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_.Walk()
	me.XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_.Walk()
	me.XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_.Walk()
 }

type TxsdInstanceEffectTypeSequenceSetparam struct {
	XsdGoPkgHasGroup_FxSetparamGroup

	XsdGoPkgHasAttr_Ref_XsdtToken_

}

//	If the W.TxsdInstanceEffectTypeSequenceSetparam function is not nil (ie. was set by outside code), calls it with this TxsdInstanceEffectTypeSequenceSetparam instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TxsdInstanceEffectTypeSequenceSetparam instance.
func (me *TxsdInstanceEffectTypeSequenceSetparam) Walk ()  { 
	if fn := W.TxsdInstanceEffectTypeSequenceSetparam; fn != nil { fn(me) }
	me.XsdGoPkgHasGroup_FxSetparamGroup.Walk()
 }

type XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_ struct {
//	Assigns a new value to a previously defined parameter
	Setparams []*TxsdInstanceEffectTypeSequenceSetparam `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

//	If the W.XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_ instance.
func (me *XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_; fn != nil { fn(me) }
	for _, x := range me.Setparams { x.Walk() }
 }

//	Add a hint for a platform of which technique to use in this effect.
//	A profile defines a string that specifies which API profile this is hint is aimed for.
type XsdGoPkgHasAttr_Profile_XsdtNCName_ struct {
//	A profile defines a string that specifies which API profile this is hint is aimed for.
	Profile xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema profile,attr"`

}

type TxsdInstanceEffectTypeSequenceTechniqueHint struct {
//	A reference to the technique to use for the specified platform.
	XsdGoPkgHasAttr_Ref_XsdtNCName_

//	A platform defines a string that specifies which platform this is hint is aimed for.
	XsdGoPkgHasAttr_Platform_XsdtNCName_

//	A profile defines a string that specifies which API profile this is hint is aimed for.
	XsdGoPkgHasAttr_Profile_XsdtNCName_

}

//	If the W.TxsdInstanceEffectTypeSequenceTechniqueHint function is not nil (ie. was set by outside code), calls it with this TxsdInstanceEffectTypeSequenceTechniqueHint instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdInstanceEffectTypeSequenceTechniqueHint instance.
func (me *TxsdInstanceEffectTypeSequenceTechniqueHint) Walk ()  { 
	if fn := W.TxsdInstanceEffectTypeSequenceTechniqueHint; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_ struct {
//	Add a hint for a platform of which technique to use in this effect.
	TechniqueHints []*TxsdInstanceEffectTypeSequenceTechniqueHint `xml:"http://www.collada.org/2008/03/COLLADASchema technique_hint"`

}

//	If the W.XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_ instance.
func (me *XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_; fn != nil { fn(me) }
	for _, x := range me.TechniqueHints { x.Walk() }
 }

type TinstanceEffectType struct {
//	The url attribute refers to resource.  This may refer to a local resource using a relative URL
//	fragment identifier that begins with the "#" character. The url attribute may refer to an external
//	resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	Assigns a new value to a previously defined parameter
	XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	Add a hint for a platform of which technique to use in this effect.
	XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_

}

//	If the W.TinstanceEffectType function is not nil (ie. was set by outside code), calls it with this TinstanceEffectType instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TinstanceEffectType instance.
func (me *TinstanceEffectType) Walk ()  { 
	if fn := W.TinstanceEffectType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_.Walk()
	me.XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_.Walk()
	me.XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_ struct {
//	The material must instance an effect.
	InstanceEffect *TinstanceEffectType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_effect"`

}

//	If the W.XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_ instance.
func (me *XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_; fn != nil { fn(me) }
	me.InstanceEffect.Walk()
 }

//	The material element may contain an asset element.
type XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_ struct {
//	The material element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TmaterialType struct {
//	The material element may contain an asset element.
	XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The material must instance an effect.
	XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TmaterialType function is not nil (ie. was set by outside code), calls it with this TmaterialType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TmaterialType instance.
func (me *TmaterialType) Walk ()  { 
	if fn := W.TmaterialType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_.Walk()
	me.XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_ struct {
//	There must be at least one material element.
	Materials []*TmaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema material"`

}

//	If the W.XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_ instance.
func (me *XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_; fn != nil { fn(me) }
	for _, x := range me.Materials { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TlibraryMaterialsType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_

//	The library_materials element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_

//	There must be at least one material element.
	XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TlibraryMaterialsType function is not nil (ie. was set by outside code), calls it with this TlibraryMaterialsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryMaterialsType instance.
func (me *TlibraryMaterialsType) Walk ()  { 
	if fn := W.TlibraryMaterialsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_ struct {
//	The COLLADA element may contain any
//	number of library_materials elements.
	MaterialsLibraries []*TlibraryMaterialsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_materials"`

}

//	If the W.XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_ instance.
func (me *XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_; fn != nil { fn(me) }
	for _, x := range me.MaterialsLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_controllerss elements.
//	The library_controllers element declares a module of controller elements.
//	The library_controllers element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_ struct {
//	The library_controllers element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one controller element.
//	The controller element categorizes the declaration of generic control information.
//	A controller is a device or mechanism that manages and directs the operations of another object.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The controller element may contain either a skin element or a morph element.
//	The skin element contains vertex and primitive information sufficient to describe blend-weight skinning.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The vertex_weights element associates a set of joint-weight pairs with each vertex in the base mesh.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element must occur at least twice.
type XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element must occur at least twice.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_ instance.
func (me *XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

//	The vcount element contains a list of integers describing the number of influences for each vertex.
//	The vcount element may occur once.
type XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_ struct {
//	The vcount element contains a list of integers describing the number of influences for each vertex.
//	The vcount element may occur once.
	Vcount TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema vcount"`

}

//	If the W.XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_ instance.
func (me *XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_; fn != nil { fn(me) }
 }

//	The v element describes which bones and attributes are associated with each vertex.  An index
//	of -1 into the array of joints refers to the bind shape.  Weights should be normalized before use.
//	The v element must occur zero or one times.
type XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_ struct {
//	The v element describes which bones and attributes are associated with each vertex.  An index
//	of -1 into the array of joints refers to the bind shape.  Weights should be normalized before use.
//	The v element must occur zero or one times.
	V TlistOfIntsType `xml:"http://www.collada.org/2008/03/COLLADASchema v"`

}

//	If the W.XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_ instance.
func (me *XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_; fn != nil { fn(me) }
 }

type TxsdSkinTypeSequenceVertexWeights struct {
//	The count attribute describes the number of vertices in the base mesh. Required element.
	XsdGoPkgHasAttr_Count_TuintType_

//	The vcount element contains a list of integers describing the number of influences for each vertex.
//	The vcount element may occur once.
	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_

//	The v element describes which bones and attributes are associated with each vertex.  An index
//	of -1 into the array of joints refers to the bind shape.  Weights should be normalized before use.
//	The v element must occur zero or one times.
	XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_

//	The input element must occur at least twice.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

}

//	If the W.TxsdSkinTypeSequenceVertexWeights function is not nil (ie. was set by outside code), calls it with this TxsdSkinTypeSequenceVertexWeights instance as the single argument. Then calls the Walk() method on 4/5 embed(s) and 0/0 field(s) belonging to this TxsdSkinTypeSequenceVertexWeights instance.
func (me *TxsdSkinTypeSequenceVertexWeights) Walk ()  { 
	if fn := W.TxsdSkinTypeSequenceVertexWeights; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_.Walk()
	me.XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_.Walk()
	me.XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_.Walk()
 }

type XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_ struct {
//	The vertex_weights element associates a set of joint-weight pairs with each vertex in the base mesh.
	VertexWeights *TxsdSkinTypeSequenceVertexWeights `xml:"http://www.collada.org/2008/03/COLLADASchema vertex_weights"`

}

//	If the W.XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_ instance.
func (me *XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_; fn != nil { fn(me) }
	me.VertexWeights.Walk()
 }

//	The joints element associates joint, or skeleton, nodes with attribute data.
//	In COLLADA, this is specified by the inverse bind matrix of each joint (influence) in the skeleton.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The input element must occur at least twice. These inputs are local inputs.
type XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_ struct {
//	The input element must occur at least twice. These inputs are local inputs.
	Inputs []*TinputLocalType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_ instance.
func (me *XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

type TxsdSkinTypeSequenceJoints struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_

//	The input element must occur at least twice. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_

}

//	If the W.TxsdSkinTypeSequenceJoints function is not nil (ie. was set by outside code), calls it with this TxsdSkinTypeSequenceJoints instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdSkinTypeSequenceJoints instance.
func (me *TxsdSkinTypeSequenceJoints) Walk ()  { 
	if fn := W.TxsdSkinTypeSequenceJoints; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_.Walk()
 }

type XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_ struct {
//	The joints element associates joint, or skeleton, nodes with attribute data.
//	In COLLADA, this is specified by the inverse bind matrix of each joint (influence) in the skeleton.
	Joints *TxsdSkinTypeSequenceJoints `xml:"http://www.collada.org/2008/03/COLLADASchema joints"`

}

//	If the W.XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_ instance.
func (me *XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_; fn != nil { fn(me) }
	me.Joints.Walk()
 }

//	The skin element must contain at least three source elements.
type XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_ struct {
//	The skin element must contain at least three source elements.
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

//	This provides extra information about the position and orientation of the base mesh before binding.
//	If bind_shape_matrix is not specified then an identity matrix may be used as the bind_shape_matrix.
//	The bind_shape_matrix element may occur zero or one times.
type XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_ struct {
//	This provides extra information about the position and orientation of the base mesh before binding.
//	If bind_shape_matrix is not specified then an identity matrix may be used as the bind_shape_matrix.
//	The bind_shape_matrix element may occur zero or one times.
	BindShapeMatrix Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bind_shape_matrix"`

}

//	If the W.XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_ instance.
func (me *XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_; fn != nil { fn(me) }
 }

type TskinType struct {
//	The vertex_weights element associates a set of joint-weight pairs with each vertex in the base mesh.
	XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_

//	The joints element associates joint, or skeleton, nodes with attribute data.
//	In COLLADA, this is specified by the inverse bind matrix of each joint (influence) in the skeleton.
	XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_

//	The source attribute contains a URI reference to the base mesh, (a static mesh or a morphed mesh).
//	This also provides the bind-shape of the skinned mesh.  Required attribute.
	XsdGoPkgHasAttr_Source_XsdtAnyURI_

//	The skin element must contain at least three source elements.
	XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_

//	This provides extra information about the position and orientation of the base mesh before binding.
//	If bind_shape_matrix is not specified then an identity matrix may be used as the bind_shape_matrix.
//	The bind_shape_matrix element may occur zero or one times.
	XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_

}

//	If the W.TskinType function is not nil (ie. was set by outside code), calls it with this TskinType instance as the single argument. Then calls the Walk() method on 5/6 embed(s) and 0/0 field(s) belonging to this TskinType instance.
func (me *TskinType) Walk ()  { 
	if fn := W.TskinType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_.Walk()
	me.XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_.Walk()
	me.XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_.Walk()
	me.XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_.Walk()
 }

type XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_ struct {
//	The controller element may contain either a skin element or a morph element.
	Skin *TskinType `xml:"http://www.collada.org/2008/03/COLLADASchema skin"`

}

//	If the W.XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_ instance.
func (me *XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_; fn != nil { fn(me) }
	me.Skin.Walk()
 }

//	The controller element may contain either a skin element or a morph element.
//	The morph element describes the data required to blend between sets of static meshes. Each
//	possible mesh that can be blended (a morph target) must be specified.
//	The method attribute specifies the which blending technique to use. The accepted values are
//	NORMALIZED, and RELATIVE. The default value if not specified is NORMALIZED.  Optional attribute.
//	An enumuerated type specifying the acceptable morph methods.
type TmorphMethodEnum xsdt.String

//	Since TmorphMethodEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TmorphMethodEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TmorphMethodEnum is "NORMALIZED".
func (me TmorphMethodEnum) IsNormalized () bool { return me == "NORMALIZED" }

//	This convenience method just performs a simple type conversion to TmorphMethodEnum's alias type xsdt.String.
func (me TmorphMethodEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TmorphMethodEnum is "RELATIVE".
func (me TmorphMethodEnum) IsRelative () bool { return me == "RELATIVE" }

//	Since TmorphMethodEnum is just a simple String type, this merely returns the current string value.
func (me TmorphMethodEnum) String () string { return xsdt.String(me).String() }

type XsdGoPkgHasAttr_Method_TmorphMethodEnum_Normalized struct {
//	The method attribute specifies the which blending technique to use. The accepted values are
//	NORMALIZED, and RELATIVE. The default value if not specified is NORMALIZED.  Optional attribute.
	Method TmorphMethodEnum `xml:"http://www.collada.org/2008/03/COLLADASchema method,attr"`

}

//	Returns the default value for Method -- "NORMALIZED"
func (me XsdGoPkgHasAttr_Method_TmorphMethodEnum_Normalized) MethodDefault () TmorphMethodEnum { return TmorphMethodEnum("NORMALIZED") }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The targets element declares the morph targets, their weights and any user defined attributes
//	associated with them.
//	The input element must occur at least twice. These inputs are local inputs.
type XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_ struct {
//	The input element must occur at least twice. These inputs are local inputs.
	Inputs []*TinputLocalType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	If the W.XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_ instance.
func (me *XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_; fn != nil { fn(me) }
	for _, x := range me.Inputs { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdMorphTypeSequenceTargets struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_

//	The input element must occur at least twice. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_

}

//	If the W.TxsdMorphTypeSequenceTargets function is not nil (ie. was set by outside code), calls it with this TxsdMorphTypeSequenceTargets instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdMorphTypeSequenceTargets instance.
func (me *TxsdMorphTypeSequenceTargets) Walk ()  { 
	if fn := W.TxsdMorphTypeSequenceTargets; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_.Walk()
 }

type XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_ struct {
//	The targets element declares the morph targets, their weights and any user defined attributes
//	associated with them.
	Targets *TxsdMorphTypeSequenceTargets `xml:"http://www.collada.org/2008/03/COLLADASchema targets"`

}

//	If the W.XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_ instance.
func (me *XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_; fn != nil { fn(me) }
	me.Targets.Walk()
 }

//	The morph element must contain at least two source elements.
type XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_ struct {
//	The morph element must contain at least two source elements.
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

//	If the W.XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_ instance.
func (me *XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_; fn != nil { fn(me) }
	for _, x := range me.Sources { x.Walk() }
 }

type TmorphType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_

//	The targets element declares the morph targets, their weights and any user defined attributes
//	associated with them.
	XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_

//	The source attribute indicates the base mesh. Required attribute.
	XsdGoPkgHasAttr_Source_XsdtAnyURI_

//	The morph element must contain at least two source elements.
	XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_

//	The method attribute specifies the which blending technique to use. The accepted values are
//	NORMALIZED, and RELATIVE. The default value if not specified is NORMALIZED.  Optional attribute.
	XsdGoPkgHasAttr_Method_TmorphMethodEnum_Normalized

}

//	If the W.TmorphType function is not nil (ie. was set by outside code), calls it with this TmorphType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TmorphType instance.
func (me *TmorphType) Walk ()  { 
	if fn := W.TmorphType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_.Walk()
	me.XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_.Walk()
 }

type XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_ struct {
//	The controller element may contain either a skin element or a morph element.
	Morph *TmorphType `xml:"http://www.collada.org/2008/03/COLLADASchema morph"`

}

//	If the W.XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_ instance.
func (me *XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_; fn != nil { fn(me) }
	me.Morph.Walk()
 }

//	The controller element may contain an asset element.
type XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_ struct {
//	The controller element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TcontrollerType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_

//	The controller element may contain either a skin element or a morph element.
	XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_

//	The controller element may contain either a skin element or a morph element.
	XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_

//	The controller element may contain an asset element.
	XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TcontrollerType function is not nil (ie. was set by outside code), calls it with this TcontrollerType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TcontrollerType instance.
func (me *TcontrollerType) Walk ()  { 
	if fn := W.TcontrollerType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_.Walk()
	me.XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_.Walk()
 }

type XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_ struct {
//	There must be at least one controller element.
	Controllers []*TcontrollerType `xml:"http://www.collada.org/2008/03/COLLADASchema controller"`

}

//	If the W.XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_ instance.
func (me *XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_; fn != nil { fn(me) }
	for _, x := range me.Controllers { x.Walk() }
 }

type TlibraryControllersType struct {
//	The library_controllers element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	There must be at least one controller element.
	XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TlibraryControllersType function is not nil (ie. was set by outside code), calls it with this TlibraryControllersType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryControllersType instance.
func (me *TlibraryControllersType) Walk ()  { 
	if fn := W.TlibraryControllersType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_.Walk()
 }

type XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_ struct {
//	The COLLADA element may contain any
//	number of library_controllerss elements.
	ControllersLibraries []*TlibraryControllersType `xml:"http://www.collada.org/2008/03/COLLADASchema library_controllers"`

}

//	If the W.XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_ instance.
func (me *XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_; fn != nil { fn(me) }
	for _, x := range me.ControllersLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_visual_scenes
//	elements.
//	The library_visual_scenes element declares a module of visual_scene elements.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one visual_scene element.
//	The visual_scene element declares the base of the visual_scene hierarchy or scene graph. The
//	scene contains elements that comprise much of the visual and transformational information
//	content as created by the authoring tools.
//	The visual_scene element may contain an asset element.
type XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_ struct {
//	The visual_scene element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The visual_scene element must have at least one node element.
type XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_ struct {
//	The visual_scene element must have at least one node element.
	Nodes []*TnodeType `xml:"http://www.collada.org/2008/03/COLLADASchema node"`

}

//	If the W.XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_ instance.
func (me *XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_; fn != nil { fn(me) }
	for _, x := range me.Nodes { x.Walk() }
 }

//	The evaluate_scene element declares information specifying how to evaluate this visual_scene. There may be any number of evaluate_scene elements.  They are evaluated in order and particular one may be disabled via setting enabled=false.
type XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The render element describes one effect pass to evaluate the scene.
//	There must be at least one render element.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The camera_node attribute refers to a node that contains a camera describing the viewpoint to render this compositing step from.
type XsdGoPkgHasAttr_CameraNode_XsdtAnyURI_ struct {
//	The camera_node attribute refers to a node that contains a camera describing the viewpoint to render this compositing step from.
	CameraNode xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema camera_node,attr"`

}

//	The layer element specifies which layer to render in this compositing step while evaluating the scene. You may specify any number of layers.  No layers mans that the entire scene will be used.
type XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_ struct {
//	The layer element specifies which layer to render in this compositing step while evaluating the scene. You may specify any number of layers.  No layers mans that the entire scene will be used.
	Layers []xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema layer"`

}

//	If the W.XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_ instance.
func (me *XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_; fn != nil { fn(me) }
 }

//	The instance_material element specifies which effect to render in this compositing step
//	while evaluating the scene.
//	Explicitly select one pass.  If empty then use all passes of the technique.
type XsdGoPkgHasAttr_Pass_XsdtNCName_ struct {
//	Explicitly select one pass.  If empty then use all passes of the technique.
	Pass xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema pass,attr"`

}

type TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride struct {
//	Explicitly select one pass.  If empty then use all passes of the technique.
	XsdGoPkgHasAttr_Pass_XsdtNCName_

//	technique
	XsdGoPkgHasAttr_Ref_XsdtNCName_

}

//	If the W.TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride function is not nil (ie. was set by outside code), calls it with this TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride instance.
func (me *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride) Walk ()  { 
	if fn := W.TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride; fn != nil { fn(me) }
 }

type XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_ struct {
	TechniqueOverride *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride `xml:"http://www.collada.org/2008/03/COLLADASchema technique_override"`

}

//	If the W.XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_ instance.
func (me *XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_; fn != nil { fn(me) }
	me.TechniqueOverride.Walk()
 }

//	The bind element binds values to effect parameters upon instantiation.
type TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind struct {
//	The target attribute specifies the location of the value to bind to the specified semantic.
//	This text string is a path-name following a simple syntax described in the ?Addressing Syntax?
//	section.
	XsdGoPkgHasAttr_Target_XsdtToken_

//	The semantic attribute specifies which effect parameter to bind.
	XsdGoPkgHasAttr_Semantic_XsdtNCName_

}

//	If the W.TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind function is not nil (ie. was set by outside code), calls it with this TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind instance.
func (me *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind) Walk ()  { 
	if fn := W.TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind; fn != nil { fn(me) }
 }

type XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_ struct {
//	The bind element binds values to effect parameters upon instantiation.
	Binds []*TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

//	If the W.XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_ instance.
func (me *XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_; fn != nil { fn(me) }
	for _, x := range me.Binds { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial struct {
//	The bind element binds values to effect parameters upon instantiation.
	XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_

//	URL to a material
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_

}

//	If the W.TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial function is not nil (ie. was set by outside code), calls it with this TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial instance as the single argument. Then calls the Walk() method on 3/4 embed(s) and 0/0 field(s) belonging to this TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial instance.
func (me *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial) Walk ()  { 
	if fn := W.TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_.Walk()
	me.XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_.Walk()
 }

type XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_ struct {
//	The instance_material element specifies which effect to render in this compositing step
//	while evaluating the scene.
	InstanceMaterial *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial `xml:"http://www.collada.org/2008/03/COLLADASchema instance_material"`

}

//	If the W.XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_ instance.
func (me *XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_; fn != nil { fn(me) }
	me.InstanceMaterial.Walk()
 }

type TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The camera_node attribute refers to a node that contains a camera describing the viewpoint to render this compositing step from.
	XsdGoPkgHasAttr_CameraNode_XsdtAnyURI_

//	The layer element specifies which layer to render in this compositing step while evaluating the scene. You may specify any number of layers.  No layers mans that the entire scene will be used.
	XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_

//	The instance_material element specifies which effect to render in this compositing step
//	while evaluating the scene.
	XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_

	XsdGoPkgHasAttr_Sid_TsidType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_

}

//	If the W.TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender function is not nil (ie. was set by outside code), calls it with this TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender instance as the single argument. Then calls the Walk() method on 3/6 embed(s) and 0/0 field(s) belonging to this TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender instance.
func (me *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender) Walk ()  { 
	if fn := W.TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_.Walk()
	me.XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_.Walk()
	me.XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_ struct {
//	The render element describes one effect pass to evaluate the scene.
//	There must be at least one render element.
	Renders []*TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender `xml:"http://www.collada.org/2008/03/COLLADASchema render"`

}

//	If the W.XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_ instance.
func (me *XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_; fn != nil { fn(me) }
	for _, x := range me.Renders { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	allow this to be disabled and hense skipped durring evaluation.  This is useful for debug.
type XsdGoPkgHasAttr_Enable_XsdtBoolean_True struct {
//	allow this to be disabled and hense skipped durring evaluation.  This is useful for debug.
	Enable xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema enable,attr"`

}

//	Returns the default value for Enable -- true
func (me XsdGoPkgHasAttr_Enable_XsdtBoolean_True) EnableDefault () xsdt.Boolean { return xsdt.Boolean(true) }

type TxsdVisualSceneTypeSequenceEvaluateScene struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Sid_TsidType_

//	allow this to be disabled and hense skipped durring evaluation.  This is useful for debug.
	XsdGoPkgHasAttr_Enable_XsdtBoolean_True

	XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_

	XsdGoPkgHasAttr_Id_XsdtId_

//	The render element describes one effect pass to evaluate the scene.
//	There must be at least one render element.
	XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_

	XsdGoPkgHasAttr_Name_XsdtToken_

}

//	If the W.TxsdVisualSceneTypeSequenceEvaluateScene function is not nil (ie. was set by outside code), calls it with this TxsdVisualSceneTypeSequenceEvaluateScene instance as the single argument. Then calls the Walk() method on 3/7 embed(s) and 0/0 field(s) belonging to this TxsdVisualSceneTypeSequenceEvaluateScene instance.
func (me *TxsdVisualSceneTypeSequenceEvaluateScene) Walk ()  { 
	if fn := W.TxsdVisualSceneTypeSequenceEvaluateScene; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_.Walk()
 }

type XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_ struct {
//	The evaluate_scene element declares information specifying how to evaluate this visual_scene. There may be any number of evaluate_scene elements.  They are evaluated in order and particular one may be disabled via setting enabled=false.
	EvaluateScenes []*TxsdVisualSceneTypeSequenceEvaluateScene `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate_scene"`

}

//	If the W.XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_ instance.
func (me *XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_; fn != nil { fn(me) }
	for _, x := range me.EvaluateScenes { x.Walk() }
 }

type TvisualSceneType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_

//	The visual_scene element must have at least one node element.
	XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_

//	The evaluate_scene element declares information specifying how to evaluate this visual_scene. There may be any number of evaluate_scene elements.  They are evaluated in order and particular one may be disabled via setting enabled=false.
	XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_

//	The visual_scene element may contain an asset element.
	XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element. This
//	value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TvisualSceneType function is not nil (ie. was set by outside code), calls it with this TvisualSceneType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TvisualSceneType instance.
func (me *TvisualSceneType) Walk ()  { 
	if fn := W.TvisualSceneType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_.Walk()
	me.XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_.Walk()
	me.XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_.Walk()
 }

type XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_ struct {
//	There must be at least one visual_scene element.
	VisualScenes []*TvisualSceneType `xml:"http://www.collada.org/2008/03/COLLADASchema visual_scene"`

}

//	If the W.XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_ instance.
func (me *XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_; fn != nil { fn(me) }
	for _, x := range me.VisualScenes { x.Walk() }
 }

//	The library_visual_scenes element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_ struct {
//	The library_visual_scenes element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TlibraryVisualScenesType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The library_visual_scenes element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_

//	There must be at least one visual_scene element.
	XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_

}

//	If the W.TlibraryVisualScenesType function is not nil (ie. was set by outside code), calls it with this TlibraryVisualScenesType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryVisualScenesType instance.
func (me *TlibraryVisualScenesType) Walk ()  { 
	if fn := W.TlibraryVisualScenesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_.Walk()
 }

type XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_ struct {
//	The COLLADA element may contain any
//	number of library_visual_scenes
//	elements.
	VisualScenesLibraries []*TlibraryVisualScenesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_visual_scenes"`

}

//	If the W.XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_ instance.
func (me *XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_; fn != nil { fn(me) }
	for _, x := range me.VisualScenesLibraries { x.Walk() }
 }

//	The version attribute is the COLLADA schema revision with which the instance document
//	conforms. Required Attribute.
//	An enumerated type specifying the acceptable document versions.
type TversionEnum xsdt.String

//	Since TversionEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TversionEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TversionEnum is just a simple String type, this merely returns the current string value.
func (me TversionEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TversionEnum's alias type xsdt.String.
func (me TversionEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TversionEnum is "1.5.0".
func (me TversionEnum) Is150 () bool { return me == "1.5.0" }

type XsdGoPkgHasAttr_Version_TversionEnum_ struct {
//	The version attribute is the COLLADA schema revision with which the instance document
//	conforms. Required Attribute.
	Version TversionEnum `xml:"http://www.collada.org/2008/03/COLLADASchema version,attr"`

}

//	The COLLADA element may contain any
//	number of library_physics_scenes
//	elements.
//	The library_physics_scenes element declares a module of physics_scene elements.
//	The library_physics_scenes element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_ struct {
//	The library_physics_scenes element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one physics_scene element.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The technique_common element specifies the physics_scene information for the common profile
//	which all COLLADA implementations need to support.
//	The gravity vector to use for the physics_scene.
type XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_ struct {
//	The gravity vector to use for the physics_scene.
	Gravity *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema gravity"`

}

//	If the W.XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_ instance.
func (me *XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_; fn != nil { fn(me) }
	me.Gravity.Walk()
 }

//	The time_step for the physics_scene.
type XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_ struct {
//	The time_step for the physics_scene.
	TimeStep *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema time_step"`

}

//	If the W.XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_ instance.
func (me *XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_; fn != nil { fn(me) }
	me.TimeStep.Walk()
 }

type TxsdPhysicsSceneTypeSequenceTechniqueCommon struct {
//	The gravity vector to use for the physics_scene.
	XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_

//	The time_step for the physics_scene.
	XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_

}

//	If the W.TxsdPhysicsSceneTypeSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdPhysicsSceneTypeSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdPhysicsSceneTypeSequenceTechniqueCommon instance.
func (me *TxsdPhysicsSceneTypeSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdPhysicsSceneTypeSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_.Walk()
	me.XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the physics_scene information for the common profile
//	which all COLLADA implementations need to support.
	TechniqueCommon *TxsdPhysicsSceneTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

//	The physics_scene element may contain an asset element.
type XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_ struct {
//	The physics_scene element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

//	There may be any number of instance_force_field elements.
type XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_ struct {
//	There may be any number of instance_force_field elements.
	ForceFieldInstances []*TinstanceForceFieldType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_force_field"`

}

//	If the W.XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_ instance.
func (me *XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_; fn != nil { fn(me) }
	for _, x := range me.ForceFieldInstances { x.Walk() }
 }

//	There may be any number of instance_physics_model elements.
type XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ struct {
//	There may be any number of instance_physics_model elements.
	PhysicsModelInstances []*TinstancePhysicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_model"`

}

//	If the W.XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ instance.
func (me *XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsModelInstances { x.Walk() }
 }

type TphysicsSceneType struct {
//	The physics_scene element may contain an asset element.
	XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_

//	There may be any number of instance_force_field elements.
	XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_

//	There may be any number of instance_physics_model elements.
	XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_

//	The technique_common element specifies the physics_scene information for the common profile
//	which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TphysicsSceneType function is not nil (ie. was set by outside code), calls it with this TphysicsSceneType instance as the single argument. Then calls the Walk() method on 6/8 embed(s) and 0/0 field(s) belonging to this TphysicsSceneType instance.
func (me *TphysicsSceneType) Walk ()  { 
	if fn := W.TphysicsSceneType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_.Walk()
	me.XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_.Walk()
	me.XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_.Walk()
	me.XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_ struct {
//	There must be at least one physics_scene element.
	PhysicsScenes []*TphysicsSceneType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_scene"`

}

//	If the W.XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_ instance.
func (me *XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsScenes { x.Walk() }
 }

type TlibraryPhysicsScenesType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_

//	There must be at least one physics_scene element.
	XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The library_physics_scenes element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_

}

//	If the W.TlibraryPhysicsScenesType function is not nil (ie. was set by outside code), calls it with this TlibraryPhysicsScenesType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryPhysicsScenesType instance.
func (me *TlibraryPhysicsScenesType) Walk ()  { 
	if fn := W.TlibraryPhysicsScenesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_.Walk()
 }

type XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_ struct {
//	The COLLADA element may contain any
//	number of library_physics_scenes
//	elements.
	PhysicsScenesLibraries []*TlibraryPhysicsScenesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_physics_scenes"`

}

//	If the W.XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_ instance.
func (me *XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_; fn != nil { fn(me) }
	for _, x := range me.PhysicsScenesLibraries { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ struct {
	ArticulatedSystemInstances []*TinstanceArticulatedSystemType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_articulated_system"`

}

//	If the W.XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ instance.
func (me *XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_; fn != nil { fn(me) }
	for _, x := range me.ArticulatedSystemInstances { x.Walk() }
 }

type XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ struct {
	KinematicsModelInstances []*TinstanceKinematicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_kinematics_model"`

}

//	If the W.XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ instance.
func (me *XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_; fn != nil { fn(me) }
	for _, x := range me.KinematicsModelInstances { x.Walk() }
 }

type XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_ struct {
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TkinematicsSceneType struct {
	XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_

	XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_

	XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TkinematicsSceneType function is not nil (ie. was set by outside code), calls it with this TkinematicsSceneType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TkinematicsSceneType instance.
func (me *TkinematicsSceneType) Walk ()  { 
	if fn := W.TkinematicsSceneType; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_.Walk()
	me.XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_.Walk()
 }

type XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_ struct {
	KinematicsScenes []*TkinematicsSceneType `xml:"http://www.collada.org/2008/03/COLLADASchema kinematics_scene"`

}

//	If the W.XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_ instance.
func (me *XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_; fn != nil { fn(me) }
	for _, x := range me.KinematicsScenes { x.Walk() }
 }

type TlibraryKinematicsScenesType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

//	If the W.TlibraryKinematicsScenesType function is not nil (ie. was set by outside code), calls it with this TlibraryKinematicsScenesType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryKinematicsScenesType instance.
func (me *TlibraryKinematicsScenesType) Walk ()  { 
	if fn := W.TlibraryKinematicsScenesType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_.Walk()
 }

type XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_ struct {
	KinematicsScenesLibraries []*TlibraryKinematicsScenesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_kinematics_scenes"`

}

//	If the W.XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_ instance.
func (me *XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_; fn != nil { fn(me) }
	for _, x := range me.KinematicsScenesLibraries { x.Walk() }
 }

//	The COLLADA element may contain any
//	number of library_lights elements.
//	The library_lights element declares a module of light elements.
//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	There must be at least one light element.
//	The light element declares a light source that illuminates the scene.
//	Light sources have many different properties and radiate light in many different patterns and
//	frequencies.
//	This element may contain any number of non-common profile techniques.
type XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_ struct {
//	This element may contain any number of non-common profile techniques.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	If the W.XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_ instance.
func (me *XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_; fn != nil { fn(me) }
	for _, x := range me.Techniques { x.Walk() }
 }

//	The technique_common element specifies the light information for the common profile which all
//	COLLADA implementations need to support.
//	The directional element declares the parameters required to describe a directional light source.
//	A directional light is one that lights everything from the same direction, regardless of location.
//	The light's default direction vector in local coordinates is [0,0,-1], pointing down the -Z axis.
//	The actual direction of the light is defined by the transform of the node where the light is
//	instantiated.
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
type XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	Color *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema color"`

}

//	If the W.XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ instance.
func (me *XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_; fn != nil { fn(me) }
	me.Color.Walk()
 }

type TxsdLightTypeSequenceTechniqueCommonChoiceDirectional struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_

}

//	If the W.TxsdLightTypeSequenceTechniqueCommonChoiceDirectional function is not nil (ie. was set by outside code), calls it with this TxsdLightTypeSequenceTechniqueCommonChoiceDirectional instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdLightTypeSequenceTechniqueCommonChoiceDirectional instance.
func (me *TxsdLightTypeSequenceTechniqueCommonChoiceDirectional) Walk ()  { 
	if fn := W.TxsdLightTypeSequenceTechniqueCommonChoiceDirectional; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_.Walk()
 }

type XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_ struct {
//	The directional element declares the parameters required to describe a directional light source.
//	A directional light is one that lights everything from the same direction, regardless of location.
//	The light's default direction vector in local coordinates is [0,0,-1], pointing down the -Z axis.
//	The actual direction of the light is defined by the transform of the node where the light is
//	instantiated.
	Directional *TxsdLightTypeSequenceTechniqueCommonChoiceDirectional `xml:"http://www.collada.org/2008/03/COLLADASchema directional"`

}

//	If the W.XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_ instance.
func (me *XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_; fn != nil { fn(me) }
	me.Directional.Walk()
 }

//	The point element declares the parameters required to describe a point light source.  A point light
//	source radiates light in all directions from a known location in space. The intensity of a point
//	light source is attenuated as the distance to the light source increases. The position of the light
//	is defined by the transform of the node in which it is instantiated.
//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
type XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 struct {
//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	LinearAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema linear_attenuation"`

}

//	If the W.XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00; fn != nil { fn(me) }
	me.LinearAttenuation.Walk()
 }

//	Returns the default value for LinearAttenuation -- 0.0
func (me XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00) LinearAttenuationDefault () TfloatType { return TfloatType(0.0) }

//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
type XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	Color *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema color"`

}

//	If the W.XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ instance.
func (me *XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_; fn != nil { fn(me) }
	me.Color.Walk()
 }

//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
type XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 struct {
//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	QuadraticAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema quadratic_attenuation"`

}

//	Returns the default value for QuadraticAttenuation -- 0.0
func (me XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00) QuadraticAttenuationDefault () TfloatType { return TfloatType(0.0) }

//	If the W.XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00; fn != nil { fn(me) }
	me.QuadraticAttenuation.Walk()
 }

//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
type XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 struct {
//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	ConstantAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema constant_attenuation"`

}

//	If the W.XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 instance.
func (me *XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10; fn != nil { fn(me) }
	me.ConstantAttenuation.Walk()
 }

//	Returns the default value for ConstantAttenuation -- 1.0
func (me XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10) ConstantAttenuationDefault () TfloatType { return TfloatType(1.0) }

type TxsdLightTypeSequenceTechniqueCommonChoicePoint struct {
//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00

//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10

//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00

//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_

}

//	If the W.TxsdLightTypeSequenceTechniqueCommonChoicePoint function is not nil (ie. was set by outside code), calls it with this TxsdLightTypeSequenceTechniqueCommonChoicePoint instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdLightTypeSequenceTechniqueCommonChoicePoint instance.
func (me *TxsdLightTypeSequenceTechniqueCommonChoicePoint) Walk ()  { 
	if fn := W.TxsdLightTypeSequenceTechniqueCommonChoicePoint; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00.Walk()
	me.XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_.Walk()
	me.XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00.Walk()
	me.XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10.Walk()
 }

type XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_ struct {
//	The point element declares the parameters required to describe a point light source.  A point light
//	source radiates light in all directions from a known location in space. The intensity of a point
//	light source is attenuated as the distance to the light source increases. The position of the light
//	is defined by the transform of the node in which it is instantiated.
	Point *TxsdLightTypeSequenceTechniqueCommonChoicePoint `xml:"http://www.collada.org/2008/03/COLLADASchema point"`

}

//	If the W.XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_ instance.
func (me *XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_; fn != nil { fn(me) }
	me.Point.Walk()
 }

//	The spot element declares the parameters required to describe a spot light source.  A spot light
//	source radiates light in one direction from a known location in space. The light radiates from
//	the spot light source in a cone shape. The intensity of the light is attenuated as the radiation
//	angle increases away from the direction of the light source. The intensity of a spot light source
//	is also attenuated as the distance to the light source increases. The position of the light is
//	defined by the transform of the node in which it is instantiated. The light's default direction
//	vector in local coordinates is [0,0,-1], pointing down the -Z axis. The actual direction of the
//	light is defined by the transform of the node where the light is instantiated.
//	The falloff_angle is used to specify the amount of attenuation based on the direction of the light.
type XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800 struct {
//	The falloff_angle is used to specify the amount of attenuation based on the direction of the light.
	FalloffAngle *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema falloff_angle"`

}

//	Returns the default value for FalloffAngle -- 180.0
func (me XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800) FalloffAngleDefault () TfloatType { return TfloatType(180.0) }

//	If the W.XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800 instance.
func (me *XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800; fn != nil { fn(me) }
	me.FalloffAngle.Walk()
 }

//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
type XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 struct {
//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	LinearAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema linear_attenuation"`

}

//	If the W.XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00; fn != nil { fn(me) }
	me.LinearAttenuation.Walk()
 }

//	Returns the default value for LinearAttenuation -- 0.0
func (me XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00) LinearAttenuationDefault () TfloatType { return TfloatType(0.0) }

//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
type XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	Color *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema color"`

}

//	If the W.XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ instance.
func (me *XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_; fn != nil { fn(me) }
	me.Color.Walk()
 }

//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
type XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 struct {
//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	ConstantAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema constant_attenuation"`

}

//	Returns the default value for ConstantAttenuation -- 1.0
func (me XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10) ConstantAttenuationDefault () TfloatType { return TfloatType(1.0) }

//	If the W.XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 instance.
func (me *XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10; fn != nil { fn(me) }
	me.ConstantAttenuation.Walk()
 }

//	The falloff_exponent is used to specify the amount of attenuation based on the direction of the light.
type XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00 struct {
//	The falloff_exponent is used to specify the amount of attenuation based on the direction of the light.
	FalloffExponent *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema falloff_exponent"`

}

//	Returns the default value for FalloffExponent -- 0.0
func (me XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00) FalloffExponentDefault () TfloatType { return TfloatType(0.0) }

//	If the W.XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00; fn != nil { fn(me) }
	me.FalloffExponent.Walk()
 }

//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
type XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 struct {
//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	QuadraticAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema quadratic_attenuation"`

}

//	Returns the default value for QuadraticAttenuation -- 0.0
func (me XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00) QuadraticAttenuationDefault () TfloatType { return TfloatType(0.0) }

//	If the W.XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 instance.
func (me *XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00; fn != nil { fn(me) }
	me.QuadraticAttenuation.Walk()
 }

type TxsdLightTypeSequenceTechniqueCommonChoiceSpot struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_

//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10

//	The falloff_exponent is used to specify the amount of attenuation based on the direction of the light.
	XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00

//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00

//	The falloff_angle is used to specify the amount of attenuation based on the direction of the light.
	XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800

//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00

}

//	If the W.TxsdLightTypeSequenceTechniqueCommonChoiceSpot function is not nil (ie. was set by outside code), calls it with this TxsdLightTypeSequenceTechniqueCommonChoiceSpot instance as the single argument. Then calls the Walk() method on 6/6 embed(s) and 0/0 field(s) belonging to this TxsdLightTypeSequenceTechniqueCommonChoiceSpot instance.
func (me *TxsdLightTypeSequenceTechniqueCommonChoiceSpot) Walk ()  { 
	if fn := W.TxsdLightTypeSequenceTechniqueCommonChoiceSpot; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_.Walk()
	me.XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10.Walk()
	me.XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00.Walk()
	me.XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00.Walk()
	me.XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800.Walk()
	me.XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00.Walk()
 }

type XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_ struct {
//	The spot element declares the parameters required to describe a spot light source.  A spot light
//	source radiates light in one direction from a known location in space. The light radiates from
//	the spot light source in a cone shape. The intensity of the light is attenuated as the radiation
//	angle increases away from the direction of the light source. The intensity of a spot light source
//	is also attenuated as the distance to the light source increases. The position of the light is
//	defined by the transform of the node in which it is instantiated. The light's default direction
//	vector in local coordinates is [0,0,-1], pointing down the -Z axis. The actual direction of the
//	light is defined by the transform of the node where the light is instantiated.
	Spot *TxsdLightTypeSequenceTechniqueCommonChoiceSpot `xml:"http://www.collada.org/2008/03/COLLADASchema spot"`

}

//	If the W.XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_ instance.
func (me *XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_; fn != nil { fn(me) }
	me.Spot.Walk()
 }

//	The ambient element declares the parameters required to describe an ambient light source.
//	An ambient light is one that lights everything evenly, regardless of location or orientation.
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
type XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	Color *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema color"`

}

//	If the W.XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ instance.
func (me *XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_; fn != nil { fn(me) }
	me.Color.Walk()
 }

type TxsdLightTypeSequenceTechniqueCommonChoiceAmbient struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_

}

//	If the W.TxsdLightTypeSequenceTechniqueCommonChoiceAmbient function is not nil (ie. was set by outside code), calls it with this TxsdLightTypeSequenceTechniqueCommonChoiceAmbient instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TxsdLightTypeSequenceTechniqueCommonChoiceAmbient instance.
func (me *TxsdLightTypeSequenceTechniqueCommonChoiceAmbient) Walk ()  { 
	if fn := W.TxsdLightTypeSequenceTechniqueCommonChoiceAmbient; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_.Walk()
 }

type XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_ struct {
//	The ambient element declares the parameters required to describe an ambient light source.
//	An ambient light is one that lights everything evenly, regardless of location or orientation.
	Ambient *TxsdLightTypeSequenceTechniqueCommonChoiceAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema ambient"`

}

//	If the W.XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_ instance.
func (me *XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_; fn != nil { fn(me) }
	me.Ambient.Walk()
 }

type TxsdLightTypeSequenceTechniqueCommon struct {
//	The ambient element declares the parameters required to describe an ambient light source.
//	An ambient light is one that lights everything evenly, regardless of location or orientation.
	XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_

//	The directional element declares the parameters required to describe a directional light source.
//	A directional light is one that lights everything from the same direction, regardless of location.
//	The light's default direction vector in local coordinates is [0,0,-1], pointing down the -Z axis.
//	The actual direction of the light is defined by the transform of the node where the light is
//	instantiated.
	XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_

//	The point element declares the parameters required to describe a point light source.  A point light
//	source radiates light in all directions from a known location in space. The intensity of a point
//	light source is attenuated as the distance to the light source increases. The position of the light
//	is defined by the transform of the node in which it is instantiated.
	XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_

//	The spot element declares the parameters required to describe a spot light source.  A spot light
//	source radiates light in one direction from a known location in space. The light radiates from
//	the spot light source in a cone shape. The intensity of the light is attenuated as the radiation
//	angle increases away from the direction of the light source. The intensity of a spot light source
//	is also attenuated as the distance to the light source increases. The position of the light is
//	defined by the transform of the node in which it is instantiated. The light's default direction
//	vector in local coordinates is [0,0,-1], pointing down the -Z axis. The actual direction of the
//	light is defined by the transform of the node where the light is instantiated.
	XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_

}

//	If the W.TxsdLightTypeSequenceTechniqueCommon function is not nil (ie. was set by outside code), calls it with this TxsdLightTypeSequenceTechniqueCommon instance as the single argument. Then calls the Walk() method on 4/4 embed(s) and 0/0 field(s) belonging to this TxsdLightTypeSequenceTechniqueCommon instance.
func (me *TxsdLightTypeSequenceTechniqueCommon) Walk ()  { 
	if fn := W.TxsdLightTypeSequenceTechniqueCommon; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_.Walk()
	me.XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_.Walk()
	me.XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_.Walk()
	me.XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_.Walk()
 }

type XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the light information for the common profile which all
//	COLLADA implementations need to support.
	TechniqueCommon *TxsdLightTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	If the W.XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_ instance.
func (me *XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_; fn != nil { fn(me) }
	me.TechniqueCommon.Walk()
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

//	The light element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_ struct {
//	The light element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TlightType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_

//	The light element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The technique_common element specifies the light information for the common profile which all
//	COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_

}

//	If the W.TlightType function is not nil (ie. was set by outside code), calls it with this TlightType instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TlightType instance.
func (me *TlightType) Walk ()  { 
	if fn := W.TlightType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_.Walk()
	me.XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_.Walk()
	me.XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_.Walk()
 }

type XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_ struct {
//	There must be at least one light element.
	Lights []*TlightType `xml:"http://www.collada.org/2008/03/COLLADASchema light"`

}

//	If the W.XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_ instance.
func (me *XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_; fn != nil { fn(me) }
	for _, x := range me.Lights { x.Walk() }
 }

//	The library_lights element may contain an asset element.
type XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_ struct {
//	The library_lights element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	If the W.XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_ instance.
func (me *XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_; fn != nil { fn(me) }
	me.Asset.Walk()
 }

type TlibraryLightsType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	There must be at least one light element.
	XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_

//	The library_lights element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_

}

//	If the W.TlibraryLightsType function is not nil (ie. was set by outside code), calls it with this TlibraryLightsType instance as the single argument. Then calls the Walk() method on 3/5 embed(s) and 0/0 field(s) belonging to this TlibraryLightsType instance.
func (me *TlibraryLightsType) Walk ()  { 
	if fn := W.TlibraryLightsType; fn != nil { fn(me) }
	me.XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_.Walk()
 }

type XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_ struct {
//	The COLLADA element may contain any
//	number of library_lights elements.
	LightsLibraries []*TlibraryLightsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_lights"`

}

//	If the W.XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_ instance.
func (me *XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_; fn != nil { fn(me) }
	for _, x := range me.LightsLibraries { x.Walk() }
 }

//	The extra element may appear any number of times.
type XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_ struct {
//	The extra element may appear any number of times.
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	If the W.XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_ instance.
func (me *XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_; fn != nil { fn(me) }
	for _, x := range me.Extras { x.Walk() }
 }

type TxsdCollada struct {
//	The COLLADA element may contain any
//	number of library_nodes elements.
	XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_

//	The COLLADA element may contain any
//	number of library_effects elements.
	XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_

	XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_

//	The scene embodies the entire set of information that can be visualized from the
//	contents of a COLLADA resource. The scene element declares the base of the scene
//	hierarchy or scene graph. The scene contains elements that comprise much of the
//	visual and transformational information content as created by the authoring tools.
	XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_

//	The COLLADA element may contain any
//	number of library_animations elements.
	XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_

//	The COLLADA element may contain any
//	number of library_cameras elements.
	XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_

//	The COLLADA element may contain any
//	number of library_physics_models
//	elements.
	XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_

//	The COLLADA element may contain any
//	number of library_images elements.
	XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_

//	The COLLADA element may contain any
//	number of library_force_fields elements.
	XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_

//	The COLLADA element may contain any
//	number of library_materials elements.
	XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_

//	The COLLADA element may contain any
//	number of library_animation_clips
//	elements.
	XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_

//	The COLLADA element may contain any
//	number of library_geometriess elements.
	XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_

//	The COLLADA element must contain an asset element.
	XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_

	XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_

	XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_

//	The xml:base attribute allows you to define the base URI for this COLLADA document. See
//	http://www.w3.org/TR/xmlbase/ for more information.
	xml.XsdGoPkgHasAttr_Base

	XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_

//	The COLLADA element may contain any
//	number of library_materials elements.
	XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_

//	The COLLADA element may contain any
//	number of library_controllerss elements.
	XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_

//	The COLLADA element may contain any
//	number of library_visual_scenes
//	elements.
	XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_

//	The version attribute is the COLLADA schema revision with which the instance document
//	conforms. Required Attribute.
	XsdGoPkgHasAttr_Version_TversionEnum_

//	The COLLADA element may contain any
//	number of library_physics_scenes
//	elements.
	XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_

	XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_

//	The COLLADA element may contain any
//	number of library_lights elements.
	XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_

}

//	If the W.TxsdCollada function is not nil (ie. was set by outside code), calls it with this TxsdCollada instance as the single argument. Then calls the Walk() method on 23/25 embed(s) and 0/0 field(s) belonging to this TxsdCollada instance.
func (me *TxsdCollada) Walk ()  { 
	if fn := W.TxsdCollada; fn != nil { fn(me) }
	me.XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_.Walk()
	me.XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_.Walk()
	me.XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_.Walk()
	me.XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_.Walk()
	me.XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_.Walk()
	me.XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_.Walk()
	me.XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_.Walk()
	me.XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_.Walk()
	me.XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_.Walk()
	me.XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_.Walk()
	me.XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_.Walk()
	me.XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_.Walk()
	me.XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_.Walk()
	me.XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_.Walk()
	me.XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_.Walk()
	me.XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_.Walk()
	me.XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_.Walk()
	me.XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_.Walk()
	me.XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_.Walk()
	me.XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_.Walk()
	me.XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_.Walk()
	me.XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_.Walk()
	me.XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_.Walk()
 }

type XsdGoPkgHasElems_Collada struct {
//	The COLLADA element declares the root of the document that comprises some of the content
//	in the COLLADA schema.
	Colladas []*TxsdCollada `xml:"http://www.collada.org/2008/03/COLLADASchema COLLADA"`

}

//	If the W.XsdGoPkgHasElems_Collada function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Collada instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Collada instance.
func (me *XsdGoPkgHasElems_Collada) Walk ()  { 
	if fn := W.XsdGoPkgHasElems_Collada; fn != nil { fn(me) }
	for _, x := range me.Colladas { x.Walk() }
 }

//	The COLLADA element declares the root of the document that comprises some of the content
//	in the COLLADA schema.
type XsdGoPkgHasElem_Collada struct {
//	The COLLADA element declares the root of the document that comprises some of the content
//	in the COLLADA schema.
	Collada *TxsdCollada `xml:"http://www.collada.org/2008/03/COLLADASchema COLLADA"`

}

//	If the W.XsdGoPkgHasElem_Collada function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Collada instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Collada instance.
func (me *XsdGoPkgHasElem_Collada) Walk ()  { 
	if fn := W.XsdGoPkgHasElem_Collada; fn != nil { fn(me) }
	me.Collada.Walk()
 }

//	Provides 2073 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
var W = struct {
	TxsdPhysicsMaterialTypeSequenceTechniqueCommon func (o *TxsdPhysicsMaterialTypeSequenceTechniqueCommon)
	TxsdGlPipelineSettingsGroupChoicePointSize func (o *TxsdGlPipelineSettingsGroupChoicePointSize)
	XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_ func (o *XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_)
	XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_ func (o *XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_)
	XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_ func (o *XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_)
	XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ func (o *XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_)
	XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3choicegles_param_groupschema_Float3_Tfloat3Type_)
	XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_ func (o *XsdGoPkgHasElem_heightsequencecapsule_typeschema_Height_TfloatType_)
	XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_ func (o *XsdGoPkgHasElems_polygonschoicesequencemesh_typeschema_Polygons_TpolygonsType_)
	XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest func (o *XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest)
	XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_effect_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_ func (o *XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_)
	XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_ func (o *XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_)
	XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_ func (o *XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_)
	XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_ func (o *XsdGoPkgHasElems_linestripschoicesequencemesh_typeschema_Linestrips_TlinestripsType_)
	TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable func (o *TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable)
	TxsdGlesPipelineSettingsGroupChoiceCullFace func (o *TxsdGlesPipelineSettingsGroupChoiceCullFace)
	TfxCleardepthType func (o *TfxCleardepthType)
	TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn func (o *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn)
	XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ func (o *XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_)
	TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable func (o *TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable)
	TkinematicsType func (o *TkinematicsType)
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_ func (o *XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_)
	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_)
	XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_ func (o *XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_)
	TbindMaterialType func (o *TbindMaterialType)
	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_ func (o *XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_)
	XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_ func (o *XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_)
	XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_controllers_typeschema_Extra_TextraType_)
	TxsdGlPipelineSettingsGroupChoicePolygonMode func (o *TxsdGlPipelineSettingsGroupChoicePolygonMode)
	TlibraryLightsType func (o *TlibraryLightsType)
	XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_ func (o *XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_)
	XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_ func (o *XsdGoPkgHasElem_verticessequencemesh_typeschema_Vertices_TverticesType_)
	TxsdGlesPipelineSettingsGroupChoiceAlphaFunc func (o *TxsdGlesPipelineSettingsGroupChoiceAlphaFunc)
	XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_ func (o *XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_)
	XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_ func (o *XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_)
	TxsdPhysicsSceneTypeSequenceTechniqueCommon func (o *TxsdPhysicsSceneTypeSequenceTechniqueCommon)
	TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc func (o *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc)
	TxsdGlesPipelineSettingsGroupChoiceDepthFunc func (o *TxsdGlesPipelineSettingsGroupChoiceDepthFunc)
	TlibraryVisualScenesType func (o *TlibraryVisualScenesType)
	XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_ func (o *XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_)
	TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable func (o *TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable)
	XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_ func (o *XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_)
	XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecamera_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_ func (o *XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_)
	TxsdGlesPipelineSettingsGroupChoicePointSizeMin func (o *TxsdGlesPipelineSettingsGroupChoicePointSizeMin)
	XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_)
	XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencepcurves_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequencelines_typeschema_P_TpType_)
	XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicekinematics_newparam_typeschema_Float_TfloatType_)
	TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable func (o *TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable)
	XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_float3x3choicecg_param_groupschema_Float3X3_Tfloat3X3Type_)
	XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_ func (o *XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_)
	XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicesequencefx_common_newparam_typeschema_Float_TfloatType_)
	TnurbsType func (o *TnurbsType)
	TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail)
	XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_ func (o *XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_)
	TxsdGlPipelineSettingsGroupChoicePointSizeMin func (o *TxsdGlPipelineSettingsGroupChoicePointSizeMin)
	TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation func (o *TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation)
	TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace func (o *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace)
	XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_ func (o *XsdGoPkgHasElems_animationsequencechoicesequenceanimation_typeschema_Animation_TanimationType_)
	TprofileCommonType func (o *TprofileCommonType)
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_ func (o *XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_)
	XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00)
	TxsdSurfaceTypeSequenceChoiceCylinder func (o *TxsdSurfaceTypeSequenceChoiceCylinder)
	TcommonBoolOrParamType func (o *TcommonBoolOrParamType)
	XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_ func (o *XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_)
	XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencenurbs_surface_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_ func (o *XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_)
	XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ func (o *XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_)
	XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ func (o *XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_)
	XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_ func (o *XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_)
	TxsdVisualSceneTypeSequenceEvaluateScene func (o *TxsdVisualSceneTypeSequenceEvaluateScene)
	XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_)
	TfxRendertargetType func (o *TfxRendertargetType)
	XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequencenurbs_typeschema_Source_TsourceType_)
	XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_ func (o *XsdGoPkgHasElems_color_targetsequenceevaluatesequencegles2_pass_typeschema_ColorTarget_TfxColortargetType_)
	XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_ func (o *XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_)
	TlibraryNodesType func (o *TlibraryNodesType)
	TxsdFxCommonFloatOrParamTypeChoiceParam func (o *TxsdFxCommonFloatOrParamTypeChoiceParam)
	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_ func (o *XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_)
	TpolygonsType func (o *TpolygonsType)
	XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_ func (o *XsdGoPkgHasElem_semanticsequenceglsl_newparam_typeschema_Semantic_XsdtNCName_)
	XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_ func (o *XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_)
	TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask)
	TxsdGlesPipelineSettingsGroupChoiceTexturePipeline func (o *TxsdGlesPipelineSettingsGroupChoiceTexturePipeline)
	XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_ func (o *XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_)
	XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_)
	TxsdImageTypeSequenceChoiceCreateCube func (o *TxsdImageTypeSequenceChoiceCreateCube)
	XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_ func (o *XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_)
	TxsdGlPipelineSettingsGroupChoiceBlendEnable func (o *TxsdGlPipelineSettingsGroupChoiceBlendEnable)
	TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha func (o *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha)
	XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_ func (o *XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_)
	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_ func (o *XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_)
	TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest func (o *TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest)
	XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_ func (o *XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_)
	XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_ func (o *XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_)
	XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_ func (o *XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_)
	XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_ func (o *XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_)
	XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ func (o *XsdGoPkgHasElem_transparentsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_)
	TxsdRigidBodyTypeSequenceTechniqueCommon func (o *TxsdRigidBodyTypeSequenceTechniqueCommon)
	XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ func (o *XsdGoPkgHasElem_paramchoicetexture1Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_)
	TxsdNurbsTypeSequenceControlVertices func (o *TxsdNurbsTypeSequenceControlVertices)
	XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0 func (o *XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0)
	XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Extra_TextraType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc)
	XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_ func (o *XsdGoPkgHasElem_paramchoicecommon_float2_or_param_typeschema_Param_TcommonParamType_)
	TminmaxType func (o *TminmaxType)
	TidrefArrayType func (o *TidrefArrayType)
	TxsdGlesPipelineSettingsGroupChoiceFrontFace func (o *TxsdGlesPipelineSettingsGroupChoiceFrontFace)
	XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_ func (o *XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_)
	XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_ func (o *XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_)
	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_common_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3choicesequencefx_common_newparam_typeschema_Float3_Tfloat3Type_)
	TconvexMeshType func (o *TconvexMeshType)
	TxsdLightTypeSequenceTechniqueCommonChoiceDirectional func (o *TxsdLightTypeSequenceTechniqueCommonChoiceDirectional)
	XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicecg_param_groupschema_Float_TfloatType_)
	TxsdGlslProgramTypeSequenceBindAttribute func (o *TxsdGlslProgramTypeSequenceBindAttribute)
	XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ func (o *XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_)
	XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_ func (o *XsdGoPkgHasElem_drawsequenceevaluatesequencecg_pass_typeschema_Draw_TfxDrawType_)
	XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencelinestrips_typeschema_Input_TinputLocalOffsetType_)
	TinstanceKinematicsModelType func (o *TinstanceKinematicsModelType)
	XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ func (o *XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_)
	XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_ func (o *XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_)
	XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_ func (o *XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_)
	XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_ func (o *XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_)
	TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront)
	XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_ func (o *XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_)
	TxsdAssetTypeSequenceUnit func (o *TxsdAssetTypeSequenceUnit)
	XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_)
	XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3choicefx_annotate_groupschema_Float3_Tfloat3Type_)
	XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4x1choicecg_param_groupschema_Float4X1_Tfloat4Type_)
	XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_reflectivitysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_)
	TxsdGlPipelineSettingsGroupChoiceAlphaFunc func (o *TxsdGlPipelineSettingsGroupChoiceAlphaFunc)
	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_ func (o *XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_)
	XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_ func (o *XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_)
	XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_ func (o *XsdGoPkgHasElem_sampler1Dchoiceglsl_value_groupschema_Sampler1D_TfxSampler1DType_)
	XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_ func (o *XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_)
	TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate func (o *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate)
	XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap func (o *XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap)
	XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequencetriangles_typeschema_P_TpType_)
	TxsdGlPipelineSettingsGroupChoiceNormalizeEnable func (o *TxsdGlPipelineSettingsGroupChoiceNormalizeEnable)
	XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_ func (o *XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_)
	XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_ func (o *XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_)
	TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable func (o *TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable)
	XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_ func (o *XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Sphere_TsphereType_)
	XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecurves_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 func (o *XsdGoPkgHasElem_constant_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10)
	XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_ func (o *XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_)
	XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ func (o *XsdGoPkgHasElem_paramchoicetextureCUBEchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_)
	TlibraryFormulasType func (o *TlibraryFormulasType)
	TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate func (o *TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate)
	XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_ func (o *XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_)
	XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_ func (o *XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_)
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_ func (o *XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_)
	TformulaType func (o *TformulaType)
	TinstanceEffectType func (o *TinstanceEffectType)
	XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_ func (o *XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_)
	TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable func (o *TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable)
	XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_ func (o *XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_)
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_ func (o *XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_)
	TxsdGles2PipelineSettingsGroupChoicePolygonOffset func (o *TxsdGles2PipelineSettingsGroupChoicePolygonOffset)
	XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_ func (o *XsdGoPkgHasElem_bool4choicefx_annotate_groupschema_Bool4_Tbool4Type_)
	TformulaTechniqueType func (o *TformulaTechniqueType)
	XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicesequencelink_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_ func (o *XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_)
	TxsdGlPipelineSettingsGroupChoiceFrontFace func (o *TxsdGlPipelineSettingsGroupChoiceFrontFace)
	TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable func (o *TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable)
	TxsdGlesPipelineSettingsGroupChoiceLineWidth func (o *TxsdGlesPipelineSettingsGroupChoiceLineWidth)
	XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_ func (o *XsdGoPkgHasElem_float3x2choicegles_param_groupschema_Float3X2_Tfloat3X2Type_)
	XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencegeometry_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4x1choicegles_param_groupschema_Float4X1_Tfloat4Type_)
	TxsdGlPipelineSettingsGroupChoiceFogColor func (o *TxsdGlPipelineSettingsGroupChoiceFogColor)
	XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_ func (o *XsdGoPkgHasElem_int2choicefx_annotate_groupschema_Int2_Tint2Type_)
	XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ func (o *XsdGoPkgHasElem_masssequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_)
	XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_target_valuesequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00)
	TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable func (o *TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable)
	TxsdGles2PipelineSettingsGroupChoiceDepthFunc func (o *TxsdGles2PipelineSettingsGroupChoiceDepthFunc)
	XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_ func (o *XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_)
	TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue func (o *TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue)
	XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_ func (o *XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_)
	XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicesequenceattachment_fullchoicesequencelink_typeschema_Rotate_TrotateType_)
	TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb func (o *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb)
	TboxType func (o *TboxType)
	XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_ func (o *XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_)
	TxsdGlPipelineSettingsGroupChoiceDepthBounds func (o *TxsdGlPipelineSettingsGroupChoiceDepthBounds)
	TxsdCgPassTypeSequenceProgram func (o *TxsdCgPassTypeSequenceProgram)
	XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetrifans_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3choicefx_newparam_groupschema_Float3_Tfloat3Type_)
	XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_ func (o *XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_)
	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_ func (o *XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_)
	XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_)
	TcgUserType func (o *TcgUserType)
	XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_)
	XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_ func (o *XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_)
	XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_ func (o *XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_)
	TkinematicsParamType func (o *TkinematicsParamType)
	XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_ func (o *XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_)
	TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix func (o *TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix)
	TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse func (o *TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse)
	XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetorus_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_ func (o *XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_)
	XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00)
	XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00)
	XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_ func (o *XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_)
	XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2x1choicegles_param_groupschema_Float2X1_Tfloat2Type_)
	XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_ func (o *XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_)
	XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_ func (o *XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_)
	XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicefx_newparam_groupschema_Float_TfloatType_)
	XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_ func (o *XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_)
	XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_ func (o *XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_)
	TxsdGlesPipelineSettingsGroupChoiceStencilOp func (o *TxsdGlesPipelineSettingsGroupChoiceStencilOp)
	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_ func (o *XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilTarget_TfxStenciltargetType_)
	TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist func (o *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist)
	XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_ func (o *XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_)
	XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceforce_field_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoiceglsl_value_groupschema_Float_TfloatType_)
	TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring func (o *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring)
	XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_ func (o *XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_)
	XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequenceimagersequencecamera_typeschema_Technique_TtechniqueType_)
	TnurbsSurfaceType func (o *TnurbsSurfaceType)
	TmatrixType func (o *TmatrixType)
	TxsdGlPipelineSettingsGroupChoiceMultisampleEnable func (o *TxsdGlPipelineSettingsGroupChoiceMultisampleEnable)
	XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_ func (o *XsdGoPkgHasElem_SIDREFchoicekinematics_newparam_typeschema_Sidref_TsidrefType_)
	TglesTexturePipelineType func (o *TglesTexturePipelineType)
	TxsdGles2PipelineSettingsGroupChoiceBlendEquation func (o *TxsdGles2PipelineSettingsGroupChoiceBlendEquation)
	XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_ func (o *XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_)
	XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_cameras_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_ func (o *XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_)
	TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable func (o *TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable)
	XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_ func (o *XsdGoPkgHasElem_float4x2choicefx_newparam_groupschema_Float4X2_Tfloat4X2Type_)
	XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_ func (o *XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_)
	XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ func (o *XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_)
	TsweptSurfaceType func (o *TsweptSurfaceType)
	XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_ func (o *XsdGoPkgHasElem_int3choicefx_newparam_groupschema_Int3_Tint3Type_)
	TcurveType func (o *TcurveType)
	XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_ func (o *XsdGoPkgHasElem_vcountsequencepcurves_typeschema_Vcount_TlistOfUintsType_)
	TxsdGlesPipelineSettingsGroupChoiceClipPlane func (o *TxsdGlesPipelineSettingsGroupChoiceClipPlane)
	XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicegles2_value_groupschema_Int_TintType_)
	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_gles2_typeschema_Asset_TassetType_)
	TlibraryPhysicsModelsType func (o *TlibraryPhysicsModelsType)
	TglesNewparamType func (o *TglesNewparamType)
	XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_ func (o *XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_)
	XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_)
	TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue func (o *TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue)
	TxsdImageTypeSequenceChoiceCreate3DSequenceSize func (o *TxsdImageTypeSequenceChoiceCreate3DSequenceSize)
	XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_ func (o *XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_)
	XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_ func (o *XsdGoPkgHasElem_sampler2Dchoicegles2_value_groupschema_Sampler2D_TfxSampler2DType_)
	XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_ func (o *XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_)
	TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable func (o *TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable)
	XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_ func (o *XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_)
	XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ func (o *XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_)
	TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb func (o *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb)
	XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_ func (o *XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_)
	XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencecamera_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_ func (o *XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_)
	XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_ func (o *XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_)
	XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_ func (o *XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_)
	TxsdGlPipelineSettingsGroupChoiceDepthRange func (o *TxsdGlPipelineSettingsGroupChoiceDepthRange)
	XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ func (o *XsdGoPkgHasElem_paramchoicetexture2Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_)
	TxsdFxCommonColorOrTextureTypeChoiceColor func (o *TxsdFxCommonColorOrTextureTypeChoiceColor)
	XsdGoPkgHasGroup_FxProfileGroup func (o *XsdGoPkgHasGroup_FxProfileGroup)
	TsurfaceCurvesType func (o *TsurfaceCurvesType)
	TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate func (o *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate)
	XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_)
	XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_ func (o *XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_)
	XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecircle_typeschema_Extra_TextraType_)
	TxsdProfileGlslTypeSequenceTechnique func (o *TxsdProfileGlslTypeSequenceTechnique)
	XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_ func (o *XsdGoPkgHasElems_animationchoicesequenceanimation_typeschema_Animation_TanimationType_)
	XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_ func (o *XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_)
	XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoiceattachment_startchoicesequencelink_typeschema_Translate_TtranslateType_)
	XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_ func (o *XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_)
	TinstanceCameraType func (o *TinstanceCameraType)
	TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize func (o *TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize)
	TlibraryMaterialsType func (o *TlibraryMaterialsType)
	XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_ func (o *XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_)
	XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_)
	XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_ func (o *XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_)
	TxsdGlPipelineSettingsGroupChoiceLineWidth func (o *TxsdGlPipelineSettingsGroupChoiceLineWidth)
	TcommonFloatOrParamType func (o *TcommonFloatOrParamType)
	XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencephysics_material_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_)
	XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_ func (o *XsdGoPkgHasElem_samplerCUBEchoicecg_param_groupschema_SamplerCUBE_TfxSamplerCUBEType_)
	XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_reflectivitysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ func (o *XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_)
	XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencenurbs_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_ func (o *XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_)
	XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_ func (o *XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_)
	XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_ func (o *XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_)
	XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_ func (o *XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_)
	XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_ func (o *XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_)
	XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_ func (o *XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_)
	XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_ func (o *XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_)
	XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_ func (o *XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_)
	TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable func (o *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable)
	XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencegles2_pass_typeschema_Extra_TextraType_)
	TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable func (o *TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable)
	XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_ func (o *XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_)
	XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_ func (o *XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_)
	XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencemorph_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceprofile_glsl_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4choicecg_param_groupschema_Float4_Tfloat4Type_)
	XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3x1choicefx_newparam_groupschema_Float3X1_Tfloat3Type_)
	TxsdGles2ValueGroupChoiceArray func (o *TxsdGles2ValueGroupChoiceArray)
	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_ func (o *XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_)
	XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_ func (o *XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_)
	XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_ func (o *XsdGoPkgHasElem_stringchoicecg_param_groupschema_String_XsdtString_)
	XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_ func (o *XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_)
	XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_ func (o *XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_)
	XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_ func (o *XsdGoPkgHasElem_vcountsequencewires_typeschema_Vcount_TlistOfUintsType_)
	XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2x1choicecg_param_groupschema_Float2X1_Tfloat2Type_)
	TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular func (o *TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular)
	XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_)
	XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_ func (o *XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_)
	XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_articulated_systems_typeschema_Extra_TextraType_)
	TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb func (o *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb)
	Tgles2ShaderType func (o *Tgles2ShaderType)
	XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_ func (o *XsdGoPkgHasElems_bindsequencemotion_effector_info_typeschema_Bind_TkinematicsBindType_)
	XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_ func (o *XsdGoPkgHasElems_channelsequencechoicesequenceanimation_typeschema_Channel_TchannelType_)
	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_cg_typeschema_Extra_TextraType_)
	TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable func (o *TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable)
	XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_ func (o *XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_)
	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_)
	TxsdGlPipelineSettingsGroupChoiceDepthMask func (o *TxsdGlPipelineSettingsGroupChoiceDepthMask)
	XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_ func (o *XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_)
	TformulaNewparamType func (o *TformulaNewparamType)
	TxsdGlesPipelineSettingsGroupChoiceLightSpecular func (o *TxsdGlesPipelineSettingsGroupChoiceLightSpecular)
	XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000 func (o *XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000)
	XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_joints_typeschema_Asset_TassetType_)
	TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation func (o *TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation)
	XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_ func (o *XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_)
	XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_ func (o *XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_)
	XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_ func (o *XsdGoPkgHasElem_vcountsequencefaces_typeschema_Vcount_TlistOfUintsType_)
	TorientType func (o *TorientType)
	XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap func (o *XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap)
	XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_ func (o *XsdGoPkgHasElem_int4choicefx_newparam_groupschema_Int4_Tint4Type_)
	TxsdCgPassTypeSequenceProgramSequenceShader func (o *TxsdCgPassTypeSequenceProgramSequenceShader)
	TxsdProfileGles2TypeSequenceTechnique func (o *TxsdProfileGles2TypeSequenceTechnique)
	XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_ func (o *XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_)
	XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_ func (o *XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_)
	XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencetriangles_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceline_typeschema_Extra_TextraType_)
	TfxSamplerDEPTHType func (o *TfxSamplerDEPTHType)
	XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_ func (o *XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_)
	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_ func (o *XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_StencilClear_TfxClearstencilType_)
	XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_ func (o *XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_)
	XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_ func (o *XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_)
	TcgArrayType func (o *TcgArrayType)
	TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass)
	XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ func (o *XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate)
	XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_ func (o *XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_)
	XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_ func (o *XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_)
	TpcurvesType func (o *TpcurvesType)
	TxsdGlesPipelineSettingsGroupChoicePointSize func (o *TxsdGlesPipelineSettingsGroupChoicePointSize)
	XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_ func (o *XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_)
	XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ func (o *XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_)
	XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_ func (o *XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_)
	XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_ func (o *XsdGoPkgHasElem_sampler3Dchoicegles2_value_groupschema_Sampler3D_TfxSampler3DType_)
	XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_ func (o *XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_)
	TnodeType func (o *TnodeType)
	TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong func (o *TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong)
	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_common_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencegles2_shader_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_ func (o *XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_)
	XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_ func (o *XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_)
	TsourceType func (o *TsourceType)
	XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_ func (o *XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_)
	XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceinstance_kinematics_scene_typeschema_Newparam_TkinematicsNewparamType_)
	TwiresType func (o *TwiresType)
	XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceplane_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ func (o *XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_)
	XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_ func (o *XsdGoPkgHasElems_setparamsequenceinstance_kinematics_model_typeschema_Setparam_TkinematicsSetparamType_)
	XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_ func (o *XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_)
	XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_ func (o *XsdGoPkgHasElems_lineschoicesequencemesh_typeschema_Lines_TlinesType_)
	XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_ func (o *XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_)
	XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicekinematics_frame_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_ func (o *XsdGoPkgHasElem_vcountsequenceshells_typeschema_Vcount_TlistOfUintsType_)
	XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_ func (o *XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_)
	XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ func (o *XsdGoPkgHasElems_samplersequencechoicesequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_)
	TlinestripsType func (o *TlinestripsType)
	TxsdGlPipelineSettingsGroupChoicePointSmoothEnable func (o *TxsdGlPipelineSettingsGroupChoicePointSmoothEnable)
	XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace)
	XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_ func (o *XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_)
	XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_ func (o *XsdGoPkgHasElem_paramchoicecommon_bool_or_param_typeschema_Param_TcommonParamType_)
	XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_ func (o *XsdGoPkgHasElem_bool4choicecg_param_groupschema_Bool4_Tbool4Type_)
	XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecontrol_verticessequencespline_typeschema_Extra_TextraType_)
	TxsdGles2ValueGroupChoiceUsertype func (o *TxsdGles2ValueGroupChoiceUsertype)
	TxsdGles2PipelineSettingsGroupChoiceScissor func (o *TxsdGles2PipelineSettingsGroupChoiceScissor)
	XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencematerial_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencephysics_material_typeschema_Asset_TassetType_)
	TxsdGlPipelineSettingsGroupChoiceStencilMask func (o *TxsdGlPipelineSettingsGroupChoiceStencilMask)
	XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_ func (o *XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_)
	TlibraryForceFieldsType func (o *TlibraryForceFieldsType)
	XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_ func (o *XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_)
	XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_ func (o *XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_)
	TxsdGlesPipelineSettingsGroupChoiceLightingEnable func (o *TxsdGlesPipelineSettingsGroupChoiceLightingEnable)
	XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_ func (o *XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_)
	XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceCOLLADAschema_Extra_TextraType_)
	XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_ func (o *XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_)
	TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue func (o *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue)
	XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_float4x4choicecg_param_groupschema_Float4X4_Tfloat4X4Type_)
	XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_)
	XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_ func (o *XsdGoPkgHasElems_setparamsequenceinstance_kinematics_scene_typeschema_Setparam_TkinematicsSetparamType_)
	XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_ func (o *XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_)
	XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencegles2_newparam_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_ func (o *XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_)
	TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate func (o *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate)
	TvisualSceneType func (o *TvisualSceneType)
	XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_ func (o *XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_)
	XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_ func (o *XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_)
	XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_ func (o *XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_)
	XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_kinematics_model_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_ func (o *XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_)
	XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_ func (o *XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_)
	XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ func (o *XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_)
	XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencepolylist_typeschema_Input_TinputLocalOffsetType_)
	TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable func (o *TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable)
	XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ func (o *XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_)
	XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequencebrep_typeschema_Source_TsourceType_)
	TxsdGlPipelineSettingsGroupChoiceClipPlane func (o *TxsdGlPipelineSettingsGroupChoiceClipPlane)
	TglesTexcombinerCommandType func (o *TglesTexcombinerCommandType)
	XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ func (o *XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_)
	TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate func (o *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate)
	TbrepType func (o *TbrepType)
	XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ func (o *XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_)
	XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_ func (o *XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_)
	TaxisType func (o *TaxisType)
	XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_ func (o *XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_)
	XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelight_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_ func (o *XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_)
	XsdGoPkgHasGroup_GlesPipelineSettingsGroup func (o *XsdGoPkgHasGroup_GlesPipelineSettingsGroup)
	XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_ func (o *XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_)
	XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicekinematics_frame_typeschema_Translate_TtranslateType_)
	TxsdProfileCommonTypeSequenceTechnique func (o *TxsdProfileCommonTypeSequenceTechnique)
	XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencescenesequenceCOLLADAschema_Extra_TextraType_)
	XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequenceskin_typeschema_Source_TsourceType_)
	XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_ func (o *XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_)
	XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_ func (o *XsdGoPkgHasElems_nodesequencelibrary_nodes_typeschema_Node_TnodeType_)
	XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_specularsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_)
	TglesTexenvCommandType func (o *TglesTexenvCommandType)
	XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_ func (o *XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_)
	XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_reflectivesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ func (o *XsdGoPkgHasElem_yfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_)
	TxsdGlPipelineSettingsGroupChoiceLightDiffuse func (o *TxsdGlPipelineSettingsGroupChoiceLightDiffuse)
	XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_ func (o *XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_)
	XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_ func (o *XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_)
	XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_ func (o *XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_)
	TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape func (o *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape)
	XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ func (o *XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_)
	XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_ func (o *XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_)
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_ func (o *XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_)
	XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceprofile_gles_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_ func (o *XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_)
	XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_ func (o *XsdGoPkgHasElem_int3choicecg_param_groupschema_Int3_Tint3Type_)
	XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False func (o *XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False)
	XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_ func (o *XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_)
	TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack)
	TglesTexcombinerArgumentRgbType func (o *TglesTexcombinerArgumentRgbType)
	TxsdPolygonsTypeSequenceChoicePh func (o *TxsdPolygonsTypeSequenceChoicePh)
	XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_linear_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00)
	XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_ func (o *XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_)
	XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_ func (o *XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_)
	XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_ func (o *XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_)
	XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_ func (o *XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_)
	TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable func (o *TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable)
	TxsdGles2PipelineSettingsGroupChoiceDepthMask func (o *TxsdGles2PipelineSettingsGroupChoiceDepthMask)
	XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_kinematics_models_typeschema_Extra_TextraType_)
	TmorphType func (o *TmorphType)
	XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_ func (o *XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_)
	XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_)
	TglslArrayType func (o *TglslArrayType)
	XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_ func (o *XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_)
	XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_ func (o *XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_)
	XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_ func (o *XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_)
	TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant func (o *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant)
	TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind func (o *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind)
	TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact func (o *TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact)
	TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable func (o *TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable)
	XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequencemorph_typeschema_Source_TsourceType_)
	XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_ func (o *XsdGoPkgHasElem_semanticsequencegles_newparam_typeschema_Semantic_XsdtNCName_)
	XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_ func (o *XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_)
	TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest func (o *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest)
	XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencephysics_material_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_ func (o *XsdGoPkgHasElem_float4x3choicecg_param_groupschema_Float4X3_Tfloat4X3Type_)
	TxsdGlesPipelineSettingsGroupChoiceFogEnd func (o *TxsdGlesPipelineSettingsGroupChoiceFogEnd)
	XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequencenurbs_surface_typeschema_Source_TsourceType_)
	XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_ func (o *XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_)
	XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ func (o *XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_)
	XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_ func (o *XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_)
	XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_ func (o *XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_)
	TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef func (o *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef)
	XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_ func (o *XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_)
	XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_ func (o *XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_)
	XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_ func (o *XsdGoPkgHasElem_bool2choiceglsl_value_groupschema_Bool2_Tbool2Type_)
	TglslNewparamType func (o *TglslNewparamType)
	XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_ func (o *XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_)
	XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ func (o *XsdGoPkgHasElem_paramchoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_)
	XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceinstance_kinematics_model_typeschema_Newparam_TkinematicsNewparamType_)
	XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicekinematics_newparam_typeschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_ func (o *XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencegles2_pass_typeschema_StencilTarget_TfxStenciltargetType_)
	XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_ func (o *XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_)
	XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_)
	TmotionType func (o *TmotionType)
	XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencevertices_typeschema_Extra_TextraType_)
	TxsdGles2ProgramTypeSequenceBindAttribute func (o *TxsdGles2ProgramTypeSequenceBindAttribute)
	XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ func (o *XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_)
	TinstancePhysicsModelType func (o *TinstancePhysicsModelType)
	TxsdFxRendertargetTypeChoiceParam func (o *TxsdFxRendertargetTypeChoiceParam)
	TfacesType func (o *TfacesType)
	XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 func (o *XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10)
	XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ func (o *XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_)
	TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable func (o *TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable)
	XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_ func (o *XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_)
	TinputLocalOffsetType func (o *TinputLocalOffsetType)
	XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_float2x2choicegles_param_groupschema_Float2X2_Tfloat2X2Type_)
	TprofileGlslType func (o *TprofileGlslType)
	XsdGoPkgHasElems_Collada func (o *XsdGoPkgHasElems_Collada)
	XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_ func (o *XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_)
	TfxSampler1DType func (o *TfxSampler1DType)
	XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Translate_TtranslateType_)
	XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_ func (o *XsdGoPkgHasElem_sampler2Dchoicesequencefx_common_newparam_typeschema_Sampler2D_TfxSampler2DType_)
	TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass func (o *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass)
	TphysicsMaterialType func (o *TphysicsMaterialType)
	XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_ func (o *XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_)
	XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_ func (o *XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_)
	XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_ func (o *XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_)
	XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_ func (o *XsdGoPkgHasElem_float3x2choicecg_param_groupschema_Float3X2_Tfloat3X2Type_)
	TxsdLightTypeSequenceTechniqueCommonChoiceSpot func (o *TxsdLightTypeSequenceTechniqueCommonChoiceSpot)
	XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_ func (o *XsdGoPkgHasElem_originsequencesurface_typeschema_Origin_ToriginType_)
	XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_ func (o *XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_)
	XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_ func (o *XsdGoPkgHasElem_float3x4choicegles_param_groupschema_Float3X4_Tfloat3X4Type_)
	XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_ func (o *XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilOp func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOp)
	XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_ func (o *XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_)
	XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2choicegles_param_groupschema_Float2_Tfloat2Type_)
	XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_formulas_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_ func (o *XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_)
	XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_ func (o *XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorTarget_TfxColortargetType_)
	XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_physics_models_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_ func (o *XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_)
	XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_ func (o *XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_)
	XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_ func (o *XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_)
	XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_ func (o *XsdGoPkgHasElems_orientsequencesurface_typeschema_Orient_TorientType_)
	XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_ func (o *XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable func (o *TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable)
	TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection func (o *TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection)
	XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencebind_material_typeschema_Extra_TextraType_)
	TnameArrayType func (o *TnameArrayType)
	XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_ func (o *XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Density_TtargetableFloatType_)
	TxsdBindMaterialTypeSequenceTechniqueCommon func (o *TxsdBindMaterialTypeSequenceTechniqueCommon)
	TxsdGlesPipelineSettingsGroupChoiceMaterialShininess func (o *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess)
	XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_ func (o *XsdGoPkgHasElem_bool4choicegles_param_groupschema_Bool4_Tbool4Type_)
	TxsdCameraTypeSequenceOptics func (o *TxsdCameraTypeSequenceOptics)
	XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_ func (o *XsdGoPkgHasElem_semanticchoicebind_attributesequencegles2_program_typeschema_Semantic_XsdtToken_)
	TxsdLinkTypeSequenceChoiceAttachmentFull func (o *TxsdLinkTypeSequenceChoiceAttachmentFull)
	XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_ func (o *XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_)
	Tgles2ProgramType func (o *Tgles2ProgramType)
	XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_ func (o *XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_)
	XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_ func (o *XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_)
	TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates func (o *TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates)
	XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_ func (o *XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_)
	XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_ func (o *XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_)
	TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation func (o *TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation)
	XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_ func (o *XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_)
	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_ func (o *XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_)
	XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ func (o *XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_)
	XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_ func (o *XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_)
	XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_ func (o *XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_)
	XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicefx_setparam_groupschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_ func (o *XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_)
	XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_ func (o *XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_)
	TxsdGles2PassTypeSequenceEvaluate func (o *TxsdGles2PassTypeSequenceEvaluate)
	XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_ func (o *XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_)
	XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicecg_param_groupschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_ func (o *XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_)
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_ func (o *XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_)
	XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceprofile_gles_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_ func (o *XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_)
	TfxTargetType func (o *TfxTargetType)
	XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelight_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00)
	TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail func (o *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail)
	XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ func (o *XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_)
	TxsdGlPipelineSettingsGroupChoiceLightEnable func (o *TxsdGlPipelineSettingsGroupChoiceLightEnable)
	XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_ func (o *XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_)
	XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicecommon_float_or_param_typeschema_Float_TfloatType_)
	XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_ func (o *XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_)
	XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_)
	XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencephysics_scene_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencearticulated_system_typeschema_Extra_TextraType_)
	TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace func (o *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace)
	XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_ func (o *XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_)
	XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_ func (o *XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_)
	XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_ func (o *XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_)
	TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask func (o *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask)
	XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_ func (o *XsdGoPkgHasElems_tristripschoicesequencemesh_typeschema_Tristrips_TtristripsType_)
	XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_ func (o *XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_)
	XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_ func (o *XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_)
	XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_)
	TinstanceRigidBodyType func (o *TinstanceRigidBodyType)
	XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_ func (o *XsdGoPkgHasElems_setparamsequencemotion_effector_info_typeschema_Setparam_TkinematicsSetparamType_)
	XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_ func (o *XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_)
	XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_ func (o *XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_)
	XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_ func (o *XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_)
	TxsdGlPipelineSettingsGroupChoiceTextureDEPTH func (o *TxsdGlPipelineSettingsGroupChoiceTextureDEPTH)
	XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_ func (o *XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_)
	XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_ func (o *XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_)
	TlibraryKinematicsScenesType func (o *TlibraryKinematicsScenesType)
	XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_ func (o *XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_)
	XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoiceglsl_value_groupschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencekinematics_typeschema_Technique_TtechniqueType_)
	TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail func (o *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail)
	XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_ func (o *XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_)
	XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_ func (o *XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_)
	XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_ func (o *XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_)
	TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride func (o *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride)
	XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceprofile_common_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_ func (o *XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_)
	XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_)
	XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_ func (o *XsdGoPkgHasElem_bool4choicefx_newparam_groupschema_Bool4_Tbool4Type_)
	TforceFieldType func (o *TforceFieldType)
	XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequencephchoicesequencepolygons_typeschema_P_TpType_)
	XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_articulated_system_typeschema_Extra_TextraType_)
	TphysicsModelType func (o *TphysicsModelType)
	XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencecontroller_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencebrep_typeschema_Extra_TextraType_)
	Tgles2PassType func (o *Tgles2PassType)
	XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencetristrips_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetriangles_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_ func (o *XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_)
	TxsdCgPassTypeSequenceStates func (o *TxsdCgPassTypeSequenceStates)
	XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_ func (o *XsdGoPkgHasElems_formulachoicesequencekinematics_model_technique_typeschema_Formula_TformulaType_)
	XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_ func (o *XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_)
	XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_ func (o *XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_)
	XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_ func (o *XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_)
	XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ func (o *XsdGoPkgHasElems_animationsequencechoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_)
	TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha func (o *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha)
	XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_ func (o *XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_)
	XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_ func (o *XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_)
	TimageSourceType func (o *TimageSourceType)
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicekinematics_setparam_typeschema_Int_TintType_)
	XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ func (o *XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_)
	XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ func (o *XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_)
	TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom func (o *TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom)
	XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_ func (o *XsdGoPkgHasElem_drawsequenceevaluatesequencegles2_pass_typeschema_Draw_TfxDrawType_)
	TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear func (o *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear)
	XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_ func (o *XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_)
	XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_ func (o *XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_)
	XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_ func (o *XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_)
	XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencefx_sampler_states_groupschema_Extra_TextraType_)
	TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates func (o *TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates)
	XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequenceshells_typeschema_P_TpType_)
	TxsdProfileCgTypeSequenceTechnique func (o *TxsdProfileCgTypeSequenceTechnique)
	XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_ func (o *XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_)
	XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ func (o *XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_)
	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_ func (o *XsdGoPkgHasElems_depth_clearsequenceevaluatesequencecg_pass_typeschema_DepthClear_TfxCleardepthType_)
	XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ func (o *XsdGoPkgHasElem_znearsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_)
	XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4choicefx_annotate_groupschema_Float4_Tfloat4Type_)
	XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_ func (o *XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_)
	XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoiceformula_newparam_typeschema_Bool_XsdtBoolean_)
	TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable func (o *TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable)
	TcapsuleType func (o *TcapsuleType)
	XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_ambientsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_)
	TxsdGlPipelineSettingsGroupChoicePointSizeMax func (o *TxsdGlPipelineSettingsGroupChoicePointSizeMax)
	XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_ func (o *XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_)
	TxsdGlPipelineSettingsGroupChoiceTexture2D func (o *TxsdGlPipelineSettingsGroupChoiceTexture2D)
	XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_ func (o *XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_)
	XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_ func (o *XsdGoPkgHasElem_radiussequencetorus_typeschema_Radius_Tfloat2Type_)
	XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_ func (o *XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_)
	XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicekinematics_newparam_typeschema_Int_TintType_)
	XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_ func (o *XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_)
	TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode func (o *TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode)
	XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2x1choicefx_newparam_groupschema_Float2X1_Tfloat2Type_)
	XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ func (o *XsdGoPkgHasElem_connect_paramchoicekinematics_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_)
	TlibraryControllersType func (o *TlibraryControllersType)
	TfxCommonTransparentType func (o *TfxCommonTransparentType)
	TparabolaType func (o *TparabolaType)
	TinstanceForceFieldType func (o *TinstanceForceFieldType)
	XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_ func (o *XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_)
	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_ func (o *XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_)
	XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 func (o *XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000)
	XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_ func (o *XsdGoPkgHasElem_samplerRECTchoiceglsl_value_groupschema_SamplerRECT_TfxSamplerRECTType_)
	XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_ func (o *XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_)
	TinstanceFormulaType func (o *TinstanceFormulaType)
	XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_ func (o *XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_)
	TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation func (o *TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation)
	XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_material_typeschema_Extra_TextraType_)
	XsdGoPkgHasGroup_GlesSamplerStatesGroup func (o *XsdGoPkgHasGroup_GlesSamplerStatesGroup)
	XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_ func (o *XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_)
	XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_ func (o *XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_)
	TxsdGlPipelineSettingsGroupChoiceLightSpotExponent func (o *TxsdGlPipelineSettingsGroupChoiceLightSpotExponent)
	TxsdGlPipelineSettingsGroupChoiceMaterialAmbient func (o *TxsdGlPipelineSettingsGroupChoiceMaterialAmbient)
	XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00)
	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_ func (o *XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_)
	TinstanceGeometryType func (o *TinstanceGeometryType)
	XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_ func (o *XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_)
	XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_ func (o *XsdGoPkgHasElem_bool2choicefx_annotate_groupschema_Bool2_Tbool2Type_)
	XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_ func (o *XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_)
	XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_ func (o *XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_)
	XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_ func (o *XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_)
	TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest func (o *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest)
	XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_ func (o *XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_)
	XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_ func (o *XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_)
	XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_ func (o *XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_)
	XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ func (o *XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_)
	XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ func (o *XsdGoPkgHasElem_samplerCUBEchoiceglsl_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_)
	TxsdGlesPipelineSettingsGroupChoiceBlendEnable func (o *TxsdGlesPipelineSettingsGroupChoiceBlendEnable)
	TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable func (o *TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable)
	XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_)
	XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_ func (o *XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_)
	XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1 func (o *XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1)
	XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_ func (o *XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_)
	XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_ func (o *XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_)
	XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_ func (o *XsdGoPkgHasElem_float4x2choicegles_param_groupschema_Float4X2_Tfloat4X2Type_)
	XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ func (o *XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_)
	TfxNewparamType func (o *TfxNewparamType)
	XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_ func (o *XsdGoPkgHasElem_float2x3choicefx_newparam_groupschema_Float2X3_Tfloat2X3Type_)
	XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_ func (o *XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_)
	TfxSampler2DType func (o *TfxSampler2DType)
	XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_ func (o *XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_)
	TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint func (o *TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint)
	XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_ func (o *XsdGoPkgHasElem_samplerCUBEchoicegles2_value_groupschema_SamplerCUBE_TfxSamplerCUBEType_)
	TellipseType func (o *TellipseType)
	TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront func (o *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront)
	TxsdInstanceMaterialTypeSequenceBind func (o *TxsdInstanceMaterialTypeSequenceBind)
	TmotionAxisInfoType func (o *TmotionAxisInfoType)
	XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_lights_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_ func (o *XsdGoPkgHasElem_SIDREFchoicekinematics_setparam_typeschema_Sidref_TsidrefType_)
	XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_float4x4choicefx_annotate_groupschema_Float4X4_Tfloat4X4Type_)
	TformulaSetparamType func (o *TformulaSetparamType)
	XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4choicefx_newparam_groupschema_Float4_Tfloat4Type_)
	TcircleType func (o *TcircleType)
	XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_ func (o *XsdGoPkgHasElem_radiussequencecone_typeschema_Radius_TfloatType_)
	XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_ func (o *XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_)
	TxsdGlPipelineSettingsGroupChoiceDepthClampEnable func (o *TxsdGlPipelineSettingsGroupChoiceDepthClampEnable)
	XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_ func (o *XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_)
	XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicecommon_int_or_param_typeschema_Int_TintType_)
	XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencegles_newparam_typeschema_Annotate_TfxAnnotateType_)
	TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable func (o *TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable)
	TedgesType func (o *TedgesType)
	XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_ func (o *XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_ColorClear_TfxClearcolorType_)
	XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_ func (o *XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_)
	XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequenceinstance_rigid_body_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_ func (o *XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_)
	XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_geometries_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_ func (o *XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_)
	TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable func (o *TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable)
	XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_ func (o *XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_)
	XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencegles_sampler_states_groupschema_Extra_TextraType_)
	XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceanimation_typeschema_Asset_TassetType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask)
	XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_ func (o *XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_)
	XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceanimation_clip_typeschema_Asset_TassetType_)
	TxsdCgPassTypeSequenceEvaluate func (o *TxsdCgPassTypeSequenceEvaluate)
	TinstanceKinematicsSceneType func (o *TinstanceKinematicsSceneType)
	TlibraryEffectsType func (o *TlibraryEffectsType)
	XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_ func (o *XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_)
	TxsdFxSourcesTypeSequenceChoiceImport func (o *TxsdFxSourcesTypeSequenceChoiceImport)
	TxsdGlPipelineSettingsGroupChoiceStencilTestEnable func (o *TxsdGlPipelineSettingsGroupChoiceStencilTestEnable)
	XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_ func (o *XsdGoPkgHasElem_vcountsequencepolylist_typeschema_Vcount_TlistOfUintsType_)
	XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_ func (o *XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_)
	XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequenceedges_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_ func (o *XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_)
	TtargetableFloat3Type func (o *TtargetableFloat3Type)
	TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate func (o *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate)
	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_)
	TxsdGles2PassTypeSequenceStates func (o *TxsdGles2PassTypeSequenceStates)
	XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_ func (o *XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_)
	XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_ func (o *XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_)
	XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_float4x4choiceglsl_value_groupschema_Float4X4_Tfloat4X4Type_)
	TxsdFxTargetTypeSequenceBinary func (o *TxsdFxTargetTypeSequenceBinary)
	TfxClearstencilType func (o *TfxClearstencilType)
	TkinematicsSetparamType func (o *TkinematicsSetparamType)
	XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceinstance_kinematics_scene_typeschema_Asset_TassetType_)
	TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits func (o *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits)
	XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_ func (o *XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_)
	XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_)
	TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable func (o *TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable)
	TxsdImageTypeSequenceChoiceInitFrom func (o *TxsdImageTypeSequenceChoiceInitFrom)
	TfxColortargetType func (o *TfxColortargetType)
	XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_ func (o *XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_)
	XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ func (o *XsdGoPkgHasElem_masssequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_)
	XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencelight_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_ func (o *XsdGoPkgHasElem_inertiasequencetechnique_commonsequencerigid_body_typeschema_Inertia_TtargetableFloat3Type_)
	XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_ func (o *XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_)
	TxsdGles2ProgramTypeSequenceBindUniform func (o *TxsdGles2ProgramTypeSequenceBindUniform)
	XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_physics_models_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True func (o *XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True)
	XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecontroller_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_ func (o *XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_)
	XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_kinematics_scene_typeschema_Extra_TextraType_)
	TxsdGlesPipelineSettingsGroupChoiceMaterialEmission func (o *TxsdGlesPipelineSettingsGroupChoiceMaterialEmission)
	XsdGoPkgHasGroup_Gles2ValueGroup func (o *XsdGoPkgHasGroup_Gles2ValueGroup)
	XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_ func (o *XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_)
	XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_ func (o *XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_)
	TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb func (o *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb)
	TfxCodeType func (o *TfxCodeType)
	XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceevaluate_scenesequencevisual_scene_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_ func (o *XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_)
	XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ func (o *XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_)
	XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencesurfaces_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequencemesh_typeschema_Source_TsourceType_)
	XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_ func (o *XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_)
	TxsdLightTypeSequenceTechniqueCommon func (o *TxsdLightTypeSequenceTechniqueCommon)
	TmaterialType func (o *TmaterialType)
	TxsdGlPipelineSettingsGroupChoiceTexture2DEnable func (o *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable)
	XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_)
	XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_ func (o *XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_)
	XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_ func (o *XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_)
	XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_ func (o *XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_)
	XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_ func (o *XsdGoPkgHasElems_psequencelinestrips_typeschema_P_TpType_)
	TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable func (o *TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable)
	TboolArrayType func (o *TboolArrayType)
	XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_ func (o *XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_)
	TxsdGlPipelineSettingsGroupChoiceScissor func (o *TxsdGlPipelineSettingsGroupChoiceScissor)
	XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2choicefx_annotate_groupschema_Float2_Tfloat2Type_)
	XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_ func (o *XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_)
	TxsdCameraTypeSequenceImager func (o *TxsdCameraTypeSequenceImager)
	XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_ func (o *XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_)
	XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_ func (o *XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_)
	XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800 func (o *XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800)
	TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude func (o *TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude)
	XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_ func (o *XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_)
	XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_ func (o *XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_)
	XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_ func (o *XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_)
	XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencesource_typeschema_Asset_TassetType_)
	TbindKinematicsModelType func (o *TbindKinematicsModelType)
	XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceimage_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_ func (o *XsdGoPkgHasElems_inputsequencetargetssequencemorph_typeschema_Input_TinputLocalType_)
	TcgPassType func (o *TcgPassType)
	TinstanceRigidConstraintType func (o *TinstanceRigidConstraintType)
	XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_ func (o *XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_)
	XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_ func (o *XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_)
	XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_ func (o *XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_)
	XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_ func (o *XsdGoPkgHasElem_mipschoicesequencecreate_2dchoicesequenceimage_typeschema_Mips_TimageMipsType_)
	XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencesphere_typeschema_Extra_TextraType_)
	TkinematicsFrameType func (o *TkinematicsFrameType)
	TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix func (o *TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix)
	XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_ func (o *XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_)
	XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ func (o *XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_)
	XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_ func (o *XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_)
	XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_ func (o *XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_)
	TxsdGlPipelineSettingsGroupChoiceMaterialEmission func (o *TxsdGlPipelineSettingsGroupChoiceMaterialEmission)
	XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_ func (o *XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_)
	XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencewires_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencesolids_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_ func (o *XsdGoPkgHasElem_radiussequenceellipse_typeschema_Radius_Tfloat2Type_)
	XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ func (o *XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_)
	TcommonIntOrParamType func (o *TcommonIntOrParamType)
	TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate func (o *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate)
	XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_ func (o *XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_)
	XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_ func (o *XsdGoPkgHasElem_enumchoiceglsl_value_groupschema_Enum_TglEnumerationType_)
	XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ func (o *XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_)
	XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_ func (o *XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_)
	XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_ func (o *XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_)
	XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_ func (o *XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_)
	TskinType func (o *TskinType)
	XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceprofile_glsl_typeschema_Extra_TextraType_)
	TscaleType func (o *TscaleType)
	TxsdGlPipelineSettingsGroupChoiceMaterialSpecular func (o *TxsdGlPipelineSettingsGroupChoiceMaterialSpecular)
	XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_ func (o *XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_)
	TlightType func (o *TlightType)
	XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_ func (o *XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_)
	XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_ func (o *XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_)
	XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_ func (o *XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_)
	XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_ func (o *XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_)
	XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_ func (o *XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_)
	XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_ func (o *XsdGoPkgHasElem_float2x4choicegles_param_groupschema_Float2X4_Tfloat2X4Type_)
	XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_ func (o *XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_)
	XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_ func (o *XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_)
	XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceellipse_typeschema_Extra_TextraType_)
	TxsdGlPipelineSettingsGroupChoiceColorMask func (o *TxsdGlPipelineSettingsGroupChoiceColorMask)
	XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_)
	TimageMipsType func (o *TimageMipsType)
	TinstanceJointType func (o *TinstanceJointType)
	XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_ func (o *XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_)
	TxsdGlPipelineSettingsGroupChoiceCullFace func (o *TxsdGlPipelineSettingsGroupChoiceCullFace)
	TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom func (o *TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom)
	XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoiceattachment_endchoicesequencelink_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_diffusesequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ func (o *XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_)
	XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_ func (o *XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_)
	XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_ func (o *XsdGoPkgHasElem_int2choicegles_param_groupschema_Int2_Tint2Type_)
	XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceparabola_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_ func (o *XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_)
	XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ func (o *XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_)
	TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha func (o *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha)
	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_ func (o *XsdGoPkgHasElems_depth_clearsequenceevaluatesequencegles2_pass_typeschema_DepthClear_TfxCleardepthType_)
	XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencerigid_body_typeschema_Technique_TtechniqueType_)
	TxsdProfileGlesTypeSequenceTechnique func (o *TxsdProfileGlesTypeSequenceTechnique)
	TinputLocalType func (o *TinputLocalType)
	XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_ func (o *XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_)
	XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_ func (o *XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_)
	XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_ func (o *XsdGoPkgHasElem_radiussequencesphere_typeschema_Radius_TfloatType_)
	TxsdGlPipelineSettingsGroupChoiceLightPosition func (o *TxsdGlPipelineSettingsGroupChoiceLightPosition)
	XsdGoPkgHasElem_Collada func (o *XsdGoPkgHasElem_Collada)
	TxsdGlPipelineSettingsGroupChoiceTexture1D func (o *TxsdGlPipelineSettingsGroupChoiceTexture1D)
	XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoiceattachment_startchoicesequencelink_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_ func (o *XsdGoPkgHasElem_semanticsequencecg_newparam_typeschema_Semantic_XsdtNCName_)
	TxsdGlesPipelineSettingsGroupChoicePointSizeMax func (o *TxsdGlesPipelineSettingsGroupChoicePointSizeMax)
	TxsdGlesPipelineSettingsGroupChoicePolygonOffset func (o *TxsdGlesPipelineSettingsGroupChoicePolygonOffset)
	XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_ func (o *XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_)
	XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_ func (o *XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_)
	XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_ func (o *XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_)
	XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_ambientsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_ func (o *XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_)
	XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoiceattachment_endchoicesequencelink_typeschema_Translate_TtranslateType_)
	TaxisConstraintType func (o *TaxisConstraintType)
	XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_)
	XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_)
	XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_ func (o *XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_)
	XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencespline_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_ func (o *XsdGoPkgHasElem_sampler2Dchoiceglsl_value_groupschema_Sampler2D_TfxSampler2DType_)
	XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_ func (o *XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_)
	XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ func (o *XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_)
	XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_ func (o *XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_)
	XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_ func (o *XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_)
	XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencecg_pass_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_ func (o *XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_)
	XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_ func (o *XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_)
	XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencebox_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_ func (o *XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_)
	XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_ func (o *XsdGoPkgHasElem_bool3choicefx_newparam_groupschema_Bool3_Tbool3Type_)
	TxsdGlPipelineSettingsGroupChoiceLightModelColorControl func (o *TxsdGlPipelineSettingsGroupChoiceLightModelColorControl)
	TcylinderType func (o *TcylinderType)
	TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources func (o *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources)
	XsdGoPkgHasGroup_CgParamGroup func (o *XsdGoPkgHasGroup_CgParamGroup)
	XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_ func (o *XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_)
	XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ func (o *XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_)
	XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_ func (o *XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_)
	XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequenceformula_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_ func (o *XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_)
	XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_ func (o *XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_)
	XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceswept_surface_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_animations_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_ func (o *XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_)
	XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_ func (o *XsdGoPkgHasElem_bind_materialsequenceinstance_controller_typeschema_BindMaterial_TbindMaterialType_)
	XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_ func (o *XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_)
	TxsdGlPipelineSettingsGroupChoiceStencilFunc func (o *TxsdGlPipelineSettingsGroupChoiceStencilFunc)
	XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_ func (o *XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_)
	XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_ func (o *XsdGoPkgHasElem_instance_imagesequencegles_sampler_typeschema_InstanceImage_TinstanceImageType_)
	XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencegles2_pass_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasGroup_FxAnnotateGroup func (o *XsdGoPkgHasGroup_FxAnnotateGroup)
	XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_ func (o *XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_)
	XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_images_typeschema_Asset_TassetType_)
	TxsdFxCommonColorOrTextureTypeChoiceTexture func (o *TxsdFxCommonColorOrTextureTypeChoiceTexture)
	XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencefaces_typeschema_Extra_TextraType_)
	TprofileBridgeType func (o *TprofileBridgeType)
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_ func (o *XsdGoPkgHasElem_exactsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Exact_XsdtToken_)
	XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_ func (o *XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_)
	XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencetrifans_typeschema_Input_TinputLocalOffsetType_)
	TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb func (o *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb)
	XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_ func (o *XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_)
	TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail func (o *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail)
	TxsdFxSetparamGroupChoiceSamplerStates func (o *TxsdFxSetparamGroupChoiceSamplerStates)
	TxsdGlesPipelineSettingsGroupChoiceLightPosition func (o *TxsdGlesPipelineSettingsGroupChoiceLightPosition)
	XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_ func (o *XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_)
	XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_ func (o *XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_)
	XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_ func (o *XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_)
	TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable func (o *TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable)
	XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_ func (o *XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_)
	XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_ func (o *XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_)
	XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_ func (o *XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_)
	XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_ func (o *XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_)
	XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_ func (o *XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_)
	TmeshType func (o *TmeshType)
	XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_ func (o *XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_)
	XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_ func (o *XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_)
	TpType func (o *TpType)
	XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_ func (o *XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_)
	XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencewires_typeschema_Input_TinputLocalOffsetType_)
	TxsdGles2PipelineSettingsGroupChoiceDitherEnable func (o *TxsdGles2PipelineSettingsGroupChoiceDitherEnable)
	XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicekinematics_bind_typeschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencephysics_model_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ func (o *XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_)
	XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ func (o *XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_)
	TxsdGlPipelineSettingsGroupChoiceColorMaterial func (o *TxsdGlPipelineSettingsGroupChoiceColorMaterial)
	TxsdColladaSequenceScene func (o *TxsdColladaSequenceScene)
	TkinematicsTechniqueType func (o *TkinematicsTechniqueType)
	TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask func (o *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask)
	TcontrollerType func (o *TcontrollerType)
	TlibraryAnimationClipsType func (o *TlibraryAnimationClipsType)
	XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3choiceglsl_value_groupschema_Float3_Tfloat3Type_)
	XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencesurface_curves_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_ func (o *XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthTarget_TfxDepthtargetType_)
	TxsdGlPipelineSettingsGroupChoiceDepthFunc func (o *TxsdGlPipelineSettingsGroupChoiceDepthFunc)
	XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3x1choicegles_param_groupschema_Float3X1_Tfloat3Type_)
	XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_ func (o *XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_)
	XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceconvex_mesh_typeschema_Extra_TextraType_)
	TxsdFxCommonFloatOrParamTypeChoiceFloat func (o *TxsdFxCommonFloatOrParamTypeChoiceFloat)
	XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_ func (o *XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_)
	TxsdSourceTypeSequenceTechniqueCommon func (o *TxsdSourceTypeSequenceTechniqueCommon)
	XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_ func (o *XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_)
	XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceimage_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicekinematics_bind_typeschema_Int_TintType_)
	XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat func (o *XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat)
	TxsdGles2ShaderTypeSequenceSources func (o *TxsdGles2ShaderTypeSequenceSources)
	XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_)
	TlineType func (o *TlineType)
	XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_ func (o *XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_)
	TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert func (o *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert)
	XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_ func (o *XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_)
	XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_float2x2choicefx_newparam_groupschema_Float2X2_Tfloat2X2Type_)
	XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_ func (o *XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_)
	XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_ func (o *XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_)
	XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_ func (o *XsdGoPkgHasElem_directionchoicesequenceswept_surface_typeschema_Direction_Tfloat3Type_)
	XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_ func (o *XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_)
	XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_ func (o *XsdGoPkgHasElems_instance_force_fieldsequenceinstance_physics_model_typeschema_InstanceForceField_TinstanceForceFieldType_)
	XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_ func (o *XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_)
	TglesTextureConstantType func (o *TglesTextureConstantType)
	XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_geometries_typeschema_Asset_TassetType_)
	TkinematicsSceneType func (o *TkinematicsSceneType)
	XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_ func (o *XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_)
	XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_ func (o *XsdGoPkgHasElems_jointsequencelibrary_joints_typeschema_Joint_TjointType_)
	TshellsType func (o *TshellsType)
	TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation func (o *TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation)
	TxsdProfileGlesTypeSequenceTechniqueSequencePass func (o *TxsdProfileGlesTypeSequenceTechniqueSequencePass)
	TimageType func (o *TimageType)
	TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc func (o *TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc)
	TtokenArrayType func (o *TtokenArrayType)
	XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_typeschema_Extra_TextraType_)
	TsurfacesType func (o *TsurfacesType)
	XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_ func (o *XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_)
	TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate)
	XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_ func (o *XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_)
	XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_ func (o *XsdGoPkgHasElems_psequencetristrips_typeschema_P_TpType_)
	TfxSourcesType func (o *TfxSourcesType)
	XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_ func (o *XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_)
	XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_ func (o *XsdGoPkgHasElem_int4choiceglsl_value_groupschema_Int4_Tint4Type_)
	XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ func (o *XsdGoPkgHasElem_instance_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail)
	XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_ func (o *XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Draw_TfxDrawType_)
	XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_ func (o *XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_)
	XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ func (o *XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_)
	TeffectType func (o *TeffectType)
	XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ func (o *XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_)
	TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack func (o *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack)
	XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencefx_newparam_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_ func (o *XsdGoPkgHasElem_enumchoicefx_newparam_groupschema_Enum_XsdtString_)
	TxsdGlPipelineSettingsGroupChoiceFogDensity func (o *TxsdGlPipelineSettingsGroupChoiceFogDensity)
	TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable func (o *TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable)
	TbindJointAxisType func (o *TbindJointAxisType)
	XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_ func (o *XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_)
	TxsdGlPipelineSettingsGroupChoiceDepthTestEnable func (o *TxsdGlPipelineSettingsGroupChoiceDepthTestEnable)
	XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_controller_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_physics_materials_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_ func (o *XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_)
	XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_ func (o *XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_)
	XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_ func (o *XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_)
	XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_ func (o *XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_)
	XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_ func (o *XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_)
	TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform func (o *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform)
	TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff func (o *TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff)
	XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_ func (o *XsdGoPkgHasElem_modifiersequenceglsl_newparam_typeschema_Modifier_TfxModifierEnum_)
	TxsdSplineTypeSequenceControlVertices func (o *TxsdSplineTypeSequenceControlVertices)
	XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_ func (o *XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_)
	XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_ func (o *XsdGoPkgHasElem_instance_imagechoicefx_rendertarget_typeschema_InstanceImage_TinstanceImageType_)
	XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencehyperbola_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_ func (o *XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_)
	XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_emissionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_ func (o *XsdGoPkgHasElems_formulasequencelibrary_formulas_typeschema_Formula_TformulaType_)
	TxsdGlPipelineSettingsGroupChoiceLightSpecular func (o *TxsdGlPipelineSettingsGroupChoiceLightSpecular)
	XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_ func (o *XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_)
	XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_ func (o *XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_)
	XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_ func (o *XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_)
	TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam func (o *TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam)
	XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_ func (o *XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_)
	TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable func (o *TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable)
	XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_ func (o *XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_)
	XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_ func (o *XsdGoPkgHasElem_int3choicegles_param_groupschema_Int3_Tint3Type_)
	XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_ func (o *XsdGoPkgHasElem_bool4choiceglsl_value_groupschema_Bool4_Tbool4Type_)
	XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_ func (o *XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_)
	XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_ func (o *XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_)
	XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_ func (o *XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_)
	TlibraryPhysicsMaterialsType func (o *TlibraryPhysicsMaterialsType)
	TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable func (o *TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable)
	XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_ func (o *XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_)
	TxsdGlesPipelineSettingsGroupChoiceLightEnable func (o *TxsdGlesPipelineSettingsGroupChoiceLightEnable)
	XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_ func (o *XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_)
	XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_ func (o *XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_)
	XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceattachmentsequencerigid_constraint_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_ func (o *XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_)
	XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_ func (o *XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_)
	XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_ func (o *XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_)
	XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_ func (o *XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_)
	XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_ func (o *XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_)
	XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_ func (o *XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_)
	XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_ func (o *XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_)
	TchannelType func (o *TchannelType)
	XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_ func (o *XsdGoPkgHasElem_float4x2choicecg_param_groupschema_Float4X2_Tfloat4X2Type_)
	XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_ func (o *XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_)
	TglesTexcombinerArgumentAlphaType func (o *TglesTexcombinerArgumentAlphaType)
	XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_ func (o *XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_)
	XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_ func (o *XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_)
	XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear func (o *XsdGoPkgHasElem_magfiltersequencegles_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear)
	XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_ func (o *XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_)
	XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencevisual_scene_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_ func (o *XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Capsule_TcapsuleType_)
	TlinkType func (o *TlinkType)
	TxsdGles2PipelineSettingsGroupChoiceDepthRange func (o *TxsdGles2PipelineSettingsGroupChoiceDepthRange)
	XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecylinder_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_ func (o *XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_)
	XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_ func (o *XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_)
	XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ func (o *XsdGoPkgHasElem_colorsequenceambientchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_)
	TxsdGlPipelineSettingsGroupChoiceBlendFunc func (o *TxsdGlPipelineSettingsGroupChoiceBlendFunc)
	XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_force_fields_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_cg_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_ func (o *XsdGoPkgHasElems_includechoicesequenceprofile_glsl_typeschema_Include_TfxIncludeType_)
	XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_ func (o *XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_)
	XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_ func (o *XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_)
	XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_ func (o *XsdGoPkgHasElem_bool3choiceglsl_value_groupschema_Bool3_Tbool3Type_)
	TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc func (o *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc)
	TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass)
	XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_transparencysequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_)
	TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate func (o *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate)
	TinstanceNodeType func (o *TinstanceNodeType)
	XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_ func (o *XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_)
	XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_ func (o *XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_typeschema_Input_TinputLocalType_)
	XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_ func (o *XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_)
	XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_ func (o *XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_)
	TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio func (o *TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio)
	TinstanceMaterialType func (o *TinstanceMaterialType)
	XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_ func (o *XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_)
	XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicefx_annotate_groupschema_Float_TfloatType_)
	XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_ func (o *XsdGoPkgHasElem_sampler3Dchoiceglsl_value_groupschema_Sampler3D_TfxSampler3DType_)
	XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_quadratic_attenuationsequencespotchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00)
	XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_ func (o *XsdGoPkgHasElem_sampler1Dchoicecg_param_groupschema_Sampler1D_TfxSampler1DType_)
	XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_ func (o *XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_)
	XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4choiceglsl_value_groupschema_Float4_Tfloat4Type_)
	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_ func (o *XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_)
	XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_rigid_constraint_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_ func (o *XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_)
	TcgSetparamType func (o *TcgSetparamType)
	XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_ func (o *XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_)
	XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceprofile_cg_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ func (o *XsdGoPkgHasElem_aspect_ratiosequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_)
	XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_ func (o *XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_)
	XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ func (o *XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_)
	TglesTexcombinerCommandAlphaType func (o *TglesTexcombinerCommandAlphaType)
	XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencebind_material_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_ func (o *XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_)
	TfxStenciltargetType func (o *TfxStenciltargetType)
	XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetargetssequencemorph_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_ func (o *XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_)
	XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_ func (o *XsdGoPkgHasElem_SIDREFchoiceformula_newparam_typeschema_Sidref_TsidrefType_)
	XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_transparencysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicegles_param_groupschema_Float_TfloatType_)
	TglesTexcombinerCommandRgbType func (o *TglesTexcombinerCommandRgbType)
	XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_ func (o *XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_)
	TxsdGles2PipelineSettingsGroupChoiceColorMask func (o *TxsdGles2PipelineSettingsGroupChoiceColorMask)
	XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicefx_annotate_groupschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_ func (o *XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_)
	XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_ func (o *XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_)
	XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_images_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ func (o *XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_)
	TxsdGlPipelineSettingsGroupChoiceLightingEnable func (o *TxsdGlPipelineSettingsGroupChoiceLightingEnable)
	XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceprofile_gles2_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelinestrips_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_ func (o *XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_)
	XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_ func (o *XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_)
	TxsdGlesSamplerTypeSequenceTexcoord func (o *TxsdGlesSamplerTypeSequenceTexcoord)
	XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_ func (o *XsdGoPkgHasElem_bool3choicefx_annotate_groupschema_Bool3_Tbool3Type_)
	XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_ func (o *XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_)
	TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable func (o *TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable)
	TxsdAssetTypeSequenceCoverage func (o *TxsdAssetTypeSequenceCoverage)
	XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_ func (o *XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_)
	XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_ func (o *XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_)
	XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_kinematics_models_typeschema_Asset_TassetType_)
	TxsdGlPipelineSettingsGroupChoiceBlendColor func (o *TxsdGlPipelineSettingsGroupChoiceBlendColor)
	TxsdAssetTypeSequenceCoverageSequenceGeographicLocation func (o *TxsdAssetTypeSequenceCoverageSequenceGeographicLocation)
	XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_ func (o *XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_)
	TxsdGlesPipelineSettingsGroupChoiceShadeModel func (o *TxsdGlesPipelineSettingsGroupChoiceShadeModel)
	XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_ func (o *XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_)
	TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic func (o *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic)
	XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_ func (o *XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_)
	XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_ func (o *XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_)
	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ func (o *XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_)
	XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicekinematics_setparam_typeschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_ func (o *XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_)
	XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_)
	XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_ func (o *XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_)
	XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_ func (o *XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_)
	XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_ func (o *XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_)
	XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 func (o *XsdGoPkgHasElem_maxsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000)
	XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_ func (o *XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_)
	XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_ func (o *XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_)
	TfloatArrayType func (o *TfloatArrayType)
	XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceeffect_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_ func (o *XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_)
	XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_ func (o *XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_)
	TcommonParamType func (o *TcommonParamType)
	XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_ func (o *XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_)
	XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_ func (o *XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_)
	XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_reflectivesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_ func (o *XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_)
	XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_ func (o *XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_)
	XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrachoicegles_texture_pipeline_typeschema_Extra_TextraType_)
	TxsdMorphTypeSequenceTargets func (o *TxsdMorphTypeSequenceTargets)
	XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_ func (o *XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_)
	XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencemotion_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_ func (o *XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_)
	XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_ func (o *XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_)
	XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecapsule_typeschema_Extra_TextraType_)
	TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular func (o *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular)
	XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_ func (o *XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_)
	XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_index_of_refractionsequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_ func (o *XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_)
	Tgles2NewparamType func (o *Tgles2NewparamType)
	TsidrefArrayType func (o *TsidrefArrayType)
	XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ func (o *XsdGoPkgHasElem_samplerDEPTHchoiceglsl_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_)
	XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_ func (o *XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_)
	XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_ func (o *XsdGoPkgHasElems_instance_formulachoicesequencekinematics_axis_info_typeschema_InstanceFormula_TinstanceFormulaType_)
	XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicefx_newparam_groupschema_Int_TintType_)
	TskewType func (o *TskewType)
	XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_ func (o *XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_)
	XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_ func (o *XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_)
	XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_joints_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_ func (o *XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Plane_TplaneType_)
	XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencekinematics_model_typeschema_Extra_TextraType_)
	TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape func (o *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape)
	XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_ func (o *XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_)
	XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_ func (o *XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_)
	TsurfaceType func (o *TsurfaceType)
	XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00 func (o *XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00)
	XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_ func (o *XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_)
	TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc func (o *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc)
	XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_ func (o *XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_)
	TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass func (o *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass)
	XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencefaces_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_ func (o *XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_)
	XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_ func (o *XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_)
	XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ func (o *XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_)
	XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicefx_annotate_groupschema_Int_TintType_)
	TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable func (o *TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable)
	TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail func (o *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail)
	XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecontrol_verticessequencenurbs_surface_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_ func (o *XsdGoPkgHasElem_vcountsequencesolids_typeschema_Vcount_TlistOfUintsType_)
	XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_ func (o *XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_)
	TxsdGlPipelineSettingsGroupChoiceShadeModel func (o *TxsdGlPipelineSettingsGroupChoiceShadeModel)
	TinstanceArticulatedSystemType func (o *TinstanceArticulatedSystemType)
	TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam func (o *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam)
	XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_ func (o *XsdGoPkgHasElem_originsequencechoicesequenceswept_surface_typeschema_Origin_Tfloat3Type_)
	XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_ func (o *XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_)
	TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable func (o *TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable)
	XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_ func (o *XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_)
	TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint func (o *TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint)
	XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_ func (o *XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_)
	XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_ func (o *XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_)
	XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_ func (o *XsdGoPkgHasElem_bool2choicefx_newparam_groupschema_Bool2_Tbool2Type_)
	TxsdGlPipelineSettingsGroupChoiceBlendEquation func (o *TxsdGlPipelineSettingsGroupChoiceBlendEquation)
	XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequencepolylist_typeschema_P_TpType_)
	XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_formulas_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_ func (o *XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_)
	XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00 func (o *XsdGoPkgHasElem_mip_biassequencegles_sampler_states_groupschema_MipBias_XsdtFloat_00)
	XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ func (o *XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_)
	TlibraryArticulatedSystemsType func (o *TlibraryArticulatedSystemsType)
	XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_ func (o *XsdGoPkgHasElem_semanticsequencefx_common_newparam_typeschema_Semantic_XsdtNCName_)
	XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_ func (o *XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_)
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_)
	XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_ func (o *XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_)
	XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_)
	TrigidBodyType func (o *TrigidBodyType)
	XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_ func (o *XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_)
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_ func (o *XsdGoPkgHasElem_exactsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Exact_XsdtToken_)
	TverticesType func (o *TverticesType)
	TxsdGlPipelineSettingsGroupChoiceLogicOp func (o *TxsdGlPipelineSettingsGroupChoiceLogicOp)
	TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask func (o *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask)
	XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_physics_scenes_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_ func (o *XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_)
	TfxCommonNewparamType func (o *TfxCommonNewparamType)
	XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_ func (o *XsdGoPkgHasElem_modifiersequencegles_newparam_typeschema_Modifier_TfxModifierEnum_)
	XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequencespline_typeschema_Source_TsourceType_)
	XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_nodes_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencegeometry_typeschema_Asset_TassetType_)
	TxsdGlPipelineSettingsGroupChoiceProjectionMatrix func (o *TxsdGlPipelineSettingsGroupChoiceProjectionMatrix)
	XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoiceglsl_value_groupschema_Int_TintType_)
	XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_ func (o *XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_)
	TmotionEffectorInfoType func (o *TmotionEffectorInfoType)
	TlibraryAnimationsType func (o *TlibraryAnimationsType)
	TxsdLinkTypeSequenceChoiceAttachmentEnd func (o *TxsdLinkTypeSequenceChoiceAttachmentEnd)
	TxsdGles2PipelineSettingsGroupChoiceSampleCoverage func (o *TxsdGles2PipelineSettingsGroupChoiceSampleCoverage)
	TsphereType func (o *TsphereType)
	TxsdGlesPipelineSettingsGroupChoiceFogMode func (o *TxsdGlesPipelineSettingsGroupChoiceFogMode)
	XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_ func (o *XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_)
	TfxDepthtargetType func (o *TfxDepthtargetType)
	XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_ func (o *XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_)
	XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_)
	XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_ func (o *XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_)
	XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_ func (o *XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_)
	XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_ func (o *XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_)
	XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_ func (o *XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_)
	XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_physics_materials_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_ func (o *XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_)
	TparamType func (o *TparamType)
	TsamplerType func (o *TsamplerType)
	XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_ func (o *XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_)
	XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_ func (o *XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_)
	XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_ func (o *XsdGoPkgHasElem_float2x3choicecg_param_groupschema_Float2X3_Tfloat2X3Type_)
	XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_ func (o *XsdGoPkgHasElems_includechoicesequenceprofile_gles2_typeschema_Include_TfxIncludeType_)
	XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_ func (o *XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_)
	XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_ func (o *XsdGoPkgHasElems_trifanschoicesequencemesh_typeschema_Trifans_TtrifansType_)
	XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_with_extra_typeschema_Extra_TextraType_)
	TfxSamplerCUBEType func (o *TfxSamplerCUBEType)
	TxsdLinkTypeSequenceChoiceAttachmentStart func (o *TxsdLinkTypeSequenceChoiceAttachmentStart)
	XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_controllers_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_ func (o *XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_)
	XsdGoPkgHasGroup_FxSamplerStatesGroup func (o *XsdGoPkgHasGroup_FxSamplerStatesGroup)
	XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_ func (o *XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_)
	TxsdGlPipelineSettingsGroupChoiceScissorTestEnable func (o *TxsdGlPipelineSettingsGroupChoiceScissorTestEnable)
	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_ func (o *XsdGoPkgHasElems_depth_targetsequenceevaluatesequencecg_pass_typeschema_DepthTarget_TfxDepthtargetType_)
	XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_ func (o *XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_)
	TtranslateType func (o *TtranslateType)
	XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ func (o *XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_)
	TconeType func (o *TconeType)
	XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_ func (o *XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_)
	XsdGoPkgHasGroup_FxSetparamGroup func (o *XsdGoPkgHasGroup_FxSetparamGroup)
	TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode func (o *TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode)
	TxsdLightTypeSequenceTechniqueCommonChoicePoint func (o *TxsdLightTypeSequenceTechniqueCommonChoicePoint)
	XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_ func (o *XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_)
	XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_ func (o *XsdGoPkgHasElem_refchoicebinarysequencefx_target_typeschema_Ref_XsdtAnyURI_)
	XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_ func (o *XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_)
	TjointLimitsType func (o *TjointLimitsType)
	TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable func (o *TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable)
	TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable func (o *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable)
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_ func (o *XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_)
	XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ func (o *XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_)
	TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint func (o *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint)
	TxsdGlPipelineSettingsGroupChoiceTextureEnvMode func (o *TxsdGlPipelineSettingsGroupChoiceTextureEnvMode)
	TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom func (o *TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom)
	TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate func (o *TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate)
	XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_effects_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_)
	XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_ func (o *XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_)
	XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_ func (o *XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_)
	XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_ func (o *XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_)
	TintArrayType func (o *TintArrayType)
	XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_ func (o *XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_)
	XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_ func (o *XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_)
	XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_)
	XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_ func (o *XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_)
	XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_ func (o *XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_)
	XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_kinematics_scenes_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_ func (o *XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_)
	TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha func (o *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha)
	XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_ func (o *XsdGoPkgHasElems_setparamsequencemotion_axis_info_typeschema_Setparam_TkinematicsSetparamType_)
	XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_ func (o *XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_)
	XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4choicesequencefx_common_newparam_typeschema_Float4_Tfloat4Type_)
	TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable func (o *TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable)
	XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ func (o *XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_)
	XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_ func (o *XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Box_TboxType_)
	TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable func (o *TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable)
	TxsdGlesPipelineSettingsGroupChoiceDepthRange func (o *TxsdGlesPipelineSettingsGroupChoiceDepthRange)
	XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_ func (o *XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_)
	TxsdImageTypeSequenceChoiceCreate3DSequenceArray func (o *TxsdImageTypeSequenceChoiceCreate3DSequenceArray)
	TxsdGles2PipelineSettingsGroupChoicePointSizeEnable func (o *TxsdGles2PipelineSettingsGroupChoicePointSizeEnable)
	XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecylinderchoicesequencesurface_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_ func (o *XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_)
	TkinematicsModelTechniqueType func (o *TkinematicsModelTechniqueType)
	XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ func (o *XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_)
	XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencepolylist_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_ func (o *XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_)
	TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef)
	XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_ func (o *XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_)
	XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2choicecommon_float2_or_param_typeschema_Float2_Tfloat2Type_)
	XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_ func (o *XsdGoPkgHasElem_int4choicecg_param_groupschema_Int4_Tint4Type_)
	XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_ func (o *XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_)
	XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ func (o *XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_)
	XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_ func (o *XsdGoPkgHasElems_newparamsequencekinematics_axis_info_typeschema_Newparam_TkinematicsNewparamType_)
	XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_ func (o *XsdGoPkgHasElems_inputsequencevertices_typeschema_Input_TinputLocalType_)
	XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoiceformula_newparam_typeschema_Int_TintType_)
	XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencerigid_constraint_typeschema_Extra_TextraType_)
	TxsdGlesPipelineSettingsGroupChoiceScissor func (o *TxsdGlesPipelineSettingsGroupChoiceScissor)
	XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_ func (o *XsdGoPkgHasElems_polylistchoicesequencemesh_typeschema_Polylist_TpolylistType_)
	XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_emissionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_ func (o *XsdGoPkgHasElems_bindsequencemotion_axis_info_typeschema_Bind_TkinematicsBindType_)
	TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable func (o *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable)
	XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_ func (o *XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_)
	TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc func (o *TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc)
	XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_ func (o *XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_)
	XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_kinematics_scenes_typeschema_Asset_TassetType_)
	TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef func (o *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef)
	TxsdNurbsSurfaceTypeSequenceControlVertices func (o *TxsdNurbsSurfaceTypeSequenceControlVertices)
	XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_ func (o *XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_)
	XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceforce_field_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_ func (o *XsdGoPkgHasElem_enumchoicegles2_value_groupschema_Enum_TglEnumerationType_)
	XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_ func (o *XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_)
	TxsdRigidConstraintTypeSequenceTechniqueCommon func (o *TxsdRigidConstraintTypeSequenceTechniqueCommon)
	XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_ func (o *XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_)
	XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_ func (o *XsdGoPkgHasElems_color_targetsequenceevaluatesequencecg_pass_typeschema_ColorTarget_TfxColortargetType_)
	TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation func (o *TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation)
	XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceglsl_shader_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_ func (o *XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_)
	XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_ func (o *XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_)
	XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_float2x2choiceglsl_value_groupschema_Float2X2_Tfloat2X2Type_)
	XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_ func (o *XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_)
	TanimationClipType func (o *TanimationClipType)
	XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_ func (o *XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_)
	XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_ func (o *XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_)
	XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_float3x3choicefx_annotate_groupschema_Float3X3_Tfloat3X3Type_)
	TinstanceImageType func (o *TinstanceImageType)
	XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ func (o *XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_)
	XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencecg_newparam_typeschema_Annotate_TfxAnnotateType_)
	TplaneType func (o *TplaneType)
	TxsdGlesPipelineSettingsGroupChoiceStencilMask func (o *TxsdGlesPipelineSettingsGroupChoiceStencilMask)
	XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicesequenceattachment_fullchoicesequencelink_typeschema_Translate_TtranslateType_)
	XsdGoPkgHasGroup_GlslValueGroup func (o *XsdGoPkgHasGroup_GlslValueGroup)
	XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 func (o *XsdGoPkgHasElem_stiffnesssequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10)
	TlibraryPhysicsScenesType func (o *TlibraryPhysicsScenesType)
	XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencekinematics_model_typeschema_Technique_TtechniqueType_)
	TxsdGles2PipelineSettingsGroupChoiceBlendColor func (o *TxsdGles2PipelineSettingsGroupChoiceBlendColor)
	XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_ func (o *XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_)
	XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ func (o *XsdGoPkgHasElem_ymagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_)
	XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_ func (o *XsdGoPkgHasElem_int2choiceglsl_value_groupschema_Int2_Tint2Type_)
	TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation func (o *TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation)
	XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_ func (o *XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_)
	XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_glsl_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_ func (o *XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_)
	TfxCommonFloatOrParamType func (o *TfxCommonFloatOrParamType)
	XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_reflectivesequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_ func (o *XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_)
	XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ func (o *XsdGoPkgHasElems_instance_physics_modelsequencephysics_model_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_)
	XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0 func (o *XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0)
	XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_ func (o *XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_)
	XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_)
	XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_ func (o *XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_)
	TsolidsType func (o *TsolidsType)
	XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 func (o *XsdGoPkgHasElem_minsequencelinearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000)
	TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse func (o *TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse)
	XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_ func (o *XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_)
	XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceprofile_cg_typeschema_Asset_TassetType_)
	TxsdImageSourceTypeChoiceHex func (o *TxsdImageSourceTypeChoiceHex)
	TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient func (o *TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient)
	XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2choiceglsl_value_groupschema_Float2_Tfloat2Type_)
	TxsdGlPipelineSettingsGroupChoiceFogMode func (o *TxsdGlPipelineSettingsGroupChoiceFogMode)
	XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_ func (o *XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_)
	TxsdImageTypeSequenceChoiceCreate3DSequenceFormat func (o *TxsdImageTypeSequenceChoiceCreate3DSequenceFormat)
	XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_ func (o *XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_)
	TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective func (o *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective)
	TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame func (o *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame)
	XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 func (o *XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10)
	XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_diffusesequencelambertchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_)
	TxsdGlPipelineSettingsGroupChoiceTextureRECT func (o *TxsdGlPipelineSettingsGroupChoiceTextureRECT)
	TxsdGlPipelineSettingsGroupChoiceLightModelAmbient func (o *TxsdGlPipelineSettingsGroupChoiceLightModelAmbient)
	XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_animations_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceCOLLADAschema_Asset_TassetType_)
	XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_ func (o *XsdGoPkgHasElems_newparamsequencemotion_axis_info_typeschema_Newparam_TkinematicsNewparamType_)
	TxsdImageTypeSequenceChoiceCreate2D func (o *TxsdImageTypeSequenceChoiceCreate2D)
	TextraType func (o *TextraType)
	XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelines_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_ func (o *XsdGoPkgHasElem_int4choicefx_annotate_groupschema_Int4_Tint4Type_)
	XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_visual_scenes_typeschema_Asset_TassetType_)
	TlibraryCamerasType func (o *TlibraryCamerasType)
	XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_ func (o *XsdGoPkgHasElem_float3x2choicefx_newparam_groupschema_Float3X2_Tfloat3X2Type_)
	XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_ func (o *XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_)
	XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_ func (o *XsdGoPkgHasElem_float2x4choicecg_param_groupschema_Float2X4_Tfloat2X4Type_)
	TaccessorType func (o *TaccessorType)
	XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ func (o *XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_)
	XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_ func (o *XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_)
	XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_glsl_typeschema_Extra_TextraType_)
	TxsdGlPipelineSettingsGroupChoiceFogCoordSrc func (o *TxsdGlPipelineSettingsGroupChoiceFogCoordSrc)
	XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3choicecg_param_groupschema_Float3_Tfloat3Type_)
	XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_ func (o *XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_)
	XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_ func (o *XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_)
	TgeometryType func (o *TgeometryType)
	XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceimagersequencecamera_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_ func (o *XsdGoPkgHasElems_codechoicesequenceprofile_glsl_typeschema_Code_TfxCodeType_)
	TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass func (o *TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass)
	TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable func (o *TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable)
	XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ func (o *XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_)
	XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_ func (o *XsdGoPkgHasElem_bool3choicecg_param_groupschema_Bool3_Tbool3Type_)
	XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_ func (o *XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_)
	TxsdGlesPipelineSettingsGroupChoiceFogDensity func (o *TxsdGlesPipelineSettingsGroupChoiceFogDensity)
	XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_ func (o *XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_)
	TxsdImageTypeSequenceRenderable func (o *TxsdImageTypeSequenceRenderable)
	XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_ func (o *XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_)
	XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_ func (o *XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_)
	XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_ func (o *XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_)
	TxsdProfileGlslTypeSequenceTechniqueSequencePass func (o *TxsdProfileGlslTypeSequenceTechniqueSequencePass)
	TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable func (o *TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable)
	XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear func (o *XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear)
	ThyperbolaType func (o *ThyperbolaType)
	XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencejoint_typeschema_Extra_TextraType_)
	TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial func (o *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial)
	XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencephysics_scene_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_ func (o *XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_)
	XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ func (o *XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_)
	XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_ func (o *XsdGoPkgHasElem_planechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Plane_TplaneType_)
	TxsdGlesPipelineSettingsGroupChoiceLogicOp func (o *TxsdGlesPipelineSettingsGroupChoiceLogicOp)
	TsplineType func (o *TsplineType)
	XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_ func (o *XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_)
	TxsdGlesPipelineSettingsGroupChoiceFogEnable func (o *TxsdGlesPipelineSettingsGroupChoiceFogEnable)
	XsdGoPkgHasGroup_Gles2PipelineSettingsGroup func (o *XsdGoPkgHasGroup_Gles2PipelineSettingsGroup)
	TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient func (o *TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient)
	TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable func (o *TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable)
	XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencesolids_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_transparencysequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_ func (o *XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_)
	XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4x1choicefx_newparam_groupschema_Float4X1_Tfloat4Type_)
	XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_ func (o *XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_)
	TcgNewparamType func (o *TcgNewparamType)
	XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear func (o *XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear)
	XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ func (o *XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_)
	TfxSampler3DType func (o *TfxSampler3DType)
	XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_ func (o *XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_)
	XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_ func (o *XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_)
	XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_ func (o *XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_)
	XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_nodes_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_ func (o *XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_)
	XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_ func (o *XsdGoPkgHasElem_modifiersequencegles2_newparam_typeschema_Modifier_TfxModifierEnum_)
	XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_ func (o *XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_)
	XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecone_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_ func (o *XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_)
	XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_ func (o *XsdGoPkgHasElem_radiussequencecylinderchoicesequencesurface_typeschema_Radius_TfloatType_)
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_ func (o *XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_)
	XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_ func (o *XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_)
	XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_ func (o *XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_)
	XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencemotion_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_ func (o *XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_)
	XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_ func (o *XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_)
	XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_ func (o *XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_)
	XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ func (o *XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_)
	XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_ func (o *XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_)
	TxsdInstanceRigidBodyTypeSequenceTechniqueCommon func (o *TxsdInstanceRigidBodyTypeSequenceTechniqueCommon)
	XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_ func (o *XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_)
	TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable func (o *TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable)
	TarticulatedSystemType func (o *TarticulatedSystemType)
	XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_ func (o *XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_)
	XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencepcurves_typeschema_Extra_TextraType_)
	TrotateType func (o *TrotateType)
	TxsdGles2PipelineSettingsGroupChoicePointSize func (o *TxsdGles2PipelineSettingsGroupChoicePointSize)
	XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 func (o *XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000)
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_ func (o *XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_)
	XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_ func (o *XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_)
	XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_ func (o *XsdGoPkgHasElem_bool2choicegles_param_groupschema_Bool2_Tbool2Type_)
	TprofileGles2Type func (o *TprofileGles2Type)
	XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencephysics_scene_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ func (o *XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_)
	XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_ func (o *XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_)
	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_ func (o *XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_)
	XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_ func (o *XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_)
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_)
	XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_ func (o *XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_)
	XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_ func (o *XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_)
	XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicegles_param_groupschema_Int_TintType_)
	TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled func (o *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled)
	TcameraType func (o *TcameraType)
	XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear func (o *XsdGoPkgHasElem_minfiltersequencegles_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear)
	TtargetableFloatType func (o *TtargetableFloatType)
	XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_ func (o *XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_)
	XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_gles2_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_ func (o *XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_)
	XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ func (o *XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_)
	XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_ func (o *XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_)
	XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_ func (o *XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_)
	XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_ func (o *XsdGoPkgHasElems_codechoicesequenceprofile_gles2_typeschema_Code_TfxCodeType_)
	TxsdInstanceEffectTypeSequenceTechniqueHint func (o *TxsdInstanceEffectTypeSequenceTechniqueHint)
	XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ func (o *XsdGoPkgHasElem_transparentsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_)
	XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_ func (o *XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_)
	XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceanimation_clip_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_ func (o *XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_)
	TxsdGlesPipelineSettingsGroupChoiceBlendFunc func (o *TxsdGlesPipelineSettingsGroupChoiceBlendFunc)
	XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceskin_typeschema_Extra_TextraType_)
	TanimationType func (o *TanimationType)
	TkinematicsLimitsType func (o *TkinematicsLimitsType)
	XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ func (o *XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_)
	XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ func (o *XsdGoPkgHasElem_physics_materialchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_)
	TxsdGlPipelineSettingsGroupChoiceLightSpotDirection func (o *TxsdGlPipelineSettingsGroupChoiceLightSpotDirection)
	XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_ func (o *XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_)
	XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ func (o *XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_)
	XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_ func (o *XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_)
	XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_ func (o *XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_)
	XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_ func (o *XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_)
	XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceshells_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_ func (o *XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_)
	XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_ func (o *XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_)
	XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicesequencelink_typeschema_Translate_TtranslateType_)
	XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_ func (o *XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_)
	XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_ func (o *XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_)
	XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_ func (o *XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_)
	XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencesource_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_ func (o *XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_)
	XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_ func (o *XsdGoPkgHasElems_bindsequenceinstance_kinematics_model_typeschema_Bind_TkinematicsBindType_)
	XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_ func (o *XsdGoPkgHasElem_float3x4choicefx_newparam_groupschema_Float3X4_Tfloat3X4Type_)
	XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceprofile_bridge_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_ func (o *XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_)
	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_ func (o *XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_)
	TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender func (o *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender)
	XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencevertex_weightssequenceskin_typeschema_Extra_TextraType_)
	TxsdGlesPipelineSettingsGroupChoiceDitherEnable func (o *TxsdGlesPipelineSettingsGroupChoiceDitherEnable)
	XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_ func (o *XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_)
	XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_index_of_refractionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_)
	TpolylistType func (o *TpolylistType)
	XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ func (o *XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_)
	TcommonSidrefOrParamType func (o *TcommonSidrefOrParamType)
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_ func (o *XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_)
	XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_ func (o *XsdGoPkgHasElem_sampler3Dchoicecg_param_groupschema_Sampler3D_TfxSampler3DType_)
	XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_ func (o *XsdGoPkgHasElem_int3choicefx_annotate_groupschema_Int3_Tint3Type_)
	XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_ func (o *XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_)
	TkinematicsModelType func (o *TkinematicsModelType)
	XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_ func (o *XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_)
	XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_ func (o *XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_)
	TxsdRigidConstraintTypeSequenceAttachment func (o *TxsdRigidConstraintTypeSequenceAttachment)
	XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_)
	XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_ func (o *XsdGoPkgHasElem_radiussequencecylinder_typeschema_Radius_Tfloat2Type_)
	XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequenceglsl_newparam_typeschema_Annotate_TfxAnnotateType_)
	TinstanceLightType func (o *TinstanceLightType)
	XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_ func (o *XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_)
	TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff func (o *TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff)
	XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequenceconvex_mesh_typeschema_Source_TsourceType_)
	XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_ func (o *XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_)
	TtrifansType func (o *TtrifansType)
	XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_ func (o *XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_)
	XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_ func (o *XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_)
	XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_ func (o *XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_)
	TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc func (o *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc)
	TxsdGlPipelineSettingsGroupChoiceModelViewMatrix func (o *TxsdGlPipelineSettingsGroupChoiceModelViewMatrix)
	TxsdProfileGles2TypeSequenceNewparam func (o *TxsdProfileGles2TypeSequenceNewparam)
	TtristripsType func (o *TtristripsType)
	XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequenceshells_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_ func (o *XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_)
	TxsdGles2PipelineSettingsGroupChoiceFrontFace func (o *TxsdGles2PipelineSettingsGroupChoiceFrontFace)
	XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_visual_scenes_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_ func (o *XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_)
	TxsdGles2PipelineSettingsGroupChoiceCullFace func (o *TxsdGles2PipelineSettingsGroupChoiceCullFace)
	XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_physics_model_typeschema_Extra_TextraType_)
	TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable func (o *TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable)
	TxsdGlPipelineSettingsGroupChoiceCullFaceEnable func (o *TxsdGlPipelineSettingsGroupChoiceCullFaceEnable)
	TlibraryJointsType func (o *TlibraryJointsType)
	TcurvesType func (o *TcurvesType)
	XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_ func (o *XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_)
	XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_ func (o *XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_)
	TxsdImageTypeSequenceChoiceCreateCubeSequenceArray func (o *TxsdImageTypeSequenceChoiceCreateCubeSequenceArray)
	XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp func (o *XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp)
	XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_ func (o *XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_)
	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_ func (o *XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_)
	XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_ func (o *XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_)
	XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_ func (o *XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_)
	TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail func (o *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail)
	XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_ func (o *XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_)
	TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask func (o *TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask)
	XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicefx_setparam_groupschema_Float_TfloatType_)
	XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceanimation_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_ func (o *XsdGoPkgHasElem_int2choicefx_newparam_groupschema_Int2_Tint2Type_)
	TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc func (o *TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc)
	XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencepasssequencetechniquesequenceprofile_gles_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_ func (o *XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_)
	XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_materials_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_lights_typeschema_Extra_TextraType_)
	TkinematicsConnectParamType func (o *TkinematicsConnectParamType)
	TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent func (o *TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent)
	TxsdGles2PipelineSettingsGroupChoiceStencilFunc func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFunc)
	XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_ func (o *XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_)
	XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_ func (o *XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_)
	TxsdImageTypeSequenceChoiceCreateCubeSequenceSize func (o *TxsdImageTypeSequenceChoiceCreateCubeSequenceSize)
	XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_ func (o *XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_)
	TlookatType func (o *TlookatType)
	XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_ func (o *XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_)
	XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_ func (o *XsdGoPkgHasElem_int4choicegles_param_groupschema_Int4_Tint4Type_)
	XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_ func (o *XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_)
	XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_ func (o *XsdGoPkgHasElem_float2x3choicegles_param_groupschema_Float2X3_Tfloat2X3Type_)
	TxsdGles2ProgramTypeSequenceBindUniformChoiceParam func (o *TxsdGles2ProgramTypeSequenceBindUniformChoiceParam)
	XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_ func (o *XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_)
	XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_float4x4choicefx_newparam_groupschema_Float4X4_Tfloat4X4Type_)
	XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_ func (o *XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_)
	XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_ func (o *XsdGoPkgHasElem_SIDREFchoicecommon_sidref_or_param_typeschema_Sidref_TsidrefType_)
	XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_ func (o *XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_)
	XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencepolygons_typeschema_Input_TinputLocalOffsetType_)
	XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_ func (o *XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_)
	XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ func (o *XsdGoPkgHasElem_paramchoicetextureRECTchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_)
	XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_ func (o *XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_)
	XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_ func (o *XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_)
	XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_ func (o *XsdGoPkgHasElems_pchoicesequencepolygons_typeschema_P_TpType_)
	XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_ func (o *XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_)
	TkinematicsIndexType func (o *TkinematicsIndexType)
	XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_materials_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_ func (o *XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_)
	XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_ func (o *XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_)
	XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2choicecg_param_groupschema_Float2_Tfloat2Type_)
	XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_ func (o *XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_)
	XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencekinematics_scene_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_ func (o *XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_)
	TxsdGlPipelineSettingsGroupChoiceLineStipple func (o *TxsdGlPipelineSettingsGroupChoiceLineStipple)
	XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_)
	XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_ func (o *XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_)
	TxsdAssetTypeSequenceContributor func (o *TxsdAssetTypeSequenceContributor)
	XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_ func (o *XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_)
	XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_ func (o *XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_)
	XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_ func (o *XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_)
	XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_ func (o *XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_)
	XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_ func (o *XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_)
	XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_ func (o *XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_)
	XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencetechniquesequenceprofile_glsl_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_ func (o *XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_)
	TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable func (o *TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable)
	XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_ func (o *XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_)
	XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequenceedges_typeschema_P_TpType_)
	XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencecg_pass_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_ func (o *XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_)
	TinstancePhysicsMaterialType func (o *TinstancePhysicsMaterialType)
	XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_)
	XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_ func (o *XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_)
	TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace func (o *TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace)
	XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceopticssequencecamera_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_ func (o *XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_)
	XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_ func (o *XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_)
	XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequenceforce_field_typeschema_Technique_TtechniqueType_)
	TxsdGlPipelineSettingsGroupChoiceStencilOp func (o *TxsdGlPipelineSettingsGroupChoiceStencilOp)
	XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_cameras_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_ func (o *XsdGoPkgHasElem_float3x4choicecg_param_groupschema_Float3X4_Tfloat3X4Type_)
	XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_ func (o *XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Cylinder_TcylinderType_)
	XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_ func (o *XsdGoPkgHasElems_color_clearsequenceevaluatesequencegles2_pass_typeschema_ColorClear_TfxClearcolorType_)
	XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_ func (o *XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_)
	XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_ func (o *XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_)
	TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha func (o *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha)
	XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicekinematics_setparam_typeschema_Float_TfloatType_)
	TxsdFxCommonColorOrTextureTypeChoiceParam func (o *TxsdFxCommonColorOrTextureTypeChoiceParam)
	TxsdCollada func (o *TxsdCollada)
	XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_ func (o *XsdGoPkgHasElems_compilersequencegles2_shader_typeschema_Compiler_TfxTargetType_)
	TfxAnnotateType func (o *TfxAnnotateType)
	XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_ func (o *XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_)
	XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_ func (o *XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_)
	TtorusType func (o *TtorusType)
	XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencephysics_model_typeschema_Extra_TextraType_)
	TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat func (o *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat)
	XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_ func (o *XsdGoPkgHasElems_paramsequencebind_material_typeschema_Param_TparamType_)
	XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ func (o *XsdGoPkgHasElem_colorsequencespotchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_)
	TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic func (o *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic)
	XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_ func (o *XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_)
	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_ func (o *XsdGoPkgHasElems_depth_targetsequenceevaluatesequencegles2_pass_typeschema_DepthTarget_TfxDepthtargetType_)
	XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_ func (o *XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_)
	XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicegles2_value_groupschema_Float_TfloatType_)
	XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_ func (o *XsdGoPkgHasElem_float4x3choicefx_newparam_groupschema_Float4X3_Tfloat4X3Type_)
	XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencenode_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_ func (o *XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencecg_pass_typeschema_StencilClear_TfxClearstencilType_)
	TxsdImageTypeSequenceChoiceCreate2DSequenceFormat func (o *TxsdImageTypeSequenceChoiceCreate2DSequenceFormat)
	TlibraryKinematicsModelsType func (o *TlibraryKinematicsModelsType)
	XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ func (o *XsdGoPkgHasElem_transparentsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_)
	XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_ func (o *XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_)
	XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_ func (o *XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_)
	XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_ func (o *XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_)
	XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicegles_param_groupschema_Bool_XsdtBoolean_)
	TcommonFloat2OrParamType func (o *TcommonFloat2OrParamType)
	TfxSamplerRECTType func (o *TfxSamplerRECTType)
	TxsdInstanceMaterialTypeSequenceBindVertexInput func (o *TxsdInstanceMaterialTypeSequenceBindVertexInput)
	TxsdGlesPipelineSettingsGroupChoiceLightAmbient func (o *TxsdGlesPipelineSettingsGroupChoiceLightAmbient)
	XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_ func (o *XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_)
	XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_float2x2choicefx_annotate_groupschema_Float2X2_Tfloat2X2Type_)
	TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear func (o *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear)
	XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicesequenceref_attachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_)
	TxsdGlesPipelineSettingsGroupChoiceStencilFunc func (o *TxsdGlesPipelineSettingsGroupChoiceStencilFunc)
	XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_ func (o *XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_)
	XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_ func (o *XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_)
	XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_ func (o *XsdGoPkgHasElem_float3x1choicecg_param_groupschema_Float3X1_Tfloat3Type_)
	TkinematicsAxisInfoType func (o *TkinematicsAxisInfoType)
	TinstanceControllerType func (o *TinstanceControllerType)
	TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable func (o *TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable)
	XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_ func (o *XsdGoPkgHasElem_int2choicecg_param_groupschema_Int2_Tint2Type_)
	XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencekinematics_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicecommon_bool_or_param_typeschema_Bool_XsdtBoolean_)
	TxsdGlesPipelineSettingsGroupChoiceLightDiffuse func (o *TxsdGlesPipelineSettingsGroupChoiceLightDiffuse)
	XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_ func (o *XsdGoPkgHasElem_SIDREFchoicekinematics_bind_typeschema_Sidref_TsidrefType_)
	XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_ func (o *XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_)
	XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_ func (o *XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_)
	TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic func (o *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic)
	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_ func (o *XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_)
	XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_articulated_systems_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_ func (o *XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_)
	XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_ func (o *XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_)
	XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_ func (o *XsdGoPkgHasElems_inputsequencecontrol_verticessequencenurbs_surface_typeschema_Input_TinputLocalType_)
	XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicemass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Translate_TtranslateType_)
	XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ func (o *XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_)
	TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow func (o *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow)
	TassetType func (o *TassetType)
	TxsdImageTypeSequenceChoiceCreate3D func (o *TxsdImageTypeSequenceChoiceCreate3D)
	XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_ func (o *XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_)
	XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_ func (o *XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_)
	XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_ func (o *XsdGoPkgHasElems_instance_formulachoicesequencekinematics_model_technique_typeschema_InstanceFormula_TinstanceFormulaType_)
	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_ func (o *XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencegles2_pass_typeschema_StencilClear_TfxClearstencilType_)
	XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_geometry_typeschema_Extra_TextraType_)
	TfxClearcolorType func (o *TfxClearcolorType)
	TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow func (o *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow)
	XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_ func (o *XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_)
	XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_ func (o *XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_)
	XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_physics_scenes_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_ func (o *XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_)
	XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_float3x3choicegles_param_groupschema_Float3X3_Tfloat3X3Type_)
	TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate func (o *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate)
	XsdGoPkgHasGroup_FxNewparamGroup func (o *XsdGoPkgHasGroup_FxNewparamGroup)
	XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_index_of_refractionsequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ func (o *XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_)
	XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_ func (o *XsdGoPkgHasElems_triangleschoicesequencemesh_typeschema_Triangles_TtrianglesType_)
	TprofileGlesType func (o *TprofileGlesType)
	TxsdGlPipelineSettingsGroupChoiceFogEnable func (o *TxsdGlPipelineSettingsGroupChoiceFogEnable)
	TxsdGlesPipelineSettingsGroupChoiceColorMask func (o *TxsdGlesPipelineSettingsGroupChoiceColorMask)
	XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequencefaces_typeschema_P_TpType_)
	XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_ func (o *XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_)
	TtechniqueType func (o *TtechniqueType)
	XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_ func (o *XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_)
	XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_ func (o *XsdGoPkgHasElem_paramchoicecommon_sidref_or_param_typeschema_Param_TcommonParamType_)
	TxsdInstanceEffectTypeSequenceSetparam func (o *TxsdInstanceEffectTypeSequenceSetparam)
	XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_ func (o *XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_)
	XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceedges_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000 func (o *XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000)
	XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_ func (o *XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_)
	TlibraryImagesType func (o *TlibraryImagesType)
	XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ func (o *XsdGoPkgHasElem_zfarsequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_)
	XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_ func (o *XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_)
	TlibraryGeometriesType func (o *TlibraryGeometriesType)
	XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_ func (o *XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_)
	TxsdFxTargetTypeSequenceBinaryChoiceHex func (o *TxsdFxTargetTypeSequenceBinaryChoiceHex)
	XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_ func (o *XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_)
	XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ func (o *XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_)
	XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ func (o *XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_)
	XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_ func (o *XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_)
	XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_ func (o *XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_)
	TxsdGlPipelineSettingsGroupChoiceFogStart func (o *TxsdGlPipelineSettingsGroupChoiceFogStart)
	TxsdGlPipelineSettingsGroupChoiceMaterialShininess func (o *TxsdGlPipelineSettingsGroupChoiceMaterialShininess)
	XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_ func (o *XsdGoPkgHasElems_color_clearsequenceevaluatesequencecg_pass_typeschema_ColorClear_TfxClearcolorType_)
	TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha func (o *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha)
	XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_ func (o *XsdGoPkgHasElem_bool2choicecg_param_groupschema_Bool2_Tbool2Type_)
	XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_ func (o *XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_)
	XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_animation_clips_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_ func (o *XsdGoPkgHasElem_modifiersequencecg_newparam_typeschema_Modifier_TfxModifierEnum_)
	XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_ func (o *XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_)
	TkinematicsNewparamType func (o *TkinematicsNewparamType)
	XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_ func (o *XsdGoPkgHasElem_spherechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Sphere_TsphereType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail)
	TxsdLightTypeSequenceTechniqueCommonChoiceAmbient func (o *TxsdLightTypeSequenceTechniqueCommonChoiceAmbient)
	XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_ func (o *XsdGoPkgHasElem_float2x4choicefx_newparam_groupschema_Float2X4_Tfloat2X4Type_)
	XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_ func (o *XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_)
	XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_ func (o *XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_)
	XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_ func (o *XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_)
	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_ func (o *XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_DepthClear_TfxCleardepthType_)
	XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_ func (o *XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_)
	TxsdGlPipelineSettingsGroupChoiceLogicOpEnable func (o *TxsdGlPipelineSettingsGroupChoiceLogicOpEnable)
	XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ func (o *XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_)
	XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ func (o *XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_)
	XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_ func (o *XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_)
	XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_ func (o *XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_)
	XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_ func (o *XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_)
	XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2choicefx_newparam_groupschema_Float2_Tfloat2Type_)
	XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_ func (o *XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_)
	XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ func (o *XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_)
	XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_ func (o *XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Mass_TtargetableFloatType_)
	TxsdGlPipelineSettingsGroupChoiceTextureEnvColor func (o *TxsdGlPipelineSettingsGroupChoiceTextureEnvColor)
	XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_ func (o *XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_)
	XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetexturechoicefx_common_color_or_texture_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_ func (o *XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_)
	XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetristrips_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_ func (o *XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_)
	TxsdGles2PipelineSettingsGroupChoiceBlendEnable func (o *TxsdGles2PipelineSettingsGroupChoiceBlendEnable)
	XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_)
	XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_ func (o *XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_)
	XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ func (o *XsdGoPkgHasElem_samplerDEPTHchoicegles2_value_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_)
	XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_ func (o *XsdGoPkgHasElems_rotatechoicesequenceattachmentsequencerigid_constraint_typeschema_Rotate_TrotateType_)
	XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_ func (o *XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_)
	XsdGoPkgHasGroup_GlPipelineSettingsGroup func (o *XsdGoPkgHasGroup_GlPipelineSettingsGroup)
	TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef func (o *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef)
	XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_ func (o *XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_)
	XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_ func (o *XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_)
	XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear func (o *XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear)
	XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_ func (o *XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_)
	XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_ func (o *XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef func (o *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef)
	XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequencesolids_typeschema_P_TpType_)
	TkinematicsBindType func (o *TkinematicsBindType)
	XsdGoPkgHasGroup_GlesParamGroup func (o *XsdGoPkgHasGroup_GlesParamGroup)
	XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat func (o *XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat)
	TglslShaderType func (o *TglslShaderType)
	TfxSamplerType func (o *TfxSamplerType)
	XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_ func (o *XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_)
	XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencejointssequenceskin_typeschema_Extra_TextraType_)
	TxsdGlPipelineSettingsGroupChoiceTextureCUBE func (o *TxsdGlPipelineSettingsGroupChoiceTextureCUBE)
	XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencelibrary_effects_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_ func (o *XsdGoPkgHasElem_float2choicesequencefx_common_newparam_typeschema_Float2_Tfloat2Type_)
	TxsdGlPipelineSettingsGroupChoiceDitherEnable func (o *TxsdGlPipelineSettingsGroupChoiceDitherEnable)
	XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_ func (o *XsdGoPkgHasElem_psequencewires_typeschema_P_TpType_)
	XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencetechniquesequenceprofile_gles2_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_float3x3choicefx_newparam_groupschema_Float3X3_Tfloat3X3Type_)
	TxsdGlPipelineSettingsGroupChoiceFogEnd func (o *TxsdGlPipelineSettingsGroupChoiceFogEnd)
	XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_ func (o *XsdGoPkgHasElems_curvesequencesurface_curves_typeschema_Curve_TcurveType_)
	XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_ func (o *XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_)
	XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencerigid_body_typeschema_Extra_TextraType_)
	TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation func (o *TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation)
	XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencenode_typeschema_Extra_TextraType_)
	TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert func (o *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert)
	TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame func (o *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame)
	XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceref_attachmentsequencerigid_constraint_typeschema_Extra_TextraType_)
	TlinesType func (o *TlinesType)
	XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_ func (o *XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_)
	TtargetableFloat4Type func (o *TtargetableFloat4Type)
	XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_ func (o *XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_)
	XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ func (o *XsdGoPkgHasElem_colorsequencedirectionalchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_)
	XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ func (o *XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_)
	XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoiceformula_newparam_typeschema_Float_TfloatType_)
	TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail func (o *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail)
	TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon func (o *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon)
	XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_ func (o *XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_)
	TjointType func (o *TjointType)
	XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_ func (o *XsdGoPkgHasElem_samplerRECTchoicecg_param_groupschema_SamplerRECT_TfxSamplerRECTType_)
	XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_ func (o *XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_)
	XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceinstance_rigid_body_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_ func (o *XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_)
	TxsdGlslProgramTypeSequenceBindUniformChoiceParam func (o *TxsdGlslProgramTypeSequenceBindUniformChoiceParam)
	TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable func (o *TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable)
	TxsdSkinTypeSequenceJoints func (o *TxsdSkinTypeSequenceJoints)
	XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ func (o *XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_)
	TrigidConstraintType func (o *TrigidConstraintType)
	XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_ func (o *XsdGoPkgHasElem_int3choiceglsl_value_groupschema_Int3_Tint3Type_)
	XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_ func (o *XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_)
	XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_ func (o *XsdGoPkgHasElems_newparamsequencekinematics_model_technique_typeschema_Newparam_TkinematicsNewparamType_)
	XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_ func (o *XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_)
	XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_ func (o *XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_)
	XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_ func (o *XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_)
	XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_ func (o *XsdGoPkgHasElem_sampler2Dchoicecg_param_groupschema_Sampler2D_TfxSampler2DType_)
	TglslProgramType func (o *TglslProgramType)
	XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_ func (o *XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_)
	XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencelibrary_force_fields_typeschema_Extra_TextraType_)
	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_ func (o *XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencecg_pass_typeschema_StencilTarget_TfxStenciltargetType_)
	XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_ func (o *XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_)
	XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencevisual_scene_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_ func (o *XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace func (o *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace)
	XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequencerigid_constraint_typeschema_Technique_TtechniqueType_)
	XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencepolygons_typeschema_Extra_TextraType_)
	TfxCommonColorOrTextureType func (o *TfxCommonColorOrTextureType)
	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ func (o *XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_)
	TfxIncludeType func (o *TfxIncludeType)
	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ func (o *XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_)
	TmotionTechniqueType func (o *TmotionTechniqueType)
	XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicegles2_value_groupschema_Bool_XsdtBoolean_)
	XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_ func (o *XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_)
	XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_ func (o *XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_)
	TxsdGlslProgramTypeSequenceBindUniform func (o *TxsdGlslProgramTypeSequenceBindUniform)
	XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_ func (o *XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_)
	XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_ func (o *XsdGoPkgHasElem_boolchoicefx_newparam_groupschema_Bool_XsdtBoolean_)
	TphysicsSceneType func (o *TphysicsSceneType)
	TxsdGles2PipelineSettingsGroupChoiceBlendFunc func (o *TxsdGles2PipelineSettingsGroupChoiceBlendFunc)
	XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_ func (o *XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_)
	XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_ func (o *XsdGoPkgHasElems_translatechoicesequenceattachmentsequencerigid_constraint_typeschema_Translate_TtranslateType_)
	XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_ func (o *XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_)
	XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicefx_setparam_groupschema_Int_TintType_)
	TxsdRigidConstraintTypeSequenceRefAttachment func (o *TxsdRigidConstraintTypeSequenceRefAttachment)
	XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ func (o *XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_)
	XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_ func (o *XsdGoPkgHasElem_float4x4choicegles_param_groupschema_Float4X4_Tfloat4X4Type_)
	XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_ func (o *XsdGoPkgHasElem_float4choicegles_param_groupschema_Float4_Tfloat4Type_)
	TxsdGlPipelineSettingsGroupChoiceTexture1DEnable func (o *TxsdGlPipelineSettingsGroupChoiceTexture1DEnable)
	XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_ func (o *XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_)
	XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ func (o *XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_)
	XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_ func (o *XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_)
	XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencematerial_typeschema_Extra_TextraType_)
	TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable func (o *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable)
	XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_ func (o *XsdGoPkgHasElem_bool3choicegles_param_groupschema_Bool3_Tbool3Type_)
	XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_ func (o *XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_)
	XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_ func (o *XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_)
	XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_ func (o *XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_)
	XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ func (o *XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_)
	XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_ func (o *XsdGoPkgHasElem_constantsequencegles_texenv_command_typeschema_Constant_TglesTextureConstantType_)
	XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceprofile_bridge_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_ func (o *XsdGoPkgHasElem_verticessequenceconvex_mesh_typeschema_Vertices_TverticesType_)
	TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate func (o *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate)
	XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_ func (o *XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_)
	XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_float2x2choicecg_param_groupschema_Float2X2_Tfloat2X2Type_)
	XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_ func (o *XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_)
	XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_ func (o *XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_)
	XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_ func (o *XsdGoPkgHasElem_semanticsequencegles2_newparam_typeschema_Semantic_XsdtNCName_)
	XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_ func (o *XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_)
	ToriginType func (o *ToriginType)
	XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255 func (o *XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255)
	XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ func (o *XsdGoPkgHasElem_emissionsequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_)
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_ func (o *XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_)
	XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_ func (o *XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_)
	XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True func (o *XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True)
	XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_ func (o *XsdGoPkgHasElems_newparamsequencemotion_effector_info_typeschema_Newparam_TkinematicsNewparamType_)
	TxsdGlesPipelineSettingsGroupChoiceFogStart func (o *TxsdGlesPipelineSettingsGroupChoiceFogStart)
	XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequenceeffect_typeschema_Asset_TassetType_)
	TglesSamplerType func (o *TglesSamplerType)
	XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_ func (o *XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_)
	XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ func (o *XsdGoPkgHasElem_samplerDEPTHchoicecg_param_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_)
	XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_ func (o *XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_)
	XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceprofile_common_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ func (o *XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_)
	TinstanceWithExtraType func (o *TinstanceWithExtraType)
	TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail func (o *TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail)
	TxsdGles2PipelineSettingsGroupChoiceLineWidth func (o *TxsdGles2PipelineSettingsGroupChoiceLineWidth)
	XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencekinematics_scene_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencekinematics_model_typeschema_Asset_TassetType_)
	XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_ func (o *XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_)
	TxsdGlesPipelineSettingsGroupChoiceDepthMask func (o *TxsdGlesPipelineSettingsGroupChoiceDepthMask)
	TxsdGlPipelineSettingsGroupChoiceLineStippleEnable func (o *TxsdGlPipelineSettingsGroupChoiceLineStippleEnable)
	XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_shininesssequencephongchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Extra_TextraType_)
	TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask func (o *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask)
	XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_ func (o *XsdGoPkgHasElems_techniquesequenceopticssequencecamera_typeschema_Technique_TtechniqueType_)
	TxsdImageTypeSequenceChoiceCreate2DSequenceArray func (o *TxsdImageTypeSequenceChoiceCreate2DSequenceArray)
	XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequenceprofile_gles2_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_ func (o *XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_)
	XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_ func (o *XsdGoPkgHasElems_annotatesequencetechniquesequenceprofile_cg_typeschema_Annotate_TfxAnnotateType_)
	XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_ func (o *XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_)
	XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_ func (o *XsdGoPkgHasElem_floatchoicekinematics_bind_typeschema_Float_TfloatType_)
	XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_ func (o *XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_)
	XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ func (o *XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_)
	XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_ func (o *XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_)
	XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ func (o *XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_)
	XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_ func (o *XsdGoPkgHasElem_paramchoicecommon_int_or_param_typeschema_Param_TcommonParamType_)
	XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_ func (o *XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_)
	XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_ func (o *XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_)
	XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_ func (o *XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_)
	XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_ func (o *XsdGoPkgHasElem_mipssequencecreate_3dchoicesequenceimage_typeschema_Mips_TimageMipsType_)
	XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_ func (o *XsdGoPkgHasElems_inputsequencelines_typeschema_Input_TinputLocalOffsetType_)
	TxsdGlPipelineSettingsGroupChoiceLightAmbient func (o *TxsdGlPipelineSettingsGroupChoiceLightAmbient)
	XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_ func (o *XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_)
	TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb func (o *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb)
	XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap func (o *XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap)
	XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_ func (o *XsdGoPkgHasElems_extrasequencemesh_typeschema_Extra_TextraType_)
	XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_ func (o *XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_)
	XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_ func (o *XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_)
	TxsdGlesPipelineSettingsGroupChoiceFogColor func (o *TxsdGlesPipelineSettingsGroupChoiceFogColor)
	XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_ func (o *XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_)
	TxsdGlPipelineSettingsGroupChoiceTexture3DEnable func (o *TxsdGlPipelineSettingsGroupChoiceTexture3DEnable)
	XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_ func (o *XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_)
	XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 func (o *XsdGoPkgHasElem_dampingsequenceangularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00)
	TxsdGlPipelineSettingsGroupChoiceTexture3D func (o *TxsdGlPipelineSettingsGroupChoiceTexture3D)
	XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_ func (o *XsdGoPkgHasElem_float4x3choicegles_param_groupschema_Float4X3_Tfloat4X3Type_)
	XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_ func (o *XsdGoPkgHasElem_assetsequencearticulated_system_typeschema_Asset_TassetType_)
	XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_ func (o *XsdGoPkgHasElem_intchoicecg_param_groupschema_Int_TintType_)
	XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_ func (o *XsdGoPkgHasElems_inputsequencejointssequenceskin_typeschema_Input_TinputLocalType_)
	TxsdGlPipelineSettingsGroupChoicePolygonOffset func (o *TxsdGlPipelineSettingsGroupChoicePolygonOffset)
	XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_ func (o *XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_)
	XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_ func (o *XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_)
	TtrianglesType func (o *TtrianglesType)
	TprofileCgType func (o *TprofileCgType)
	TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize func (o *TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize)
	TxsdSkinTypeSequenceVertexWeights func (o *TxsdSkinTypeSequenceVertexWeights)
	XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_ func (o *XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_)
	XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_ func (o *XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_)
	TxsdGles2PipelineSettingsGroupChoiceStencilMask func (o *TxsdGles2PipelineSettingsGroupChoiceStencilMask)
	XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ func (o *XsdGoPkgHasElem_reflectivitysequenceconstantchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_)
	XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_ func (o *XsdGoPkgHasElems_inputsequencecontrol_verticessequencespline_typeschema_Input_TinputLocalType_)
	XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_ func (o *XsdGoPkgHasElem_float3x3choiceglsl_value_groupschema_Float3X3_Tfloat3X3Type_)
	TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace func (o *TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace)
} {}
