//	Auto-generated by the "go-xsd" package located at:
//		github.com/metaleap/go-xsd
//	Comments on types and fields (if any) are from the XSD file located at:
//		khronos.org/files/collada_schema_1_5
package go_Collada15

//	COLLADA Schema
//	Version 1.5.0 (August 6, 2008)
//	Copyright (C) 2008 The Khronos Group Inc., Sony Computer Entertainment Inc.
//	All Rights Reserved.
//	Khronos is a trademark of The Khronos Group Inc.
//	COLLADA is a trademark of Sony Computer Entertainment Inc. used by permission by Khronos.
//	Note that this software document is distributed on an "AS IS" basis, with ALL EXPRESS AND
//	IMPLIED WARRANTIES AND CONDITIONS DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED
//	WARRANTIES AND CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A PARTICULAR
//	PURPOSE, AND NON-INFRINGEMENT.


import (
	xml "github.com/metaleap/go-xsd-pkg/www.w3.org/2001/xml.xsd_go"
	math "github.com/metaleap/go-xsd-pkg/www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd_go"
	xsdt "github.com/metaleap/go-xsd/types"
)

//	The COLLADA element declares the root of the document that comprises some of the content
//	in the COLLADA schema.
//	The COLLADA element may contain any
//	number of library_animation_clips
//	elements.
//	The library_animation_clips element declares a module of animation_clip elements.
//	The library_animation_clips element may contain an asset element.
//	The asset element defines asset management information regarding its parent element.
//	The up_axis element contains descriptive information about coordinate system of the geometric
//	data. All coordinates are right-handed by definition. This element specifies which axis is
//	considered up. The default is the Y-axis. The up_axis element may appear zero or one time.
//	An enumerated type specifying the acceptable up-axis values.
type TupAxisEnum xsdt.String

//	Since TupAxisEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TupAxisEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TupAxisEnum is "Y_UP".
func (me TupAxisEnum) IsYUp () bool { return me == "Y_UP" }

//	Returns true if the value of this enumerated TupAxisEnum is "Z_UP".
func (me TupAxisEnum) IsZUp () bool { return me == "Z_UP" }

//	Since TupAxisEnum is just a simple String type, this merely returns the current string value.
func (me TupAxisEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TupAxisEnum is "X_UP".
func (me TupAxisEnum) IsXUp () bool { return me == "X_UP" }

//	This convenience method just performs a simple type conversion to TupAxisEnum's alias type xsdt.String.
func (me TupAxisEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp struct {
//	The up_axis element contains descriptive information about coordinate system of the geometric
//	data. All coordinates are right-handed by definition. This element specifies which axis is
//	considered up. The default is the Y-axis. The up_axis element may appear zero or one time.
	UpAxis TupAxisEnum `xml:"http://www.collada.org/2008/03/COLLADASchema up_axis"`

}

//	Returns the default value for UpAxis -- "Y_UP"
func (me XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp) UpAxisDefault () TupAxisEnum { return TupAxisEnum("Y_UP") }

//	The unit element contains descriptive information about unit of measure. It has attributes for
//	the name of the unit and the measurement with respect to the meter. The unit element may appear
//	zero or one time.
//	The name attribute specifies the name of the unit. The default value for the name
//	attribute is "meter".
type XsdGoPkgHasAttr_Name_XsdtNmtoken_Meter struct {
//	The name attribute specifies the name of the unit. The default value for the name
//	attribute is "meter".
	Name xsdt.Nmtoken `xml:"http://www.collada.org/2008/03/COLLADASchema name,attr"`

}

//	Returns the default value for Name -- "meter"
func (me XsdGoPkgHasAttr_Name_XsdtNmtoken_Meter) NameDefault () xsdt.Nmtoken { return xsdt.Nmtoken("meter") }

//	The meter attribute specifies the measurement with respect to the meter. The default
//	value for the meter attribute is "1.0".
type TfloatType xsdt.Double

//	This convenience method just performs a simple type conversion to TfloatType's alias type xsdt.Double.
func (me TfloatType) ToXsdtDouble () xsdt.Double { return xsdt.Double(me) }

//	Since TfloatType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TfloatType) SetFromString (s string)  { (*xsdt.Double)(me).SetFromString(s) }

//	Returns a string representation of this TfloatType's current non-string scalar value.
func (me TfloatType) String () string { return xsdt.Double(me).String() }

type XsdGoPkgHasAttr_Meter_TfloatType_10 struct {
//	The meter attribute specifies the measurement with respect to the meter. The default
//	value for the meter attribute is "1.0".
	Meter TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema meter,attr"`

}

//	Returns the default value for Meter -- 1.0
func (me XsdGoPkgHasAttr_Meter_TfloatType_10) MeterDefault () TfloatType { return TfloatType(1.0) }

type TxsdAssetTypeSequenceUnit struct {
//	The meter attribute specifies the measurement with respect to the meter. The default
//	value for the meter attribute is "1.0".
	XsdGoPkgHasAttr_Meter_TfloatType_10

//	The name attribute specifies the name of the unit. The default value for the name
//	attribute is "meter".
	XsdGoPkgHasAttr_Name_XsdtNmtoken_Meter

}

type XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_ struct {
//	The unit element contains descriptive information about unit of measure. It has attributes for
//	the name of the unit and the measurement with respect to the meter. The unit element may appear
//	zero or one time.
	Unit *TxsdAssetTypeSequenceUnit `xml:"http://www.collada.org/2008/03/COLLADASchema unit"`

}

//	The revision element contains the revision information for the parent element. The revision
//	element may appear zero or one time.
type XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_ struct {
//	The revision element contains the revision information for the parent element. The revision
//	element may appear zero or one time.
	Revision xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema revision"`

}

//	The title element contains the title information for the parent element. The title element may
//	appear zero or one time.
type XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_ struct {
//	The title element contains the title information for the parent element. The title element may
//	appear zero or one time.
	Title xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema title"`

}

//	The contributor element defines authoring information for asset management
//	The copyright element contains a string with copyright information.
//	There may be only one copyright element.
type XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_ struct {
//	The copyright element contains a string with copyright information.
//	There may be only one copyright element.
	Copyright xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema copyright"`

}

//	The comments element contains a string with comments from this contributor.
//	There may be only one comments element.
type XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_ struct {
//	The comments element contains a string with comments from this contributor.
//	There may be only one comments element.
	Comments xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema comments"`

}

//	Contains a string with author's email address. String that compliant with RFC 2822 section 3.4. This element has no attributes. There may be only one author email address.
type TxsdAssetTypeSequenceContributorSequenceAuthorEmail xsdt.String

//	Since TxsdAssetTypeSequenceContributorSequenceAuthorEmail is just a simple String type, this merely returns the current string value.
func (me TxsdAssetTypeSequenceContributorSequenceAuthorEmail) String () string { return xsdt.String(me).String() }

//	Since TxsdAssetTypeSequenceContributorSequenceAuthorEmail is just a simple String type, this merely sets the current value from the specified string.
func (me *TxsdAssetTypeSequenceContributorSequenceAuthorEmail) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TxsdAssetTypeSequenceContributorSequenceAuthorEmail's alias type xsdt.String.
func (me TxsdAssetTypeSequenceContributorSequenceAuthorEmail) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_ struct {
//	Contains a string with author's email address. String that compliant with RFC 2822 section 3.4. This element has no attributes. There may be only one author email address.
	AuthorEmail TxsdAssetTypeSequenceContributorSequenceAuthorEmail `xml:"http://www.collada.org/2008/03/COLLADASchema author_email"`

}

//	The source_data element contains a URI reference to the source data used for this asset.
//	There may be only one source_data element.
type XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_ struct {
//	The source_data element contains a URI reference to the source data used for this asset.
//	There may be only one source_data element.
	SourceData xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema source_data"`

}

//	Contains a URI reference (xs:anyURI) to author's website.  This element has no attributes.   There may be only one author website.
type XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_ struct {
//	Contains a URI reference (xs:anyURI) to author's website.  This element has no attributes.   There may be only one author website.
	AuthorWebsite xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema author_website"`

}

//	The author element contains a string with the author's name.
//	There may be only one author element.
type XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_ struct {
//	The author element contains a string with the author's name.
//	There may be only one author element.
	Author xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema author"`

}

//	The authoring_tool element contains a string with the authoring tool's name.
//	There may be only one authoring_tool element.
type XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_ struct {
//	The authoring_tool element contains a string with the authoring tool's name.
//	There may be only one authoring_tool element.
	AuthoringTool xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema authoring_tool"`

}

type TxsdAssetTypeSequenceContributor struct {
//	The copyright element contains a string with copyright information.
//	There may be only one copyright element.
	XsdGoPkgHasElem_copyrightsequencecontributorsequenceasset_typeschema_Copyright_XsdtString_

//	The comments element contains a string with comments from this contributor.
//	There may be only one comments element.
	XsdGoPkgHasElem_commentssequencecontributorsequenceasset_typeschema_Comments_XsdtString_

//	Contains a string with author's email address. String that compliant with RFC 2822 section 3.4. This element has no attributes. There may be only one author email address.
	XsdGoPkgHasElem_author_emailsequencecontributorsequenceasset_typeschema_AuthorEmail_TxsdAssetTypeSequenceContributorSequenceAuthorEmail_

//	The source_data element contains a URI reference to the source data used for this asset.
//	There may be only one source_data element.
	XsdGoPkgHasElem_source_datasequencecontributorsequenceasset_typeschema_SourceData_XsdtAnyURI_

//	Contains a URI reference (xs:anyURI) to author's website.  This element has no attributes.   There may be only one author website.
	XsdGoPkgHasElem_author_websitesequencecontributorsequenceasset_typeschema_AuthorWebsite_XsdtAnyURI_

//	The author element contains a string with the author's name.
//	There may be only one author element.
	XsdGoPkgHasElem_authorsequencecontributorsequenceasset_typeschema_Author_XsdtString_

//	The authoring_tool element contains a string with the authoring tool's name.
//	There may be only one authoring_tool element.
	XsdGoPkgHasElem_authoring_toolsequencecontributorsequenceasset_typeschema_AuthoringTool_XsdtString_

}

type XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_ struct {
//	The contributor element defines authoring information for asset management
	Contributors []*TxsdAssetTypeSequenceContributor `xml:"http://www.collada.org/2008/03/COLLADASchema contributor"`

}

//	Specifies the location of the asset using the WGS84 coordinate system.
type XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_ struct {
	Longitude xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema longitude"`

}

//	Altitude is always given in meters.  If the mode is "absolute", then the value is interpreted as meters from mean sea level.  If the mode is "relativeToGround" then the value is interpreted as meters above the actual ground elevation at that particular location.
//	The legal values for the mode attribute on the altitute element in a
//	geographic_location element.
type TaltitudeModeEnum xsdt.String

//	This convenience method just performs a simple type conversion to TaltitudeModeEnum's alias type xsdt.String.
func (me TaltitudeModeEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TaltitudeModeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TaltitudeModeEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TaltitudeModeEnum is "absolute".
func (me TaltitudeModeEnum) IsAbsolute () bool { return me == "absolute" }

//	Since TaltitudeModeEnum is just a simple String type, this merely returns the current string value.
func (me TaltitudeModeEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TaltitudeModeEnum is "relativeToGround".
func (me TaltitudeModeEnum) IsRelativeToGround () bool { return me == "relativeToGround" }

type XsdGoPkgHasAttr_Mode_TaltitudeModeEnum_RelativeToGround struct {
	Mode TaltitudeModeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema mode,attr"`

}

//	Returns the default value for Mode -- "relativeToGround"
func (me XsdGoPkgHasAttr_Mode_TaltitudeModeEnum_RelativeToGround) ModeDefault () TaltitudeModeEnum { return TaltitudeModeEnum("relativeToGround") }

type TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude struct {
	XsdGoPkgValue xsdt.Float `xml:",chardata"`

	XsdGoPkgHasAttr_Mode_TaltitudeModeEnum_RelativeToGround

}

type XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_ struct {
//	Altitude is always given in meters.  If the mode is "absolute", then the value is interpreted as meters from mean sea level.  If the mode is "relativeToGround" then the value is interpreted as meters above the actual ground elevation at that particular location.
	Altitude *TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude `xml:"http://www.collada.org/2008/03/COLLADASchema altitude"`

}

type XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_ struct {
	Latitude xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema latitude"`

}

type TxsdAssetTypeSequenceCoverageSequenceGeographicLocation struct {
	XsdGoPkgHasElem_longitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Longitude_XsdtFloat_

//	Altitude is always given in meters.  If the mode is "absolute", then the value is interpreted as meters from mean sea level.  If the mode is "relativeToGround" then the value is interpreted as meters above the actual ground elevation at that particular location.
	XsdGoPkgHasElem_altitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Altitude_TxsdAssetTypeSequenceCoverageSequenceGeographicLocationSequenceAltitude_

	XsdGoPkgHasElem_latitudesequencegeographic_locationsequencecoveragesequenceasset_typeschema_Latitude_XsdtFloat_

}

type XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_ struct {
//	Specifies the location of the asset using the WGS84 coordinate system.
	GeographicLocation *TxsdAssetTypeSequenceCoverageSequenceGeographicLocation `xml:"http://www.collada.org/2008/03/COLLADASchema geographic_location"`

}

type TxsdAssetTypeSequenceCoverage struct {
//	Specifies the location of the asset using the WGS84 coordinate system.
	XsdGoPkgHasElem_geographic_locationsequencecoveragesequenceasset_typeschema_GeographicLocation_TxsdAssetTypeSequenceCoverageSequenceGeographicLocation_

}

type XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_ struct {
	Coverage *TxsdAssetTypeSequenceCoverage `xml:"http://www.collada.org/2008/03/COLLADASchema coverage"`

}

//	The keywords element contains a list of words used as search criteria for the parent element.
//	There may be only one keywords element.
type XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_ struct {
//	The keywords element contains a list of words used as search criteria for the parent element.
//	There may be only one keywords element.
	Keywords xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema keywords"`

}

//	The extra element declares additional information regarding its parent element.
//	This element must contain at least one non-common profile technique.
//	The technique element declares the information used to process some portion of the content. Each
//	technique conforms to an associated profile. Techniques generally act as a "switch". If more than
//	one is present for a particular portion of content, on import, one or the other is picked, but
//	usually not both. Selection should be based on which profile the importing application can support.
//	Techniques contain application data and programs, making them assets that can be managed as a unit.
//	The profile attribute indicates the type of profile. This is a vendor defined character
//	string that indicates the platform or capability target for the technique. Required attribute.
type XsdGoPkgHasAttr_Profile_XsdtNmtoken_ struct {
//	The profile attribute indicates the type of profile. This is a vendor defined character
//	string that indicates the platform or capability target for the technique. Required attribute.
	Profile xsdt.Nmtoken `xml:"http://www.collada.org/2008/03/COLLADASchema profile,attr"`

}

type TtechniqueType struct {
//	The profile attribute indicates the type of profile. This is a vendor defined character
//	string that indicates the platform or capability target for the technique. Required attribute.
	XsdGoPkgHasAttr_Profile_XsdtNmtoken_

}

type XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_ struct {
//	This element must contain at least one non-common profile technique.
	Techniques []*TtechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	The name attribute is the text string name of this element. Optional attribute.
type XsdGoPkgHasAttr_Name_XsdtToken_ struct {
//	The name attribute is the text string name of this element. Optional attribute.
	Name xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema name,attr"`

}

//	The extra element may contain an asset element.
type XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_ struct {
//	The extra element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	The type attribute indicates the type of the value data. This text string must be understood
//	by the application. Required attribute.
type XsdGoPkgHasAttr_Type_XsdtNmtoken_ struct {
//	The type attribute indicates the type of the value data. This text string must be understood
//	by the application. Required attribute.
	Type xsdt.Nmtoken `xml:"http://www.collada.org/2008/03/COLLADASchema type,attr"`

}

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
type XsdGoPkgHasAttr_Id_XsdtId_ struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	Id xsdt.Id `xml:"http://www.collada.org/2008/03/COLLADASchema id,attr"`

}

type TextraType struct {
//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	This element must contain at least one non-common profile technique.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may contain an asset element.
	XsdGoPkgHasElem_assetsequenceextra_typeschema_Asset_TassetType_

//	The type attribute indicates the type of the value data. This text string must be understood by
//	the application. Optional attribute.
	XsdGoPkgHasAttr_Type_XsdtNmtoken_

}

type XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_ struct {
	Extras []*TextraType `xml:"http://www.collada.org/2008/03/COLLADASchema extra"`

}

//	The created element contains the date and time that the parent element was created and is
//	represented in an ISO 8601 format.  The created element may appear zero or one time.
type XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_ struct {
//	The created element contains the date and time that the parent element was created and is
//	represented in an ISO 8601 format.  The created element may appear zero or one time.
	Created xsdt.DateTime `xml:"http://www.collada.org/2008/03/COLLADASchema created"`

}

//	The subject element contains a description of the topical subject of the parent element. The
//	subject element may appear zero or one time.
type XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_ struct {
//	The subject element contains a description of the topical subject of the parent element. The
//	subject element may appear zero or one time.
	Subject xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema subject"`

}

//	The modified element contains the date and time that the parent element was last modified and
//	represented in an ISO 8601 format. The modified element may appear zero or one time.
type XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_ struct {
//	The modified element contains the date and time that the parent element was last modified and
//	represented in an ISO 8601 format. The modified element may appear zero or one time.
	Modified xsdt.DateTime `xml:"http://www.collada.org/2008/03/COLLADASchema modified"`

}

type TassetType struct {
//	The unit element contains descriptive information about unit of measure. It has attributes for
//	the name of the unit and the measurement with respect to the meter. The unit element may appear
//	zero or one time.
	XsdGoPkgHasElem_unitsequenceasset_typeschema_Unit_TxsdAssetTypeSequenceUnit_

//	The revision element contains the revision information for the parent element. The revision
//	element may appear zero or one time.
	XsdGoPkgHasElem_revisionsequenceasset_typeschema_Revision_XsdtString_

//	The title element contains the title information for the parent element. The title element may
//	appear zero or one time.
	XsdGoPkgHasElem_titlesequenceasset_typeschema_Title_XsdtString_

//	The contributor element defines authoring information for asset management
	XsdGoPkgHasElems_contributorsequenceasset_typeschema_Contributor_TxsdAssetTypeSequenceContributor_

	XsdGoPkgHasElem_coveragesequenceasset_typeschema_Coverage_TxsdAssetTypeSequenceCoverage_

//	The keywords element contains a list of words used as search criteria for the parent element.
//	There may be only one keywords element.
	XsdGoPkgHasElem_keywordssequenceasset_typeschema_Keywords_XsdtToken_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The created element contains the date and time that the parent element was created and is
//	represented in an ISO 8601 format.  The created element may appear zero or one time.
	XsdGoPkgHasElem_createdsequenceasset_typeschema_Created_XsdtDateTime_

//	The subject element contains a description of the topical subject of the parent element. The
//	subject element may appear zero or one time.
	XsdGoPkgHasElem_subjectsequenceasset_typeschema_Subject_XsdtString_

//	The modified element contains the date and time that the parent element was last modified and
//	represented in an ISO 8601 format. The modified element may appear zero or one time.
	XsdGoPkgHasElem_modifiedsequenceasset_typeschema_Modified_XsdtDateTime_

//	The up_axis element contains descriptive information about coordinate system of the geometric
//	data. All coordinates are right-handed by definition. This element specifies which axis is
//	considered up. The default is the Y-axis. The up_axis element may appear zero or one time.
	XsdGoPkgHasElem_up_axissequenceasset_typeschema_UpAxis_TupAxisEnum_YUp

}

type XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_ struct {
//	The library_animation_clips element may contain an asset element.
	Asset *TassetType `xml:"http://www.collada.org/2008/03/COLLADASchema asset"`

}

//	There must be at least one animation_clip element.
//	The animation_clip element defines a section of the animation curves to be used together as
//	an animation clip.
//	The start attribute is the time in seconds of the beginning of the clip.  This time is
//	the same as that used in the key-frame data and is used to determine which set of
//	key-frames will be included in the clip.  The start time does not specify when the clip
//	will be played.  If the time falls between two keyframes of a referenced animation, an
//	interpolated value should be used.  The default value is 0.0.  Optional attribute.
type XsdGoPkgHasAttr_Start_TfloatType_00 struct {
//	The start attribute is the time in seconds of the beginning of the clip.  This time is
//	the same as that used in the key-frame data and is used to determine which set of
//	key-frames will be included in the clip.  The start time does not specify when the clip
//	will be played.  If the time falls between two keyframes of a referenced animation, an
//	interpolated value should be used.  The default value is 0.0.  Optional attribute.
	Start TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema start,attr"`

}

//	Returns the default value for Start -- 0.0
func (me XsdGoPkgHasAttr_Start_TfloatType_00) StartDefault () TfloatType { return TfloatType(0.0) }

//	The end attribute is the time in seconds of the end of the clip.  This is used in the
//	same way as the start time.  If end is not specified, the value is taken to be the end
//	time of the longest animation.  Optional attribute.
type XsdGoPkgHasAttr_End_TfloatType_ struct {
//	The end attribute is the time in seconds of the end of the clip.  This is used in the
//	same way as the start time.  If end is not specified, the value is taken to be the end
//	time of the longest animation.  Optional attribute.
	End TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema end,attr"`

}

//	The animation_clip must instance at least one animation element.
//	The instance_with_extra_type element is used for all generic instance elements. A generic instance element
//	is one which does not have any specific child elements declared.
//	The url attribute refers to resource to instantiate. This may refer to a local resource using a
//	relative URL fragment identifier that begins with the "#" character. The url attribute may refer
//	to an external resource using an absolute or relative URL.
type XsdGoPkgHasAttr_Url_XsdtAnyURI_ struct {
//	The url attribute refers to resource to instantiate. This may refer to a local resource using a
//	relative URL fragment identifier that begins with the "#" character. The url attribute may refer
//	to an external resource using an absolute or relative URL.
	Url xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema url,attr"`

}

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
type TsidType xsdt.NCName

//	Since TsidType is just a simple String type, this merely sets the current value from the specified string.
func (me *TsidType) SetFromString (s string)  { (*xsdt.NCName)(me).SetFromString(s) }

//	Since TsidType is just a simple String type, this merely returns the current string value.
func (me TsidType) String () string { return xsdt.NCName(me).String() }

//	This convenience method just performs a simple type conversion to TsidType's alias type xsdt.NCName.
func (me TsidType) ToXsdtNCName () xsdt.NCName { return xsdt.NCName(me) }

type XsdGoPkgHasAttr_Sid_TsidType_ struct {
//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	Sid TsidType `xml:"http://www.collada.org/2008/03/COLLADASchema sid,attr"`

}

type TinstanceWithExtraType struct {
//	The url attribute refers to resource to instantiate. This may refer to a local resource using a
//	relative URL fragment identifier that begins with the "#" character. The url attribute may refer
//	to an external resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The extra element may occur any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_ struct {
//	The animation_clip must instance at least one animation element.
	InstanceAnimations []*TinstanceWithExtraType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_animation"`

}

type XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_ struct {
	Bool xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema bool"`

}

type TsidrefType xsdt.String

//	Since TsidrefType is just a simple String type, this merely returns the current string value.
func (me TsidrefType) String () string { return xsdt.String(me).String() }

//	Since TsidrefType is just a simple String type, this merely sets the current value from the specified string.
func (me *TsidrefType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TsidrefType's alias type xsdt.String.
func (me TsidrefType) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_ struct {
	Sidref TsidrefType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF"`

}

type XsdGoPkgHasAttr_Ref_XsdtToken_ struct {
	Ref xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema ref,attr"`

}

type TkinematicsConnectParamType struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

}

type XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_ struct {
	ConnectParam *TkinematicsConnectParamType `xml:"http://www.collada.org/2008/03/COLLADASchema connect_param"`

}

type TintType xsdt.Long

//	This convenience method just performs a simple type conversion to TintType's alias type xsdt.Long.
func (me TintType) ToXsdtLong () xsdt.Long { return xsdt.Long(me) }

//	Returns a string representation of this TintType's current non-string scalar value.
func (me TintType) String () string { return xsdt.Long(me).String() }

//	Since TintType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TintType) SetFromString (s string)  { (*xsdt.Long)(me).SetFromString(s) }

type XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_ struct {
	Int TintType `xml:"http://www.collada.org/2008/03/COLLADASchema int"`

}

type XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_ struct {
	Float TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

type TformulaSetparamType struct {
	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_

	XsdGoPkgHasAttr_Ref_XsdtToken_

	XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_

}

type XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_ struct {
	Setparams []*TformulaSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

type TinstanceFormulaType struct {
	XsdGoPkgHasElems_setparamsequenceinstance_formula_typeschema_Setparam_TformulaSetparamType_

	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_ struct {
	InstanceFormulas []*TinstanceFormulaType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_formula"`

}

type TanimationClipType struct {
//	The start attribute is the time in seconds of the beginning of the clip.  This time is
//	the same as that used in the key-frame data and is used to determine which set of
//	key-frames will be included in the clip.  The start time does not specify when the clip
//	will be played.  If the time falls between two keyframes of a referenced animation, an
//	interpolated value should be used.  The default value is 0.0.  Optional attribute.
	XsdGoPkgHasAttr_Start_TfloatType_00

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The end attribute is the time in seconds of the end of the clip.  This is used in the
//	same way as the start time.  If end is not specified, the value is taken to be the end
//	time of the longest animation.  Optional attribute.
	XsdGoPkgHasAttr_End_TfloatType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The animation_clip must instance at least one animation element.
	XsdGoPkgHasElems_instance_animationsequenceanimation_clip_typeschema_InstanceAnimation_TinstanceWithExtraType_

	XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_

//	The animation_clip element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_ struct {
//	There must be at least one animation_clip element.
	AnimationClips []*TanimationClipType `xml:"http://www.collada.org/2008/03/COLLADASchema animation_clip"`

}

type TlibraryAnimationClipsType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The library_animation_clips element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	There must be at least one animation_clip element.
	XsdGoPkgHasElems_animation_clipsequencelibrary_animation_clips_typeschema_AnimationClip_TanimationClipType_

}

type XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_ struct {
//	The COLLADA element may contain any
//	number of library_animation_clips
//	elements.
	LibraryAnimationClipses []*TlibraryAnimationClipsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_animation_clips"`

}

//	The COLLADA element may contain any
//	number of library_materials elements.
//	The library_materials element declares a module of material elements.
//	There must be at least one material element.
//	Materials describe the visual appearance of a geometric object.
//	The material must instance an effect.
//	The instance_effect element declares the instantiation of a COLLADA effect resource.
//	Add a hint for a platform of which technique to use in this effect.
//	A profile defines a string that specifies which API profile this is hint is aimed for.
type XsdGoPkgHasAttr_Profile_XsdtNCName_ struct {
//	A profile defines a string that specifies which API profile this is hint is aimed for.
	Profile xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema profile,attr"`

}

//	A platform defines a string that specifies which platform this is hint is aimed for.
type XsdGoPkgHasAttr_Platform_XsdtNCName_ struct {
//	A platform defines a string that specifies which platform this is hint is aimed for.
	Platform xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema platform,attr"`

}

//	A reference to the technique to use for the specified platform.
type XsdGoPkgHasAttr_Ref_XsdtNCName_ struct {
//	A reference to the technique to use for the specified platform.
	Ref xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema ref,attr"`

}

type TxsdInstanceEffectTypeSequenceTechniqueHint struct {
//	A platform defines a string that specifies which platform this is hint is aimed for.
	XsdGoPkgHasAttr_Platform_XsdtNCName_

//	A reference to the technique to use for the specified platform.
	XsdGoPkgHasAttr_Ref_XsdtNCName_

//	A profile defines a string that specifies which API profile this is hint is aimed for.
	XsdGoPkgHasAttr_Profile_XsdtNCName_

}

type XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_ struct {
//	Add a hint for a platform of which technique to use in this effect.
	TechniqueHints []*TxsdInstanceEffectTypeSequenceTechniqueHint `xml:"http://www.collada.org/2008/03/COLLADASchema technique_hint"`

}

//	Assigns a new value to a previously defined parameter
//	A group that specifies the allowable types for effect scoped parameters.
type TlistOfFloatsType xsdt.String

//	Since TlistOfFloatsType is just a simple String type, this merely returns the current string value.
func (me TlistOfFloatsType) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TlistOfFloatsType's alias type xsdt.String.
func (me TlistOfFloatsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TlistOfFloatsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfFloatsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	TlistOfFloatsType defines a String containing a whitespace-separated list of TfloatType values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfFloatsType) Values () (list []TfloatType) { var btv = new(TfloatType); var svals = xsdt.ListValues(string(me)); list = make([]TfloatType, len(svals)); for i, s := range svals { btv.SetFromString(s); list[i] = *btv }; return }

type Tfloat2Type TlistOfFloatsType

//	Since Tfloat2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat2Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tfloat2Type's alias type TlistOfFloatsType.
func (me Tfloat2Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat2Type is just a simple String type, this merely returns the current string value.
func (me Tfloat2Type) String () string { return TlistOfFloatsType(me).String() }

type XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_ struct {
	Float2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x1"`

}

type Tfloat3X4Type TlistOfFloatsType

//	Since Tfloat3X4Type is just a simple String type, this merely returns the current string value.
func (me Tfloat3X4Type) String () string { return TlistOfFloatsType(me).String() }

//	Since Tfloat3X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat3X4Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tfloat3X4Type's alias type TlistOfFloatsType.
func (me Tfloat3X4Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_ struct {
	Float3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x4"`

}

type TlistOfIntsType xsdt.String

//	Since TlistOfIntsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfIntsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	TlistOfIntsType defines a String containing a whitespace-separated list of TintType values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfIntsType) Values () (list []TintType) { var btv = new(TintType); var svals = xsdt.ListValues(string(me)); list = make([]TintType, len(svals)); for i, s := range svals { btv.SetFromString(s); list[i] = *btv }; return }

//	This convenience method just performs a simple type conversion to TlistOfIntsType's alias type xsdt.String.
func (me TlistOfIntsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TlistOfIntsType is just a simple String type, this merely returns the current string value.
func (me TlistOfIntsType) String () string { return xsdt.String(me).String() }

type Tint3Type TlistOfIntsType

//	Since Tint3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint3Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tint3Type's alias type TlistOfIntsType.
func (me Tint3Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint3Type is just a simple String type, this merely returns the current string value.
func (me Tint3Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_ struct {
	Int3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3"`

}

type Tint4Type TlistOfIntsType

//	Since Tint4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint4Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint4Type is just a simple String type, this merely returns the current string value.
func (me Tint4Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint4Type's alias type TlistOfIntsType.
func (me Tint4Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

type XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_ struct {
	Int4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4"`

}

type XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_ struct {
	Enum xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

type Tfloat4X3Type TlistOfFloatsType

//	Since Tfloat4X3Type is just a simple String type, this merely returns the current string value.
func (me Tfloat4X3Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat4X3Type's alias type TlistOfFloatsType.
func (me Tfloat4X3Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat4X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat4X3Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_ struct {
	Float4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x3"`

}

type Tint2Type TlistOfIntsType

//	Since Tint2Type is just a simple String type, this merely returns the current string value.
func (me Tint2Type) String () string { return TlistOfIntsType(me).String() }

//	Since Tint2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint2Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tint2Type's alias type TlistOfIntsType.
func (me Tint2Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

type XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_ struct {
	Int2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2"`

}

type TlistOfBoolsType xsdt.String

//	Since TlistOfBoolsType is just a simple String type, this merely returns the current string value.
func (me TlistOfBoolsType) String () string { return xsdt.String(me).String() }

//	Since TlistOfBoolsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfBoolsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TlistOfBoolsType's alias type xsdt.String.
func (me TlistOfBoolsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	TlistOfBoolsType defines a String containing a whitespace-separated list of xsdt.Boolean values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfBoolsType) Values () (list []xsdt.Boolean) { var btv = new(xsdt.Boolean); var svals = xsdt.ListValues(string(me)); list = make([]xsdt.Boolean, len(svals)); for i, s := range svals { btv.SetFromString(s); list[i] = *btv }; return }

type Tbool3Type TlistOfBoolsType

//	Since Tbool3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool3Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool3Type is just a simple String type, this merely returns the current string value.
func (me Tbool3Type) String () string { return TlistOfBoolsType(me).String() }

//	This convenience method just performs a simple type conversion to Tbool3Type's alias type TlistOfBoolsType.
func (me Tbool3Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

type XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_ struct {
	Bool3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3"`

}

type Tfloat3X3Type TlistOfFloatsType

//	Since Tfloat3X3Type is just a simple String type, this merely returns the current string value.
func (me Tfloat3X3Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat3X3Type's alias type TlistOfFloatsType.
func (me Tfloat3X3Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat3X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat3X3Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_ struct {
	Float3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x3"`

}

type Tfloat3Type TlistOfFloatsType

//	Since Tfloat3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat3Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat3Type is just a simple String type, this merely returns the current string value.
func (me Tfloat3Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat3Type's alias type TlistOfFloatsType.
func (me Tfloat3Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_ struct {
	Float3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x1"`

}

type Tfloat4X4Type TlistOfFloatsType

//	This convenience method just performs a simple type conversion to Tfloat4X4Type's alias type TlistOfFloatsType.
func (me Tfloat4X4Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat4X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat4X4Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat4X4Type is just a simple String type, this merely returns the current string value.
func (me Tfloat4X4Type) String () string { return TlistOfFloatsType(me).String() }

type XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_ struct {
	Float4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x4"`

}

type XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_ struct {
	Float3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3"`

}

type Tfloat2X2Type TlistOfFloatsType

//	Since Tfloat2X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat2X2Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat2X2Type is just a simple String type, this merely returns the current string value.
func (me Tfloat2X2Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat2X2Type's alias type TlistOfFloatsType.
func (me Tfloat2X2Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_ struct {
	Float2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x2"`

}

type Tfloat2X4Type TlistOfFloatsType

//	Since Tfloat2X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat2X4Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat2X4Type is just a simple String type, this merely returns the current string value.
func (me Tfloat2X4Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat2X4Type's alias type TlistOfFloatsType.
func (me Tfloat2X4Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_ struct {
	Float2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x4"`

}

type Tbool2Type TlistOfBoolsType

//	Since Tbool2Type is just a simple String type, this merely returns the current string value.
func (me Tbool2Type) String () string { return TlistOfBoolsType(me).String() }

//	This convenience method just performs a simple type conversion to Tbool2Type's alias type TlistOfBoolsType.
func (me Tbool2Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool2Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_ struct {
	Bool2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2"`

}

type TinstanceImageType struct {
	TinstanceWithExtraType

}

type XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_ struct {
	SamplerImage *TinstanceImageType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler_image"`

}

type Tfloat2X3Type TlistOfFloatsType

//	Since Tfloat2X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat2X3Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat2X3Type is just a simple String type, this merely returns the current string value.
func (me Tfloat2X3Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat2X3Type's alias type TlistOfFloatsType.
func (me Tfloat2X3Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_ struct {
	Float2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2x3"`

}

type Tfloat4Type TlistOfFloatsType

//	Since Tfloat4Type is just a simple String type, this merely returns the current string value.
func (me Tfloat4Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat4Type's alias type TlistOfFloatsType.
func (me Tfloat4Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat4Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_ struct {
	Float4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x1"`

}

type Tfloat3X2Type TlistOfFloatsType

//	Since Tfloat3X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat3X2Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tfloat3X2Type's alias type TlistOfFloatsType.
func (me Tfloat3X2Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat3X2Type is just a simple String type, this merely returns the current string value.
func (me Tfloat3X2Type) String () string { return TlistOfFloatsType(me).String() }

type XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_ struct {
	Float3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float3x2"`

}

type XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_ struct {
	Float4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4"`

}

type Tbool4Type TlistOfBoolsType

//	This convenience method just performs a simple type conversion to Tbool4Type's alias type TlistOfBoolsType.
func (me Tbool4Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool4Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool4Type is just a simple String type, this merely returns the current string value.
func (me Tbool4Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_ struct {
	Bool4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4"`

}

//	Mipmap level-of-detail bias. The default value is zero
type XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00 struct {
//	Mipmap level-of-detail bias. The default value is zero
	MipBias xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema mip_bias"`

}

//	Returns the default value for MipBias -- 0.0
func (me XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00) MipBiasDefault () xsdt.Float { return xsdt.Float(0.0) }

//	filtering across mips.
//	NONE = no minification
//	NEAREST = bilinear
//	LINEAR = trilinear
//	ANISOTROPIC =  Compensates for distortion caused by the difference in angle between the polygon and the plane of the screen.  Relies on max_anisotropy
type TfxSamplerMipFilterEnum xsdt.Nmtoken

//	Returns true if the value of this enumerated TfxSamplerMipFilterEnum is "NONE".
func (me TfxSamplerMipFilterEnum) IsNone () bool { return me == "NONE" }

//	This convenience method just performs a simple type conversion to TfxSamplerMipFilterEnum's alias type xsdt.Nmtoken.
func (me TfxSamplerMipFilterEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Returns true if the value of this enumerated TfxSamplerMipFilterEnum is "NEAREST".
func (me TfxSamplerMipFilterEnum) IsNearest () bool { return me == "NEAREST" }

//	Returns true if the value of this enumerated TfxSamplerMipFilterEnum is "LINEAR".
func (me TfxSamplerMipFilterEnum) IsLinear () bool { return me == "LINEAR" }

//	Since TfxSamplerMipFilterEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxSamplerMipFilterEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Since TfxSamplerMipFilterEnum is just a simple String type, this merely returns the current string value.
func (me TfxSamplerMipFilterEnum) String () string { return xsdt.Nmtoken(me).String() }

type XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear struct {
//	filtering across mips.
//	NONE = no minification
//	NEAREST = bilinear
//	LINEAR = trilinear
//	ANISOTROPIC =  Compensates for distortion caused by the difference in angle between the polygon and the plane of the screen.  Relies on max_anisotropy
	Mipfilter TfxSamplerMipFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema mipfilter"`

}

//	Returns the default value for Mipfilter -- "LINEAR"
func (me XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear) MipfilterDefault () TfxSamplerMipFilterEnum { return TfxSamplerMipFilterEnum("LINEAR") }

type TfxSamplerWrapEnum xsdt.Nmtoken

//	Since TfxSamplerWrapEnum is just a simple String type, this merely returns the current string value.
func (me TfxSamplerWrapEnum) String () string { return xsdt.Nmtoken(me).String() }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "MIRROR_ONCE".
func (me TfxSamplerWrapEnum) IsMirrorOnce () bool { return me == "MIRROR_ONCE" }

//	This convenience method just performs a simple type conversion to TfxSamplerWrapEnum's alias type xsdt.Nmtoken.
func (me TfxSamplerWrapEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Since TfxSamplerWrapEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxSamplerWrapEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "BORDER".
func (me TfxSamplerWrapEnum) IsBorder () bool { return me == "BORDER" }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "MIRROR".
func (me TfxSamplerWrapEnum) IsMirror () bool { return me == "MIRROR" }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "CLAMP".
func (me TfxSamplerWrapEnum) IsClamp () bool { return me == "CLAMP" }

//	Returns true if the value of this enumerated TfxSamplerWrapEnum is "WRAP".
func (me TfxSamplerWrapEnum) IsWrap () bool { return me == "WRAP" }

type XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap struct {
	WrapP TfxSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_p"`

}

//	Returns the default value for WrapP -- "WRAP"
func (me XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap) WrapPDefault () TfxSamplerWrapEnum { return TfxSamplerWrapEnum("WRAP") }

//	level-of-detail index of largest map to use. Values range from 0 to (n - 1) where 0 is the largest. The default value is zero
type XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0 struct {
//	level-of-detail index of largest map to use. Values range from 0 to (n - 1) where 0 is the largest. The default value is zero
	MipMaxLevel xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema mip_max_level"`

}

//	Returns the default value for MipMaxLevel -- 0
func (me XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0) MipMaxLevelDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(0) }

//	minification
type TfxSamplerMinFilterEnum xsdt.Nmtoken

//	Returns true if the value of this enumerated TfxSamplerMinFilterEnum is "ANISOTROPIC".
func (me TfxSamplerMinFilterEnum) IsAnisotropic () bool { return me == "ANISOTROPIC" }

//	This convenience method just performs a simple type conversion to TfxSamplerMinFilterEnum's alias type xsdt.Nmtoken.
func (me TfxSamplerMinFilterEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Returns true if the value of this enumerated TfxSamplerMinFilterEnum is "NEAREST".
func (me TfxSamplerMinFilterEnum) IsNearest () bool { return me == "NEAREST" }

//	Returns true if the value of this enumerated TfxSamplerMinFilterEnum is "LINEAR".
func (me TfxSamplerMinFilterEnum) IsLinear () bool { return me == "LINEAR" }

//	Since TfxSamplerMinFilterEnum is just a simple String type, this merely returns the current string value.
func (me TfxSamplerMinFilterEnum) String () string { return xsdt.Nmtoken(me).String() }

//	Since TfxSamplerMinFilterEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxSamplerMinFilterEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

type XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear struct {
//	minification
	Minfilter TfxSamplerMinFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema minfilter"`

}

//	Returns the default value for Minfilter -- "LINEAR"
func (me XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear) MinfilterDefault () TfxSamplerMinFilterEnum { return TfxSamplerMinFilterEnum("LINEAR") }

type XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap struct {
	WrapT TfxSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_t"`

}

//	Returns the default value for WrapT -- "WRAP"
func (me XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap) WrapTDefault () TfxSamplerWrapEnum { return TfxSamplerWrapEnum("WRAP") }

//	magnification
type TfxSamplerMagFilterEnum xsdt.Nmtoken

//	Since TfxSamplerMagFilterEnum is just a simple String type, this merely returns the current string value.
func (me TfxSamplerMagFilterEnum) String () string { return xsdt.Nmtoken(me).String() }

//	Returns true if the value of this enumerated TfxSamplerMagFilterEnum is "NEAREST".
func (me TfxSamplerMagFilterEnum) IsNearest () bool { return me == "NEAREST" }

//	This convenience method just performs a simple type conversion to TfxSamplerMagFilterEnum's alias type xsdt.Nmtoken.
func (me TfxSamplerMagFilterEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Since TfxSamplerMagFilterEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxSamplerMagFilterEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxSamplerMagFilterEnum is "LINEAR".
func (me TfxSamplerMagFilterEnum) IsLinear () bool { return me == "LINEAR" }

type XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear struct {
//	magnification
	Magfilter TfxSamplerMagFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema magfilter"`

}

//	Returns the default value for Magfilter -- "LINEAR"
func (me XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear) MagfilterDefault () TfxSamplerMagFilterEnum { return TfxSamplerMagFilterEnum("LINEAR") }

type XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap struct {
	WrapS TfxSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_s"`

}

//	Returns the default value for WrapS -- "WRAP"
func (me XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap) WrapSDefault () TfxSamplerWrapEnum { return TfxSamplerWrapEnum("WRAP") }

//	level-of-detail index of smallest map to use. Values range from 0 to (n - 1) where 0 is the smallest. The default value is zero
type XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0 struct {
//	level-of-detail index of smallest map to use. Values range from 0 to (n - 1) where 0 is the smallest. The default value is zero
	MipMinLevel xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema mip_min_level"`

}

//	Returns the default value for MipMinLevel -- 0
func (me XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0) MipMinLevelDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(0) }

//	number of samples that may be used durring anisotropic filtering
type XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1 struct {
//	number of samples that may be used durring anisotropic filtering
	MaxAnisotropy xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema max_anisotropy"`

}

//	Returns the default value for MaxAnisotropy -- 1
func (me XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1) MaxAnisotropyDefault () xsdt.UnsignedInt { return xsdt.UnsignedInt(1) }

type TfxColorType Tfloat4Type

//	This convenience method just performs a simple type conversion to TfxColorType's alias type Tfloat4Type.
func (me TfxColorType) ToTfloat4Type () Tfloat4Type { return Tfloat4Type(me) }

//	Since TfxColorType is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxColorType) SetFromString (s string)  { (*Tfloat4Type)(me).SetFromString(s) }

//	Since TfxColorType is just a simple String type, this merely returns the current string value.
func (me TfxColorType) String () string { return Tfloat4Type(me).String() }

type XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_ struct {
	BorderColor TfxColorType `xml:"http://www.collada.org/2008/03/COLLADASchema border_color"`

}

type XsdGoPkgHasGroup_FxSamplerStatesGroup struct {
//	Mipmap level-of-detail bias. The default value is zero
	XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00

//	filtering across mips.
//	NONE = no minification
//	NEAREST = bilinear
//	LINEAR = trilinear
//	ANISOTROPIC =  Compensates for distortion caused by the difference in angle between the polygon and the plane of the screen.  Relies on max_anisotropy
	XsdGoPkgHasElem_mipfiltersequencefx_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Linear

	XsdGoPkgHasElem_wrap_psequencefx_sampler_states_groupschema_WrapP_TfxSamplerWrapEnum_Wrap

//	level-of-detail index of largest map to use. Values range from 0 to (n - 1) where 0 is the largest. The default value is zero
	XsdGoPkgHasElem_mip_max_levelsequencefx_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_0

//	minification
	XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear

	XsdGoPkgHasElem_wrap_tsequencefx_sampler_states_groupschema_WrapT_TfxSamplerWrapEnum_Wrap

//	magnification
	XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear

	XsdGoPkgHasElem_wrap_ssequencefx_sampler_states_groupschema_WrapS_TfxSamplerWrapEnum_Wrap

//	level-of-detail index of smallest map to use. Values range from 0 to (n - 1) where 0 is the smallest. The default value is zero
	XsdGoPkgHasElem_mip_min_levelsequencefx_sampler_states_groupschema_MipMinLevel_XsdtUnsignedByte_0

//	number of samples that may be used durring anisotropic filtering
	XsdGoPkgHasElem_max_anisotropysequencefx_sampler_states_groupschema_MaxAnisotropy_XsdtUnsignedInt_1

	XsdGoPkgHasElem_border_colorsequencefx_sampler_states_groupschema_BorderColor_TfxColorType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type TxsdFxSetparamGroupChoiceSamplerStates struct {
	XsdGoPkgHasGroup_FxSamplerStatesGroup

}

type XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_ struct {
	SamplerStates *TxsdFxSetparamGroupChoiceSamplerStates `xml:"http://www.collada.org/2008/03/COLLADASchema sampler_states"`

}

type Tfloat4X2Type TlistOfFloatsType

//	Since Tfloat4X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat4X2Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat4X2Type is just a simple String type, this merely returns the current string value.
func (me Tfloat4X2Type) String () string { return TlistOfFloatsType(me).String() }

//	This convenience method just performs a simple type conversion to Tfloat4X2Type's alias type TlistOfFloatsType.
func (me Tfloat4X2Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

type XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_ struct {
	Float4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float4x2"`

}

type XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_ struct {
	Float2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float2"`

}

type XsdGoPkgHasGroup_FxSetparamGroup struct {
	XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_

	XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_

	XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_

	XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_sampler_imagechoicefx_setparam_groupschema_SamplerImage_TinstanceImageType_

	XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_

	XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_sampler_stateschoicefx_setparam_groupschema_SamplerStates_TxsdFxSetparamGroupChoiceSamplerStates_

	XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

}

type TxsdInstanceEffectTypeSequenceSetparam struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

	XsdGoPkgHasGroup_FxSetparamGroup

}

type XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_ struct {
//	Assigns a new value to a previously defined parameter
	Setparams []*TxsdInstanceEffectTypeSequenceSetparam `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

type TinstanceEffectType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	Add a hint for a platform of which technique to use in this effect.
	XsdGoPkgHasElems_technique_hintsequenceinstance_effect_typeschema_TechniqueHint_TxsdInstanceEffectTypeSequenceTechniqueHint_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The url attribute refers to resource.  This may refer to a local resource using a relative URL
//	fragment identifier that begins with the "#" character. The url attribute may refer to an external
//	resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	Assigns a new value to a previously defined parameter
	XsdGoPkgHasElems_setparamsequenceinstance_effect_typeschema_Setparam_TxsdInstanceEffectTypeSequenceSetparam_

}

type XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_ struct {
//	The material must instance an effect.
	InstanceEffect *TinstanceEffectType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_effect"`

}

type TmaterialType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The material element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The material must instance an effect.
	XsdGoPkgHasElem_instance_effectsequencematerial_typeschema_InstanceEffect_TinstanceEffectType_

}

type XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_ struct {
//	There must be at least one material element.
	Materials []*TmaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema material"`

}

type TlibraryMaterialsType struct {
//	The library_materials element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	There must be at least one material element.
	XsdGoPkgHasElems_materialsequencelibrary_materials_typeschema_Material_TmaterialType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_ struct {
//	The COLLADA element may contain any
//	number of library_materials elements.
	LibraryMaterialses []*TlibraryMaterialsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_materials"`

}

//	The COLLADA element may contain any
//	number of library_images elements.
//	The library_images element declares a module of image elements.
//	There must be at least one image element.
//	Initialize a custom cube image
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
type TimageFaceEnum xsdt.String

//	This convenience method just performs a simple type conversion to TimageFaceEnum's alias type xsdt.String.
func (me TimageFaceEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TimageFaceEnum is just a simple String type, this merely returns the current string value.
func (me TimageFaceEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TimageFaceEnum is "POSITIVE_X".
func (me TimageFaceEnum) IsPositiveX () bool { return me == "POSITIVE_X" }

//	Returns true if the value of this enumerated TimageFaceEnum is "POSITIVE_Y".
func (me TimageFaceEnum) IsPositiveY () bool { return me == "POSITIVE_Y" }

//	Returns true if the value of this enumerated TimageFaceEnum is "NEGATIVE_Z".
func (me TimageFaceEnum) IsNegativeZ () bool { return me == "NEGATIVE_Z" }

//	Returns true if the value of this enumerated TimageFaceEnum is "NEGATIVE_Y".
func (me TimageFaceEnum) IsNegativeY () bool { return me == "NEGATIVE_Y" }

//	Returns true if the value of this enumerated TimageFaceEnum is "POSITIVE_Z".
func (me TimageFaceEnum) IsPositiveZ () bool { return me == "POSITIVE_Z" }

//	Since TimageFaceEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TimageFaceEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TimageFaceEnum is "NEGATIVE_X".
func (me TimageFaceEnum) IsNegativeX () bool { return me == "NEGATIVE_X" }

type XsdGoPkgHasAttr_Face_TimageFaceEnum_ struct {
	Face TimageFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema face,attr"`

}

type XsdGoPkgHasAttr_MipIndex_XsdtUnsignedInt_ struct {
	MipIndex xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema mip_index,attr"`

}

//	Initialize purely from a file.  Assume the characteristics of the file.  If it is a complex format like DDS this may include cube maps, volumes,  mips, etc.
type XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_ struct {
//	Initialize purely from a file.  Assume the characteristics of the file.  If it is a complex format like DDS this may include cube maps, volumes,  mips, etc.
	Ref xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

//	The data element contains a sequence of hexadecimal encoded binary octets representing the embedded image data.  The format attribute is use the determine which codec decodes the image's descriptions and data.
//	The format attribute is a text string value that indicates the image format.  Examples include "DDS", "EXR", "BMP", "JPG", and "PNG".  Note that all of these formats have internal descriptors of size, bpp, etc.
type XsdGoPkgHasAttr_Format_XsdtToken_ struct {
//	The format attribute is a text string value that indicates the image format.  Examples include "DDS", "EXR", "BMP", "JPG", and "PNG".  Note that all of these formats have internal descriptors of size, bpp, etc.
	Format xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema format,attr"`

}

type TlistOfHexBinaryType xsdt.String

//	Since TlistOfHexBinaryType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfHexBinaryType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TlistOfHexBinaryType's alias type xsdt.String.
func (me TlistOfHexBinaryType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TlistOfHexBinaryType is just a simple String type, this merely returns the current string value.
func (me TlistOfHexBinaryType) String () string { return xsdt.String(me).String() }

//	TlistOfHexBinaryType defines a String containing a whitespace-separated list of xsdt.HexBinary values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfHexBinaryType) Values () (list []xsdt.HexBinary) { var svals = xsdt.ListValues(string(me)); list = make([]xsdt.HexBinary, len(svals)); for i, s := range svals { list[i] = xsdt.HexBinary(s) }; return }

type TxsdImageSourceTypeChoiceHex struct {
	XsdGoPkgValue TlistOfHexBinaryType `xml:",chardata"`

//	The format attribute is a text string value that indicates the image format.  Examples include "DDS", "EXR", "BMP", "JPG", and "PNG".  Note that all of these formats have internal descriptors of size, bpp, etc.
	XsdGoPkgHasAttr_Format_XsdtToken_

}

type XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_ struct {
//	The data element contains a sequence of hexadecimal encoded binary octets representing the embedded image data.  The format attribute is use the determine which codec decodes the image's descriptions and data.
	Hex *TxsdImageSourceTypeChoiceHex `xml:"http://www.collada.org/2008/03/COLLADASchema hex"`

}

type TimageSourceType struct {
//	Initialize purely from a file.  Assume the characteristics of the file.  If it is a complex format like DDS this may include cube maps, volumes,  mips, etc.
	XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_

//	The data element contains a sequence of hexadecimal encoded binary octets representing the embedded image data.  The format attribute is use the determine which codec decodes the image's descriptions and data.
	XsdGoPkgHasElem_hexchoiceimage_source_typeschema_Hex_TxsdImageSourceTypeChoiceHex_

}

type XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0 struct {
	ArrayIndex xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema array_index,attr"`

}

//	Returns the default value for ArrayIndex -- 0
func (me XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0) ArrayIndexDefault () xsdt.UnsignedInt { return xsdt.UnsignedInt(0) }

type TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom struct {
	XsdGoPkgHasAttr_Face_TimageFaceEnum_

	XsdGoPkgHasAttr_MipIndex_XsdtUnsignedInt_

	TimageSourceType

	XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0

}

type XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_ struct {
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	InitFroms []*TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom `xml:"http://www.collada.org/2008/03/COLLADASchema init_from"`

}

//	regenerate the mipmaps based on information loaded into mip0
type XsdGoPkgHasAttr_AutoGenerate_XsdtBoolean_ struct {
//	regenerate the mipmaps based on information loaded into mip0
	AutoGenerate xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema auto_generate,attr"`

}

//	Zero is max levels = 1 + floor(log2(max(w, h, d)))
//	in both OpenGL and DirectX.  One is no mips.
type XsdGoPkgHasAttr_Levels_XsdtUnsignedInt_ struct {
//	Zero is max levels = 1 + floor(log2(max(w, h, d)))
//	in both OpenGL and DirectX.  One is no mips.
	Levels xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema levels,attr"`

}

type TimageMipsType struct {
//	Zero is max levels = 1 + floor(log2(max(w, h, d)))
//	in both OpenGL and DirectX.  One is no mips.
	XsdGoPkgHasAttr_Levels_XsdtUnsignedInt_

//	regenerate the mipmaps based on information loaded into mip0
	XsdGoPkgHasAttr_AutoGenerate_XsdtBoolean_

}

type XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_ struct {
	Mips *TimageMipsType `xml:"http://www.collada.org/2008/03/COLLADASchema mips"`

}

//	The surface should be sized to these exact dimensions
type XsdGoPkgHasAttr_Width_XsdtUnsignedInt_ struct {
	Width xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema width,attr"`

}

type TxsdImageTypeSequenceChoiceCreateCubeSequenceSize struct {
	XsdGoPkgHasAttr_Width_XsdtUnsignedInt_

}

type XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_ struct {
//	The surface should be sized to these exact dimensions
	Size *TxsdImageTypeSequenceChoiceCreateCubeSequenceSize `xml:"http://www.collada.org/2008/03/COLLADASchema size"`

}

//	Zero is not an array
type XsdGoPkgHasAttr_Length_XsdtUnsignedInt_ struct {
//	Zero is not an array
	Length xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema length,attr"`

}

type TxsdImageTypeSequenceChoiceCreateCubeSequenceArray struct {
//	Zero is not an array
	XsdGoPkgHasAttr_Length_XsdtUnsignedInt_

}

type XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_ struct {
	Array *TxsdImageTypeSequenceChoiceCreateCubeSequenceArray `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	If not present it is assumed to be R8G8B8A8 linear.
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
type XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_ struct {
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	Exact xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema exact"`

}

//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
type TimageFormatHintPrecisionEnum xsdt.String

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "MID".
func (me TimageFormatHintPrecisionEnum) IsMid () bool { return me == "MID" }

//	This convenience method just performs a simple type conversion to TimageFormatHintPrecisionEnum's alias type xsdt.String.
func (me TimageFormatHintPrecisionEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "HIGH".
func (me TimageFormatHintPrecisionEnum) IsHigh () bool { return me == "HIGH" }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "DEFAULT".
func (me TimageFormatHintPrecisionEnum) IsDefault () bool { return me == "DEFAULT" }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "MAX".
func (me TimageFormatHintPrecisionEnum) IsMax () bool { return me == "MAX" }

//	Since TimageFormatHintPrecisionEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TimageFormatHintPrecisionEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TimageFormatHintPrecisionEnum is just a simple String type, this merely returns the current string value.
func (me TimageFormatHintPrecisionEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TimageFormatHintPrecisionEnum is "LOW".
func (me TimageFormatHintPrecisionEnum) IsLow () bool { return me == "LOW" }

type XsdGoPkgHasAttr_Precision_TimageFormatHintPrecisionEnum_Default struct {
//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
	Precision TimageFormatHintPrecisionEnum `xml:"http://www.collada.org/2008/03/COLLADASchema precision,attr"`

}

//	Returns the default value for Precision -- "DEFAULT"
func (me XsdGoPkgHasAttr_Precision_TimageFormatHintPrecisionEnum_Default) PrecisionDefault () TimageFormatHintPrecisionEnum { return TimageFormatHintPrecisionEnum("DEFAULT") }

//	linear(default), sRGB
type XsdGoPkgHasAttr_Space_XsdtToken_ struct {
//	linear(default), sRGB
	Space xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema space,attr"`

}

//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
type TimageFormatHintRangeEnum xsdt.String

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "FLOAT".
func (me TimageFormatHintRangeEnum) IsFloat () bool { return me == "FLOAT" }

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "SNORM".
func (me TimageFormatHintRangeEnum) IsSnorm () bool { return me == "SNORM" }

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "UNORM".
func (me TimageFormatHintRangeEnum) IsUnorm () bool { return me == "UNORM" }

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "SINT".
func (me TimageFormatHintRangeEnum) IsSint () bool { return me == "SINT" }

//	This convenience method just performs a simple type conversion to TimageFormatHintRangeEnum's alias type xsdt.String.
func (me TimageFormatHintRangeEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TimageFormatHintRangeEnum is just a simple String type, this merely returns the current string value.
func (me TimageFormatHintRangeEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TimageFormatHintRangeEnum is "UINT".
func (me TimageFormatHintRangeEnum) IsUint () bool { return me == "UINT" }

//	Since TimageFormatHintRangeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TimageFormatHintRangeEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Range_TimageFormatHintRangeEnum_ struct {
//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
	Range TimageFormatHintRangeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema range,attr"`

}

//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
type TimageFormatHintChannelsEnum xsdt.String

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "L".
func (me TimageFormatHintChannelsEnum) IsL () bool { return me == "L" }

//	This convenience method just performs a simple type conversion to TimageFormatHintChannelsEnum's alias type xsdt.String.
func (me TimageFormatHintChannelsEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "RGBA".
func (me TimageFormatHintChannelsEnum) IsRgba () bool { return me == "RGBA" }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "RGBE".
func (me TimageFormatHintChannelsEnum) IsRgbe () bool { return me == "RGBE" }

//	Since TimageFormatHintChannelsEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TimageFormatHintChannelsEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "RGB".
func (me TimageFormatHintChannelsEnum) IsRgb () bool { return me == "RGB" }

//	Since TimageFormatHintChannelsEnum is just a simple String type, this merely returns the current string value.
func (me TimageFormatHintChannelsEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "LA".
func (me TimageFormatHintChannelsEnum) IsLa () bool { return me == "LA" }

//	Returns true if the value of this enumerated TimageFormatHintChannelsEnum is "D".
func (me TimageFormatHintChannelsEnum) IsD () bool { return me == "D" }

type XsdGoPkgHasAttr_Channels_TimageFormatHintChannelsEnum_ struct {
//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
	Channels TimageFormatHintChannelsEnum `xml:"http://www.collada.org/2008/03/COLLADASchema channels,attr"`

}

type TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint struct {
//	The per-texel layout of the format.  The length of the string indicate how many channels there are and the letter respresents the name of the channel.  There are typically 0 to 4 channels.
	XsdGoPkgHasAttr_Channels_TimageFormatHintChannelsEnum_

//	Each channel of the texel has a precision.  Typically these are all linked together.  An exact format lay lower the precision of an individual channel but applying a higher precision by linking the channels together may still convey the same information.
	XsdGoPkgHasAttr_Precision_TimageFormatHintPrecisionEnum_Default

//	linear(default), sRGB
	XsdGoPkgHasAttr_Space_XsdtToken_

//	Each channel represents a range of values. Some example ranges are signed or unsigned integers, or between between a clamped range such as 0.0f to 1.0f, or high dynamic range via floating point
	XsdGoPkgHasAttr_Range_TimageFormatHintRangeEnum_

}

type XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_ struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	Hint *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint `xml:"http://www.collada.org/2008/03/COLLADASchema hint"`

}

type TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat struct {
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_

//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint_

}

type XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_ struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	Format *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat `xml:"http://www.collada.org/2008/03/COLLADASchema format"`

}

type TxsdImageTypeSequenceChoiceCreateCube struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	XsdGoPkgHasElem_formatsequencecreate_cubechoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreateCubeSequenceFormat_

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	XsdGoPkgHasElems_init_fromsequencecreate_cubechoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreateCubeSequenceInitFrom_

	XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_

//	The surface should be sized to these exact dimensions
	XsdGoPkgHasElem_sizesequencecreate_cubechoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreateCubeSequenceSize_

	XsdGoPkgHasElem_arraysequencecreate_cubechoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreateCubeSequenceArray_

}

type XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_ struct {
//	Initialize a custom cube image
	CreateCube *TxsdImageTypeSequenceChoiceCreateCube `xml:"http://www.collada.org/2008/03/COLLADASchema create_cube"`

}

//	initialize the whole image structure and data from formats like DDS
//	If true, unless mips already exist in data, generate the mipmaps based on information loaded into mip0,
type XsdGoPkgHasAttr_MipsGenerate_XsdtBoolean_True struct {
//	If true, unless mips already exist in data, generate the mipmaps based on information loaded into mip0,
	MipsGenerate xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema mips_generate,attr"`

}

//	Returns the default value for MipsGenerate -- true
func (me XsdGoPkgHasAttr_MipsGenerate_XsdtBoolean_True) MipsGenerateDefault () xsdt.Boolean { return xsdt.Boolean(true) }

type TxsdImageTypeSequenceChoiceInitFrom struct {
//	If true, unless mips already exist in data, generate the mipmaps based on information loaded into mip0,
	XsdGoPkgHasAttr_MipsGenerate_XsdtBoolean_True

	TimageSourceType

}

type XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_ struct {
//	initialize the whole image structure and data from formats like DDS
	InitFrom *TxsdImageTypeSequenceChoiceInitFrom `xml:"http://www.collada.org/2008/03/COLLADASchema init_from"`

}

//	Initialize a custom 3d image
type XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_ struct {
	Array *TxsdImageTypeSequenceChoiceCreateCubeSequenceArray `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	The surface should be sized to these exact dimensions
type XsdGoPkgHasAttr_Height_XsdtUnsignedInt_ struct {
	Height xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema height,attr"`

}

type XsdGoPkgHasAttr_Depth_XsdtUnsignedInt_ struct {
	Depth xsdt.UnsignedInt `xml:"http://www.collada.org/2008/03/COLLADASchema depth,attr"`

}

type TxsdImageTypeSequenceChoiceCreate3DSequenceSize struct {
	XsdGoPkgHasAttr_Depth_XsdtUnsignedInt_

	XsdGoPkgHasAttr_Height_XsdtUnsignedInt_

	XsdGoPkgHasAttr_Width_XsdtUnsignedInt_

}

type XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_ struct {
//	The surface should be sized to these exact dimensions
	Size *TxsdImageTypeSequenceChoiceCreate3DSequenceSize `xml:"http://www.collada.org/2008/03/COLLADASchema size"`

}

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
type TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom struct {
	XsdGoPkgHasAttr_Depth_XsdtUnsignedInt_

	XsdGoPkgHasAttr_MipIndex_XsdtUnsignedInt_

	XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0

	TimageSourceType

}

type XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_ struct {
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	InitFroms []*TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom `xml:"http://www.collada.org/2008/03/COLLADASchema init_from"`

}

//	If not present it is assumed to be R8G8B8A8 linear.
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
type XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_ struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	Hint *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint `xml:"http://www.collada.org/2008/03/COLLADASchema hint"`

}

type TxsdImageTypeSequenceChoiceCreate3DSequenceFormat struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_3dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate3DSequenceFormatSequenceHint_

//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_

}

type XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_ struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	Format *TxsdImageTypeSequenceChoiceCreate3DSequenceFormat `xml:"http://www.collada.org/2008/03/COLLADASchema format"`

}

type TxsdImageTypeSequenceChoiceCreate3D struct {
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	XsdGoPkgHasElems_init_fromsequencecreate_3dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate3DSequenceInitFrom_

//	If not present it is assumed to be R8G8B8A8 linear.
	XsdGoPkgHasElem_formatsequencecreate_3dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate3DSequenceFormat_

	XsdGoPkgHasElem_arraysequencecreate_3dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate3DSequenceArray_

	XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_

//	The surface should be sized to these exact dimensions
	XsdGoPkgHasElem_sizesequencecreate_3dchoicesequenceimage_typeschema_Size_TxsdImageTypeSequenceChoiceCreate3DSequenceSize_

}

type XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_ struct {
//	Initialize a custom 3d image
	Create3D *TxsdImageTypeSequenceChoiceCreate3D `xml:"http://www.collada.org/2008/03/COLLADASchema create_3d"`

}

//	Initialize a custom 2d image
//	Image size should be relative to the size of the viewport.  Ex 1,1 is the same size as the viewport.  0.5,0.5 is 1/2 the size of the viewport
type XsdGoPkgHasAttr_Height_XsdtFloat_ struct {
	Height xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema height,attr"`

}

type XsdGoPkgHasAttr_Width_XsdtFloat_ struct {
	Width xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema width,attr"`

}

type TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio struct {
	XsdGoPkgHasAttr_Height_XsdtFloat_

	XsdGoPkgHasAttr_Width_XsdtFloat_

}

type XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_ struct {
//	Image size should be relative to the size of the viewport.  Ex 1,1 is the same size as the viewport.  0.5,0.5 is 1/2 the size of the viewport
	SizeRatio *TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio `xml:"http://www.collada.org/2008/03/COLLADASchema size_ratio"`

}

//	If not present it is assumed to be R8G8B8A8 linear.
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
type XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_ struct {
//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	Hint *TxsdImageTypeSequenceChoiceCreateCubeSequenceFormatSequenceHint `xml:"http://www.collada.org/2008/03/COLLADASchema hint"`

}

type TxsdImageTypeSequenceChoiceCreate2DSequenceFormat struct {
//	Contains a string representing the profile and platform specific texel format that the author would like this surface to use.  If this element is not specified then the application will fall back to the hint
	XsdGoPkgHasElem_exactsequenceformatsequencecreate_cubechoicesequenceimage_typeschema_Exact_XsdtToken_

//	if this element or a higher precidence element is not present then use a common format R8G8B8A8 with linear color gradient, not  sRGB.
	XsdGoPkgHasElem_hintsequenceformatsequencecreate_2dchoicesequenceimage_typeschema_Hint_TxsdImageTypeSequenceChoiceCreate2DSequenceFormatSequenceHint_

}

type XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_ struct {
//	If not present it is assumed to be R8G8B8A8 linear.
	Format *TxsdImageTypeSequenceChoiceCreate2DSequenceFormat `xml:"http://www.collada.org/2008/03/COLLADASchema format"`

}

type XsdGoPkgHasAttr_Length_XsdtPositiveInteger_ struct {
	Length xsdt.PositiveInteger `xml:"http://www.collada.org/2008/03/COLLADASchema length,attr"`

}

type TxsdImageTypeSequenceChoiceCreate2DSequenceArray struct {
	XsdGoPkgHasAttr_Length_XsdtPositiveInteger_

}

type XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_ struct {
	Array *TxsdImageTypeSequenceChoiceCreate2DSequenceArray `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

//	Unnormalized addressing of texels.  (0-W, 0-H).  This cannot be used with mips since the addressing is not uniform per level.  This is equivilant to OpenGL textureRECT extension.
type XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_ struct {
//	Unnormalized addressing of texels.  (0-W, 0-H).  This cannot be used with mips since the addressing is not uniform per level.  This is equivilant to OpenGL textureRECT extension.
	Unnormalized xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema unnormalized"`

}

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
type TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom struct {
	XsdGoPkgHasAttr_MipIndex_XsdtUnsignedInt_

	TimageSourceType

	XsdGoPkgHasAttr_ArrayIndex_XsdtUnsignedInt_0

}

type XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_ struct {
//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	InitFroms []*TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom `xml:"http://www.collada.org/2008/03/COLLADASchema init_from"`

}

//	The surface should be sized to these exact dimensions
type TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact struct {
	XsdGoPkgHasAttr_Height_XsdtUnsignedInt_

	XsdGoPkgHasAttr_Width_XsdtUnsignedInt_

}

type XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_ struct {
//	The surface should be sized to these exact dimensions
	SizeExact *TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact `xml:"http://www.collada.org/2008/03/COLLADASchema size_exact"`

}

type TxsdImageTypeSequenceChoiceCreate2D struct {
//	sizing
//	The surface should be sized to these exact dimensions
	XsdGoPkgHasElem_size_exactchoicesequencecreate_2dchoicesequenceimage_typeschema_SizeExact_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeExact_

//	sizing
//	Image size should be relative to the size of the viewport.  Ex 1,1 is the same size as the viewport.  0.5,0.5 is 1/2 the size of the viewport
	XsdGoPkgHasElem_size_ratiochoicesequencecreate_2dchoicesequenceimage_typeschema_SizeRatio_TxsdImageTypeSequenceChoiceCreate2DSequenceChoiceSizeRatio_

//	mips and texel addressing
	XsdGoPkgHasElem_mipssequencecreate_cubechoicesequenceimage_typeschema_Mips_TimageMipsType_

//	If not present it is assumed to be R8G8B8A8 linear.
	XsdGoPkgHasElem_formatsequencecreate_2dchoicesequenceimage_typeschema_Format_TxsdImageTypeSequenceChoiceCreate2DSequenceFormat_

	XsdGoPkgHasElem_arraysequencecreate_2dchoicesequenceimage_typeschema_Array_TxsdImageTypeSequenceChoiceCreate2DSequenceArray_

//	mips and texel addressing
//	Unnormalized addressing of texels.  (0-W, 0-H).  This cannot be used with mips since the addressing is not uniform per level.  This is equivilant to OpenGL textureRECT extension.
	XsdGoPkgHasElem_unnormalizedchoicesequencecreate_2dchoicesequenceimage_typeschema_Unnormalized_XsdtString_

//	init the image data from one or more partial pieces of data.  The load attribute indicates what portion of the image will be loaded based on the ''address" specified.  mip_generate may be used to complete the image.
	XsdGoPkgHasElems_init_fromsequencecreate_2dchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceCreate2DSequenceInitFrom_

}

type XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_ struct {
//	Initialize a custom 2d image
	Create2D *TxsdImageTypeSequenceChoiceCreate2D `xml:"http://www.collada.org/2008/03/COLLADASchema create_2d"`

}

//	This image is renderable  if this element is used
//	As a render target, true = shared across all users, false = unique per instance
type XsdGoPkgHasAttr_Share_XsdtBoolean_ struct {
//	As a render target, true = shared across all users, false = unique per instance
	Share xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema share,attr"`

}

type TxsdImageTypeSequenceRenderable struct {
//	As a render target, true = shared across all users, false = unique per instance
	XsdGoPkgHasAttr_Share_XsdtBoolean_

}

type XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_ struct {
//	This image is renderable  if this element is used
	Renderable *TxsdImageTypeSequenceRenderable `xml:"http://www.collada.org/2008/03/COLLADASchema renderable"`

}

type TimageType struct {
//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	sub identifier
	XsdGoPkgHasAttr_Sid_TsidType_

//	initialize the whole image structure and data from formats like DDS
	XsdGoPkgHasElem_init_fromchoicesequenceimage_typeschema_InitFrom_TxsdImageTypeSequenceChoiceInitFrom_

//	The image element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	Initialize a custom 3d image
	XsdGoPkgHasElem_create_3dchoicesequenceimage_typeschema_Create3D_TxsdImageTypeSequenceChoiceCreate3D_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	Initialize a custom 2d image
	XsdGoPkgHasElem_create_2dchoicesequenceimage_typeschema_Create2D_TxsdImageTypeSequenceChoiceCreate2D_

//	This image is renderable  if this element is used
	XsdGoPkgHasElem_renderablesequenceimage_typeschema_Renderable_TxsdImageTypeSequenceRenderable_

//	Initialize a custom cube image
	XsdGoPkgHasElem_create_cubechoicesequenceimage_typeschema_CreateCube_TxsdImageTypeSequenceChoiceCreateCube_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_ struct {
//	There must be at least one image element.
	Images []*TimageType `xml:"http://www.collada.org/2008/03/COLLADASchema image"`

}

type TlibraryImagesType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The library_images element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	There must be at least one image element.
	XsdGoPkgHasElems_imagesequencelibrary_images_typeschema_Image_TimageType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_ struct {
//	The COLLADA element may contain any
//	number of library_images elements.
	LibraryImageses []*TlibraryImagesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_images"`

}

type TkinematicsParamType struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

}

type XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_ struct {
	Param *TkinematicsParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	The symbol attribute specifies which symbol defined from within the geometry this material binds to.
type XsdGoPkgHasAttr_Symbol_XsdtNCName_ struct {
//	The symbol attribute specifies which symbol defined from within the geometry this material binds to.
	Symbol xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema symbol,attr"`

}

type TkinematicsBindType struct {
	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_paramchoicekinematics_bind_typeschema_Param_TkinematicsParamType_

	XsdGoPkgHasAttr_Symbol_XsdtNCName_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

}

type XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_ struct {
	Binds []*TkinematicsBindType `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

type TkinematicsNewparamType struct {
	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_

}

type XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_ struct {
	Newparams []*TkinematicsNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

type TkinematicsSetparamType struct {
	XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_

	XsdGoPkgHasAttr_Ref_XsdtToken_

	XsdGoPkgHasElem_connect_paramchoiceformula_setparam_typeschema_ConnectParam_TkinematicsConnectParamType_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

}

type XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_ struct {
	Setparams []*TkinematicsSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

type TinstanceArticulatedSystemType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_

	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_

}

type XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ struct {
	InstanceArticulatedSystems []*TinstanceArticulatedSystemType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_articulated_system"`

}

type TinstanceKinematicsModelType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_

	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_ struct {
	InstanceKinematicsModels []*TinstanceKinematicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_kinematics_model"`

}

type TkinematicsSceneType struct {
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_instance_articulated_systemsequencekinematics_scene_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_

}

type XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_ struct {
	KinematicsScenes []*TkinematicsSceneType `xml:"http://www.collada.org/2008/03/COLLADASchema kinematics_scene"`

}

type TlibraryKinematicsScenesType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_kinematics_scenesequencelibrary_kinematics_scenes_typeschema_KinematicsScene_TkinematicsSceneType_

}

type XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_ struct {
	LibraryKinematicsSceneses []*TlibraryKinematicsScenesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_kinematics_scenes"`

}

//	The COLLADA element may contain any
//	number of library_animations elements.
//	The library_animations element declares a module of animation elements.
//	There must be at least one animation element.
//	The animation element categorizes the declaration of animation information. The animation
//	hierarchy contains elements that describe the animation's key-frame data and sampler functions,
//	ordered in such a way to group together animations that should be executed together.
type XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_ struct {
	Animations []*TanimationType `xml:"http://www.collada.org/2008/03/COLLADASchema animation"`

}

//	The animation element may contain any number of channel elements.
//	The channel element declares an output channel of an animation.
//	The target attribute indicates the location of the element bound to the output of the sampler.
//	This text string is a path-name following a simple syntax described in Address Syntax.
//	Required attribute.
type XsdGoPkgHasAttr_Target_XsdtToken_ struct {
//	The target attribute indicates the location of the element bound to the output of the sampler.
//	This text string is a path-name following a simple syntax described in Address Syntax.
//	Required attribute.
	Target xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema target,attr"`

}

//	The source attribute indicates the location of the data source. Required attribute.
//	This urifragment_type element is used for URI reference which can only reference a resource declared within it's same document.
type TurifragmentType xsdt.String

//	This convenience method just performs a simple type conversion to TurifragmentType's alias type xsdt.String.
func (me TurifragmentType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TurifragmentType is just a simple String type, this merely returns the current string value.
func (me TurifragmentType) String () string { return xsdt.String(me).String() }

//	Since TurifragmentType is just a simple String type, this merely sets the current value from the specified string.
func (me *TurifragmentType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Source_TurifragmentType_ struct {
//	The source attribute indicates the location of the data source. Required attribute.
	Source TurifragmentType `xml:"http://www.collada.org/2008/03/COLLADASchema source,attr"`

}

type TchannelType struct {
//	The target attribute indicates the location of the element bound to the output of the sampler.
//	This text string is a path-name following a simple syntax described in Address Syntax.
//	Required attribute.
	XsdGoPkgHasAttr_Target_XsdtToken_

//	The source attribute indicates the location of the sampler using a URL expression.
//	The sampler must be declared within the same document. Required attribute.
	XsdGoPkgHasAttr_Source_TurifragmentType_

}

type XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_ struct {
//	The animation element may contain any number of channel elements.
	Channels []*TchannelType `xml:"http://www.collada.org/2008/03/COLLADASchema channel"`

}

//	The sampler element declares an N-dimensional function used for animation. Animation function curves
//	are represented by 1-D sampler elements in COLLADA. The sampler defines sampling points and how to
//	interpolate between them.
//	Indicates what the sampled value should be before the first key.
//	An enumerated type specifying the acceptable sampler pre and post behavior attribute types.
type TsamplerBehaviorEnum xsdt.String

//	Since TsamplerBehaviorEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TsamplerBehaviorEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "CYCLE".
func (me TsamplerBehaviorEnum) IsCycle () bool { return me == "CYCLE" }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "CONSTANT".
func (me TsamplerBehaviorEnum) IsConstant () bool { return me == "CONSTANT" }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "OSCILLATE".
func (me TsamplerBehaviorEnum) IsOscillate () bool { return me == "OSCILLATE" }

//	Since TsamplerBehaviorEnum is just a simple String type, this merely returns the current string value.
func (me TsamplerBehaviorEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TsamplerBehaviorEnum's alias type xsdt.String.
func (me TsamplerBehaviorEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "UNDEFINED".
func (me TsamplerBehaviorEnum) IsUndefined () bool { return me == "UNDEFINED" }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "CYCLE_RELATIVE".
func (me TsamplerBehaviorEnum) IsCycleRelative () bool { return me == "CYCLE_RELATIVE" }

//	Returns true if the value of this enumerated TsamplerBehaviorEnum is "GRADIENT".
func (me TsamplerBehaviorEnum) IsGradient () bool { return me == "GRADIENT" }

type XsdGoPkgHasAttr_PreBehavior_TsamplerBehaviorEnum_ struct {
//	Indicates what the sampled value should be before the first key.
	PreBehavior TsamplerBehaviorEnum `xml:"http://www.collada.org/2008/03/COLLADASchema pre_behavior,attr"`

}

//	The input element must occur at least one time. These inputs are local inputs.
//	The input_local_type element is used to represent inputs that can only reference resources declared in the same document.
//	The semantic attribute is the user-defined meaning of the input connection. Required attribute.
type XsdGoPkgHasAttr_Semantic_XsdtNmtoken_ struct {
//	The semantic attribute is the user-defined meaning of the input connection. Required attribute.
	Semantic xsdt.Nmtoken `xml:"http://www.collada.org/2008/03/COLLADASchema semantic,attr"`

}

type TinputLocalType struct {
//	The semantic attribute is the user-defined meaning of the input connection. Required attribute.
	XsdGoPkgHasAttr_Semantic_XsdtNmtoken_

//	The source attribute indicates the location of the data source. Required attribute.
	XsdGoPkgHasAttr_Source_TurifragmentType_

}

type XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_ struct {
//	The input element must occur at least one time. These inputs are local inputs.
	Inputs []*TinputLocalType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	Indicates what the sampled value should be after the last key.
type XsdGoPkgHasAttr_PostBehavior_TsamplerBehaviorEnum_ struct {
//	Indicates what the sampled value should be after the last key.
	PostBehavior TsamplerBehaviorEnum `xml:"http://www.collada.org/2008/03/COLLADASchema post_behavior,attr"`

}

type TsamplerType struct {
//	Indicates what the sampled value should be before the first key.
	XsdGoPkgHasAttr_PreBehavior_TsamplerBehaviorEnum_

//	The input element must occur at least one time. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_

//	Indicates what the sampled value should be after the last key.
	XsdGoPkgHasAttr_PostBehavior_TsamplerBehaviorEnum_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_ struct {
	Samplers []*TsamplerType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler"`

}

//	The animation element may contain any number of source elements.
//	The source element declares a data repository that provides values according to the semantics of an
//	input element that refers to it.
//	The source element may contain a token_array.
//	The token_array_type element declares the storage for a homogenous array of xs:token string values.
//	The count attribute indicates the number of values in the array. Required attribute.
type TuintType xsdt.UnsignedLong

//	Returns a string representation of this TuintType's current non-string scalar value.
func (me TuintType) String () string { return xsdt.UnsignedLong(me).String() }

//	Since TuintType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TuintType) SetFromString (s string)  { (*xsdt.UnsignedLong)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TuintType's alias type xsdt.UnsignedLong.
func (me TuintType) ToXsdtUnsignedLong () xsdt.UnsignedLong { return xsdt.UnsignedLong(me) }

type XsdGoPkgHasAttr_Count_TuintType_ struct {
//	The count attribute indicates the number of values in the array. Required attribute.
	Count TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema count,attr"`

}

type TlistOfTokensType xsdt.String

//	Since TlistOfTokensType is just a simple String type, this merely returns the current string value.
func (me TlistOfTokensType) String () string { return xsdt.String(me).String() }

//	Since TlistOfTokensType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfTokensType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TlistOfTokensType's alias type xsdt.String.
func (me TlistOfTokensType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	TlistOfTokensType defines a String containing a whitespace-separated list of xsdt.Token values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfTokensType) Values () (list []xsdt.Token) { var svals = xsdt.ListValues(string(me)); list = make([]xsdt.Token, len(svals)); for i, s := range svals { list[i] = xsdt.Token(s) }; return }

type TtokenArrayType struct {
	XsdGoPkgValue TlistOfTokensType `xml:",chardata"`

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_ struct {
//	The source element may contain a token_array.
	TokenArray *TtokenArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema token_array"`

}

//	The source element may contain a
//	float_array.
//	The float_array element declares the storage for a homogenous array of floating point values.
//	The magnitude attribute indicates the largest exponent of the float values that can be contained
//	in the array. The default value is 38. Optional attribute.
type TmagnitudeType xsdt.Short

//	Returns a string representation of this TmagnitudeType's current non-string scalar value.
func (me TmagnitudeType) String () string { return xsdt.Short(me).String() }

//	This convenience method just performs a simple type conversion to TmagnitudeType's alias type xsdt.Short.
func (me TmagnitudeType) ToXsdtShort () xsdt.Short { return xsdt.Short(me) }

//	Since TmagnitudeType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TmagnitudeType) SetFromString (s string)  { (*xsdt.Short)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Magnitude_TmagnitudeType_38 struct {
//	The magnitude attribute indicates the largest exponent of the float values that can be contained
//	in the array. The default value is 38. Optional attribute.
	Magnitude TmagnitudeType `xml:"http://www.collada.org/2008/03/COLLADASchema magnitude,attr"`

}

//	Returns the default value for Magnitude -- 38
func (me XsdGoPkgHasAttr_Magnitude_TmagnitudeType_38) MagnitudeDefault () TmagnitudeType { return TmagnitudeType(38) }

//	The digits attribute indicates the number of significant decimal digits of the float values that
//	can be contained in the array. The default value is 6. Optional attribute.
type TdigitsType xsdt.UnsignedByte

//	Since TdigitsType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TdigitsType) SetFromString (s string)  { (*xsdt.UnsignedByte)(me).SetFromString(s) }

//	Returns a string representation of this TdigitsType's current non-string scalar value.
func (me TdigitsType) String () string { return xsdt.UnsignedByte(me).String() }

//	This convenience method just performs a simple type conversion to TdigitsType's alias type xsdt.UnsignedByte.
func (me TdigitsType) ToXsdtUnsignedByte () xsdt.UnsignedByte { return xsdt.UnsignedByte(me) }

type XsdGoPkgHasAttr_Digits_TdigitsType_6 struct {
//	The digits attribute indicates the number of significant decimal digits of the float values that
//	can be contained in the array. The default value is 6. Optional attribute.
	Digits TdigitsType `xml:"http://www.collada.org/2008/03/COLLADASchema digits,attr"`

}

//	Returns the default value for Digits -- 6
func (me XsdGoPkgHasAttr_Digits_TdigitsType_6) DigitsDefault () TdigitsType { return TdigitsType(6) }

type TfloatArrayType struct {
	XsdGoPkgValue TlistOfFloatsType `xml:",chardata"`

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The magnitude attribute indicates the largest exponent of the float values that can be contained
//	in the array. The default value is 38. Optional attribute.
	XsdGoPkgHasAttr_Magnitude_TmagnitudeType_38

//	The digits attribute indicates the number of significant decimal digits of the float values that
//	can be contained in the array. The default value is 6. Optional attribute.
	XsdGoPkgHasAttr_Digits_TdigitsType_6

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_ struct {
//	The source element may contain a
//	float_array.
	FloatArray *TfloatArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema float_array"`

}

//	The source element may contain an
//	IDREF_array.
//	The IDREF_array element declares the storage for a homogenous array of ID reference values.
type TidrefArrayType struct {
	XsdGoPkgValue xsdt.Idrefs `xml:",chardata"`

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_ struct {
//	The source element may contain an
//	IDREF_array.
	IdrefArray *TidrefArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema IDREF_array"`

}

//	The source element may contain an
//	int_array.
//	The int_array element declares the storage for a homogenous array of integer values.
//	The minInclusive attribute indicates the smallest integer value that can be contained in
//	the array. The default value is -2147483648. Optional attribute.
type XsdGoPkgHasAttr_MinInclusive_XsdtInteger_2147483648 struct {
//	The minInclusive attribute indicates the smallest integer value that can be contained in
//	the array. The default value is -2147483648. Optional attribute.
	MinInclusive xsdt.Integer `xml:"http://www.collada.org/2008/03/COLLADASchema minInclusive,attr"`

}

//	Returns the default value for MinInclusive -- -2147483648
func (me XsdGoPkgHasAttr_MinInclusive_XsdtInteger_2147483648) MinInclusiveDefault () xsdt.Integer { return xsdt.Integer(-2147483648) }

//	The maxInclusive attribute indicates the largest integer value that can be contained in
//	the array. The default value is 2147483647. Optional attribute.
type XsdGoPkgHasAttr_MaxInclusive_XsdtInteger_2147483647 struct {
//	The maxInclusive attribute indicates the largest integer value that can be contained in
//	the array. The default value is 2147483647. Optional attribute.
	MaxInclusive xsdt.Integer `xml:"http://www.collada.org/2008/03/COLLADASchema maxInclusive,attr"`

}

//	Returns the default value for MaxInclusive -- 2147483647
func (me XsdGoPkgHasAttr_MaxInclusive_XsdtInteger_2147483647) MaxInclusiveDefault () xsdt.Integer { return xsdt.Integer(2147483647) }

type TintArrayType struct {
	XsdGoPkgValue TlistOfIntsType `xml:",chardata"`

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The minInclusive attribute indicates the smallest integer value that can be contained in
//	the array. The default value is -2147483648. Optional attribute.
	XsdGoPkgHasAttr_MinInclusive_XsdtInteger_2147483648

//	The maxInclusive attribute indicates the largest integer value that can be contained in
//	the array. The default value is 2147483647. Optional attribute.
	XsdGoPkgHasAttr_MaxInclusive_XsdtInteger_2147483647

}

type XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_ struct {
//	The source element may contain an
//	int_array.
	IntArray *TintArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema int_array"`

}

//	The technique common specifies the common method for accessing this source element's data.
//	The source's technique_common must have one and only one accessor.
//	The accessor element declares an access pattern to one of the array elements: float_array,
//	int_array, Name_array, bool_array, token_array, and IDREF_array. The accessor element describes access
//	to arrays that are organized in either an interleaved or non-interleaved manner, depending
//	on the offset and stride attributes.
//	The stride attribute indicates number of values to be considered a unit during each access to
//	the array. The default value is 1, indicating that a single value is accessed. Optional attribute.
type XsdGoPkgHasAttr_Stride_TuintType_1 struct {
//	The stride attribute indicates number of values to be considered a unit during each access to
//	the array. The default value is 1, indicating that a single value is accessed. Optional attribute.
	Stride TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema stride,attr"`

}

//	Returns the default value for Stride -- 1
func (me XsdGoPkgHasAttr_Stride_TuintType_1) StrideDefault () TuintType { return TuintType(1) }

//	The accessor element may have any number of param elements.
//	The param element declares parametric information regarding its parent element.
type TparamType struct {
	XsdGoPkgValue xsdt.String `xml:",chardata"`

//	The semantic attribute is the user-defined meaning of the parameter. Optional attribute.
	XsdGoPkgHasAttr_Semantic_XsdtNmtoken_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The type attribute indicates the type of the value data. This text string must be understood
//	by the application. Required attribute.
	XsdGoPkgHasAttr_Type_XsdtNmtoken_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_ struct {
//	The accessor element may have any number of param elements.
	Params []*TparamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	The source attribute indicates the location of the data source. Required attribute.
type XsdGoPkgHasAttr_Source_XsdtAnyURI_ struct {
//	The source attribute indicates the location of the data source. Required attribute.
	Source xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema source,attr"`

}

//	The offset attribute indicates the index of the first value to be read from the array.
//	The default value is 0. Optional attribute.
type XsdGoPkgHasAttr_Offset_TuintType_0 struct {
//	The offset attribute indicates the index of the first value to be read from the array.
//	The default value is 0. Optional attribute.
	Offset TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema offset,attr"`

}

//	Returns the default value for Offset -- 0
func (me XsdGoPkgHasAttr_Offset_TuintType_0) OffsetDefault () TuintType { return TuintType(0) }

type TaccessorType struct {
//	The offset attribute indicates the index of the first value to be read from the array.
//	The default value is 0. Optional attribute.
	XsdGoPkgHasAttr_Offset_TuintType_0

//	The count attribute indicates the number of times the array is accessed. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The stride attribute indicates number of values to be considered a unit during each access to
//	the array. The default value is 1, indicating that a single value is accessed. Optional attribute.
	XsdGoPkgHasAttr_Stride_TuintType_1

//	The accessor element may have any number of param elements.
	XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_

//	The source attribute indicates the location of the array to access using a URL expression. Required attribute.
	XsdGoPkgHasAttr_Source_XsdtAnyURI_

}

type XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_ struct {
//	The source's technique_common must have one and only one accessor.
	Accessor *TaccessorType `xml:"http://www.collada.org/2008/03/COLLADASchema accessor"`

}

type TxsdSourceTypeSequenceTechniqueCommon struct {
//	The source's technique_common must have one and only one accessor.
	XsdGoPkgHasElem_accessorsequencetechnique_commonsequencesource_typeschema_Accessor_TaccessorType_

}

type XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_ struct {
//	The technique common specifies the common method for accessing this source element's data.
	TechniqueCommon *TxsdSourceTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	The source element may contain a
//	bool_array.
//	The bool_array element declares the storage for a homogenous array of boolean values.
type TboolArrayType struct {
	XsdGoPkgValue TlistOfBoolsType `xml:",chardata"`

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

}

type XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_ struct {
//	The source element may contain a
//	bool_array.
	BoolArray *TboolArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema bool_array"`

}

//	The SIDREF_array element declares the storage for a homogenous array of SID reference values.
type TlistOfSidrefsType xsdt.String

//	TlistOfSidrefsType defines a String containing a whitespace-separated list of TsidrefType values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfSidrefsType) Values () (list []TsidrefType) { var svals = xsdt.ListValues(string(me)); list = make([]TsidrefType, len(svals)); for i, s := range svals { list[i] = TsidrefType(s) }; return }

//	Since TlistOfSidrefsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfSidrefsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TlistOfSidrefsType is just a simple String type, this merely returns the current string value.
func (me TlistOfSidrefsType) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TlistOfSidrefsType's alias type xsdt.String.
func (me TlistOfSidrefsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

type TsidrefArrayType struct {
	XsdGoPkgValue TlistOfSidrefsType `xml:",chardata"`

//	The id attribute is a text string
//	containing the unique identifier of this
//	element. This value must be unique
//	within the instance document. Optional
//	attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string
//	name of this element. Optional
//	attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number
//	of values in the array. Required
//	attribute.
	XsdGoPkgHasAttr_Count_TuintType_

}

type XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_ struct {
	SidrefArray *TsidrefArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema SIDREF_array"`

}

//	The source element may contain a
//	Name_array.
//	The Name_array element declares the storage for a homogenous array of Name string values.
type TlistOfNamesType xsdt.String

//	Since TlistOfNamesType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfNamesType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TlistOfNamesType's alias type xsdt.String.
func (me TlistOfNamesType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TlistOfNamesType is just a simple String type, this merely returns the current string value.
func (me TlistOfNamesType) String () string { return xsdt.String(me).String() }

//	TlistOfNamesType defines a String containing a whitespace-separated list of xsdt.Name values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfNamesType) Values () (list []xsdt.Name) { var svals = xsdt.ListValues(string(me)); list = make([]xsdt.Name, len(svals)); for i, s := range svals { list[i] = xsdt.Name(s) }; return }

type TnameArrayType struct {
	XsdGoPkgValue TlistOfNamesType `xml:",chardata"`

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number of values in the array. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

}

type XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_ struct {
//	The source element may contain a
//	Name_array.
	NameArray *TnameArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema Name_array"`

}

type TsourceType struct {
//	The source element may contain a token_array.
	XsdGoPkgHasElem_token_arraychoicesequencesource_typeschema_TokenArray_TtokenArrayType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The source element may contain a
//	float_array.
	XsdGoPkgHasElem_float_arraychoicesequencesource_typeschema_FloatArray_TfloatArrayType_

//	The source element may contain an
//	IDREF_array.
	XsdGoPkgHasElem_IDREF_arraychoicesequencesource_typeschema_IdrefArray_TidrefArrayType_

//	The source element may contain an
//	int_array.
	XsdGoPkgHasElem_int_arraychoicesequencesource_typeschema_IntArray_TintArrayType_

//	The technique common specifies the common method for accessing this source element's data.
	XsdGoPkgHasElem_technique_commonsequencesource_typeschema_TechniqueCommon_TxsdSourceTypeSequenceTechniqueCommon_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Required attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The source element may contain a
//	bool_array.
	XsdGoPkgHasElem_bool_arraychoicesequencesource_typeschema_BoolArray_TboolArrayType_

//	The source element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasElem_SIDREF_arraychoicesequencesource_typeschema_SidrefArray_TsidrefArrayType_

//	The source element may contain a
//	Name_array.
	XsdGoPkgHasElem_Name_arraychoicesequencesource_typeschema_NameArray_TnameArrayType_

}

type XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_ struct {
//	The animation element may contain any number of source elements.
	Sources []*TsourceType `xml:"http://www.collada.org/2008/03/COLLADASchema source"`

}

type TanimationType struct {
//	The animation element may contain any number of channel elements.
	XsdGoPkgHasElems_channelsequencechoicesequencechoicesequenceanimation_typeschema_Channel_TchannelType_

	XsdGoPkgHasElems_animationchoicesequencechoicesequenceanimation_typeschema_Animation_TanimationType_

	XsdGoPkgHasElems_samplersequencechoicesequenceanimation_typeschema_Sampler_TsamplerType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The animation element may contain any number of source elements.
	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

//	The animation element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_ struct {
//	There must be at least one animation element.
	Animations []*TanimationType `xml:"http://www.collada.org/2008/03/COLLADASchema animation"`

}

type TlibraryAnimationsType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The library_animations element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	There must be at least one animation element.
	XsdGoPkgHasElems_animationsequencelibrary_animations_typeschema_Animation_TanimationType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_ struct {
//	The COLLADA element may contain any
//	number of library_animations elements.
	LibraryAnimationses []*TlibraryAnimationsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_animations"`

}

//	The version attribute is the COLLADA schema revision with which the instance document
//	conforms. Required Attribute.
//	An enumerated type specifying the acceptable document versions.
type TversionEnum xsdt.String

//	This convenience method just performs a simple type conversion to TversionEnum's alias type xsdt.String.
func (me TversionEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TversionEnum is just a simple String type, this merely returns the current string value.
func (me TversionEnum) String () string { return xsdt.String(me).String() }

//	Since TversionEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TversionEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TversionEnum is "1.5.0".
func (me TversionEnum) Is150 () bool { return me == "1.5.0" }

type XsdGoPkgHasAttr_Version_TversionEnum_ struct {
//	The version attribute is the COLLADA schema revision with which the instance document
//	conforms. Required Attribute.
	Version TversionEnum `xml:"http://www.collada.org/2008/03/COLLADASchema version,attr"`

}

//	The COLLADA element may contain any
//	number of library_controllerss elements.
//	The library_controllers element declares a module of controller elements.
//	There must be at least one controller element.
//	The controller element categorizes the declaration of generic control information.
//	A controller is a device or mechanism that manages and directs the operations of another object.
//	The controller element may contain either a skin element or a morph element.
//	The morph element describes the data required to blend between sets of static meshes. Each
//	possible mesh that can be blended (a morph target) must be specified.
//	The targets element declares the morph targets, their weights and any user defined attributes
//	associated with them.
type TxsdMorphTypeSequenceTargets struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The input element must occur at least twice. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_

}

type XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_ struct {
//	The targets element declares the morph targets, their weights and any user defined attributes
//	associated with them.
	Targets *TxsdMorphTypeSequenceTargets `xml:"http://www.collada.org/2008/03/COLLADASchema targets"`

}

//	The method attribute specifies the which blending technique to use. The accepted values are
//	NORMALIZED, and RELATIVE. The default value if not specified is NORMALIZED.  Optional attribute.
//	An enumuerated type specifying the acceptable morph methods.
type TmorphMethodEnum xsdt.String

//	Since TmorphMethodEnum is just a simple String type, this merely returns the current string value.
func (me TmorphMethodEnum) String () string { return xsdt.String(me).String() }

//	Since TmorphMethodEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TmorphMethodEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TmorphMethodEnum is "RELATIVE".
func (me TmorphMethodEnum) IsRelative () bool { return me == "RELATIVE" }

//	Returns true if the value of this enumerated TmorphMethodEnum is "NORMALIZED".
func (me TmorphMethodEnum) IsNormalized () bool { return me == "NORMALIZED" }

//	This convenience method just performs a simple type conversion to TmorphMethodEnum's alias type xsdt.String.
func (me TmorphMethodEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasAttr_Method_TmorphMethodEnum_Normalized struct {
//	The method attribute specifies the which blending technique to use. The accepted values are
//	NORMALIZED, and RELATIVE. The default value if not specified is NORMALIZED.  Optional attribute.
	Method TmorphMethodEnum `xml:"http://www.collada.org/2008/03/COLLADASchema method,attr"`

}

//	Returns the default value for Method -- "NORMALIZED"
func (me XsdGoPkgHasAttr_Method_TmorphMethodEnum_Normalized) MethodDefault () TmorphMethodEnum { return TmorphMethodEnum("NORMALIZED") }

type TmorphType struct {
//	The targets element declares the morph targets, their weights and any user defined attributes
//	associated with them.
	XsdGoPkgHasElem_targetssequencemorph_typeschema_Targets_TxsdMorphTypeSequenceTargets_

//	The method attribute specifies the which blending technique to use. The accepted values are
//	NORMALIZED, and RELATIVE. The default value if not specified is NORMALIZED.  Optional attribute.
	XsdGoPkgHasAttr_Method_TmorphMethodEnum_Normalized

//	The morph element must contain at least two source elements.
	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

//	The source attribute indicates the base mesh. Required attribute.
	XsdGoPkgHasAttr_Source_XsdtAnyURI_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_ struct {
//	The controller element may contain either a skin element or a morph element.
	Morph *TmorphType `xml:"http://www.collada.org/2008/03/COLLADASchema morph"`

}

//	The controller element may contain either a skin element or a morph element.
//	The skin element contains vertex and primitive information sufficient to describe blend-weight skinning.
//	This provides extra information about the position and orientation of the base mesh before binding.
//	If bind_shape_matrix is not specified then an identity matrix may be used as the bind_shape_matrix.
//	The bind_shape_matrix element may occur zero or one times.
type XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_ struct {
//	This provides extra information about the position and orientation of the base mesh before binding.
//	If bind_shape_matrix is not specified then an identity matrix may be used as the bind_shape_matrix.
//	The bind_shape_matrix element may occur zero or one times.
	BindShapeMatrix Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bind_shape_matrix"`

}

//	The joints element associates joint, or skeleton, nodes with attribute data.
//	In COLLADA, this is specified by the inverse bind matrix of each joint (influence) in the skeleton.
type TxsdSkinTypeSequenceJoints struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The input element must occur at least twice. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_

}

type XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_ struct {
//	The joints element associates joint, or skeleton, nodes with attribute data.
//	In COLLADA, this is specified by the inverse bind matrix of each joint (influence) in the skeleton.
	Joints *TxsdSkinTypeSequenceJoints `xml:"http://www.collada.org/2008/03/COLLADASchema joints"`

}

//	The vertex_weights element associates a set of joint-weight pairs with each vertex in the base mesh.
//	The input element must occur at least twice.
//	The input_local_offset_type element is used to represent indexed inputs that can only reference resources declared in the same document.
//	The set attribute indicates which inputs should be grouped together as a single set. This is helpful
//	when multiple inputs share the same semantics.
type XsdGoPkgHasAttr_Set_TuintType_ struct {
//	The set attribute indicates which inputs should be grouped together as a single set. This is helpful
//	when multiple inputs share the same semantics.
	Set TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema set,attr"`

}

//	The offset attribute represents the offset into the list of indices.  If two input elements share
//	the same offset, they will be indexed the same.  This works as a simple form of compression for the
//	list of indices as well as defining the order the inputs should be used in.  Required attribute.
type XsdGoPkgHasAttr_Offset_TuintType_ struct {
//	The offset attribute represents the offset into the list of indices.  If two input elements share
//	the same offset, they will be indexed the same.  This works as a simple form of compression for the
//	list of indices as well as defining the order the inputs should be used in.  Required attribute.
	Offset TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema offset,attr"`

}

type TinputLocalOffsetType struct {
//	The offset attribute represents the offset into the list of indices.  If two input elements share
//	the same offset, they will be indexed the same.  This works as a simple form of compression for the
//	list of indices as well as defining the order the inputs should be used in.  Required attribute.
	XsdGoPkgHasAttr_Offset_TuintType_

//	The source attribute indicates the location of the data source. Required attribute.
	XsdGoPkgHasAttr_Source_TurifragmentType_

//	The set attribute indicates which inputs should be grouped together as a single set. This is helpful
//	when multiple inputs share the same semantics.
	XsdGoPkgHasAttr_Set_TuintType_

//	The semantic attribute is the user-defined meaning of the input connection. Required attribute.
	XsdGoPkgHasAttr_Semantic_XsdtNmtoken_

}

type XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_ struct {
//	The input element must occur at least twice.
	Inputs []*TinputLocalOffsetType `xml:"http://www.collada.org/2008/03/COLLADASchema input"`

}

//	The vcount element contains a list of integers describing the number of influences for each vertex.
//	The vcount element may occur once.
type TlistOfUintsType xsdt.String

//	TlistOfUintsType defines a String containing a whitespace-separated list of TuintType values. This Values() method creates and returns a slice of all elements in that list.
func (me TlistOfUintsType) Values () (list []TuintType) { var btv = new(TuintType); var svals = xsdt.ListValues(string(me)); list = make([]TuintType, len(svals)); for i, s := range svals { btv.SetFromString(s); list[i] = *btv }; return }

//	Since TlistOfUintsType is just a simple String type, this merely returns the current string value.
func (me TlistOfUintsType) String () string { return xsdt.String(me).String() }

//	Since TlistOfUintsType is just a simple String type, this merely sets the current value from the specified string.
func (me *TlistOfUintsType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TlistOfUintsType's alias type xsdt.String.
func (me TlistOfUintsType) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_ struct {
//	The vcount element contains a list of integers describing the number of influences for each vertex.
//	The vcount element may occur once.
	Vcount TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema vcount"`

}

//	The v element describes which bones and attributes are associated with each vertex.  An index
//	of -1 into the array of joints refers to the bind shape.  Weights should be normalized before use.
//	The v element must occur zero or one times.
type XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_ struct {
//	The v element describes which bones and attributes are associated with each vertex.  An index
//	of -1 into the array of joints refers to the bind shape.  Weights should be normalized before use.
//	The v element must occur zero or one times.
	V TlistOfIntsType `xml:"http://www.collada.org/2008/03/COLLADASchema v"`

}

type TxsdSkinTypeSequenceVertexWeights struct {
//	The v element describes which bones and attributes are associated with each vertex.  An index
//	of -1 into the array of joints refers to the bind shape.  Weights should be normalized before use.
//	The v element must occur zero or one times.
	XsdGoPkgHasElem_vsequencevertex_weightssequenceskin_typeschema_V_TlistOfIntsType_

//	The count attribute describes the number of vertices in the base mesh. Required element.
	XsdGoPkgHasAttr_Count_TuintType_

//	The input element must occur at least twice.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The vcount element contains a list of integers describing the number of influences for each vertex.
//	The vcount element may occur once.
	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_

}

type XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_ struct {
//	The vertex_weights element associates a set of joint-weight pairs with each vertex in the base mesh.
	VertexWeights *TxsdSkinTypeSequenceVertexWeights `xml:"http://www.collada.org/2008/03/COLLADASchema vertex_weights"`

}

type TskinType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	This provides extra information about the position and orientation of the base mesh before binding.
//	If bind_shape_matrix is not specified then an identity matrix may be used as the bind_shape_matrix.
//	The bind_shape_matrix element may occur zero or one times.
	XsdGoPkgHasElem_bind_shape_matrixsequenceskin_typeschema_BindShapeMatrix_Tfloat4X4Type_

//	The joints element associates joint, or skeleton, nodes with attribute data.
//	In COLLADA, this is specified by the inverse bind matrix of each joint (influence) in the skeleton.
	XsdGoPkgHasElem_jointssequenceskin_typeschema_Joints_TxsdSkinTypeSequenceJoints_

//	The vertex_weights element associates a set of joint-weight pairs with each vertex in the base mesh.
	XsdGoPkgHasElem_vertex_weightssequenceskin_typeschema_VertexWeights_TxsdSkinTypeSequenceVertexWeights_

//	The skin element must contain at least three source elements.
	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

//	The source attribute contains a URI reference to the base mesh, (a static mesh or a morphed mesh).
//	This also provides the bind-shape of the skinned mesh.  Required attribute.
	XsdGoPkgHasAttr_Source_XsdtAnyURI_

}

type XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_ struct {
//	The controller element may contain either a skin element or a morph element.
	Skin *TskinType `xml:"http://www.collada.org/2008/03/COLLADASchema skin"`

}

type TcontrollerType struct {
//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The controller element may contain either a skin element or a morph element.
	XsdGoPkgHasElem_morphchoicesequencecontroller_typeschema_Morph_TmorphType_

//	The controller element may contain either a skin element or a morph element.
	XsdGoPkgHasElem_skinchoicesequencecontroller_typeschema_Skin_TskinType_

//	The controller element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_ struct {
//	There must be at least one controller element.
	Controllers []*TcontrollerType `xml:"http://www.collada.org/2008/03/COLLADASchema controller"`

}

type TlibraryControllersType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The library_controllers element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	There must be at least one controller element.
	XsdGoPkgHasElems_controllersequencelibrary_controllers_typeschema_Controller_TcontrollerType_

}

type XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_ struct {
//	The COLLADA element may contain any
//	number of library_controllerss elements.
	LibraryControllerses []*TlibraryControllersType `xml:"http://www.collada.org/2008/03/COLLADASchema library_controllers"`

}

//	The COLLADA element may contain any
//	number of library_visual_scenes
//	elements.
//	The library_visual_scenes element declares a module of visual_scene elements.
//	There must be at least one visual_scene element.
//	The visual_scene element declares the base of the visual_scene hierarchy or scene graph. The
//	scene contains elements that comprise much of the visual and transformational information
//	content as created by the authoring tools.
//	The visual_scene element must have at least one node element.
//	Nodes embody the hierarchical relationship of elements in the scene.
//	The node element may contain any number of skew elements.
//	The skew element contains an angle and two mathematical vectors that represent the axis of
//	rotation and the axis of translation.
type Tfloat7Type TlistOfFloatsType

//	This convenience method just performs a simple type conversion to Tfloat7Type's alias type TlistOfFloatsType.
func (me Tfloat7Type) ToTlistOfFloatsType () TlistOfFloatsType { return TlistOfFloatsType(me) }

//	Since Tfloat7Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tfloat7Type) SetFromString (s string)  { (*TlistOfFloatsType)(me).SetFromString(s) }

//	Since Tfloat7Type is just a simple String type, this merely returns the current string value.
func (me Tfloat7Type) String () string { return TlistOfFloatsType(me).String() }

type TskewType struct {
	XsdGoPkgValue Tfloat7Type `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_ struct {
//	The node element may contain any number of skew elements.
	Skews []*TskewType `xml:"http://www.collada.org/2008/03/COLLADASchema skew"`

}

//	The node element may contain any number of rotate elements.
//	The rotate element contains an angle and a mathematical vector that represents the axis of rotation.
type TtargetableFloat4Type struct {
	XsdGoPkgValue Tfloat4Type `xml:",chardata"`

	XsdGoPkgHasAttr_Sid_TsidType_

}

type TrotateType struct {
	XsdGoPkgValue TtargetableFloat4Type `xml:",chardata"`

}

type XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_ struct {
//	The node element may contain any number of rotate elements.
	Rotates []*TrotateType `xml:"http://www.collada.org/2008/03/COLLADASchema rotate"`

}

//	The node element may instance any number of node elements or hierarchies objects.
//	The instance_node element declares the instantiation of a COLLADA node resource.
type XsdGoPkgHasAttr_Proxy_XsdtAnyURI_ struct {
	Proxy xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema proxy,attr"`

}

type TinstanceNodeType struct {
	TinstanceWithExtraType

	XsdGoPkgHasAttr_Proxy_XsdtAnyURI_

}

type XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_ struct {
//	The node element may instance any number of node elements or hierarchies objects.
	InstanceNodes []*TinstanceNodeType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_node"`

}

//	The node element may contain any number of lookat elements.
//	The lookat element contains a position and orientation transformation suitable for aiming a camera.
//	The lookat element contains three mathematical vectors within it that describe:
//	1.	The position of the object;
//	2.	The position of the interest point;
//	3.	The direction that points up.
type TlookatType struct {
	XsdGoPkgValue Tfloat3X3Type `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_ struct {
//	The node element may contain any number of lookat elements.
	Lookats []*TlookatType `xml:"http://www.collada.org/2008/03/COLLADASchema lookat"`

}

//	The node element may instance any number of light objects.
//	The instance_light element declares the instantiation of a COLLADA light resource.
type TinstanceLightType struct {
	TinstanceWithExtraType

}

type XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_ struct {
//	The node element may instance any number of light objects.
	InstanceLights []*TinstanceLightType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_light"`

}

//	The node element may instance any number of camera objects.
//	The instance_camera element declares the instantiation of a COLLADA camera resource.
type TinstanceCameraType struct {
	TinstanceWithExtraType

}

type XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_ struct {
//	The node element may instance any number of camera objects.
	InstanceCameras []*TinstanceCameraType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_camera"`

}

//	The layer attribute indicates the names of the layers to which this node belongs.  For example,
//	a value of "foreground glowing" indicates that this node belongs to both the 'foreground' layer
//	and the 'glowing' layer.  The default value is empty, indicating that the node doesn't belong to
//	any layer.  Optional attribute.
type XsdGoPkgHasAttr_Layer_TlistOfNamesType_ struct {
//	The layer attribute indicates the names of the layers to which this node belongs.  For example,
//	a value of "foreground glowing" indicates that this node belongs to both the 'foreground' layer
//	and the 'glowing' layer.  The default value is empty, indicating that the node doesn't belong to
//	any layer.  Optional attribute.
	Layer TlistOfNamesType `xml:"http://www.collada.org/2008/03/COLLADASchema layer,attr"`

}

//	The node element may contain any number of matrix elements.
//	Matrix transformations embody mathematical changes to points within a coordinate systems or the
//	coordinate system itself. The matrix element contains a 4-by-4 matrix of floating-point values.
type TmatrixType struct {
	XsdGoPkgValue Tfloat4X4Type `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_ struct {
//	The node element may contain any number of matrix elements.
	Matrixs []*TmatrixType `xml:"http://www.collada.org/2008/03/COLLADASchema matrix"`

}

//	The node element may instance any number of geometry objects.
//	The instance_geometry element declares the instantiation of a COLLADA geometry resource.
//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
//	The technique_common element specifies the bind_material information for the common
//	profile which all COLLADA implementations need to support.
//	The instance_material element specifies the information needed to bind a geometry
//	to a material. This element must appear at least once.
//	The instance_material element declares the instantiation of a COLLADA material resource.
//	The target attribute specifies the URL of the location of the object to instantiate.
type XsdGoPkgHasAttr_Target_XsdtAnyURI_ struct {
//	The target attribute specifies the URL of the location of the object to instantiate.
	Target xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema target,attr"`

}

//	The bind element binds values to effect parameters upon instantiation.
//	The semantic attribute specifies which effect parameter to bind.
type XsdGoPkgHasAttr_Semantic_XsdtNCName_ struct {
//	The semantic attribute specifies which effect parameter to bind.
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic,attr"`

}

type TxsdInstanceMaterialTypeSequenceBind struct {
//	The semantic attribute specifies which effect parameter to bind.
	XsdGoPkgHasAttr_Semantic_XsdtNCName_

//	The target attribute specifies the location of the value to bind to the specified semantic.
//	This text string is a path-name following a simple syntax described in the "Addressing Syntax"
//	section.
	XsdGoPkgHasAttr_Target_XsdtToken_

}

type XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_ struct {
//	The bind element binds values to effect parameters upon instantiation.
	Binds []*TxsdInstanceMaterialTypeSequenceBind `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

//	The bind_vertex_input element binds vertex inputs to effect parameters upon instantiation.
//	The input_set attribute specifies which input set to bind.
type XsdGoPkgHasAttr_InputSet_TuintType_ struct {
//	The input_set attribute specifies which input set to bind.
	InputSet TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema input_set,attr"`

}

//	The input_semantic attribute specifies which input semantic to bind.
type XsdGoPkgHasAttr_InputSemantic_XsdtNCName_ struct {
//	The input_semantic attribute specifies which input semantic to bind.
	InputSemantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema input_semantic,attr"`

}

type TxsdInstanceMaterialTypeSequenceBindVertexInput struct {
//	The input_set attribute specifies which input set to bind.
	XsdGoPkgHasAttr_InputSet_TuintType_

//	The semantic attribute specifies which effect parameter to bind.
	XsdGoPkgHasAttr_Semantic_XsdtNCName_

//	The input_semantic attribute specifies which input semantic to bind.
	XsdGoPkgHasAttr_InputSemantic_XsdtNCName_

}

type XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_ struct {
//	The bind_vertex_input element binds vertex inputs to effect parameters upon instantiation.
	BindVertexInputs []*TxsdInstanceMaterialTypeSequenceBindVertexInput `xml:"http://www.collada.org/2008/03/COLLADASchema bind_vertex_input"`

}

type TinstanceMaterialType struct {
//	The symbol attribute specifies which symbol defined from within the geometry this material binds to.
	XsdGoPkgHasAttr_Symbol_XsdtNCName_

//	The target attribute specifies the URL of the location of the object to instantiate.
	XsdGoPkgHasAttr_Target_XsdtAnyURI_

//	The bind element binds values to effect parameters upon instantiation.
	XsdGoPkgHasElems_bindsequenceinstance_material_typeschema_Bind_TxsdInstanceMaterialTypeSequenceBind_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The bind_vertex_input element binds vertex inputs to effect parameters upon instantiation.
	XsdGoPkgHasElems_bind_vertex_inputsequenceinstance_material_typeschema_BindVertexInput_TxsdInstanceMaterialTypeSequenceBindVertexInput_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_ struct {
//	The instance_material element specifies the information needed to bind a geometry
//	to a material. This element must appear at least once.
	InstanceMaterials []*TinstanceMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_material"`

}

type TxsdBindMaterialTypeSequenceTechniqueCommon struct {
//	The instance_material element specifies the information needed to bind a geometry
//	to a material. This element must appear at least once.
	XsdGoPkgHasElems_instance_materialsequencetechnique_commonsequencebind_material_typeschema_InstanceMaterial_TinstanceMaterialType_

}

type XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the bind_material information for the common
//	profile which all COLLADA implementations need to support.
	TechniqueCommon *TxsdBindMaterialTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TbindMaterialType struct {
//	The technique_common element specifies the bind_material information for the common
//	profile which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencebind_material_typeschema_TechniqueCommon_TxsdBindMaterialTypeSequenceTechniqueCommon_

//	The bind_material element may contain any number of param elements.
	XsdGoPkgHasElems_paramsequenceaccessor_typeschema_Param_TparamType_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_ struct {
//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
	BindMaterial *TbindMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema bind_material"`

}

type TinstanceGeometryType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The url attribute refers to resource.  This may refer to a local resource using a relative URL
//	fragment identifier that begins with the "#" character. The url attribute may refer to an external
//	resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
	XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_ struct {
//	The node element may instance any number of geometry objects.
	InstanceGeometries []*TinstanceGeometryType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_geometry"`

}

//	The node element may be hierarchical and be the parent of any number of other node elements.
type XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_ struct {
//	The node element may be hierarchical and be the parent of any number of other node elements.
	Nodes []*TnodeType `xml:"http://www.collada.org/2008/03/COLLADASchema node"`

}

//	The node element may contain any number of translate elements.
//	The translate element contains a mathematical vector that represents the distance along the
//	X, Y and Z-axes.
//	The targetable_float3_type element is used to represent elements which contain a float3 value which can
//	be targeted for animation.
type TtargetableFloat3Type struct {
	XsdGoPkgValue Tfloat3Type `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type TtranslateType struct {
	XsdGoPkgValue TtargetableFloat3Type `xml:",chardata"`

}

type XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_ struct {
//	The node element may contain any number of translate elements.
	Translates []*TtranslateType `xml:"http://www.collada.org/2008/03/COLLADASchema translate"`

}

//	The node element may contain any number of scale elements.
//	The scale element contains a mathematical vector that represents the relative proportions of the
//	X, Y and Z axes of a coordinated system.
type TscaleType struct {
	XsdGoPkgValue TtargetableFloat3Type `xml:",chardata"`

}

type XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_ struct {
//	The node element may contain any number of scale elements.
	Scales []*TscaleType `xml:"http://www.collada.org/2008/03/COLLADASchema scale"`

}

//	The node element may instance any number of controller objects.
//	The instance_controller element declares the instantiation of a COLLADA controller resource.
//	The skeleton element is used to indicate where a skin controller is to start to search for
//	the joint nodes it needs.  This element is meaningless for morph controllers.
type XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_ struct {
//	The skeleton element is used to indicate where a skin controller is to start to search for
//	the joint nodes it needs.  This element is meaningless for morph controllers.
	Skeletons []xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema skeleton"`

}

type TinstanceControllerType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	Bind a specific material to a piece of geometry, binding varying and uniform parameters at the
//	same time.
	XsdGoPkgHasElem_bind_materialsequenceinstance_geometry_typeschema_BindMaterial_TbindMaterialType_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The skeleton element is used to indicate where a skin controller is to start to search for
//	the joint nodes it needs.  This element is meaningless for morph controllers.
	XsdGoPkgHasElems_skeletonsequenceinstance_controller_typeschema_Skeleton_XsdtAnyURI_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The url attribute refers to resource. This may refer to a local resource using a relative
//	URL fragment identifier that begins with the "#" character. The url attribute may refer to an
//	external resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

}

type XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_ struct {
//	The node element may instance any number of controller objects.
	InstanceControllers []*TinstanceControllerType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_controller"`

}

//	The type attribute indicates the type of the node element. The default value is "NODE".
//	Optional attribute.
//	An enumerated type specifying the acceptable node types.
type TnodeEnum xsdt.String

//	Since TnodeEnum is just a simple String type, this merely returns the current string value.
func (me TnodeEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TnodeEnum is "NODE".
func (me TnodeEnum) IsNode () bool { return me == "NODE" }

//	This convenience method just performs a simple type conversion to TnodeEnum's alias type xsdt.String.
func (me TnodeEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TnodeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TnodeEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TnodeEnum is "JOINT".
func (me TnodeEnum) IsJoint () bool { return me == "JOINT" }

type XsdGoPkgHasAttr_Type_TnodeEnum_Node struct {
//	The type attribute indicates the type of the node element. The default value is "NODE".
//	Optional attribute.
	Type TnodeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema type,attr"`

}

//	Returns the default value for Type -- "NODE"
func (me XsdGoPkgHasAttr_Type_TnodeEnum_Node) TypeDefault () TnodeEnum { return TnodeEnum("NODE") }

type TnodeType struct {
//	The node element may contain any number of matrix elements.
	XsdGoPkgHasElems_matrixchoicesequencenode_typeschema_Matrix_TmatrixType_

//	The node element may instance any number of geometry objects.
	XsdGoPkgHasElems_instance_geometrysequencenode_typeschema_InstanceGeometry_TinstanceGeometryType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The node element may be hierarchical and be the parent of any number of other node elements.
	XsdGoPkgHasElems_nodesequencenode_typeschema_Node_TnodeType_

//	The node element may contain any number of translate elements.
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

//	The node element may contain any number of scale elements.
	XsdGoPkgHasElems_scalechoicesequencenode_typeschema_Scale_TscaleType_

//	The node element may instance any number of controller objects.
	XsdGoPkgHasElems_instance_controllersequencenode_typeschema_InstanceController_TinstanceControllerType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The type attribute indicates the type of the node element. The default value is "NODE".
//	Optional attribute.
	XsdGoPkgHasAttr_Type_TnodeEnum_Node

//	The node element may contain any number of skew elements.
	XsdGoPkgHasElems_skewchoicesequencenode_typeschema_Skew_TskewType_

//	The node element may contain any number of rotate elements.
	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

//	The node element may instance any number of node elements or hierarchies objects.
	XsdGoPkgHasElems_instance_nodesequencenode_typeschema_InstanceNode_TinstanceNodeType_

//	The node element may contain any number of lookat elements.
	XsdGoPkgHasElems_lookatchoicesequencenode_typeschema_Lookat_TlookatType_

//	The node element may instance any number of light objects.
	XsdGoPkgHasElems_instance_lightsequencenode_typeschema_InstanceLight_TinstanceLightType_

//	The node element may instance any number of camera objects.
	XsdGoPkgHasElems_instance_camerasequencenode_typeschema_InstanceCamera_TinstanceCameraType_

//	The node element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The layer attribute indicates the names of the layers to which this node belongs.  For example,
//	a value of "foreground glowing" indicates that this node belongs to both the 'foreground' layer
//	and the 'glowing' layer.  The default value is empty, indicating that the node doesn't belong to
//	any layer.  Optional attribute.
	XsdGoPkgHasAttr_Layer_TlistOfNamesType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_ struct {
//	The visual_scene element must have at least one node element.
	Nodes []*TnodeType `xml:"http://www.collada.org/2008/03/COLLADASchema node"`

}

//	The evaluate_scene element declares information specifying how to evaluate this visual_scene. There may be any number of evaluate_scene elements.  They are evaluated in order and particular one may be disabled via setting enabled=false.
//	The render element describes one effect pass to evaluate the scene.
//	There must be at least one render element.
//	The instance_material element specifies which effect to render in this compositing step
//	while evaluating the scene.
//	Explicitly select one pass.  If empty then use all passes of the technique.
type XsdGoPkgHasAttr_Pass_XsdtNCName_ struct {
//	Explicitly select one pass.  If empty then use all passes of the technique.
	Pass xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema pass,attr"`

}

type TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride struct {
//	Explicitly select one pass.  If empty then use all passes of the technique.
	XsdGoPkgHasAttr_Pass_XsdtNCName_

//	technique
	XsdGoPkgHasAttr_Ref_XsdtNCName_

}

type XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_ struct {
	TechniqueOverride *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride `xml:"http://www.collada.org/2008/03/COLLADASchema technique_override"`

}

//	The bind element binds values to effect parameters upon instantiation.
type XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_ struct {
//	The bind element binds values to effect parameters upon instantiation.
	Binds []*TxsdInstanceMaterialTypeSequenceBind `xml:"http://www.collada.org/2008/03/COLLADASchema bind"`

}

type TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial struct {
//	URL to a material
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasElem_technique_overridesequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_TechniqueOverride_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceTechniqueOverride_

//	The bind element binds values to effect parameters upon instantiation.
	XsdGoPkgHasElems_bindsequenceinstance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Bind_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterialSequenceBind_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_ struct {
//	The instance_material element specifies which effect to render in this compositing step
//	while evaluating the scene.
	InstanceMaterial *TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial `xml:"http://www.collada.org/2008/03/COLLADASchema instance_material"`

}

//	The layer element specifies which layer to render in this compositing step while evaluating the scene. You may specify any number of layers.  No layers mans that the entire scene will be used.
type XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_ struct {
//	The layer element specifies which layer to render in this compositing step while evaluating the scene. You may specify any number of layers.  No layers mans that the entire scene will be used.
	Layers []xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema layer"`

}

//	The camera_node attribute refers to a node that contains a camera describing the viewpoint to render this compositing step from.
type XsdGoPkgHasAttr_CameraNode_XsdtAnyURI_ struct {
//	The camera_node attribute refers to a node that contains a camera describing the viewpoint to render this compositing step from.
	CameraNode xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema camera_node,attr"`

}

type TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender struct {
//	The layer element specifies which layer to render in this compositing step while evaluating the scene. You may specify any number of layers.  No layers mans that the entire scene will be used.
	XsdGoPkgHasElems_layersequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_Layer_XsdtNCName_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The camera_node attribute refers to a node that contains a camera describing the viewpoint to render this compositing step from.
	XsdGoPkgHasAttr_CameraNode_XsdtAnyURI_

	XsdGoPkgHasAttr_Sid_TsidType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The instance_material element specifies which effect to render in this compositing step
//	while evaluating the scene.
	XsdGoPkgHasElem_instance_materialsequencerendersequenceevaluate_scenesequencevisual_scene_typeschema_InstanceMaterial_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRenderSequenceInstanceMaterial_

}

type XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_ struct {
//	The render element describes one effect pass to evaluate the scene.
//	There must be at least one render element.
	Renders []*TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender `xml:"http://www.collada.org/2008/03/COLLADASchema render"`

}

//	allow this to be disabled and hense skipped durring evaluation.  This is useful for debug.
type XsdGoPkgHasAttr_Enable_XsdtBoolean_True struct {
//	allow this to be disabled and hense skipped durring evaluation.  This is useful for debug.
	Enable xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema enable,attr"`

}

//	Returns the default value for Enable -- true
func (me XsdGoPkgHasAttr_Enable_XsdtBoolean_True) EnableDefault () xsdt.Boolean { return xsdt.Boolean(true) }

type TxsdVisualSceneTypeSequenceEvaluateScene struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

//	The render element describes one effect pass to evaluate the scene.
//	There must be at least one render element.
	XsdGoPkgHasElems_rendersequenceevaluate_scenesequencevisual_scene_typeschema_Render_TxsdVisualSceneTypeSequenceEvaluateSceneSequenceRender_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	allow this to be disabled and hense skipped durring evaluation.  This is useful for debug.
	XsdGoPkgHasAttr_Enable_XsdtBoolean_True

}

type XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_ struct {
//	The evaluate_scene element declares information specifying how to evaluate this visual_scene. There may be any number of evaluate_scene elements.  They are evaluated in order and particular one may be disabled via setting enabled=false.
	EvaluateScenes []*TxsdVisualSceneTypeSequenceEvaluateScene `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate_scene"`

}

type TvisualSceneType struct {
//	The visual_scene element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element. This
//	value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The evaluate_scene element declares information specifying how to evaluate this visual_scene. There may be any number of evaluate_scene elements.  They are evaluated in order and particular one may be disabled via setting enabled=false.
	XsdGoPkgHasElems_evaluate_scenesequencevisual_scene_typeschema_EvaluateScene_TxsdVisualSceneTypeSequenceEvaluateScene_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The visual_scene element must have at least one node element.
	XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_

}

type XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_ struct {
//	There must be at least one visual_scene element.
	VisualScenes []*TvisualSceneType `xml:"http://www.collada.org/2008/03/COLLADASchema visual_scene"`

}

type TlibraryVisualScenesType struct {
//	The library_visual_scenes element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	There must be at least one visual_scene element.
	XsdGoPkgHasElems_visual_scenesequencelibrary_visual_scenes_typeschema_VisualScene_TvisualSceneType_

}

type XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_ struct {
//	The COLLADA element may contain any
//	number of library_visual_scenes
//	elements.
	LibraryVisualSceneses []*TlibraryVisualScenesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_visual_scenes"`

}

//	The COLLADA element may contain any
//	number of library_lights elements.
//	The library_lights element declares a module of light elements.
//	There must be at least one light element.
//	The light element declares a light source that illuminates the scene.
//	Light sources have many different properties and radiate light in many different patterns and
//	frequencies.
//	The technique_common element specifies the light information for the common profile which all
//	COLLADA implementations need to support.
//	The point element declares the parameters required to describe a point light source.  A point light
//	source radiates light in all directions from a known location in space. The intensity of a point
//	light source is attenuated as the distance to the light source increases. The position of the light
//	is defined by the transform of the node in which it is instantiated.
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
type XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_ struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	Color *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema color"`

}

//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
//	The targetable_float_type element is used to represent elements which contain a single float value which can
//	be targeted for animation.
type TtargetableFloatType struct {
	XsdGoPkgValue TfloatType `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10 struct {
//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	ConstantAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema constant_attenuation"`

}

//	Returns the default value for ConstantAttenuation -- 1.0
func (me XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10) ConstantAttenuationDefault () TfloatType { return TfloatType(1.0) }

//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
type XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00 struct {
//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	QuadraticAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema quadratic_attenuation"`

}

//	Returns the default value for QuadraticAttenuation -- 0.0
func (me XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00) QuadraticAttenuationDefault () TfloatType { return TfloatType(0.0) }

//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
type XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00 struct {
//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	LinearAttenuation *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema linear_attenuation"`

}

//	Returns the default value for LinearAttenuation -- 0.0
func (me XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00) LinearAttenuationDefault () TfloatType { return TfloatType(0.0) }

type TxsdLightTypeSequenceTechniqueCommonChoicePoint struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_

//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10

//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00

//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00

}

type XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_ struct {
//	The point element declares the parameters required to describe a point light source.  A point light
//	source radiates light in all directions from a known location in space. The intensity of a point
//	light source is attenuated as the distance to the light source increases. The position of the light
//	is defined by the transform of the node in which it is instantiated.
	Point *TxsdLightTypeSequenceTechniqueCommonChoicePoint `xml:"http://www.collada.org/2008/03/COLLADASchema point"`

}

//	The directional element declares the parameters required to describe a directional light source.
//	A directional light is one that lights everything from the same direction, regardless of location.
//	The light's default direction vector in local coordinates is [0,0,-1], pointing down the -Z axis.
//	The actual direction of the light is defined by the transform of the node where the light is
//	instantiated.
type TxsdLightTypeSequenceTechniqueCommonChoiceDirectional struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_

}

type XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_ struct {
//	The directional element declares the parameters required to describe a directional light source.
//	A directional light is one that lights everything from the same direction, regardless of location.
//	The light's default direction vector in local coordinates is [0,0,-1], pointing down the -Z axis.
//	The actual direction of the light is defined by the transform of the node where the light is
//	instantiated.
	Directional *TxsdLightTypeSequenceTechniqueCommonChoiceDirectional `xml:"http://www.collada.org/2008/03/COLLADASchema directional"`

}

//	The ambient element declares the parameters required to describe an ambient light source.
//	An ambient light is one that lights everything evenly, regardless of location or orientation.
type TxsdLightTypeSequenceTechniqueCommonChoiceAmbient struct {
//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_

}

type XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_ struct {
//	The ambient element declares the parameters required to describe an ambient light source.
//	An ambient light is one that lights everything evenly, regardless of location or orientation.
	Ambient *TxsdLightTypeSequenceTechniqueCommonChoiceAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema ambient"`

}

//	The spot element declares the parameters required to describe a spot light source.  A spot light
//	source radiates light in one direction from a known location in space. The light radiates from
//	the spot light source in a cone shape. The intensity of the light is attenuated as the radiation
//	angle increases away from the direction of the light source. The intensity of a spot light source
//	is also attenuated as the distance to the light source increases. The position of the light is
//	defined by the transform of the node in which it is instantiated. The light's default direction
//	vector in local coordinates is [0,0,-1], pointing down the -Z axis. The actual direction of the
//	light is defined by the transform of the node where the light is instantiated.
//	The falloff_exponent is used to specify the amount of attenuation based on the direction of the light.
type XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00 struct {
//	The falloff_exponent is used to specify the amount of attenuation based on the direction of the light.
	FalloffExponent *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema falloff_exponent"`

}

//	Returns the default value for FalloffExponent -- 0.0
func (me XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00) FalloffExponentDefault () TfloatType { return TfloatType(0.0) }

//	The falloff_angle is used to specify the amount of attenuation based on the direction of the light.
type XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800 struct {
//	The falloff_angle is used to specify the amount of attenuation based on the direction of the light.
	FalloffAngle *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema falloff_angle"`

}

//	Returns the default value for FalloffAngle -- 180.0
func (me XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800) FalloffAngleDefault () TfloatType { return TfloatType(180.0) }

type TxsdLightTypeSequenceTechniqueCommonChoiceSpot struct {
//	The falloff_angle is used to specify the amount of attenuation based on the direction of the light.
	XsdGoPkgHasElem_falloff_anglesequencespotchoicetechnique_commonsequencelight_typeschema_FalloffAngle_TtargetableFloatType_1800

//	The quadratic_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_quadratic_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_QuadraticAttenuation_TtargetableFloatType_00

//	The color element contains three floating point numbers specifying the color of the light.
//	The color element must occur exactly once.
	XsdGoPkgHasElem_colorsequencepointchoicetechnique_commonsequencelight_typeschema_Color_TtargetableFloat3Type_

//	The constant_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_constant_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_ConstantAttenuation_TtargetableFloatType_10

//	The linear_attenuation is used to calculate the total attenuation of this light given a distance.
//	The equation used is A = constant_attenuation + Dist*linear_attenuation + Dist^2*quadratic_attenuation.
	XsdGoPkgHasElem_linear_attenuationsequencepointchoicetechnique_commonsequencelight_typeschema_LinearAttenuation_TtargetableFloatType_00

//	The falloff_exponent is used to specify the amount of attenuation based on the direction of the light.
	XsdGoPkgHasElem_falloff_exponentsequencespotchoicetechnique_commonsequencelight_typeschema_FalloffExponent_TtargetableFloatType_00

}

type XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_ struct {
//	The spot element declares the parameters required to describe a spot light source.  A spot light
//	source radiates light in one direction from a known location in space. The light radiates from
//	the spot light source in a cone shape. The intensity of the light is attenuated as the radiation
//	angle increases away from the direction of the light source. The intensity of a spot light source
//	is also attenuated as the distance to the light source increases. The position of the light is
//	defined by the transform of the node in which it is instantiated. The light's default direction
//	vector in local coordinates is [0,0,-1], pointing down the -Z axis. The actual direction of the
//	light is defined by the transform of the node where the light is instantiated.
	Spot *TxsdLightTypeSequenceTechniqueCommonChoiceSpot `xml:"http://www.collada.org/2008/03/COLLADASchema spot"`

}

type TxsdLightTypeSequenceTechniqueCommon struct {
//	The ambient element declares the parameters required to describe an ambient light source.
//	An ambient light is one that lights everything evenly, regardless of location or orientation.
	XsdGoPkgHasElem_ambientchoicetechnique_commonsequencelight_typeschema_Ambient_TxsdLightTypeSequenceTechniqueCommonChoiceAmbient_

//	The spot element declares the parameters required to describe a spot light source.  A spot light
//	source radiates light in one direction from a known location in space. The light radiates from
//	the spot light source in a cone shape. The intensity of the light is attenuated as the radiation
//	angle increases away from the direction of the light source. The intensity of a spot light source
//	is also attenuated as the distance to the light source increases. The position of the light is
//	defined by the transform of the node in which it is instantiated. The light's default direction
//	vector in local coordinates is [0,0,-1], pointing down the -Z axis. The actual direction of the
//	light is defined by the transform of the node where the light is instantiated.
	XsdGoPkgHasElem_spotchoicetechnique_commonsequencelight_typeschema_Spot_TxsdLightTypeSequenceTechniqueCommonChoiceSpot_

//	The point element declares the parameters required to describe a point light source.  A point light
//	source radiates light in all directions from a known location in space. The intensity of a point
//	light source is attenuated as the distance to the light source increases. The position of the light
//	is defined by the transform of the node in which it is instantiated.
	XsdGoPkgHasElem_pointchoicetechnique_commonsequencelight_typeschema_Point_TxsdLightTypeSequenceTechniqueCommonChoicePoint_

//	The directional element declares the parameters required to describe a directional light source.
//	A directional light is one that lights everything from the same direction, regardless of location.
//	The light's default direction vector in local coordinates is [0,0,-1], pointing down the -Z axis.
//	The actual direction of the light is defined by the transform of the node where the light is
//	instantiated.
	XsdGoPkgHasElem_directionalchoicetechnique_commonsequencelight_typeschema_Directional_TxsdLightTypeSequenceTechniqueCommonChoiceDirectional_

}

type XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the light information for the common profile which all
//	COLLADA implementations need to support.
	TechniqueCommon *TxsdLightTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TlightType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The technique_common element specifies the light information for the common profile which all
//	COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencelight_typeschema_TechniqueCommon_TxsdLightTypeSequenceTechniqueCommon_

//	The light element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_ struct {
//	There must be at least one light element.
	Lights []*TlightType `xml:"http://www.collada.org/2008/03/COLLADASchema light"`

}

type TlibraryLightsType struct {
//	The library_lights element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	There must be at least one light element.
	XsdGoPkgHasElems_lightsequencelibrary_lights_typeschema_Light_TlightType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_ struct {
//	The COLLADA element may contain any
//	number of library_lights elements.
	LibraryLightses []*TlibraryLightsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_lights"`

}

//	The COLLADA element may contain any
//	number of library_cameras elements.
//	The library_cameras element declares a module of camera elements.
//	There must be at least one camera element.
//	The camera element declares a view into the scene hierarchy or scene graph. The camera contains
//	elements that describe the camera's optics and imager.
//	Optics represents the apparatus on a camera that projects the image onto the image sensor.
//	The technique_common element specifies the optics information for the common profile
//	which all COLLADA implementations need to support.
//	The perspective element describes the optics of a perspective camera.
//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
type XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_ struct {
//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
	Zfar *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema zfar"`

}

//	The yfov element contains a floating point number describing the verticle field of view in degrees.
type XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_ struct {
//	The yfov element contains a floating point number describing the verticle field of view in degrees.
	Yfov *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema yfov"`

}

//	The aspect_ratio element contains a floating point number describing the aspect ratio of the field
//	of view. If the aspect_ratio element is not present the aspect ratio is to be calculated from the
//	xfov or yfov elements and the current viewport.
type XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_ struct {
//	The aspect_ratio element contains a floating point number describing the aspect ratio of the field
//	of view. If the aspect_ratio element is not present the aspect ratio is to be calculated from the
//	xfov or yfov elements and the current viewport.
	AspectRatio *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema aspect_ratio"`

}

//	The xfov element contains a floating point number describing the horizontal field of view in degrees.
type XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_ struct {
//	The xfov element contains a floating point number describing the horizontal field of view in degrees.
	Xfov *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema xfov"`

}

//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
type XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_ struct {
//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
	Znear *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema znear"`

}

type TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective struct {
//	The yfov element contains a floating point number describing the verticle field of view in degrees.
	XsdGoPkgHasElem_yfovchoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Yfov_TtargetableFloatType_

//	The aspect_ratio element contains a floating point number describing the aspect ratio of the field
//	of view. If the aspect_ratio element is not present the aspect ratio is to be calculated from the
//	xfov or yfov elements and the current viewport.
	XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_

//	The xfov element contains a floating point number describing the horizontal field of view in degrees.
	XsdGoPkgHasElem_xfovsequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Xfov_TtargetableFloatType_

//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
	XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_

//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
	XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_

}

type XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_ struct {
//	The perspective element describes the optics of a perspective camera.
	Perspective *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective `xml:"http://www.collada.org/2008/03/COLLADASchema perspective"`

}

//	The orthographic element describes the field of view of an orthographic camera.
//	The ymag element contains a floating point number describing the vertical
//	magnification of the view.  It can also have a sid.
type XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_ struct {
//	The ymag element contains a floating point number describing the vertical
//	magnification of the view.  It can also have a sid.
	Ymag *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema ymag"`

}

//	The xmag element contains a floating point number describing the horizontal
//	magnification of the view.
type XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_ struct {
//	The xmag element contains a floating point number describing the horizontal
//	magnification of the view.
	Xmag *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema xmag"`

}

type TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic struct {
//	The aspect_ratio element contains a floating point number describing the aspect ratio of
//	the field of view. If the aspect_ratio element is not present the aspect ratio is to be
//	calculated from the xmag or ymag elements and the current viewport.
	XsdGoPkgHasElem_aspect_ratiochoicesequencechoicesequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_AspectRatio_TtargetableFloatType_

//	The xmag element contains a floating point number describing the horizontal
//	magnification of the view.
	XsdGoPkgHasElem_xmagsequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Xmag_TtargetableFloatType_

	XsdGoPkgHasElem_ymagchoicesequencechoicesequenceorthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Ymag_TtargetableFloatType_

//	The znear element contains a floating point number that describes the distance to the near
//	clipping plane. The znear element must occur exactly once.
	XsdGoPkgHasElem_znearsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Znear_TtargetableFloatType_

//	The zfar element contains a floating point number that describes the distance to the far
//	clipping plane. The zfar element must occur exactly once.
	XsdGoPkgHasElem_zfarsequenceperspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Zfar_TtargetableFloatType_

}

type XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_ struct {
//	The orthographic element describes the field of view of an orthographic camera.
	Orthographic *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic `xml:"http://www.collada.org/2008/03/COLLADASchema orthographic"`

}

type TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon struct {
//	The perspective element describes the optics of a perspective camera.
	XsdGoPkgHasElem_perspectivechoicetechnique_commonsequenceopticssequencecamera_typeschema_Perspective_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoicePerspective_

//	The orthographic element describes the field of view of an orthographic camera.
	XsdGoPkgHasElem_orthographicchoicetechnique_commonsequenceopticssequencecamera_typeschema_Orthographic_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommonChoiceOrthographic_

}

type XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the optics information for the common profile
//	which all COLLADA implementations need to support.
	TechniqueCommon *TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TxsdCameraTypeSequenceOptics struct {
//	The technique_common element specifies the optics information for the common profile
//	which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequenceopticssequencecamera_typeschema_TechniqueCommon_TxsdCameraTypeSequenceOpticsSequenceTechniqueCommon_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_ struct {
//	Optics represents the apparatus on a camera that projects the image onto the image sensor.
	Optics *TxsdCameraTypeSequenceOptics `xml:"http://www.collada.org/2008/03/COLLADASchema optics"`

}

//	Imagers represent the image sensor of a camera (for example film or CCD).
type TxsdCameraTypeSequenceImager struct {
//	This element may contain any number of non-common profile techniques.
//	There is no common technique for imager.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_ struct {
//	Imagers represent the image sensor of a camera (for example film or CCD).
	Imager *TxsdCameraTypeSequenceImager `xml:"http://www.collada.org/2008/03/COLLADASchema imager"`

}

type TcameraType struct {
//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	Imagers represent the image sensor of a camera (for example film or CCD).
	XsdGoPkgHasElem_imagersequencecamera_typeschema_Imager_TxsdCameraTypeSequenceImager_

//	The camera element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Optics represents the apparatus on a camera that projects the image onto the image sensor.
	XsdGoPkgHasElem_opticssequencecamera_typeschema_Optics_TxsdCameraTypeSequenceOptics_

}

type XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_ struct {
//	There must be at least one camera element.
	Cameras []*TcameraType `xml:"http://www.collada.org/2008/03/COLLADASchema camera"`

}

type TlibraryCamerasType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	There must be at least one camera element.
	XsdGoPkgHasElems_camerasequencelibrary_cameras_typeschema_Camera_TcameraType_

//	The library_cameras element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_ struct {
//	The COLLADA element may contain any
//	number of library_cameras elements.
	LibraryCamerases []*TlibraryCamerasType `xml:"http://www.collada.org/2008/03/COLLADASchema library_cameras"`

}

//	The scene embodies the entire set of information that can be visualized from the
//	contents of a COLLADA resource. The scene element declares the base of the scene
//	hierarchy or scene graph. The scene contains elements that comprise much of the
//	visual and transformational information content as created by the authoring tools.
type TcommonParamType struct {
	XsdGoPkgValue xsdt.Token `xml:",chardata"`

}

type XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_ struct {
	Param *TcommonParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

type TcommonFloatOrParamType struct {
	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_

}

type XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_ struct {
	Value *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type TcommonSidrefOrParamType struct {
	XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_

	XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_

}

type XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_ struct {
	Axis *TcommonSidrefOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema axis"`

}

type TbindJointAxisType struct {
	XsdGoPkgHasElem_valuesequencebind_joint_axis_typeschema_Value_TcommonFloatOrParamType_

	XsdGoPkgHasElem_axissequencebind_joint_axis_typeschema_Axis_TcommonSidrefOrParamType_

	XsdGoPkgHasAttr_Target_XsdtToken_

}

type XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_ struct {
	BindJointAxises []*TbindJointAxisType `xml:"http://www.collada.org/2008/03/COLLADASchema bind_joint_axis"`

}

type XsdGoPkgHasAttr_Node_XsdtToken_ struct {
	Node xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema node,attr"`

}

type TbindKinematicsModelType struct {
	XsdGoPkgHasAttr_Node_XsdtToken_

	TcommonSidrefOrParamType

}

type XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_ struct {
	BindKinematicsModels []*TbindKinematicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema bind_kinematics_model"`

}

type TinstanceKinematicsSceneType struct {
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasElems_bind_kinematics_modelsequenceinstance_kinematics_scene_typeschema_BindKinematicsModel_TbindKinematicsModelType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_bind_joint_axissequenceinstance_kinematics_scene_typeschema_BindJointAxis_TbindJointAxisType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_

}

type XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_ struct {
	InstanceKinematicsScenes []*TinstanceKinematicsSceneType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_kinematics_scene"`

}

//	The instance_physics_scene
//	element declares the
//	instantiation of a COLLADA
//	physics_scene resource. The
//	instance_physics_scene element
//	may appear any number of times.
type XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_ struct {
//	The instance_physics_scene
//	element declares the
//	instantiation of a COLLADA
//	physics_scene resource. The
//	instance_physics_scene element
//	may appear any number of times.
	InstancePhysicsScenes []*TinstanceWithExtraType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_scene"`

}

//	The instance_visual_scene
//	element declares the
//	instantiation of a COLLADA
//	visual_scene resource. The
//	instance_visual_scene element
//	may only appear once.
type XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_ struct {
//	The instance_visual_scene
//	element declares the
//	instantiation of a COLLADA
//	visual_scene resource. The
//	instance_visual_scene element
//	may only appear once.
	InstanceVisualScene *TinstanceWithExtraType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_visual_scene"`

}

type TxsdColladaSequenceScene struct {
//	The instance_visual_scene
//	element declares the
//	instantiation of a COLLADA
//	visual_scene resource. The
//	instance_visual_scene element
//	may only appear once.
	XsdGoPkgHasElem_instance_visual_scenesequencescenesequenceCOLLADAschema_InstanceVisualScene_TinstanceWithExtraType_

	XsdGoPkgHasElems_instance_kinematics_scenesequencescenesequenceCOLLADAschema_InstanceKinematicsScene_TinstanceKinematicsSceneType_

//	The instance_physics_scene
//	element declares the
//	instantiation of a COLLADA
//	physics_scene resource. The
//	instance_physics_scene element
//	may appear any number of times.
	XsdGoPkgHasElems_instance_physics_scenesequencescenesequenceCOLLADAschema_InstancePhysicsScene_TinstanceWithExtraType_

//	The extra element may appear any
//	number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_ struct {
//	The scene embodies the entire set of information that can be visualized from the
//	contents of a COLLADA resource. The scene element declares the base of the scene
//	hierarchy or scene graph. The scene contains elements that comprise much of the
//	visual and transformational information content as created by the authoring tools.
	Scene *TxsdColladaSequenceScene `xml:"http://www.collada.org/2008/03/COLLADASchema scene"`

}

type XsdGoPkgHasAttr_Link_XsdtToken_ struct {
	Link xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema link,attr"`

}

type TkinematicsFrameType struct {
	XsdGoPkgHasAttr_Link_XsdtToken_

	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

}

type XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_ struct {
	FrameTcp *TkinematicsFrameType `xml:"http://www.collada.org/2008/03/COLLADASchema frame_tcp"`

}

type XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_ struct {
	FrameObject *TkinematicsFrameType `xml:"http://www.collada.org/2008/03/COLLADASchema frame_object"`

}

type XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_ struct {
	FrameTip *TkinematicsFrameType `xml:"http://www.collada.org/2008/03/COLLADASchema frame_tip"`

}

type XsdGoPkgHasAttr_Axis_XsdtToken_ struct {
	Axis xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema axis,attr"`

}

type XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_ struct {
	Target *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema target"`

}

type TformulaNewparamType struct {
	XsdGoPkgHasElem_SIDREFchoiceformula_setparam_typeschema_Sidref_TsidrefType_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_ struct {
	Newparams []*TformulaNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

type TformulaTechniqueType struct {
	math.XsdGoPkgHasElem_Math

}

type XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_ struct {
	TechniqueCommon *TformulaTechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TformulaType struct {
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_targetsequenceformula_typeschema_Target_TcommonFloatOrParamType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_newparamsequenceformula_typeschema_Newparam_TformulaNewparamType_

	XsdGoPkgHasElem_technique_commonsequenceformula_typeschema_TechniqueCommon_TformulaTechniqueType_

}

type XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_ struct {
	Formulas []*TformulaType `xml:"http://www.collada.org/2008/03/COLLADASchema formula"`

}

type XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_ struct {
	Max *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema max"`

}

type XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_ struct {
	Min *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema min"`

}

type TkinematicsLimitsType struct {
	XsdGoPkgHasElem_maxsequencekinematics_limits_typeschema_Max_TcommonFloatOrParamType_

	XsdGoPkgHasElem_minsequencekinematics_limits_typeschema_Min_TcommonFloatOrParamType_

}

type XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_ struct {
	Limits *TkinematicsLimitsType `xml:"http://www.collada.org/2008/03/COLLADASchema limits"`

}

type TcommonBoolOrParamType struct {
	XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

}

type XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_ struct {
	Locked *TcommonBoolOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema locked"`

}

type TcommonIntOrParamType struct {
	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_

}

type TkinematicsIndexType struct {
	TcommonIntOrParamType

	XsdGoPkgHasAttr_Semantic_XsdtNmtoken_

}

type XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_ struct {
	Indexs []*TkinematicsIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index"`

}

type XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_ struct {
	Active *TcommonBoolOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema active"`

}

type TkinematicsAxisInfoType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_activesequencekinematics_axis_info_typeschema_Active_TcommonBoolOrParamType_

	XsdGoPkgHasAttr_Axis_XsdtToken_

	XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_

	XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_

	XsdGoPkgHasElem_limitssequencekinematics_axis_info_typeschema_Limits_TkinematicsLimitsType_

	XsdGoPkgHasElem_lockedsequencekinematics_axis_info_typeschema_Locked_TcommonBoolOrParamType_

	XsdGoPkgHasElems_indexsequencekinematics_axis_info_typeschema_Index_TkinematicsIndexType_

	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_

}

type XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_ struct {
	AxisInfos []*TkinematicsAxisInfoType `xml:"http://www.collada.org/2008/03/COLLADASchema axis_info"`

}

type XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_ struct {
	FrameOrigin *TkinematicsFrameType `xml:"http://www.collada.org/2008/03/COLLADASchema frame_origin"`

}

type TkinematicsTechniqueType struct {
	XsdGoPkgHasElem_frame_tipsequencekinematics_technique_typeschema_FrameTip_TkinematicsFrameType_

	XsdGoPkgHasElems_axis_infosequencekinematics_technique_typeschema_AxisInfo_TkinematicsAxisInfoType_

	XsdGoPkgHasElem_frame_originsequencekinematics_technique_typeschema_FrameOrigin_TkinematicsFrameType_

	XsdGoPkgHasElem_frame_tcpsequencekinematics_technique_typeschema_FrameTcp_TkinematicsFrameType_

	XsdGoPkgHasElem_frame_objectsequencekinematics_technique_typeschema_FrameObject_TkinematicsFrameType_

}

type XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_ struct {
	TechniqueCommon *TkinematicsTechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TkinematicsType struct {
	XsdGoPkgHasElem_technique_commonsequencekinematics_typeschema_TechniqueCommon_TkinematicsTechniqueType_

	XsdGoPkgHasElems_instance_kinematics_modelsequencekinematics_scene_typeschema_InstanceKinematicsModel_TinstanceKinematicsModelType_

	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_ struct {
	Kinematics *TkinematicsType `xml:"http://www.collada.org/2008/03/COLLADASchema kinematics"`

}

type TcommonFloat2OrParamType struct {
	XsdGoPkgHasElem_paramchoicecommon_float_or_param_typeschema_Param_TcommonParamType_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

}

type XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_ struct {
	Jerk *TcommonFloat2OrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema jerk"`

}

type XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_ struct {
	Deceleration *TcommonFloat2OrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema deceleration"`

}

type XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_ struct {
	Acceleration *TcommonFloat2OrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema acceleration"`

}

type XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_ struct {
	Speed *TcommonFloat2OrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema speed"`

}

type TmotionEffectorInfoType struct {
	XsdGoPkgHasElem_jerksequencemotion_effector_info_typeschema_Jerk_TcommonFloat2OrParamType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_

	XsdGoPkgHasElem_decelerationsequencemotion_effector_info_typeschema_Deceleration_TcommonFloat2OrParamType_

	XsdGoPkgHasElem_accelerationsequencemotion_effector_info_typeschema_Acceleration_TcommonFloat2OrParamType_

	XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_

	XsdGoPkgHasElem_speedsequencemotion_effector_info_typeschema_Speed_TcommonFloat2OrParamType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_

}

type XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_ struct {
	EffectorInfo *TmotionEffectorInfoType `xml:"http://www.collada.org/2008/03/COLLADASchema effector_info"`

}

type XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_ struct {
	Speed *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema speed"`

}

type XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_ struct {
	Jerk *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema jerk"`

}

type XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_ struct {
	Acceleration *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema acceleration"`

}

type XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_ struct {
	Deceleration *TcommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema deceleration"`

}

type TmotionAxisInfoType struct {
	XsdGoPkgHasElems_bindsequenceinstance_articulated_system_typeschema_Bind_TkinematicsBindType_

	XsdGoPkgHasElem_speedsequencemotion_axis_info_typeschema_Speed_TcommonFloatOrParamType_

	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasElem_jerksequencemotion_axis_info_typeschema_Jerk_TcommonFloatOrParamType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_accelerationsequencemotion_axis_info_typeschema_Acceleration_TcommonFloatOrParamType_

	XsdGoPkgHasElems_setparamsequenceinstance_articulated_system_typeschema_Setparam_TkinematicsSetparamType_

	XsdGoPkgHasElem_decelerationsequencemotion_axis_info_typeschema_Deceleration_TcommonFloatOrParamType_

	XsdGoPkgHasAttr_Axis_XsdtToken_

}

type XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_ struct {
	AxisInfos []*TmotionAxisInfoType `xml:"http://www.collada.org/2008/03/COLLADASchema axis_info"`

}

type TmotionTechniqueType struct {
	XsdGoPkgHasElems_axis_infosequencemotion_technique_typeschema_AxisInfo_TmotionAxisInfoType_

	XsdGoPkgHasElem_effector_infosequencemotion_technique_typeschema_EffectorInfo_TmotionEffectorInfoType_

}

type XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_ struct {
	TechniqueCommon *TmotionTechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_ struct {
	InstanceArticulatedSystem *TinstanceArticulatedSystemType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_articulated_system"`

}

type TmotionType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

	XsdGoPkgHasElem_technique_commonsequencemotion_typeschema_TechniqueCommon_TmotionTechniqueType_

	XsdGoPkgHasElem_instance_articulated_systemsequencemotion_typeschema_InstanceArticulatedSystem_TinstanceArticulatedSystemType_

}

type XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_ struct {
	Motion *TmotionType `xml:"http://www.collada.org/2008/03/COLLADASchema motion"`

}

type TarticulatedSystemType struct {
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_motionchoicesequencearticulated_system_typeschema_Motion_TmotionType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasElem_kinematicschoicesequencearticulated_system_typeschema_Kinematics_TkinematicsType_

}

type XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_ struct {
	ArticulatedSystems []*TarticulatedSystemType `xml:"http://www.collada.org/2008/03/COLLADASchema articulated_system"`

}

type TlibraryArticulatedSystemsType struct {
	XsdGoPkgHasElems_articulated_systemsequencelibrary_articulated_systems_typeschema_ArticulatedSystem_TarticulatedSystemType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_ struct {
	LibraryArticulatedSystemses []*TlibraryArticulatedSystemsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_articulated_systems"`

}

//	The COLLADA element may contain any
//	number of library_geometriess elements.
//	The library_geometries element declares a module of geometry elements.
//	There must be at least one geometry element.
//	Geometry describes the visual shape and appearance of an object in the scene.
//	The geometry element categorizes the declaration of geometric information. Geometry is a
//	branch of mathematics that deals with the measurement, properties, and relationships of
//	points, lines, angles, surfaces, and solids.
//	The brep element contains the complete topological     description of a static structure. There are also the     corresponding geometrical descriptions of the vertices,     edges and faces.
//	The p element represents primitive data for the primitive types (lines, linestrips, polygons,
//	polylist, triangles, trifans, tristrips). The p element contains indices that reference into
//	the parent's source elements referenced by the input elements.
type TpType struct {
	XsdGoPkgValue TlistOfUintsType `xml:",chardata"`

}

type XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_ struct {
	P *TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

type TpcurvesType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

//	The first two inputs are needed to reference
//	the edge-face-connection. The third input
//	references the pcurve.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasAttr_Count_TuintType_

	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_ struct {
	Pcurves *TpcurvesType `xml:"http://www.collada.org/2008/03/COLLADASchema pcurves"`

}

//	This element defines all the shells of the
//	brep structure.
//	This element defines all the shells used in the brep     structure.
type TshellsType struct {
	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	One input elements is needed to define a
//	shell by its faces. The second is need for
//	the orientation of the faces
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Count_TuintType_

//	The indices of the faces for each shell.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

}

type XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_ struct {
//	This element defines all the shells of the
//	brep structure.
	Shells *TshellsType `xml:"http://www.collada.org/2008/03/COLLADASchema shells"`

}

//	This element defines all the edges of the
//	brep structure.
//	This element defines all the edges used in the brep     structure.
type XsdGoPkgHasAttr_Count_XsdtInt_ struct {
	Count xsdt.Int `xml:"http://www.collada.org/2008/03/COLLADASchema count,attr"`

}

type TedgesType struct {
//	The indices for refrencing curves and        vertices.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

	XsdGoPkgHasAttr_Count_XsdtInt_

//	Five input elements are needed to define an
//	edge, one for referencing the curve, two for
//	referencing the two vertices, one for the
//	orientation of the first vertex (the second
//	is the opposite of the first) and one for
//	the parametric values of the curve.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_ struct {
//	This element defines all the edges of the
//	brep structure.
	Edges *TedgesType `xml:"http://www.collada.org/2008/03/COLLADASchema edges"`

}

//	This element defines all the wires of the
//	brep structure.
//	This element defines all the wires used in the brep     structure.
type TwiresType struct {
//	One input elements is needed to define a
//	wire by its edges. The second is needed for
//	orientation of the edges
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The indices of the edges for each wire.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

	XsdGoPkgHasAttr_Count_TuintType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_ struct {
//	This element defines all the wires of the
//	brep structure.
	Wires *TwiresType `xml:"http://www.collada.org/2008/03/COLLADASchema wires"`

}

//	This element defines all the faces of the
//	brep structure.
//	This element defines all the faces used in the brep     structure.
type TfacesType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Id_XsdtId_

//	Two input elements are needed to define a
//	face, one for referencing the surface and
//	one for referencing the wires themselfs. The
//	third is needed for the orientation of each
//	wires.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

//	The indices for referencing the surface and
//	wires for each face.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

	XsdGoPkgHasAttr_Count_TuintType_

	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_

}

type XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_ struct {
//	This element defines all the faces of the
//	brep structure.
	Faces *TfacesType `xml:"http://www.collada.org/2008/03/COLLADASchema faces"`

}

//	The curves element holds all the curves that
//	are needed for the brep structure. Here are
//	the curves that describes the kind of an
//	edge, but here are also the curves that are
//	needed to create a extrusion for a surface.
//	This element is needed, if the edges element
//	is present.
//	This element holds all the curves that are needed for
//	the geometrical description of the topological entities
//	edges.
//	A curveType defines the attributes of a curve element.     With rotate and translate the surface can be positioned     to its right location.
//	Describes a parabola in 3D space. A parabola is defined     by its focal length (i.e. the distance between its focus     and its apex) and is positioned in space with a     coordinate system where: - the origin is     the apex of the parabola, - the "X Axis"     defines the axis of symmetry; the parabola is on the     positive side of this axis, - the origin, "X     Direction" and "Y Direction" define the     plane of the parabola. This coordinate system is the     local coordinate system of the parabola. The "main     Direction" of this coordinate system is a vector     normal to the plane of the parabola. The axis, of which     the origin and unit vector are respectively the origin     and "main Direction" of the local coordinate     system, is termed the "Axis" or "main     Axis" of the parabola. The "main     Direction" of the local coordinate system gives an     explicit orientation to the parabola, determining the     direction in which the parameter increases along the     parabola. The Geom_Parabola parabola is parameterized as     follows: P(U) = O + U*U/(4.*F)*XDir + U*YDir where: - P     is the point of parameter U, - O, XDir and YDir are     respectively the origin, "X <br>     Direction" and "Y Direction" of its local     coordinate system, - F is the focal length of the     parabola. The parameter of the parabola is therefore its     Y coordinate in the local coordinate system, with the     "X <br> Axis" of the local coordinate     system defining the origin of the parameter. The     parameter range is ] -infinite, +infinite [.
type XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_ struct {
	Focal TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema focal"`

}

type TparabolaType struct {
	XsdGoPkgHasElem_focalsequenceparabola_typeschema_Focal_TfloatType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_ struct {
	Parabola *TparabolaType `xml:"http://www.collada.org/2008/03/COLLADASchema parabola"`

}

//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
type TxsdNurbsTypeSequenceControlVertices struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The input element must occur at least one time. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_

}

type XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_ struct {
//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
	ControlVertices *TxsdNurbsTypeSequenceControlVertices `xml:"http://www.collada.org/2008/03/COLLADASchema control_vertices"`

}

type XsdGoPkgHasAttr_Degree_TuintType_ struct {
	Degree TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema degree,attr"`

}

type XsdGoPkgHasAttr_Closed_XsdtBoolean_False struct {
	Closed xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema closed,attr"`

}

//	Returns the default value for Closed -- false
func (me XsdGoPkgHasAttr_Closed_XsdtBoolean_False) ClosedDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type TnurbsType struct {
//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
	XsdGoPkgHasElem_control_verticessequencenurbs_typeschema_ControlVertices_TxsdNurbsTypeSequenceControlVertices_

	XsdGoPkgHasAttr_Degree_TuintType_

	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

	XsdGoPkgHasAttr_Closed_XsdtBoolean_False

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_ struct {
	Nurbs *TnurbsType `xml:"http://www.collada.org/2008/03/COLLADASchema nurbs"`

}

type TorientType struct {
	XsdGoPkgValue Tfloat4Type `xml:",chardata"`

}

type XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_ struct {
	Orients []*TorientType `xml:"http://www.collada.org/2008/03/COLLADASchema orient"`

}

//	Describes an infinite line. A line is defined and     positioned in space with an axis which gives it an     origin and a unit vector. The Geom_Line line is     parameterized: P (U) = O + U*Dir, where: - P is the     point of parameter U, - O is the origin and Dir the unit     vector of its positioning axis. The parameter range is ]     -infinite, +infinite [. The orientation of the line is     given by the unit vector of its positioning axis.
type XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_ struct {
	Origin Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema origin"`

}

type XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_ struct {
	Direction Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema direction"`

}

type TlineType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_

	XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_

}

type XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_ struct {
	Line *TlineType `xml:"http://www.collada.org/2008/03/COLLADASchema line"`

}

type ToriginType struct {
	XsdGoPkgValue Tfloat3Type `xml:",chardata"`

}

type XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_ struct {
	Origin *ToriginType `xml:"http://www.collada.org/2008/03/COLLADASchema origin"`

}

//	Describes a branch of a hyperbola in 3D space. A     hyperbola is defined by its major and minor radii and,     as with any conic curve, is positioned in space with a     right-handed coordinate system where: - the origin is     the center of the hyperbola, - the "X Direction" defines     the major axis, and - the "Y Direction" defines the     minor axis. The origin, "X Direction" and "Y Direction"     of this coordinate system define the plane of the     hyperbola. The coordinate system is the local coordinate     system of the hyperbola. The branch of the hyperbola     described is the one located on the positive side of the     major axis. The "main Direction" of the local coordinate     system is a vector normal to the plane of the hyperbola.     The axis, of which the origin and unit vector are     respectively the origin and "main Direction" of the     local coordinate system, is termed the "Axis" or "main     Axis" of the hyperbola. The "main Direction" of the     local coordinate system gives an explicit orientation to     the hyperbola, determining the direction in which the     parameter increases along the hyperbola. The     Geom_Hyperbola hyperbola is parameterized as follows:     P(U) = O + MajRad*Cosh(U)*XDir + MinRad*Sinh(U)*YDir,     where: - P is the point of parameter U, - O, XDir and     YDir are respectively the origin, "X Direction" and "Y     Direction" of its local coordinate system, - MajRad and     MinRad are the major and minor radii of the hyperbola.     The "X Axis" of the local coordinate system therefore     defines the origin of the parameter of the hyperbola.     The parameter range is ] -infinite, +infinite [.
type XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_ struct {
	Radius Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

type ThyperbolaType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_

}

type XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_ struct {
	Hyperbola *ThyperbolaType `xml:"http://www.collada.org/2008/03/COLLADASchema hyperbola"`

}

//	Describes a circle. A circle is defined by its radius     and, as with any conic curve, is positioned in space     with a right-handed coordinate system where: - the     origin is the center of the circle, and - the origin, "X     Direction" and "Y Direction" define the plane of the     circle. This coordinate system is the local coordinate     system of the circle. The "main Direction" of this     coordinate system is the vector normal to the plane of     the circle. The axis, of which the origin and unit     vector are respectively the origin and "main Direction"     of the local coordinate system, is termed the "Axis" or     "main Axis" of the circle. The "main Direction" of the     local coordinate system gives an explicit orientation to     the circle (definition of the trigonometric sense),     determining the direction in which the parameter     increases along the circle. The Geom_Circle circle is     parameterized by an angle: P(U) = O + R*Cos(U)*XDir +     R*Sin(U)*YDir, where: - P is the point of parameter U, -     O, XDir and YDir are respectively the origin, "X     Direction" and "Y Direction" of its local coordinate     system, - R is the radius of the circle. The "X     Axis" of the local coordinate system therefore     defines the origin of the parameter of the circle.     The parameter is the angle with this "X Direction".     A circle is a closed and periodic curve. The period     is 2.*Pi and the parameter range is [ 0, 2.*Pi [.
type XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_ struct {
	Radius TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

type TcircleType struct {
	XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_ struct {
	Circle *TcircleType `xml:"http://www.collada.org/2008/03/COLLADASchema circle"`

}

//	Describes an ellipse in 3D space. An ellipse is defined     by its major and minor radii and, as with any conic     curve, is positioned in space with a right-handed     coordinate system where: - the origin is the center of     the ellipse, - the "X Direction" defines the     major axis, and - the "Y Direction" defines     the minor axis. The origin, "X Direction" and     "Y Direction" of this coordinate system define     the plane of the ellipse. The coordinate system is the     local coordinate system of the ellipse. The "main     Direction" of this coordinate system is the vector     normal to the plane of the ellipse. The axis, of which     the origin and unit vector are respectively the origin     and "main Direction" of the local coordinate     system, is termed the "Axis" or "main     Axis" of the ellipse. The "main     Direction" of the local coordinate system gives an     explicit orientation to the ellipse (definition of the     trigonometric sense), determining the direction in which     the parameter increases along the ellipse. The     Geom_Ellipse ellipse is parameterized by an angle: P(U)     = O + MajorRad*Cos(U)*XDir + MinorRad*Sin(U)*YDir where:     - P is the point of parameter U, - O, XDir and YDir are     respectively the origin, "X <br>     Direction" and "Y Direction" of its local     coordinate system, - MajorRad and MinorRad are the major     and minor radii of the ellipse. The "X Axis"     of the local coordinate system therefore defines the     origin of the parameter of the ellipse. An ellipse is a     closed and periodic curve. The period is 2.*Pi and the     parameter range is [ 0, 2.*Pi [.
type TellipseType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_

}

type XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_ struct {
	Ellipse *TellipseType `xml:"http://www.collada.org/2008/03/COLLADASchema ellipse"`

}

type TcurveType struct {
//	The name of a curve.
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_linechoicesequencecurve_typeschema_Line_TlineType_

	XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_

	XsdGoPkgHasElem_hyperbolachoicesequencecurve_typeschema_Hyperbola_ThyperbolaType_

	XsdGoPkgHasElem_circlechoicesequencecurve_typeschema_Circle_TcircleType_

	XsdGoPkgHasElem_ellipsechoicesequencecurve_typeschema_Ellipse_TellipseType_

	XsdGoPkgHasElem_parabolachoicesequencecurve_typeschema_Parabola_TparabolaType_

	XsdGoPkgHasElem_nurbschoicesequencecurve_typeschema_Nurbs_TnurbsType_

//	The id of a curve.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_

}

type XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_ struct {
	Curves []*TcurveType `xml:"http://www.collada.org/2008/03/COLLADASchema curve"`

}

type TcurvesType struct {
	XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_ struct {
//	The curves element holds all the curves that
//	are needed for the brep structure. Here are
//	the curves that describes the kind of an
//	edge, but here are also the curves that are
//	needed to create a extrusion for a surface.
//	This element is needed, if the edges element
//	is present.
	Curves *TcurvesType `xml:"http://www.collada.org/2008/03/COLLADASchema curves"`

}

//	The surfaces element holds all the surfaces
//	that are needed for the brep structure. Here
//	are the surfaces that describes the kind of
//	a face. This element is needed, if the faces
//	element is present.
//	A surfaceType defines the attributes of a surface     element. With rotate and translate the surface can be     positioned to its right location.
//	A centered sphere primitive.
type TsphereType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	A float value that represents the radius of the sphere
	XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_

}

type XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_ struct {
	Sphere *TsphereType `xml:"http://www.collada.org/2008/03/COLLADASchema sphere"`

}

type XsdGoPkgHasAttr_ClosedU_XsdtBoolean_False struct {
	ClosedU xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema closed_u,attr"`

}

//	Returns the default value for ClosedU -- false
func (me XsdGoPkgHasAttr_ClosedU_XsdtBoolean_False) ClosedUDefault () xsdt.Boolean { return xsdt.Boolean(false) }

//	The control vertices element must occur
//	exactly one time. It is used to describe the
//	CVs of the spline.
type TxsdNurbsSurfaceTypeSequenceControlVertices struct {
//	The input element must occur at
//	least one time. These inputs are
//	local inputs.
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_

//	The extra element may appear any
//	number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_ struct {
//	The control vertices element must occur
//	exactly one time. It is used to describe the
//	CVs of the spline.
	ControlVertices *TxsdNurbsSurfaceTypeSequenceControlVertices `xml:"http://www.collada.org/2008/03/COLLADASchema control_vertices"`

}

type XsdGoPkgHasAttr_ClosedV_XsdtBoolean_False struct {
	ClosedV xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema closed_v,attr"`

}

//	Returns the default value for ClosedV -- false
func (me XsdGoPkgHasAttr_ClosedV_XsdtBoolean_False) ClosedVDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type XsdGoPkgHasAttr_DegreeU_TuintType_ struct {
	DegreeU TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema degree_u,attr"`

}

type XsdGoPkgHasAttr_DegreeV_TuintType_ struct {
	DegreeV TuintType `xml:"http://www.collada.org/2008/03/COLLADASchema degree_v,attr"`

}

type TnurbsSurfaceType struct {
//	The control vertices element must occur
//	exactly one time. It is used to describe the
//	CVs of the spline.
	XsdGoPkgHasElem_control_verticessequencenurbs_surface_typeschema_ControlVertices_TxsdNurbsSurfaceTypeSequenceControlVertices_

	XsdGoPkgHasAttr_ClosedV_XsdtBoolean_False

	XsdGoPkgHasAttr_DegreeU_TuintType_

	XsdGoPkgHasAttr_DegreeV_TuintType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_ClosedU_XsdtBoolean_False

	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

}

type XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_ struct {
	NurbsSurface *TnurbsSurfaceType `xml:"http://www.collada.org/2008/03/COLLADASchema nurbs_surface"`

}

//	An infinite plane primitive.
//	4 float values that represent the coefficients for the plane's equation:    Ax + By + Cz + D = 0
type XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_ struct {
//	4 float values that represent the coefficients for the plane's equation:    Ax + By + Cz + D = 0
	Equation Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema equation"`

}

type TplaneType struct {
//	4 float values that represent the coefficients for the plane's equation:    Ax + By + Cz + D = 0
	XsdGoPkgHasElem_equationsequenceplane_typeschema_Equation_Tfloat4Type_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_ struct {
	Plane *TplaneType `xml:"http://www.collada.org/2008/03/COLLADASchema plane"`

}

type TtorusType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_

}

type XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_ struct {
	Torus *TtorusType `xml:"http://www.collada.org/2008/03/COLLADASchema torus"`

}

type XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_ struct {
	Angle xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema angle"`

}

type TconeType struct {
	XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_

	XsdGoPkgHasElem_anglesequencecone_typeschema_Angle_XsdtFloat_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_ struct {
	Cone *TconeType `xml:"http://www.collada.org/2008/03/COLLADASchema cone"`

}

//	Describes a surface of linear extrusion ("extruded     surface"), e.g. a generalized cylinder. Such a surface     is obtained by sweeping a curve (called the "extruded     curve" or "basis") in a given direction (referred to as     the "direction of extrusion" and defined by a unit     vector). The u parameter is along the extruded curve.     The v parameter is along the direction of extrusion. The     parameter range for the u parameter is defined by the     reference curve. The parameter range for the v parameter     is ] - infinity, + infinity [. The position of the curve     gives the origin of the v parameter. The form of a     surface of linear extrusion is generally a ruled     surface. It can be: - a cylindrical surface, if the     extruded curve is a circle, or a trimmed circle, with an     axis parallel to the direction of extrusion, or - a     planar surface, if the extruded curve is a line.
type XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_ struct {
	Axis Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema axis"`

}

type XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_ struct {
	Curve *TcurveType `xml:"http://www.collada.org/2008/03/COLLADASchema curve"`

}

type TsweptSurfaceType struct {
	XsdGoPkgHasElem_axissequencechoicesequenceswept_surface_typeschema_Axis_Tfloat3Type_

	XsdGoPkgHasElem_curvesequenceswept_surface_typeschema_Curve_TcurveType_

	XsdGoPkgHasElem_originsequenceline_typeschema_Origin_Tfloat3Type_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_directionsequenceline_typeschema_Direction_Tfloat3Type_

}

type XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_ struct {
	SweptSurface *TsweptSurfaceType `xml:"http://www.collada.org/2008/03/COLLADASchema swept_surface"`

}

type TxsdSurfaceTypeSequenceChoiceCylinder struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_radiussequencecircle_typeschema_Radius_TfloatType_

}

type XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_ struct {
	Cylinder *TxsdSurfaceTypeSequenceChoiceCylinder `xml:"http://www.collada.org/2008/03/COLLADASchema cylinder"`

}

type TsurfaceType struct {
//	The id of the surface.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_orientsequencecurve_typeschema_Orient_TorientType_

	XsdGoPkgHasElem_originsequencecurve_typeschema_Origin_ToriginType_

	XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_

	XsdGoPkgHasElem_nurbs_surfacechoicesequencesurface_typeschema_NurbsSurface_TnurbsSurfaceType_

	XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_

//	The name of the surface.
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_toruschoicesequencesurface_typeschema_Torus_TtorusType_

	XsdGoPkgHasElem_conechoicesequencesurface_typeschema_Cone_TconeType_

	XsdGoPkgHasElem_swept_surfacechoicesequencesurface_typeschema_SweptSurface_TsweptSurfaceType_

	XsdGoPkgHasElem_cylinderchoicesequencesurface_typeschema_Cylinder_TxsdSurfaceTypeSequenceChoiceCylinder_

}

type XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_ struct {
	Surfaces []*TsurfaceType `xml:"http://www.collada.org/2008/03/COLLADASchema surface"`

}

type TsurfacesType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_surfacesequencesurfaces_typeschema_Surface_TsurfaceType_

}

type XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_ struct {
//	The surfaces element holds all the surfaces
//	that are needed for the brep structure. Here
//	are the surfaces that describes the kind of
//	a face. This element is needed, if the faces
//	element is present.
	Surfaces *TsurfacesType `xml:"http://www.collada.org/2008/03/COLLADASchema surfaces"`

}

//	This element defines all the solids of the
//	brep structure.
//	This element defines all the solids used in the brep     structure.
type TsolidsType struct {
	XsdGoPkgHasAttr_Count_TuintType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_

//	The indices of the shells for each solid.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

//	One input elements is needed to define a
//	solid by its shells. The second is need fo
//	the orientation of the shells.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_ struct {
//	This element defines all the solids of the
//	brep structure.
	Solids *TsolidsType `xml:"http://www.collada.org/2008/03/COLLADASchema solids"`

}

//	This element holds all the pcurves that are needed for
//	the geometrical description of the topological entities
//	edges on the surfaces they lie on.
type TsurfaceCurvesType struct {
	XsdGoPkgHasElems_curvesequencecurves_typeschema_Curve_TcurveType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_ struct {
	SurfaceCurves *TsurfaceCurvesType `xml:"http://www.collada.org/2008/03/COLLADASchema surface_curves"`

}

//	This element defines all the vertices of an
//	brep structure. Vertices are the base
//	topological entity for all brep structures,
//	so this element is ever needed.
//	The vertices element declares the attributes and identity of mesh-vertices. The vertices element
//	describes mesh-vertices in a mesh geometry. The mesh-vertices represent the position (identity)
//	of the vertices comprising the mesh and other vertex attributes that are invariant to tessellation.
type TverticesType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The input element must occur at least one time. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_

//	The id attribute is a text string containing the unique identifier of this element. This
//	value must be unique within the instance document. Required attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_ struct {
//	This element defines all the vertices of an
//	brep structure. Vertices are the base
//	topological entity for all brep structures,
//	so this element is ever needed.
	Vertices *TverticesType `xml:"http://www.collada.org/2008/03/COLLADASchema vertices"`

}

type TbrepType struct {
//	The surfaces element holds all the surfaces
//	that are needed for the brep structure. Here
//	are the surfaces that describes the kind of
//	a face. This element is needed, if the faces
//	element is present.
	XsdGoPkgHasElem_surfacessequencebrep_typeschema_Surfaces_TsurfacesType_

//	This element defines all the solids of the
//	brep structure.
	XsdGoPkgHasElem_solidssequencebrep_typeschema_Solids_TsolidsType_

	XsdGoPkgHasElem_surface_curvessequencebrep_typeschema_SurfaceCurves_TsurfaceCurvesType_

//	This element defines all the vertices of an
//	brep structure. Vertices are the base
//	topological entity for all brep structures,
//	so this element is ever needed.
	XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_

	XsdGoPkgHasElem_pcurvessequencebrep_typeschema_Pcurves_TpcurvesType_

//	This element defines all the shells of the
//	brep structure.
	XsdGoPkgHasElem_shellssequencebrep_typeschema_Shells_TshellsType_

//	This element defines all the edges of the
//	brep structure.
	XsdGoPkgHasElem_edgessequencebrep_typeschema_Edges_TedgesType_

//	This element defines all the wires of the
//	brep structure.
	XsdGoPkgHasElem_wiressequencebrep_typeschema_Wires_TwiresType_

//	This element defines all the faces of the
//	brep structure.
	XsdGoPkgHasElem_facessequencebrep_typeschema_Faces_TfacesType_

//	The source elements define the access of the
//	elements vertices, edges and faces to their
//	geometric entities. At least one source
//	element is needed for the vertices. If there
//	are edges a second source element is needed
//	for accessing the curves in the curve
//	element by an IDREF_array. If there are
//	faces the third source element is needed for
//	accessing the surfaces in the surface
//	element by an IDREF_array.
	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The curves element holds all the curves that
//	are needed for the brep structure. Here are
//	the curves that describes the kind of an
//	edge, but here are also the curves that are
//	needed to create a extrusion for a surface.
//	This element is needed, if the edges element
//	is present.
	XsdGoPkgHasElem_curvessequencebrep_typeschema_Curves_TcurvesType_

}

type XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_ struct {
	Brep *TbrepType `xml:"http://www.collada.org/2008/03/COLLADASchema brep"`

}

//	The geometry element may contain only
//	one mesh or convex_mesh.
//	The definition of the convex_mesh element is identical to the mesh element with the exception that
//	instead of a complete description (source, vertices, polygons etc.), it may simply point to another
//	geometry to derive its shape. The latter case means that the convex hull of that geometry should
//	be computed and is indicated by the optional "convex_hull_of" attribute.
//	The lines element provides the information needed to bind vertex attributes together and then
//	organize those vertices into individual lines. Each line described by the mesh has two vertices.
//	The first line is formed from first and second vertices. The second line is formed from the
//	third and fourth vertices and so on.
//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. If the material attribute is not specified then the lighting and
//	shading results are application defined. Optional attribute.
type XsdGoPkgHasAttr_Material_XsdtNCName_ struct {
//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. If the material attribute is not specified then the lighting and
//	shading results are application defined. Optional attribute.
	Material xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema material,attr"`

}

type TlinesType struct {
//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. If the material attribute is not specified then the lighting and
//	shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The count attribute indicates the number of line primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The lines element may have zero or one p element.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

}

type XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_ struct {
	Lineses []*TlinesType `xml:"http://www.collada.org/2008/03/COLLADASchema lines"`

}

//	The convex_hull_of attribute is a URI string of geometry to compute the convex hull of.
//	Optional attribute.
type XsdGoPkgHasAttr_ConvexHullOf_XsdtAnyURI_ struct {
//	The convex_hull_of attribute is a URI string of geometry to compute the convex hull of.
//	Optional attribute.
	ConvexHullOf xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema convex_hull_of,attr"`

}

//	The polylist element provides the information needed to bind vertex attributes together and
//	then organize those vertices into individual polygons. The polygons described in polylist can
//	contain arbitrary numbers of vertices. Unlike the polygons element, the polylist element cannot
//	contain polygons with holes.
type TpolylistType struct {
//	The count attribute indicates the number of polygon primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The polylist element may have zero or one p element.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. If the material attribute is not specified then the lighting and
//	shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

//	The vcount element contains a list of integers describing the number of sides for each polygon
//	described by the polylist element. The vcount element may occur once.
	XsdGoPkgHasElem_vcountsequencevertex_weightssequenceskin_typeschema_Vcount_TlistOfUintsType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_ struct {
	Polylists []*TpolylistType `xml:"http://www.collada.org/2008/03/COLLADASchema polylist"`

}

//	The triangles element provides the information needed to bind vertex attributes together and
//	then organize those vertices into individual triangles.	Each triangle described by the mesh has
//	three vertices. The first triangle is formed from the first, second, and third vertices. The
//	second triangle is formed from the fourth, fifth, and sixth vertices, and so on.
type TtrianglesType struct {
//	The triangles element may have zero or one p element.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

//	The count attribute indicates the number of triangle primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material at
//	the time of instantiation. Optional attribute. If the material attribute is not specified then
//	the lighting and shading results are application defined.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

}

type XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_ struct {
	Triangleses []*TtrianglesType `xml:"http://www.collada.org/2008/03/COLLADASchema triangles"`

}

//	The trifans element provides the information needed to bind vertex attributes together and then
//	organize those vertices into connected triangles. Each triangle described by the mesh has three
//	vertices. The first triangle is formed from first, second, and third vertices. Each subsequent
//	triangle is formed from the current vertex, reusing the first and the previous vertices.
//	The trifans element may have any number of p elements.
type XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_ struct {
//	The trifans element may have any number of p elements.
	Ps []*TpType `xml:"http://www.collada.org/2008/03/COLLADASchema p"`

}

type TtrifansType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number of triangle fan primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material
//	at the time of instantiation. If the material attribute is not specified then the lighting
//	and shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The trifans element may have any number of p elements.
	XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_ struct {
	Trifanses []*TtrifansType `xml:"http://www.collada.org/2008/03/COLLADASchema trifans"`

}

//	The linestrips element provides the information needed to bind vertex attributes together and
//	then organize those vertices into connected line-strips. Each line-strip described by the mesh
//	has an arbitrary number of vertices. Each line segment within the line-strip is formed from the
//	current vertex and the preceding vertex.
type TlinestripsType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The count attribute indicates the number of linestrip primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The linestrips element may have any number of p elements.
	XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_

//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

//	The material attribute declares a symbol for a material. This symbol is bound to a material
//	at the time of instantiation. If the material attribute is not specified then the lighting
//	and shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

}

type XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_ struct {
	Linestripses []*TlinestripsType `xml:"http://www.collada.org/2008/03/COLLADASchema linestrips"`

}

//	The polygons element provides the information needed to bind vertex attributes together and
//	then organize those vertices into individual polygons. The polygons described can contain
//	arbitrary numbers of vertices. These polygons may be self intersecting and may also contain holes.
//	The ph element may occur any number of times. It describes a polygon with holes.
//	The h element represents a hole in the polygon specified. There must be at least one h element.
type XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_ struct {
//	The h element represents a hole in the polygon specified. There must be at least one h element.
	Hs []TlistOfUintsType `xml:"http://www.collada.org/2008/03/COLLADASchema h"`

}

type TxsdPolygonsTypeSequenceChoicePh struct {
//	There may only be one p element.
	XsdGoPkgHasElem_psequencepcurves_typeschema_P_TpType_

//	The h element represents a hole in the polygon specified. There must be at least one h element.
	XsdGoPkgHasElems_hsequencephchoicesequencepolygons_typeschema_H_TlistOfUintsType_

}

type XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_ struct {
//	The ph element may occur any number of times. It describes a polygon with holes.
	Phs []*TxsdPolygonsTypeSequenceChoicePh `xml:"http://www.collada.org/2008/03/COLLADASchema ph"`

}

type TpolygonsType struct {
//	The input element may occur any number of times. This input is a local input with the
//	offset and set attributes.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

//	The ph element may occur any number of times. It describes a polygon with holes.
	XsdGoPkgHasElems_phchoicesequencepolygons_typeschema_Ph_TxsdPolygonsTypeSequenceChoicePh_

//	The p element may occur any number of times.
	XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The count attribute indicates the number of polygon primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The material attribute declares a symbol for a material. This symbol is bound to a material
//	at the time of instantiation. If the material attribute is not specified then the lighting
//	and shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

}

type XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_ struct {
	Polygonses []*TpolygonsType `xml:"http://www.collada.org/2008/03/COLLADASchema polygons"`

}

//	The tristrips element provides the information needed to bind vertex attributes together and then
//	organize those vertices into connected triangles. Each triangle described by the mesh has three
//	vertices. The first triangle is formed from first, second, and third vertices. Each subsequent
//	triangle is formed from the current vertex, reusing the previous two vertices.
type TtristripsType struct {
//	The material attribute declares a symbol for a material. This symbol is bound to a material
//	at the time of instantiation. If the material attribute is not specified then the lighting
//	and shading results are application defined. Optional attribute.
	XsdGoPkgHasAttr_Material_XsdtNCName_

//	The input element may occur any number of times. This input is a local input with the offset
//	and set attributes.
	XsdGoPkgHasElems_inputsequencevertex_weightssequenceskin_typeschema_Input_TinputLocalOffsetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The tristrips element may have any number of p elements.
	XsdGoPkgHasElems_psequencetrifans_typeschema_P_TpType_

//	The count attribute indicates the number of triangle strip primitives. Required attribute.
	XsdGoPkgHasAttr_Count_TuintType_

}

type XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_ struct {
	Tristripses []*TtristripsType `xml:"http://www.collada.org/2008/03/COLLADASchema tristrips"`

}

type TconvexMeshType struct {
//	The convex_hull_of attribute is a URI string of geometry to compute the convex hull of.
//	Optional attribute.
	XsdGoPkgHasAttr_ConvexHullOf_XsdtAnyURI_

	XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_

	XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_

	XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_

	XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_

	XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_

	XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_

	XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_

	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

}

type XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_ struct {
//	The geometry element may contain only
//	one mesh or convex_mesh.
	ConvexMesh *TconvexMeshType `xml:"http://www.collada.org/2008/03/COLLADASchema convex_mesh"`

}

//	The geometry element may contain only
//	one mesh or convex_mesh.
//	The mesh element contains vertex and primitive information sufficient to describe basic geometric meshes.
type TmeshType struct {
//	The mesh element may contain any number of trifans elements.
	XsdGoPkgHasElems_trifanschoicesequenceconvex_mesh_typeschema_Trifans_TtrifansType_

//	The mesh element may contain any number of linestrips elements.
	XsdGoPkgHasElems_linestripschoicesequenceconvex_mesh_typeschema_Linestrips_TlinestripsType_

//	The mesh element may contain any number of lines elements.
	XsdGoPkgHasElems_lineschoicesequenceconvex_mesh_typeschema_Lines_TlinesType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The mesh element may contain any number of tristrips elements.
	XsdGoPkgHasElems_tristripschoicesequenceconvex_mesh_typeschema_Tristrips_TtristripsType_

//	The mesh element may contain any number of triangles elements.
	XsdGoPkgHasElems_triangleschoicesequenceconvex_mesh_typeschema_Triangles_TtrianglesType_

//	The mesh element may contain any number of polygons elements.
	XsdGoPkgHasElems_polygonschoicesequenceconvex_mesh_typeschema_Polygons_TpolygonsType_

//	The mesh element must contain one or more source elements.
	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

//	The mesh element may contain any number of polylist elements.
	XsdGoPkgHasElems_polylistchoicesequenceconvex_mesh_typeschema_Polylist_TpolylistType_

//	The mesh element must contain one vertices element.
	XsdGoPkgHasElem_verticessequencebrep_typeschema_Vertices_TverticesType_

}

type XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_ struct {
//	The geometry element may contain only
//	one mesh or convex_mesh.
	Mesh *TmeshType `xml:"http://www.collada.org/2008/03/COLLADASchema mesh"`

}

//	The spline element contains control vertex information sufficient to describe basic splines.
//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
type TxsdSplineTypeSequenceControlVertices struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The input element must occur at least one time. These inputs are local inputs.
	XsdGoPkgHasElems_inputsequencesampler_typeschema_Input_TinputLocalType_

}

type XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_ struct {
//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
	ControlVertices *TxsdSplineTypeSequenceControlVertices `xml:"http://www.collada.org/2008/03/COLLADASchema control_vertices"`

}

type TsplineType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The mesh element must contain one or more source elements.
	XsdGoPkgHasElems_sourcesequencechoicesequenceanimation_typeschema_Source_TsourceType_

//	The control vertices element  must occur  exactly one time. It is used to describe the CVs of the spline.
	XsdGoPkgHasElem_control_verticessequencespline_typeschema_ControlVertices_TxsdSplineTypeSequenceControlVertices_

	XsdGoPkgHasAttr_Closed_XsdtBoolean_False

}

type XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_ struct {
	Spline *TsplineType `xml:"http://www.collada.org/2008/03/COLLADASchema spline"`

}

type TgeometryType struct {
//	The geometry element may contain only
//	one mesh or convex_mesh.
	XsdGoPkgHasElem_convex_meshchoicesequencegeometry_typeschema_ConvexMesh_TconvexMeshType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The geometry element may contain only
//	one mesh or convex_mesh.
	XsdGoPkgHasElem_meshchoicesequencegeometry_typeschema_Mesh_TmeshType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElem_splinechoicesequencegeometry_typeschema_Spline_TsplineType_

	XsdGoPkgHasElem_brepchoicesequencegeometry_typeschema_Brep_TbrepType_

//	The geometry element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_ struct {
//	There must be at least one geometry element.
	Geometries []*TgeometryType `xml:"http://www.collada.org/2008/03/COLLADASchema geometry"`

}

type TlibraryGeometriesType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	There must be at least one geometry element.
	XsdGoPkgHasElems_geometrysequencelibrary_geometries_typeschema_Geometry_TgeometryType_

//	The library_geometries element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_ struct {
//	The COLLADA element may contain any
//	number of library_geometriess elements.
	LibraryGeometrieses []*TlibraryGeometriesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_geometries"`

}

type XsdGoPkgHasAttr_Joint_XsdtToken_ struct {
	Joint xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema joint,attr"`

}

type TxsdLinkTypeSequenceChoiceAttachmentStart struct {
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

	XsdGoPkgHasAttr_Joint_XsdtToken_

	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

}

type XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_ struct {
	AttachmentStarts []*TxsdLinkTypeSequenceChoiceAttachmentStart `xml:"http://www.collada.org/2008/03/COLLADASchema attachment_start"`

}

type XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_ struct {
	Link *TlinkType `xml:"http://www.collada.org/2008/03/COLLADASchema link"`

}

type TxsdLinkTypeSequenceChoiceAttachmentFull struct {
	XsdGoPkgHasAttr_Joint_XsdtToken_

	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

	XsdGoPkgHasElem_linksequenceattachment_fullchoicesequencelink_typeschema_Link_TlinkType_

	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

}

type XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_ struct {
	AttachmentFulls []*TxsdLinkTypeSequenceChoiceAttachmentFull `xml:"http://www.collada.org/2008/03/COLLADASchema attachment_full"`

}

type TxsdLinkTypeSequenceChoiceAttachmentEnd struct {
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

	XsdGoPkgHasAttr_Joint_XsdtToken_

}

type XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_ struct {
	AttachmentEnds []*TxsdLinkTypeSequenceChoiceAttachmentEnd `xml:"http://www.collada.org/2008/03/COLLADASchema attachment_end"`

}

type TlinkType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

	XsdGoPkgHasElems_attachment_fullchoicesequencelink_typeschema_AttachmentFull_TxsdLinkTypeSequenceChoiceAttachmentFull_

	XsdGoPkgHasElems_attachment_endchoicesequencelink_typeschema_AttachmentEnd_TxsdLinkTypeSequenceChoiceAttachmentEnd_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_attachment_startchoicesequencelink_typeschema_AttachmentStart_TxsdLinkTypeSequenceChoiceAttachmentStart_

}

type XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_ struct {
	Links []*TlinkType `xml:"http://www.collada.org/2008/03/COLLADASchema link"`

}

type TaxisType struct {
	XsdGoPkgValue Tfloat3Type `xml:",chardata"`

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_ struct {
	Axis *TaxisType `xml:"http://www.collada.org/2008/03/COLLADASchema axis"`

}

type TminmaxType struct {
	XsdGoPkgValue TfloatType `xml:",chardata"`

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_ struct {
	Max *TminmaxType `xml:"http://www.collada.org/2008/03/COLLADASchema max"`

}

type XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_ struct {
	Min *TminmaxType `xml:"http://www.collada.org/2008/03/COLLADASchema min"`

}

type TjointLimitsType struct {
	XsdGoPkgHasElem_minsequencejoint_limits_typeschema_Min_TminmaxType_

	XsdGoPkgHasElem_maxsequencejoint_limits_typeschema_Max_TminmaxType_

}

type XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_ struct {
	Limits *TjointLimitsType `xml:"http://www.collada.org/2008/03/COLLADASchema limits"`

}

type TaxisConstraintType struct {
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_axissequenceaxis_constraint_typeschema_Axis_TaxisType_

	XsdGoPkgHasElem_limitssequenceaxis_constraint_typeschema_Limits_TjointLimitsType_

}

type XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_ struct {
	Revolutes []*TaxisConstraintType `xml:"http://www.collada.org/2008/03/COLLADASchema revolute"`

}

type XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_ struct {
	Prismatics []*TaxisConstraintType `xml:"http://www.collada.org/2008/03/COLLADASchema prismatic"`

}

type TjointType struct {
	XsdGoPkgHasElems_prismaticchoicesequencejoint_typeschema_Prismatic_TaxisConstraintType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_revolutechoicesequencejoint_typeschema_Revolute_TaxisConstraintType_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_ struct {
	Joints []*TjointType `xml:"http://www.collada.org/2008/03/COLLADASchema joint"`

}

type TinstanceJointType struct {
	TinstanceWithExtraType

}

type XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_ struct {
	InstanceJoints []*TinstanceJointType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_joint"`

}

type TkinematicsModelTechniqueType struct {
	XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_

	XsdGoPkgHasElems_instance_jointchoicesequencekinematics_model_technique_typeschema_InstanceJoint_TinstanceJointType_

	XsdGoPkgHasElems_newparamsequenceinstance_articulated_system_typeschema_Newparam_TkinematicsNewparamType_

	XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_

	XsdGoPkgHasElems_linksequencekinematics_model_technique_typeschema_Link_TlinkType_

	XsdGoPkgHasElems_instance_formulasequenceanimation_clip_typeschema_InstanceFormula_TinstanceFormulaType_

}

type XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_ struct {
	TechniqueCommon *TkinematicsModelTechniqueType `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TkinematicsModelType struct {
	XsdGoPkgHasElem_technique_commonsequencekinematics_model_typeschema_TechniqueCommon_TkinematicsModelTechniqueType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

}

type XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_ struct {
	KinematicsModels []*TkinematicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema kinematics_model"`

}

type TlibraryKinematicsModelsType struct {
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_kinematics_modelsequencelibrary_kinematics_models_typeschema_KinematicsModel_TkinematicsModelType_

}

type XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_ struct {
	LibraryKinematicsModelses []*TlibraryKinematicsModelsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_kinematics_models"`

}

//	The COLLADA element may contain any
//	number of library_force_fields elements.
//	The library_force_fields element declares a module of force_field elements.
//	There must be at least one force_field element.
//	A general container for force-fields. At the moment, it only has techniques and extra elements.
type TforceFieldType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The force_field element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element. This value
//	must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	This element must contain at least one non-common profile technique.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_ struct {
//	There must be at least one force_field element.
	ForceFields []*TforceFieldType `xml:"http://www.collada.org/2008/03/COLLADASchema force_field"`

}

type TlibraryForceFieldsType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The library_force_fields element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	There must be at least one force_field element.
	XsdGoPkgHasElems_force_fieldsequencelibrary_force_fields_typeschema_ForceField_TforceFieldType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_ struct {
//	The COLLADA element may contain any
//	number of library_force_fields elements.
	LibraryForceFieldses []*TlibraryForceFieldsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_force_fields"`

}

type TlibraryJointsType struct {
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_jointchoicesequencekinematics_model_technique_typeschema_Joint_TjointType_

	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_ struct {
	LibraryJointses []*TlibraryJointsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_joints"`

}

type TlibraryFormulasType struct {
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_formulachoicesequencekinematics_axis_info_typeschema_Formula_TformulaType_

	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_ struct {
	LibraryFormulases []*TlibraryFormulasType `xml:"http://www.collada.org/2008/03/COLLADASchema library_formulas"`

}

//	The COLLADA element may contain any
//	number of library_physics_scenes
//	elements.
//	The library_physics_scenes element declares a module of physics_scene elements.
//	There must be at least one physics_scene element.
//	The technique_common element specifies the physics_scene information for the common profile
//	which all COLLADA implementations need to support.
//	The gravity vector to use for the physics_scene.
type XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_ struct {
//	The gravity vector to use for the physics_scene.
	Gravity *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema gravity"`

}

//	The time_step for the physics_scene.
type XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_ struct {
//	The time_step for the physics_scene.
	TimeStep *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema time_step"`

}

type TxsdPhysicsSceneTypeSequenceTechniqueCommon struct {
//	The gravity vector to use for the physics_scene.
	XsdGoPkgHasElem_gravitysequencetechnique_commonsequencephysics_scene_typeschema_Gravity_TtargetableFloat3Type_

//	The time_step for the physics_scene.
	XsdGoPkgHasElem_time_stepsequencetechnique_commonsequencephysics_scene_typeschema_TimeStep_TtargetableFloatType_

}

type XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the physics_scene information for the common profile
//	which all COLLADA implementations need to support.
	TechniqueCommon *TxsdPhysicsSceneTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	There may be any number of instance_force_field elements.
//	The instance_force_field element declares the instantiation of a COLLADA force_field resource.
type TinstanceForceFieldType struct {
	TinstanceWithExtraType

}

type XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_ struct {
//	There may be any number of instance_force_field elements.
	InstanceForceFields []*TinstanceForceFieldType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_force_field"`

}

//	There may be any number of instance_physics_model elements.
//	This element allows instancing physics model within another physics model, or in a physics scene.
//	The parent attribute points to the id of a node in the visual scene. This allows a physics model
//	to be instantiated under a specific transform node, which will dictate the initial position and
//	orientation, and could be animated to influence kinematic rigid bodies.
type XsdGoPkgHasAttr_Parent_XsdtAnyURI_ struct {
//	The parent attribute points to the id of a node in the visual scene. This allows a physics model
//	to be instantiated under a specific transform node, which will dictate the initial position and
//	orientation, and could be animated to influence kinematic rigid bodies.
	Parent xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema parent,attr"`

}

//	The instance_physics_model element may instance any number of rigid_constraint elements.
//	This element allows instancing a rigid_constraint within an instance_physics_model.
//	The constraint attribute indicates which rigid_constraing to instantiate. Required attribute.
type XsdGoPkgHasAttr_Constraint_XsdtNCName_ struct {
//	The constraint attribute indicates which rigid_constraing to instantiate. Required attribute.
	Constraint xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema constraint,attr"`

}

type TinstanceRigidConstraintType struct {
//	The constraint attribute indicates which rigid_constraing to instantiate. Required attribute.
	XsdGoPkgHasAttr_Constraint_XsdtNCName_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_ struct {
//	The instance_physics_model element may instance any number of rigid_constraint elements.
	InstanceRigidConstraints []*TinstanceRigidConstraintType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_rigid_constraint"`

}

//	The instance_physics_model element may instance any number of rigid_body elements.
//	This element allows instancing a rigid_body within an instance_physics_model.
//	The body attribute indicates which rigid_body to instantiate. Required attribute.
type XsdGoPkgHasAttr_Body_XsdtNCName_ struct {
//	The body attribute indicates which rigid_body to instantiate. Required attribute.
	Body xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema body,attr"`

}

//	The technique_common element specifies the instance_rigid_body information for the common
//	profile which all COLLADA implementations need to support.
//	The instance_physics_material element declares the instantiation of a COLLADA physics_material
//	resource.
type TinstancePhysicsMaterialType struct {
	TinstanceWithExtraType

}

type XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_ struct {
	InstancePhysicsMaterial *TinstancePhysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_material"`

}

//	Specifies the initial angular velocity of the rigid_body instance in degrees per second
//	around each axis, in the form of an X-Y-Z Euler rotation.
type XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000 struct {
//	Specifies the initial angular velocity of the rigid_body instance in degrees per second
//	around each axis, in the form of an X-Y-Z Euler rotation.
	AngularVelocity Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema angular_velocity"`

}

//	Returns the default value for AngularVelocity -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000) AngularVelocityDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

//	This element defines the physical properties of an object. It contains a technique/profile with
//	parameters. The COMMON profile defines the built-in names, such as static_friction.
//	The technique_common element specifies the physics_material information for the common profile
//	which all COLLADA implementations need to support.
//	Static friction coefficient
type XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_ struct {
//	Static friction coefficient
	StaticFriction *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema static_friction"`

}

//	Dynamic friction coefficient
type XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_ struct {
//	Dynamic friction coefficient
	DynamicFriction *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema dynamic_friction"`

}

//	The proportion of the kinetic energy preserved in the impact (typically ranges from 0.0 to 1.0)
type XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_ struct {
//	The proportion of the kinetic energy preserved in the impact (typically ranges from 0.0 to 1.0)
	Restitution *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema restitution"`

}

type TxsdPhysicsMaterialTypeSequenceTechniqueCommon struct {
//	The proportion of the kinetic energy preserved in the impact (typically ranges from 0.0 to 1.0)
	XsdGoPkgHasElem_restitutionsequencetechnique_commonsequencephysics_material_typeschema_Restitution_TtargetableFloatType_

//	Static friction coefficient
	XsdGoPkgHasElem_static_frictionsequencetechnique_commonsequencephysics_material_typeschema_StaticFriction_TtargetableFloatType_

//	Dynamic friction coefficient
	XsdGoPkgHasElem_dynamic_frictionsequencetechnique_commonsequencephysics_material_typeschema_DynamicFriction_TtargetableFloatType_

}

type XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the physics_material information for the common profile
//	which all COLLADA implementations need to support.
	TechniqueCommon *TxsdPhysicsMaterialTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TphysicsMaterialType struct {
//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The physics_material element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The technique_common element specifies the physics_material information for the common profile
//	which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencephysics_material_typeschema_TechniqueCommon_TxsdPhysicsMaterialTypeSequenceTechniqueCommon_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_ struct {
	PhysicsMaterial *TphysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_material"`

}

type XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_ struct {
	Inertia *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema inertia"`

}

type XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_ struct {
	Mass *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema mass"`

}

//	An axis-aligned, centered box primitive.
//	3 float values that represent the extents of the box
type XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_ struct {
//	3 float values that represent the extents of the box
	HalfExtents Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half_extents"`

}

type TboxType struct {
//	3 float values that represent the extents of the box
	XsdGoPkgHasElem_half_extentssequencebox_typeschema_HalfExtents_Tfloat3Type_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_ struct {
	Box *TboxType `xml:"http://www.collada.org/2008/03/COLLADASchema box"`

}

type XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_ struct {
	Density *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema density"`

}

type XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_ struct {
	InstanceGeometry *TinstanceGeometryType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_geometry"`

}

//	A cylinder primitive that is centered on, and aligned with. the local Y axis.
//	A float value that represents the length of the cylinder along the Y axis.
type XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_ struct {
//	A float value that represents the length of the cylinder along the Y axis.
	Height TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema height"`

}

type TcylinderType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	float2 values that represent the radii of the cylinder.
	XsdGoPkgHasElem_radiussequencehyperbola_typeschema_Radius_Tfloat2Type_

//	A float value that represents the length of the cylinder along the Y axis.
	XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_

}

type XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_ struct {
	Cylinder *TcylinderType `xml:"http://www.collada.org/2008/03/COLLADASchema cylinder"`

}

//	A capsule primitive that is centered on and aligned with the local Y axis.
//	Three float values that represent the radii of the capsule (it may be elliptical).
type XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_ struct {
//	Three float values that represent the radii of the capsule (it may be elliptical).
	Radius Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema radius"`

}

type TcapsuleType struct {
//	Three float values that represent the radii of the capsule (it may be elliptical).
	XsdGoPkgHasElem_radiussequencecapsule_typeschema_Radius_Tfloat3Type_

//	A float value that represents the length of the line segment connecting the centers
//	of the capping hemispheres.
	XsdGoPkgHasElem_heightsequencecylinder_typeschema_Height_TfloatType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_ struct {
	Capsule *TcapsuleType `xml:"http://www.collada.org/2008/03/COLLADASchema capsule"`

}

type TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow struct {
	XsdGoPkgValue xsdt.Boolean `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element. This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ struct {
	Hollow *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow `xml:"http://www.collada.org/2008/03/COLLADASchema hollow"`

}

type TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape struct {
	XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Hollow_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_

	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_

	XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_

	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_

	XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_

	XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_

	XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_

	XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_

	XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_

	XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_

	XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_

}

type XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_ struct {
	Shapes []*TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape `xml:"http://www.collada.org/2008/03/COLLADASchema shape"`

}

type XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True struct {
	Dynamic *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow `xml:"http://www.collada.org/2008/03/COLLADASchema dynamic"`

}

//	Returns the default value for Dynamic -- true
func (me XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True) DynamicDefault () xsdt.Boolean { return xsdt.Boolean(true) }

//	Specifies the initial linear velocity of the rigid_body instance.
type XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000 struct {
//	Specifies the initial linear velocity of the rigid_body instance.
	Velocity Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema velocity"`

}

//	Returns the default value for Velocity -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000) VelocityDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

type TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame struct {
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

}

type XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ struct {
	MassFrame *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame `xml:"http://www.collada.org/2008/03/COLLADASchema mass_frame"`

}

type TxsdInstanceRigidBodyTypeSequenceTechniqueCommon struct {
	XsdGoPkgHasElems_shapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Shape_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShape_

	XsdGoPkgHasElem_dynamicsequencetechnique_commonsequenceinstance_rigid_body_typeschema_Dynamic_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_True

//	Specifies the initial linear velocity of the rigid_body instance.
	XsdGoPkgHasElem_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_Velocity_Tfloat3Type_000000

	XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_

	XsdGoPkgHasElem_mass_framesequencetechnique_commonsequenceinstance_rigid_body_typeschema_MassFrame_TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_

	XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_

//	Specifies the initial angular velocity of the rigid_body instance in degrees per second
//	around each axis, in the form of an X-Y-Z Euler rotation.
	XsdGoPkgHasElem_angular_velocitysequencetechnique_commonsequenceinstance_rigid_body_typeschema_AngularVelocity_Tfloat3Type_000000

	XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_

	XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_

}

type XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the instance_rigid_body information for the common
//	profile which all COLLADA implementations need to support.
	TechniqueCommon *TxsdInstanceRigidBodyTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TinstanceRigidBodyType struct {
//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The body attribute indicates which rigid_body to instantiate. Required attribute.
	XsdGoPkgHasAttr_Body_XsdtNCName_

//	The target attribute indicates which node is influenced by this rigid_body instance.
//	Required attribute
	XsdGoPkgHasAttr_Target_XsdtAnyURI_

//	The technique_common element specifies the instance_rigid_body information for the common
//	profile which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequenceinstance_rigid_body_typeschema_TechniqueCommon_TxsdInstanceRigidBodyTypeSequenceTechniqueCommon_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_ struct {
//	The instance_physics_model element may instance any number of rigid_body elements.
	InstanceRigidBodies []*TinstanceRigidBodyType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_rigid_body"`

}

type TinstancePhysicsModelType struct {
//	The instance_physics_model element may instance any number of rigid_body elements.
	XsdGoPkgHasElems_instance_rigid_bodysequenceinstance_physics_model_typeschema_InstanceRigidBody_TinstanceRigidBodyType_

//	The url attribute refers to resource.  This may refer to a local resource using a relative URL
//	fragment identifier that begins with the "#" character. The url attribute may refer to an external
//	resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The parent attribute points to the id of a node in the visual scene. This allows a physics model
//	to be instantiated under a specific transform node, which will dictate the initial position and
//	orientation, and could be animated to influence kinematic rigid bodies.
	XsdGoPkgHasAttr_Parent_XsdtAnyURI_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The instance_physics_model element may instance any number of rigid_constraint elements.
	XsdGoPkgHasElems_instance_rigid_constraintsequenceinstance_physics_model_typeschema_InstanceRigidConstraint_TinstanceRigidConstraintType_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The instance_physics_model element may instance any number of force_field elements.
	XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_

}

type XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_ struct {
//	There may be any number of instance_physics_model elements.
	InstancePhysicsModels []*TinstancePhysicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_physics_model"`

}

type TphysicsSceneType struct {
//	The technique_common element specifies the physics_scene information for the common profile
//	which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencephysics_scene_typeschema_TechniqueCommon_TxsdPhysicsSceneTypeSequenceTechniqueCommon_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	There may be any number of instance_force_field elements.
	XsdGoPkgHasElems_instance_force_fieldsequencephysics_scene_typeschema_InstanceForceField_TinstanceForceFieldType_

//	There may be any number of instance_physics_model elements.
	XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The physics_scene element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

}

type XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_ struct {
//	There must be at least one physics_scene element.
	PhysicsScenes []*TphysicsSceneType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_scene"`

}

type TlibraryPhysicsScenesType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The library_physics_scenes element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	There must be at least one physics_scene element.
	XsdGoPkgHasElems_physics_scenesequencelibrary_physics_scenes_typeschema_PhysicsScene_TphysicsSceneType_

}

type XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_ struct {
//	The COLLADA element may contain any
//	number of library_physics_scenes
//	elements.
	LibraryPhysicsSceneses []*TlibraryPhysicsScenesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_physics_scenes"`

}

//	The COLLADA element may contain any
//	number of library_physics_models
//	elements.
//	The library_physics_models element declares a module of physics_model elements.
//	There must be at least one physics_model element.
//	This element allows for building complex combinations of rigid-bodies and constraints that
//	may be instantiated multiple times.
//	The physics_model may define any number of rigid_body elements.
//	This element allows for describing simulated bodies that do not deform. These bodies may or may
//	not be connected by constraints (hinge, ball-joint etc.).  Rigid-bodies, constraints etc. are
//	encapsulated in physics_model elements to allow for instantiating complex models.
//	The technique_common element specifies the rigid_body information for the common profile which all
//	COLLADA implementations need to support.
//	Defines the center and orientation of mass of the rigid-body relative to the local origin of the
//	"root" shape.This makes the off-diagonal elements of the inertia tensor (products of inertia) all
//	0 and allows us to just store the diagonal elements (moments of inertia).
type TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame struct {
	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

}

type XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_ struct {
//	Defines the center and orientation of mass of the rigid-body relative to the local origin of the
//	"root" shape.This makes the off-diagonal elements of the inertia tensor (products of inertia) all
//	0 and allows us to just store the diagonal elements (moments of inertia).
	MassFrame *TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame `xml:"http://www.collada.org/2008/03/COLLADASchema mass_frame"`

}

//	If false, the rigid_body is not moveable
type XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_ struct {
//	If false, the rigid_body is not moveable
	Dynamic *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow `xml:"http://www.collada.org/2008/03/COLLADASchema dynamic"`

}

//	This element allows for describing components of a rigid_body.
//	If true, the mass is distributed along the surface of the shape
type XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_ struct {
//	If true, the mass is distributed along the surface of the shape
	Hollow *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow `xml:"http://www.collada.org/2008/03/COLLADASchema hollow"`

}

type TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape struct {
//	The mass of the shape.
	XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_

//	If true, the mass is distributed along the surface of the shape
	XsdGoPkgHasElem_hollowsequenceshapesequencetechnique_commonsequencerigid_body_typeschema_Hollow_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow_

//	Defines a capsule to use for this shape.
	XsdGoPkgHasElem_capsulechoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Capsule_TcapsuleType_

//	Allows a tranformation for the shape.
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

//	The density of the shape.
	XsdGoPkgHasElem_densitysequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Density_TtargetableFloatType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Defines a box to use for this shape.
	XsdGoPkgHasElem_boxchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Box_TboxType_

//	Allows a tranformation for the shape.
	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

//	Defines a sphere to use for this shape.
	XsdGoPkgHasElem_spherechoicesequencesurface_typeschema_Sphere_TsphereType_

//	Instances a geometry to use to define this shape.
	XsdGoPkgHasElem_instance_geometrychoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstanceGeometry_TinstanceGeometryType_

//	Defines a cyliner to use for this shape.
	XsdGoPkgHasElem_cylinderchoicesequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Cylinder_TcylinderType_

//	Defines a physics_material for the shape.
	XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_

//	Defines a plane to use for this shape.
	XsdGoPkgHasElem_planechoicesequencesurface_typeschema_Plane_TplaneType_

//	References a physics_material for the shape.
	XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_

}

type XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_ struct {
//	This element allows for describing components of a rigid_body.
	Shapes []*TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape `xml:"http://www.collada.org/2008/03/COLLADASchema shape"`

}

type TxsdRigidBodyTypeSequenceTechniqueCommon struct {
//	Defines a physics_material for the rigid_body.
	XsdGoPkgHasElem_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_PhysicsMaterial_TphysicsMaterialType_

//	This element allows for describing components of a rigid_body.
	XsdGoPkgHasElems_shapesequencetechnique_commonsequencerigid_body_typeschema_Shape_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceShape_

//	References a physics_material for the rigid_body.
	XsdGoPkgHasElem_instance_physics_materialchoicesequencetechnique_commonsequenceinstance_rigid_body_typeschema_InstancePhysicsMaterial_TinstancePhysicsMaterialType_

//	Defines the center and orientation of mass of the rigid-body relative to the local origin of the
//	"root" shape.This makes the off-diagonal elements of the inertia tensor (products of inertia) all
//	0 and allows us to just store the diagonal elements (moments of inertia).
	XsdGoPkgHasElem_mass_framesequencetechnique_commonsequencerigid_body_typeschema_MassFrame_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceMassFrame_

//	If false, the rigid_body is not moveable
	XsdGoPkgHasElem_dynamicsequencetechnique_commonsequencerigid_body_typeschema_Dynamic_TxsdRigidBodyTypeSequenceTechniqueCommonSequenceDynamic_

//	float3 - The diagonal elements of the inertia tensor (moments of inertia), which is represented
//	in the local frame of the center of mass. See above.
	XsdGoPkgHasElem_inertiasequencetechnique_commonsequenceinstance_rigid_body_typeschema_Inertia_TtargetableFloat3Type_

//	The total mass of the rigid-body
	XsdGoPkgHasElem_masssequenceshapesequencetechnique_commonsequenceinstance_rigid_body_typeschema_Mass_TtargetableFloatType_

}

type XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the rigid_body information for the common profile which all
//	COLLADA implementations need to support.
	TechniqueCommon *TxsdRigidBodyTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

type TrigidBodyType struct {
//	The technique_common element specifies the rigid_body information for the common profile which all
//	COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencerigid_body_typeschema_TechniqueCommon_TxsdRigidBodyTypeSequenceTechniqueCommon_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Id_XsdtId_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	The sid attribute is a text string value containing the sub-identifier of this element. This
//	value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_ struct {
//	The physics_model may define any number of rigid_body elements.
	RigidBodies []*TrigidBodyType `xml:"http://www.collada.org/2008/03/COLLADASchema rigid_body"`

}

//	The physics_model may define any number of rigid_constraint elements.
//	This element allows for connecting components, such as rigid_body into complex physics models
//	with moveable parts.
//	Defines the attachment (to a rigid_body or a node) to be used as the reference-frame.
//	The "rigid_body" attribute is a relative reference to a rigid-body within the same
//	physics_model.
type XsdGoPkgHasAttr_RigidBody_XsdtAnyURI_ struct {
//	The "rigid_body" attribute is a relative reference to a rigid-body within the same
//	physics_model.
	RigidBody xsdt.AnyURI `xml:"http://www.collada.org/2008/03/COLLADASchema rigid_body,attr"`

}

type TxsdRigidConstraintTypeSequenceRefAttachment struct {
//	Allows you to "position" the attachment point.
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

//	Allows you to "position" the attachment point.
	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

//	The "rigid_body" attribute is a relative reference to a rigid-body within the same
//	physics_model.
	XsdGoPkgHasAttr_RigidBody_XsdtAnyURI_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_ struct {
//	Defines the attachment (to a rigid_body or a node) to be used as the reference-frame.
	RefAttachment *TxsdRigidConstraintTypeSequenceRefAttachment `xml:"http://www.collada.org/2008/03/COLLADASchema ref_attachment"`

}

//	The technique_common element specifies the rigid_constraint information for the common profile
//	which all COLLADA implementations need to support.
//	Spring, based on distance ("LINEAR") or angle ("ANGULAR").
//	The linear spring properties.
//	The spring's target or resting distance.
type XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00 struct {
//	The spring's target or resting distance.
	TargetValue *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema target_value"`

}

//	Returns the default value for TargetValue -- 0.0
func (me XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00) TargetValueDefault () TfloatType { return TfloatType(0.0) }

//	The stiffness (also called spring coefficient) has units of force/distance.
type XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10 struct {
//	The stiffness (also called spring coefficient) has units of force/distance.
	Stiffness *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema stiffness"`

}

//	Returns the default value for Stiffness -- 1.0
func (me XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10) StiffnessDefault () TfloatType { return TfloatType(1.0) }

//	The spring damping coefficient.
type XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00 struct {
//	The spring damping coefficient.
	Damping *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema damping"`

}

//	Returns the default value for Damping -- 0.0
func (me XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00) DampingDefault () TfloatType { return TfloatType(0.0) }

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear struct {
//	The spring's target or resting distance.
	XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00

//	The stiffness (also called spring coefficient) has units of force/distance.
	XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10

//	The spring damping coefficient.
	XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00

}

type XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_ struct {
//	The linear spring properties.
	Linear *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear `xml:"http://www.collada.org/2008/03/COLLADASchema linear"`

}

//	The angular spring properties.
type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular struct {
//	The spring's target or resting distance.
	XsdGoPkgHasElem_target_valuesequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_TargetValue_TtargetableFloatType_00

//	The stiffness (also called spring coefficient) has units of force/angle in degrees.
	XsdGoPkgHasElem_stiffnesssequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Stiffness_TtargetableFloatType_10

//	The spring damping coefficient.
	XsdGoPkgHasElem_dampingsequencelinearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Damping_TtargetableFloatType_00

}

type XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_ struct {
//	The angular spring properties.
	Angular *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular `xml:"http://www.collada.org/2008/03/COLLADASchema angular"`

}

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring struct {
//	The linear spring properties.
	XsdGoPkgHasElem_linearsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceLinear_

//	The angular spring properties.
	XsdGoPkgHasElem_angularsequencespringsequencetechnique_commonsequencerigid_constraint_typeschema_Angular_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpringSequenceAngular_

}

type XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_ struct {
//	Spring, based on distance ("LINEAR") or angle ("ANGULAR").
	Spring *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring `xml:"http://www.collada.org/2008/03/COLLADASchema spring"`

}

//	Indicates whether the attached rigid bodies may inter-penetrate.
type XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False struct {
//	Indicates whether the attached rigid bodies may inter-penetrate.
	Interpenetrate *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow `xml:"http://www.collada.org/2008/03/COLLADASchema interpenetrate"`

}

//	Returns the default value for Interpenetrate -- false
func (me XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False) InterpenetrateDefault () xsdt.Boolean { return xsdt.Boolean(false) }

//	The limits element provides a flexible way to specify the constraint limits (degrees of freedom
//	and ranges).
//	The swing_cone_and_twist element describes the angular limits along each rotation axis in degrees.
//	The the X and Y limits describe a "swing cone" and the Z limits describe the "twist angle" range
//	The minimum values for the limit.
type XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000 struct {
//	The minimum values for the limit.
	Min *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema min"`

}

//	Returns the default value for Min -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000) MinDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

//	The maximum values for the limit.
type XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000 struct {
//	The maximum values for the limit.
	Max *TtargetableFloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema max"`

}

//	Returns the default value for Max -- "0.0 0.0 0.0"
func (me XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000) MaxDefault () Tfloat3Type { return Tfloat3Type("0.0 0.0 0.0") }

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist struct {
//	The maximum values for the limit.
	XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000

//	The minimum values for the limit.
	XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000

}

type XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_ struct {
//	The swing_cone_and_twist element describes the angular limits along each rotation axis in degrees.
//	The the X and Y limits describe a "swing cone" and the Z limits describe the "twist angle" range
	SwingConeAndTwist *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist `xml:"http://www.collada.org/2008/03/COLLADASchema swing_cone_and_twist"`

}

//	The linear element describes linear (translational) limits along each axis.
type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear struct {
//	The maximum values for the limit.
	XsdGoPkgHasElem_maxsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Max_TtargetableFloat3Type_000000

//	The minimum values for the limit.
	XsdGoPkgHasElem_minsequenceswing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Min_TtargetableFloat3Type_000000

}

type XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_ struct {
//	The linear element describes linear (translational) limits along each axis.
	Linear *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear `xml:"http://www.collada.org/2008/03/COLLADASchema linear"`

}

type TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits struct {
//	The swing_cone_and_twist element describes the angular limits along each rotation axis in degrees.
//	The the X and Y limits describe a "swing cone" and the Z limits describe the "twist angle" range
	XsdGoPkgHasElem_swing_cone_and_twistsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_SwingConeAndTwist_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceSwingConeAndTwist_

//	The linear element describes linear (translational) limits along each axis.
	XsdGoPkgHasElem_linearsequencelimitssequencetechnique_commonsequencerigid_constraint_typeschema_Linear_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimitsSequenceLinear_

}

type XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_ struct {
//	The limits element provides a flexible way to specify the constraint limits (degrees of freedom
//	and ranges).
	Limits *TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits `xml:"http://www.collada.org/2008/03/COLLADASchema limits"`

}

//	If false, the constraint doesn't exert any force or influence on the rigid bodies.
type XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True struct {
//	If false, the constraint doesn't exert any force or influence on the rigid bodies.
	Enabled *TxsdInstanceRigidBodyTypeSequenceTechniqueCommonSequenceShapeSequenceHollow `xml:"http://www.collada.org/2008/03/COLLADASchema enabled"`

}

//	Returns the default value for Enabled -- true
func (me XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True) EnabledDefault () xsdt.Boolean { return xsdt.Boolean(true) }

type TxsdRigidConstraintTypeSequenceTechniqueCommon struct {
//	Spring, based on distance ("LINEAR") or angle ("ANGULAR").
	XsdGoPkgHasElem_springsequencetechnique_commonsequencerigid_constraint_typeschema_Spring_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceSpring_

//	Indicates whether the attached rigid bodies may inter-penetrate.
	XsdGoPkgHasElem_interpenetratesequencetechnique_commonsequencerigid_constraint_typeschema_Interpenetrate_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceInterpenetrate_False

//	The limits element provides a flexible way to specify the constraint limits (degrees of freedom
//	and ranges).
	XsdGoPkgHasElem_limitssequencetechnique_commonsequencerigid_constraint_typeschema_Limits_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceLimits_

//	If false, the constraint doesn't exert any force or influence on the rigid bodies.
	XsdGoPkgHasElem_enabledsequencetechnique_commonsequencerigid_constraint_typeschema_Enabled_TxsdRigidConstraintTypeSequenceTechniqueCommonSequenceEnabled_True

}

type XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_ struct {
//	The technique_common element specifies the rigid_constraint information for the common profile
//	which all COLLADA implementations need to support.
	TechniqueCommon *TxsdRigidConstraintTypeSequenceTechniqueCommon `xml:"http://www.collada.org/2008/03/COLLADASchema technique_common"`

}

//	Defines an attachment to a rigid-body or a node.
type TxsdRigidConstraintTypeSequenceAttachment struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Allows you to "position" the attachment point.
	XsdGoPkgHasElems_translatechoicesequencenode_typeschema_Translate_TtranslateType_

//	Allows you to "position" the attachment point.
	XsdGoPkgHasElems_rotatechoicesequencenode_typeschema_Rotate_TrotateType_

//	The "rigid_body" attribute is a relative reference to a rigid-body within the same physics_model.
	XsdGoPkgHasAttr_RigidBody_XsdtAnyURI_

}

type XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_ struct {
//	Defines an attachment to a rigid-body or a node.
	Attachment *TxsdRigidConstraintTypeSequenceAttachment `xml:"http://www.collada.org/2008/03/COLLADASchema attachment"`

}

type TrigidConstraintType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Defines an attachment to a rigid-body or a node.
	XsdGoPkgHasElem_attachmentsequencerigid_constraint_typeschema_Attachment_TxsdRigidConstraintTypeSequenceAttachment_

//	This element may contain any number of non-common profile techniques.
	XsdGoPkgHasElems_techniquesequenceextra_typeschema_Technique_TtechniqueType_

//	Defines the attachment (to a rigid_body or a node) to be used as the reference-frame.
	XsdGoPkgHasElem_ref_attachmentsequencerigid_constraint_typeschema_RefAttachment_TxsdRigidConstraintTypeSequenceRefAttachment_

//	The technique_common element specifies the rigid_constraint information for the common profile
//	which all COLLADA implementations need to support.
	XsdGoPkgHasElem_technique_commonsequencerigid_constraint_typeschema_TechniqueCommon_TxsdRigidConstraintTypeSequenceTechniqueCommon_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_ struct {
//	The physics_model may define any number of rigid_constraint elements.
	RigidConstraints []*TrigidConstraintType `xml:"http://www.collada.org/2008/03/COLLADASchema rigid_constraint"`

}

type TphysicsModelType struct {
//	The physics_model may define any number of rigid_body elements.
	XsdGoPkgHasElems_rigid_bodysequencephysics_model_typeschema_RigidBody_TrigidBodyType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The physics_model element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The physics_model may instance any number of other physics_model elements.
	XsdGoPkgHasElems_instance_physics_modelsequencephysics_scene_typeschema_InstancePhysicsModel_TinstancePhysicsModelType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The physics_model may define any number of rigid_constraint elements.
	XsdGoPkgHasElems_rigid_constraintsequencephysics_model_typeschema_RigidConstraint_TrigidConstraintType_

}

type XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_ struct {
//	There must be at least one physics_model element.
	PhysicsModels []*TphysicsModelType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_model"`

}

type TlibraryPhysicsModelsType struct {
//	There must be at least one physics_model element.
	XsdGoPkgHasElems_physics_modelsequencelibrary_physics_models_typeschema_PhysicsModel_TphysicsModelType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The library_physics_models element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_ struct {
//	The COLLADA element may contain any
//	number of library_physics_models
//	elements.
	LibraryPhysicsModelses []*TlibraryPhysicsModelsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_physics_models"`

}

//	The COLLADA element may contain any
//	number of library_effects elements.
//	The library_effects element declares a module of effect elements.
//	There must be at least one effect element.
//	A self contained description of a shader effect.
//	The annotate element allows you to specify an annotation on this effect.
//	A group that specifies the allowable types for an annotation.
type XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_ struct {
	String xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema string"`

}

type XsdGoPkgHasGroup_FxAnnotateGroup struct {
	XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_

	XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_

}

type TfxAnnotateType struct {
	XsdGoPkgHasAttr_Name_XsdtToken_

	XsdGoPkgHasGroup_FxAnnotateGroup

}

type XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_ struct {
//	The annotate element allows you to specify an annotation on this effect.
	Annotates []*TfxAnnotateType `xml:"http://www.collada.org/2008/03/COLLADASchema annotate"`

}

//	The newparam element allows you to create new effect parameters which can be shared by multipe profiles.
//	This element creates a new, named param object in the FX Runtime, assigns it a type, an initial value, and additional attributes at declaration time.
//	The modifier element allows you to specify a modifier for this new param.
type TfxModifierEnum xsdt.Nmtoken

//	Returns true if the value of this enumerated TfxModifierEnum is "STATIC".
func (me TfxModifierEnum) IsStatic () bool { return me == "STATIC" }

//	Returns true if the value of this enumerated TfxModifierEnum is "VOLATILE".
func (me TfxModifierEnum) IsVolatile () bool { return me == "VOLATILE" }

//	Returns true if the value of this enumerated TfxModifierEnum is "VARYING".
func (me TfxModifierEnum) IsVarying () bool { return me == "VARYING" }

//	Returns true if the value of this enumerated TfxModifierEnum is "UNIFORM".
func (me TfxModifierEnum) IsUniform () bool { return me == "UNIFORM" }

//	Returns true if the value of this enumerated TfxModifierEnum is "SHARED".
func (me TfxModifierEnum) IsShared () bool { return me == "SHARED" }

//	Since TfxModifierEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxModifierEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxModifierEnum is "EXTERN".
func (me TfxModifierEnum) IsExtern () bool { return me == "EXTERN" }

//	Since TfxModifierEnum is just a simple String type, this merely returns the current string value.
func (me TfxModifierEnum) String () string { return xsdt.Nmtoken(me).String() }

//	Returns true if the value of this enumerated TfxModifierEnum is "CONST".
func (me TfxModifierEnum) IsConst () bool { return me == "CONST" }

//	This convenience method just performs a simple type conversion to TfxModifierEnum's alias type xsdt.Nmtoken.
func (me TfxModifierEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

type XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_ struct {
//	The modifier element allows you to specify a modifier for this new param.
	Modifier TfxModifierEnum `xml:"http://www.collada.org/2008/03/COLLADASchema modifier"`

}

//	A group that specifies the allowable types for effect scoped parameters.
//	A texture sampler for cube maps.
//	Sampling state that can be sharable between samplers because there is often heavy re-use
type XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_ struct {
	InstanceImage *TinstanceImageType `xml:"http://www.collada.org/2008/03/COLLADASchema instance_image"`

}

type TfxSamplerType struct {
	XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_

	XsdGoPkgHasGroup_FxSamplerStatesGroup

}

type TfxSamplerCUBEType struct {
	TfxSamplerType

}

type XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_ struct {
	SamplerCUBE *TfxSamplerCUBEType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerCUBE"`

}

//	A three-dimensional texture sampler.
type TfxSampler3DType struct {
	TfxSamplerType

}

type XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_ struct {
	Sampler3D *TfxSampler3DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler3D"`

}

//	A texture sampler for depth maps.
type TfxSamplerDEPTHType struct {
	TfxSamplerType

}

type XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_ struct {
	SamplerDEPTH *TfxSamplerDEPTHType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerDEPTH"`

}

//	A two-dimensional texture sampler.
type TfxSamplerRECTType struct {
	TfxSamplerType

}

type XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_ struct {
	SamplerRECT *TfxSamplerRECTType `xml:"http://www.collada.org/2008/03/COLLADASchema samplerRECT"`

}

//	A two-dimensional texture sampler.
type TfxSampler2DType struct {
	TfxSamplerType

}

type XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_ struct {
	Sampler2D *TfxSampler2DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler2D"`

}

//	A one-dimensional texture sampler.
type TfxSampler1DType struct {
	TfxSamplerType

}

type XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_ struct {
	Sampler1D *TfxSampler1DType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler1D"`

}

type XsdGoPkgHasGroup_FxNewparamGroup struct {
	XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_

	XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_

	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_

	XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_

	XsdGoPkgHasElem_enumchoicefx_setparam_groupschema_Enum_XsdtString_

	XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_

	XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

}

//	The semantic element allows you to specify a semantic for this new param.
type XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_ struct {
//	The semantic element allows you to specify a semantic for this new param.
	Semantic xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

type TfxNewparamType struct {
//	The semantic element allows you to specify a semantic for this new param.
	XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_

//	The annotate element allows you to specify an annotation for this new param.
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The modifier element allows you to specify a modifier for this new param.
	XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_

	XsdGoPkgHasGroup_FxNewparamGroup

}

type XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_ struct {
//	The newparam element allows you to create new effect parameters which can be shared by multipe profiles.
	Newparams []*TfxNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	A group that  specifies the allowable COLLADA FX profiles.
//	Opens a block of GLES platform-specific data types and technique declarations.
//	Create a new, named param object in the GLES Runtime, assign it a type, an initial value, and additional attributes at declaration time.
//	A group that defines the available variable types for GLES parameters.
type XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_ struct {
	Float1X4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema float1x4"`

}

type XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_ struct {
	Float1X2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema float1x2"`

}

//	Sampling state that can be sharable between samplers because there is often heavy re-use
type TxsdGlesSamplerTypeSequenceTexcoord struct {
	XsdGoPkgHasAttr_Semantic_XsdtNCName_

}

type XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_ struct {
	Texcoord *TxsdGlesSamplerTypeSequenceTexcoord `xml:"http://www.collada.org/2008/03/COLLADASchema texcoord"`

}

type XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255 struct {
	MipMaxLevel xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema mip_max_level"`

}

//	Returns the default value for MipMaxLevel -- 255
func (me XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255) MipMaxLevelDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(255) }

type TglesSamplerWrapEnum xsdt.Nmtoken

//	This convenience method just performs a simple type conversion to TglesSamplerWrapEnum's alias type xsdt.Nmtoken.
func (me TglesSamplerWrapEnum) ToXsdtNmtoken () xsdt.Nmtoken { return xsdt.Nmtoken(me) }

//	Returns true if the value of this enumerated TglesSamplerWrapEnum is "REPEAT".
func (me TglesSamplerWrapEnum) IsRepeat () bool { return me == "REPEAT" }

//	Since TglesSamplerWrapEnum is just a simple String type, this merely returns the current string value.
func (me TglesSamplerWrapEnum) String () string { return xsdt.Nmtoken(me).String() }

//	Returns true if the value of this enumerated TglesSamplerWrapEnum is "CLAMP_TO_EDGE".
func (me TglesSamplerWrapEnum) IsClampToEdge () bool { return me == "CLAMP_TO_EDGE" }

//	Since TglesSamplerWrapEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesSamplerWrapEnum) SetFromString (s string)  { (*xsdt.Nmtoken)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesSamplerWrapEnum is "MIRRORED_REPEAT".
func (me TglesSamplerWrapEnum) IsMirroredRepeat () bool { return me == "MIRRORED_REPEAT" }

//	Returns true if the value of this enumerated TglesSamplerWrapEnum is "CLAMP".
func (me TglesSamplerWrapEnum) IsClamp () bool { return me == "CLAMP" }

type XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat struct {
	WrapS TglesSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_s"`

}

//	Returns the default value for WrapS -- "REPEAT"
func (me XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat) WrapSDefault () TglesSamplerWrapEnum { return TglesSamplerWrapEnum("REPEAT") }

type XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest struct {
	Mipfilter TfxSamplerMipFilterEnum `xml:"http://www.collada.org/2008/03/COLLADASchema mipfilter"`

}

//	Returns the default value for Mipfilter -- "NEAREST"
func (me XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest) MipfilterDefault () TfxSamplerMipFilterEnum { return TfxSamplerMipFilterEnum("NEAREST") }

type XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat struct {
	WrapT TglesSamplerWrapEnum `xml:"http://www.collada.org/2008/03/COLLADASchema wrap_t"`

}

//	Returns the default value for WrapT -- "REPEAT"
func (me XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat) WrapTDefault () TglesSamplerWrapEnum { return TglesSamplerWrapEnum("REPEAT") }

type XsdGoPkgHasGroup_GlesSamplerStatesGroup struct {
	XsdGoPkgHasElem_mip_max_levelsequencegles_sampler_states_groupschema_MipMaxLevel_XsdtUnsignedByte_255

	XsdGoPkgHasElem_wrap_ssequencegles_sampler_states_groupschema_WrapS_TglesSamplerWrapEnum_Repeat

	XsdGoPkgHasElem_mip_biassequencefx_sampler_states_groupschema_MipBias_XsdtFloat_00

	XsdGoPkgHasElem_mipfiltersequencegles_sampler_states_groupschema_Mipfilter_TfxSamplerMipFilterEnum_Nearest

//	The extra element may appear any number of times.
//	OpenGL ES extensions may be used here.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_minfiltersequencefx_sampler_states_groupschema_Minfilter_TfxSamplerMinFilterEnum_Linear

	XsdGoPkgHasElem_wrap_tsequencegles_sampler_states_groupschema_WrapT_TglesSamplerWrapEnum_Repeat

	XsdGoPkgHasElem_magfiltersequencefx_sampler_states_groupschema_Magfilter_TfxSamplerMagFilterEnum_Linear

}

type TglesSamplerType struct {
	XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_

	XsdGoPkgHasElem_texcoordsequencegles_sampler_typeschema_Texcoord_TxsdGlesSamplerTypeSequenceTexcoord_

	XsdGoPkgHasGroup_GlesSamplerStatesGroup

}

type XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_ struct {
	Sampler2D *TglesSamplerType `xml:"http://www.collada.org/2008/03/COLLADASchema sampler2D"`

}

type TglFaceEnum xsdt.String

//	Returns true if the value of this enumerated TglFaceEnum is "FRONT_AND_BACK".
func (me TglFaceEnum) IsFrontAndBack () bool { return me == "FRONT_AND_BACK" }

//	Since TglFaceEnum is just a simple String type, this merely returns the current string value.
func (me TglFaceEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TglFaceEnum's alias type xsdt.String.
func (me TglFaceEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglFaceEnum is "FRONT".
func (me TglFaceEnum) IsFront () bool { return me == "FRONT" }

//	Returns true if the value of this enumerated TglFaceEnum is "BACK".
func (me TglFaceEnum) IsBack () bool { return me == "BACK" }

//	Since TglFaceEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFaceEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type TglFuncEnum xsdt.String

//	Returns true if the value of this enumerated TglFuncEnum is "LESS".
func (me TglFuncEnum) IsLess () bool { return me == "LESS" }

//	Returns true if the value of this enumerated TglFuncEnum is "GEQUAL".
func (me TglFuncEnum) IsGequal () bool { return me == "GEQUAL" }

//	Since TglFuncEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFuncEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglFuncEnum's alias type xsdt.String.
func (me TglFuncEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglFuncEnum is "GREATER".
func (me TglFuncEnum) IsGreater () bool { return me == "GREATER" }

//	Returns true if the value of this enumerated TglFuncEnum is "NEVER".
func (me TglFuncEnum) IsNever () bool { return me == "NEVER" }

//	Returns true if the value of this enumerated TglFuncEnum is "EQUAL".
func (me TglFuncEnum) IsEqual () bool { return me == "EQUAL" }

//	Returns true if the value of this enumerated TglFuncEnum is "ALWAYS".
func (me TglFuncEnum) IsAlways () bool { return me == "ALWAYS" }

//	Returns true if the value of this enumerated TglFuncEnum is "LEQUAL".
func (me TglFuncEnum) IsLequal () bool { return me == "LEQUAL" }

//	Returns true if the value of this enumerated TglFuncEnum is "NOTEQUAL".
func (me TglFuncEnum) IsNotequal () bool { return me == "NOTEQUAL" }

//	Since TglFuncEnum is just a simple String type, this merely returns the current string value.
func (me TglFuncEnum) String () string { return xsdt.String(me).String() }

type TglShadeModelEnum xsdt.String

//	Returns true if the value of this enumerated TglShadeModelEnum is "FLAT".
func (me TglShadeModelEnum) IsFlat () bool { return me == "FLAT" }

//	This convenience method just performs a simple type conversion to TglShadeModelEnum's alias type xsdt.String.
func (me TglShadeModelEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TglShadeModelEnum is just a simple String type, this merely returns the current string value.
func (me TglShadeModelEnum) String () string { return xsdt.String(me).String() }

//	Since TglShadeModelEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglShadeModelEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglShadeModelEnum is "SMOOTH".
func (me TglShadeModelEnum) IsSmooth () bool { return me == "SMOOTH" }

type TglLogicOpEnum xsdt.String

//	Returns true if the value of this enumerated TglLogicOpEnum is "CLEAR".
func (me TglLogicOpEnum) IsClear () bool { return me == "CLEAR" }

//	This convenience method just performs a simple type conversion to TglLogicOpEnum's alias type xsdt.String.
func (me TglLogicOpEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglLogicOpEnum is "AND_REVERSE".
func (me TglLogicOpEnum) IsAndReverse () bool { return me == "AND_REVERSE" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "AND".
func (me TglLogicOpEnum) IsAnd () bool { return me == "AND" }

//	Since TglLogicOpEnum is just a simple String type, this merely returns the current string value.
func (me TglLogicOpEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglLogicOpEnum is "NAND".
func (me TglLogicOpEnum) IsNand () bool { return me == "NAND" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "SET".
func (me TglLogicOpEnum) IsSet () bool { return me == "SET" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "AND_INVERTED".
func (me TglLogicOpEnum) IsAndInverted () bool { return me == "AND_INVERTED" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "INVERT".
func (me TglLogicOpEnum) IsInvert () bool { return me == "INVERT" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "NOOP".
func (me TglLogicOpEnum) IsNoop () bool { return me == "NOOP" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "NOR".
func (me TglLogicOpEnum) IsNor () bool { return me == "NOR" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "XOR".
func (me TglLogicOpEnum) IsXor () bool { return me == "XOR" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "COPY".
func (me TglLogicOpEnum) IsCopy () bool { return me == "COPY" }

//	Since TglLogicOpEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglLogicOpEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglLogicOpEnum is "OR".
func (me TglLogicOpEnum) IsOr () bool { return me == "OR" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "OR_REVERSE".
func (me TglLogicOpEnum) IsOrReverse () bool { return me == "OR_REVERSE" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "EQUIV".
func (me TglLogicOpEnum) IsEquiv () bool { return me == "EQUIV" }

//	Returns true if the value of this enumerated TglLogicOpEnum is "COPY_INVERTED".
func (me TglLogicOpEnum) IsCopyInverted () bool { return me == "COPY_INVERTED" }

type TglPolygonModeEnum xsdt.String

//	Since TglPolygonModeEnum is just a simple String type, this merely returns the current string value.
func (me TglPolygonModeEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglPolygonModeEnum is "FILL".
func (me TglPolygonModeEnum) IsFill () bool { return me == "FILL" }

//	Returns true if the value of this enumerated TglPolygonModeEnum is "LINE".
func (me TglPolygonModeEnum) IsLine () bool { return me == "LINE" }

//	Since TglPolygonModeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglPolygonModeEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglPolygonModeEnum's alias type xsdt.String.
func (me TglPolygonModeEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglPolygonModeEnum is "POINT".
func (me TglPolygonModeEnum) IsPoint () bool { return me == "POINT" }

type TglBlendEnum xsdt.String

//	Returns true if the value of this enumerated TglBlendEnum is "DST_ALPHA".
func (me TglBlendEnum) IsDstAlpha () bool { return me == "DST_ALPHA" }

//	Since TglBlendEnum is just a simple String type, this merely returns the current string value.
func (me TglBlendEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglBlendEnum is "CONSTANT_ALPHA".
func (me TglBlendEnum) IsConstantAlpha () bool { return me == "CONSTANT_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "SRC_COLOR".
func (me TglBlendEnum) IsSrcColor () bool { return me == "SRC_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_SRC_ALPHA".
func (me TglBlendEnum) IsOneMinusSrcAlpha () bool { return me == "ONE_MINUS_SRC_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_CONSTANT_ALPHA".
func (me TglBlendEnum) IsOneMinusConstantAlpha () bool { return me == "ONE_MINUS_CONSTANT_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_DEST_COLOR".
func (me TglBlendEnum) IsOneMinusDestColor () bool { return me == "ONE_MINUS_DEST_COLOR" }

//	Since TglBlendEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglBlendEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglBlendEnum is "SRC_ALPHA_SATURATE".
func (me TglBlendEnum) IsSrcAlphaSaturate () bool { return me == "SRC_ALPHA_SATURATE" }

//	Returns true if the value of this enumerated TglBlendEnum is "ZERO".
func (me TglBlendEnum) IsZero () bool { return me == "ZERO" }

//	Returns true if the value of this enumerated TglBlendEnum is "SRC_ALPHA".
func (me TglBlendEnum) IsSrcAlpha () bool { return me == "SRC_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_DST_ALPHA".
func (me TglBlendEnum) IsOneMinusDstAlpha () bool { return me == "ONE_MINUS_DST_ALPHA" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_SRC_COLOR".
func (me TglBlendEnum) IsOneMinusSrcColor () bool { return me == "ONE_MINUS_SRC_COLOR" }

//	This convenience method just performs a simple type conversion to TglBlendEnum's alias type xsdt.String.
func (me TglBlendEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE_MINUS_CONSTANT_COLOR".
func (me TglBlendEnum) IsOneMinusConstantColor () bool { return me == "ONE_MINUS_CONSTANT_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "ONE".
func (me TglBlendEnum) IsOne () bool { return me == "ONE" }

//	Returns true if the value of this enumerated TglBlendEnum is "CONSTANT_COLOR".
func (me TglBlendEnum) IsConstantColor () bool { return me == "CONSTANT_COLOR" }

//	Returns true if the value of this enumerated TglBlendEnum is "DEST_COLOR".
func (me TglBlendEnum) IsDestColor () bool { return me == "DEST_COLOR" }

type TglFogEnum xsdt.String

//	Since TglFogEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFogEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglFogEnum is "LINEAR".
func (me TglFogEnum) IsLinear () bool { return me == "LINEAR" }

//	Returns true if the value of this enumerated TglFogEnum is "EXP2".
func (me TglFogEnum) IsExp2 () bool { return me == "EXP2" }

//	This convenience method just performs a simple type conversion to TglFogEnum's alias type xsdt.String.
func (me TglFogEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TglFogEnum is just a simple String type, this merely returns the current string value.
func (me TglFogEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglFogEnum is "EXP".
func (me TglFogEnum) IsExp () bool { return me == "EXP" }

type TglStencilOpEnum xsdt.String

//	Returns true if the value of this enumerated TglStencilOpEnum is "DECR_WRAP".
func (me TglStencilOpEnum) IsDecrWrap () bool { return me == "DECR_WRAP" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "KEEP".
func (me TglStencilOpEnum) IsKeep () bool { return me == "KEEP" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "INCR".
func (me TglStencilOpEnum) IsIncr () bool { return me == "INCR" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "ZERO".
func (me TglStencilOpEnum) IsZero () bool { return me == "ZERO" }

//	This convenience method just performs a simple type conversion to TglStencilOpEnum's alias type xsdt.String.
func (me TglStencilOpEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglStencilOpEnum is "REPLACE".
func (me TglStencilOpEnum) IsReplace () bool { return me == "REPLACE" }

//	Returns true if the value of this enumerated TglStencilOpEnum is "INCR_WRAP".
func (me TglStencilOpEnum) IsIncrWrap () bool { return me == "INCR_WRAP" }

//	Since TglStencilOpEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglStencilOpEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglStencilOpEnum is "DECR".
func (me TglStencilOpEnum) IsDecr () bool { return me == "DECR" }

//	Since TglStencilOpEnum is just a simple String type, this merely returns the current string value.
func (me TglStencilOpEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglStencilOpEnum is "INVERT".
func (me TglStencilOpEnum) IsInvert () bool { return me == "INVERT" }

type TglMaterialEnum xsdt.String

//	This convenience method just performs a simple type conversion to TglMaterialEnum's alias type xsdt.String.
func (me TglMaterialEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglMaterialEnum is "AMBIENT_AND_DIFFUSE".
func (me TglMaterialEnum) IsAmbientAndDiffuse () bool { return me == "AMBIENT_AND_DIFFUSE" }

//	Returns true if the value of this enumerated TglMaterialEnum is "SPECULAR".
func (me TglMaterialEnum) IsSpecular () bool { return me == "SPECULAR" }

//	Returns true if the value of this enumerated TglMaterialEnum is "EMISSION".
func (me TglMaterialEnum) IsEmission () bool { return me == "EMISSION" }

//	Since TglMaterialEnum is just a simple String type, this merely returns the current string value.
func (me TglMaterialEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglMaterialEnum is "AMBIENT".
func (me TglMaterialEnum) IsAmbient () bool { return me == "AMBIENT" }

//	Returns true if the value of this enumerated TglMaterialEnum is "DIFFUSE".
func (me TglMaterialEnum) IsDiffuse () bool { return me == "DIFFUSE" }

//	Since TglMaterialEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglMaterialEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type TglLightModelColorControlEnum xsdt.String

//	Since TglLightModelColorControlEnum is just a simple String type, this merely returns the current string value.
func (me TglLightModelColorControlEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TglLightModelColorControlEnum's alias type xsdt.String.
func (me TglLightModelColorControlEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglLightModelColorControlEnum is "SEPARATE_SPECULAR_COLOR".
func (me TglLightModelColorControlEnum) IsSeparateSpecularColor () bool { return me == "SEPARATE_SPECULAR_COLOR" }

//	Returns true if the value of this enumerated TglLightModelColorControlEnum is "SINGLE_COLOR".
func (me TglLightModelColorControlEnum) IsSingleColor () bool { return me == "SINGLE_COLOR" }

//	Since TglLightModelColorControlEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglLightModelColorControlEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

type TglFrontFaceEnum xsdt.String

//	This convenience method just performs a simple type conversion to TglFrontFaceEnum's alias type xsdt.String.
func (me TglFrontFaceEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TglFrontFaceEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFrontFaceEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglFrontFaceEnum is "CW".
func (me TglFrontFaceEnum) IsCw () bool { return me == "CW" }

//	Returns true if the value of this enumerated TglFrontFaceEnum is "CCW".
func (me TglFrontFaceEnum) IsCcw () bool { return me == "CCW" }

//	Since TglFrontFaceEnum is just a simple String type, this merely returns the current string value.
func (me TglFrontFaceEnum) String () string { return xsdt.String(me).String() }

type TglesEnumerationType xsdt.String

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFuncEnum, but keep in mind the actual value may or may not be a valid TglFuncEnum value.
func (me TglesEnumerationType) ToTglFuncEnum () TglFuncEnum { return TglFuncEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglShadeModelEnum, but keep in mind the actual value may or may not be a valid TglShadeModelEnum value.
func (me TglesEnumerationType) ToTglShadeModelEnum () TglShadeModelEnum { return TglShadeModelEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglLogicOpEnum, but keep in mind the actual value may or may not be a valid TglLogicOpEnum value.
func (me TglesEnumerationType) ToTglLogicOpEnum () TglLogicOpEnum { return TglLogicOpEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglPolygonModeEnum, but keep in mind the actual value may or may not be a valid TglPolygonModeEnum value.
func (me TglesEnumerationType) ToTglPolygonModeEnum () TglPolygonModeEnum { return TglPolygonModeEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglBlendEnum, but keep in mind the actual value may or may not be a valid TglBlendEnum value.
func (me TglesEnumerationType) ToTglBlendEnum () TglBlendEnum { return TglBlendEnum(me) }

//	This convenience method just performs a simple type conversion to TglesEnumerationType's alias type xsdt.String.
func (me TglesEnumerationType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFogEnum, but keep in mind the actual value may or may not be a valid TglFogEnum value.
func (me TglesEnumerationType) ToTglFogEnum () TglFogEnum { return TglFogEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglStencilOpEnum, but keep in mind the actual value may or may not be a valid TglStencilOpEnum value.
func (me TglesEnumerationType) ToTglStencilOpEnum () TglStencilOpEnum { return TglStencilOpEnum(me) }

//	Since TglesEnumerationType is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesEnumerationType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglMaterialEnum, but keep in mind the actual value may or may not be a valid TglMaterialEnum value.
func (me TglesEnumerationType) ToTglMaterialEnum () TglMaterialEnum { return TglMaterialEnum(me) }

//	Since TglesEnumerationType is just a simple String type, this merely returns the current string value.
func (me TglesEnumerationType) String () string { return xsdt.String(me).String() }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglLightModelColorControlEnum, but keep in mind the actual value may or may not be a valid TglLightModelColorControlEnum value.
func (me TglesEnumerationType) ToTglLightModelColorControlEnum () TglLightModelColorControlEnum { return TglLightModelColorControlEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFrontFaceEnum, but keep in mind the actual value may or may not be a valid TglFrontFaceEnum value.
func (me TglesEnumerationType) ToTglFrontFaceEnum () TglFrontFaceEnum { return TglFrontFaceEnum(me) }

//	TglesEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFaceEnum, but keep in mind the actual value may or may not be a valid TglFaceEnum value.
func (me TglesEnumerationType) ToTglFaceEnum () TglFaceEnum { return TglFaceEnum(me) }

type XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_ struct {
	Enum TglesEnumerationType `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

type XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_ struct {
	Float1X1 TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float1x1"`

}

type XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_ struct {
	Float1X3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema float1x3"`

}

type XsdGoPkgHasGroup_GlesParamGroup struct {
	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_float1x4choicegles_param_groupschema_Float1X4_Tfloat4Type_

	XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_float1x2choicegles_param_groupschema_Float1X2_Tfloat2Type_

	XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_sampler2Dchoicegles_param_groupschema_Sampler2D_TglesSamplerType_

	XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_

	XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_

	XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_

	XsdGoPkgHasElem_enumchoicegles_param_groupschema_Enum_TglesEnumerationType_

	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_float1x1choicegles_param_groupschema_Float1X1_TfloatType_

	XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_float1x3choicegles_param_groupschema_Float1X3_Tfloat3Type_

	XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_

}

type TglesNewparamType struct {
//	The annotate element allows you to specify an annotation for this new param.
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The semantic element allows you to specify a semantic for this new param.
	XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_

//	The modifier element allows you to specify a modifier for this new param.
	XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_

	XsdGoPkgHasGroup_GlesParamGroup

}

type XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_ struct {
	Newparams []*TglesNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
type XsdGoPkgHasAttr_Platform_XsdtNCName_Pc struct {
//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	Platform xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema platform,attr"`

}

//	Returns the default value for Platform -- "PC"
func (me XsdGoPkgHasAttr_Platform_XsdtNCName_Pc) PlatformDefault () xsdt.NCName { return xsdt.NCName("PC") }

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
//	A group that contains the renderstates available for the GLES profile.
type XsdGoPkgHasAttr_Value_TfloatType_0 struct {
	Value TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 0
func (me XsdGoPkgHasAttr_Value_TfloatType_0) ValueDefault () TfloatType { return TfloatType(0) }

type XsdGoPkgHasAttr_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param,attr"`

}

type TxsdGlesPipelineSettingsGroupChoiceMaterialShininess struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_0

}

type XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_ struct {
	MaterialShininess *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess `xml:"http://www.collada.org/2008/03/COLLADASchema material_shininess"`

}

type XsdGoPkgHasAttr_Value_Tfloat4Type_0000 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0 0 0"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_0000) ValueDefault () Tfloat4Type { return Tfloat4Type("0 0 0 0") }

type TglesMaxLightsIndexType xsdt.NonNegativeInteger

//	Returns a string representation of this TglesMaxLightsIndexType's current non-string scalar value.
func (me TglesMaxLightsIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	Since TglesMaxLightsIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglesMaxLightsIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglesMaxLightsIndexType's alias type xsdt.NonNegativeInteger.
func (me TglesMaxLightsIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

type XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_ struct {
	Index TglesMaxLightsIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlesPipelineSettingsGroupChoiceLightDiffuse struct {
	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

}

type XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_ struct {
	LightDiffuse *TxsdGlesPipelineSettingsGroupChoiceLightDiffuse `xml:"http://www.collada.org/2008/03/COLLADASchema light_diffuse"`

}

type XsdGoPkgHasAttr_Value_Tfloat4Type_02020210 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0.2 0.2 0.2 1.0"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_02020210) ValueDefault () Tfloat4Type { return Tfloat4Type("0.2 0.2 0.2 1.0") }

type TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_02020210

}

type XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_ struct {
	MaterialAmbient *TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema material_ambient"`

}

type XsdGoPkgHasAttr_Value_TfloatType_180 struct {
	Value TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 180
func (me XsdGoPkgHasAttr_Value_TfloatType_180) ValueDefault () TfloatType { return TfloatType(180) }

type TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff struct {
	XsdGoPkgHasAttr_Value_TfloatType_180

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_ struct {
	LightSpotCutoff *TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_cutoff"`

}

type XsdGoPkgHasAttr_Value_XsdtBoolean_False struct {
	Value xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- false
func (me XsdGoPkgHasAttr_Value_XsdtBoolean_False) ValueDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

type XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ struct {
	SampleAlphaToOneEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_one_enable"`

}

type TxsdGlesPipelineSettingsGroupChoiceFogColor struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_ struct {
	FogColor *TxsdGlesPipelineSettingsGroupChoiceFogColor `xml:"http://www.collada.org/2008/03/COLLADASchema fog_color"`

}

type XsdGoPkgHasAttr_Value_Tint4Type_ struct {
	Value Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGlesPipelineSettingsGroupChoiceScissor struct {
	XsdGoPkgHasAttr_Value_Tint4Type_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_ struct {
	Scissor *TxsdGlesPipelineSettingsGroupChoiceScissor `xml:"http://www.collada.org/2008/03/COLLADASchema scissor"`

}

type XsdGoPkgHasAttr_Value_TglShadeModelEnum_Smooth struct {
	Value TglShadeModelEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "SMOOTH"
func (me XsdGoPkgHasAttr_Value_TglShadeModelEnum_Smooth) ValueDefault () TglShadeModelEnum { return TglShadeModelEnum("SMOOTH") }

type TxsdGlesPipelineSettingsGroupChoiceShadeModel struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglShadeModelEnum_Smooth

}

type XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_ struct {
	ShadeModel *TxsdGlesPipelineSettingsGroupChoiceShadeModel `xml:"http://www.collada.org/2008/03/COLLADASchema shade_model"`

}

type XsdGoPkgHasAttr_Value_TfloatType_1 struct {
	Value TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 1
func (me XsdGoPkgHasAttr_Value_TfloatType_1) ValueDefault () TfloatType { return TfloatType(1) }

type TxsdGlesPipelineSettingsGroupChoicePointSize struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

type XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_ struct {
	PointSize *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_size"`

}

type XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_ struct {
	PointSizeMax *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_max"`

}

type XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255 struct {
	Value xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 255
func (me XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255) ValueDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(255) }

type TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

}

type XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_ struct {
	Mask *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

type XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0 struct {
	Value xsdt.UnsignedByte `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 0
func (me XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0) ValueDefault () xsdt.UnsignedByte { return xsdt.UnsignedByte(0) }

type TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0

}

type XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_ struct {
	Ref *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

type XsdGoPkgHasAttr_Value_TglFuncEnum_Always struct {
	Value TglFuncEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "ALWAYS"
func (me XsdGoPkgHasAttr_Value_TglFuncEnum_Always) ValueDefault () TglFuncEnum { return TglFuncEnum("ALWAYS") }

type TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc struct {
	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ struct {
	Func *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

type TxsdGlesPipelineSettingsGroupChoiceStencilFunc struct {
	XsdGoPkgHasElem_funcsequencestencil_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc_

	XsdGoPkgHasElem_masksequencestencil_funcchoicegles_pipeline_settings_groupschema_Mask_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask_

	XsdGoPkgHasElem_refsequencestencil_funcchoicegles_pipeline_settings_groupschema_Ref_TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef_

}

type XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_ struct {
	StencilFunc *TxsdGlesPipelineSettingsGroupChoiceStencilFunc `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func"`

}

type XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_ struct {
	LightModelTwoSideEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_two_side_enable"`

}

type TglesMaxClipPlanesIndexType xsdt.NonNegativeInteger

//	Since TglesMaxClipPlanesIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglesMaxClipPlanesIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

//	Returns a string representation of this TglesMaxClipPlanesIndexType's current non-string scalar value.
func (me TglesMaxClipPlanesIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	This convenience method just performs a simple type conversion to TglesMaxClipPlanesIndexType's alias type xsdt.NonNegativeInteger.
func (me TglesMaxClipPlanesIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

type XsdGoPkgHasAttr_Index_TglesMaxClipPlanesIndexType_ struct {
	Index TglesMaxClipPlanesIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Index_TglesMaxClipPlanesIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_ struct {
	ClipPlaneEnable *TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema clip_plane_enable"`

}

type XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_ struct {
	FogEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema fog_enable"`

}

type XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_ struct {
	PointSmoothEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema point_smooth_enable"`

}

type XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_ struct {
	ColorLogicOpEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema color_logic_op_enable"`

}

type XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_ struct {
	LightModelAmbient *TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_ambient"`

}

type XsdGoPkgHasAttr_Value_Tfloat4Type_0001 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0 0 1"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_0001) ValueDefault () Tfloat4Type { return Tfloat4Type("0 0 0 1") }

type TxsdGlesPipelineSettingsGroupChoiceLightAmbient struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

}

type XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_ struct {
	LightAmbient *TxsdGlesPipelineSettingsGroupChoiceLightAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema light_ambient"`

}

type TglAlphaValueType xsdt.Float

//	Since TglAlphaValueType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglAlphaValueType) SetFromString (s string)  { (*xsdt.Float)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglAlphaValueType's alias type xsdt.Float.
func (me TglAlphaValueType) ToXsdtFloat () xsdt.Float { return xsdt.Float(me) }

//	Returns a string representation of this TglAlphaValueType's current non-string scalar value.
func (me TglAlphaValueType) String () string { return xsdt.Float(me).String() }

type XsdGoPkgHasAttr_Value_TglAlphaValueType_00 struct {
	Value TglAlphaValueType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 0.0
func (me XsdGoPkgHasAttr_Value_TglAlphaValueType_00) ValueDefault () TglAlphaValueType { return TglAlphaValueType(0.0) }

type TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue struct {
	XsdGoPkgHasAttr_Value_TglAlphaValueType_00

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ struct {
	Value *TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ struct {
	Func *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

type TxsdGlesPipelineSettingsGroupChoiceAlphaFunc struct {
	XsdGoPkgHasElem_valuesequencealpha_funcchoicegles_pipeline_settings_groupschema_Value_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue_

	XsdGoPkgHasElem_funcsequencealpha_funcchoicegles_pipeline_settings_groupschema_Func_TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_

}

type XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_ struct {
	AlphaFunc *TxsdGlesPipelineSettingsGroupChoiceAlphaFunc `xml:"http://www.collada.org/2008/03/COLLADASchema alpha_func"`

}

type XsdGoPkgHasAttr_Value_Tfloat3Type_100 struct {
	Value Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "1 0 0"
func (me XsdGoPkgHasAttr_Value_Tfloat3Type_100) ValueDefault () Tfloat3Type { return Tfloat3Type("1 0 0") }

type TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat3Type_100

}

type XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_ struct {
	PointDistanceAttenuation *TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema point_distance_attenuation"`

}

type XsdGoPkgHasAttr_Value_TintType_4294967295 struct {
	Value TintType `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- 4294967295
func (me XsdGoPkgHasAttr_Value_TintType_4294967295) ValueDefault () TintType { return TintType(4294967295) }

type TxsdGlesPipelineSettingsGroupChoiceStencilMask struct {
	XsdGoPkgHasAttr_Value_TintType_4294967295

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_ struct {
	StencilMask *TxsdGlesPipelineSettingsGroupChoiceStencilMask `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask"`

}

type XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_ struct {
	RescaleNormalEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema rescale_normal_enable"`

}

type TglesStencilOpEnum xsdt.String

//	Since TglesStencilOpEnum is just a simple String type, this merely returns the current string value.
func (me TglesStencilOpEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TglesStencilOpEnum's alias type xsdt.String.
func (me TglesStencilOpEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "INCR".
func (me TglesStencilOpEnum) IsIncr () bool { return me == "INCR" }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "ZERO".
func (me TglesStencilOpEnum) IsZero () bool { return me == "ZERO" }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "REPLACE".
func (me TglesStencilOpEnum) IsReplace () bool { return me == "REPLACE" }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "KEEP".
func (me TglesStencilOpEnum) IsKeep () bool { return me == "KEEP" }

//	Since TglesStencilOpEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesStencilOpEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "INVERT".
func (me TglesStencilOpEnum) IsInvert () bool { return me == "INVERT" }

//	Returns true if the value of this enumerated TglesStencilOpEnum is "DECR".
func (me TglesStencilOpEnum) IsDecr () bool { return me == "DECR" }

type XsdGoPkgHasAttr_Value_TglesStencilOpEnum_Keep struct {
	Value TglesStencilOpEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "KEEP"
func (me XsdGoPkgHasAttr_Value_TglesStencilOpEnum_Keep) ValueDefault () TglesStencilOpEnum { return TglesStencilOpEnum("KEEP") }

type TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail struct {
	XsdGoPkgHasAttr_Value_TglesStencilOpEnum_Keep

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_ struct {
	Zfail *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

type XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_ struct {
	Zpass *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

type XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_ struct {
	Fail *TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

type TxsdGlesPipelineSettingsGroupChoiceStencilOp struct {
	XsdGoPkgHasElem_zfailsequencestencil_opchoicegles_pipeline_settings_groupschema_Zfail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZfail_

	XsdGoPkgHasElem_zpasssequencestencil_opchoicegles_pipeline_settings_groupschema_Zpass_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceZpass_

	XsdGoPkgHasElem_failsequencestencil_opchoicegles_pipeline_settings_groupschema_Fail_TxsdGlesPipelineSettingsGroupChoiceStencilOpSequenceFail_

}

type XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_ struct {
	StencilOp *TxsdGlesPipelineSettingsGroupChoiceStencilOp `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op"`

}

type TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_TfloatType_1

}

type XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_ struct {
	LightConstantAttenuation *TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_constant_attenuation"`

}

type XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_ struct {
	LightSpecular *TxsdGlesPipelineSettingsGroupChoiceLightDiffuse `xml:"http://www.collada.org/2008/03/COLLADASchema light_specular"`

}

type XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_ struct {
	LineSmoothEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema line_smooth_enable"`

}

type XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_ struct {
	FogEnd *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema fog_end"`

}

type XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_ struct {
	ScissorTestEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema scissor_test_enable"`

}

type XsdGoPkgHasAttr_Value_TglFogEnum_Exp struct {
	Value TglFogEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "EXP"
func (me XsdGoPkgHasAttr_Value_TglFogEnum_Exp) ValueDefault () TglFogEnum { return TglFogEnum("EXP") }

type TxsdGlesPipelineSettingsGroupChoiceFogMode struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFogEnum_Exp

}

type XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_ struct {
	FogMode *TxsdGlesPipelineSettingsGroupChoiceFogMode `xml:"http://www.collada.org/2008/03/COLLADASchema fog_mode"`

}

type XsdGoPkgHasAttr_Value_Tfloat4Type_08080810 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0.8 0.8 0.8 1.0"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_08080810) ValueDefault () Tfloat4Type { return Tfloat4Type("0.8 0.8 0.8 1.0") }

type TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_08080810

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_ struct {
	MaterialDiffuse *TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse `xml:"http://www.collada.org/2008/03/COLLADASchema material_diffuse"`

}

type XsdGoPkgHasAttr_Value_TglLogicOpEnum_Copy struct {
	Value TglLogicOpEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "COPY"
func (me XsdGoPkgHasAttr_Value_TglLogicOpEnum_Copy) ValueDefault () TglLogicOpEnum { return TglLogicOpEnum("COPY") }

type TxsdGlesPipelineSettingsGroupChoiceLogicOp struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglLogicOpEnum_Copy

}

type XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_ struct {
	LogicOp *TxsdGlesPipelineSettingsGroupChoiceLogicOp `xml:"http://www.collada.org/2008/03/COLLADASchema logic_op"`

}

type XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw struct {
	Value TglFrontFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "CCW"
func (me XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw) ValueDefault () TglFrontFaceEnum { return TglFrontFaceEnum("CCW") }

type TxsdGlesPipelineSettingsGroupChoiceFrontFace struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw

}

type XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_ struct {
	FrontFace *TxsdGlesPipelineSettingsGroupChoiceFrontFace `xml:"http://www.collada.org/2008/03/COLLADASchema front_face"`

}

type XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_ struct {
	LightLinearAttenuation *TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_linear_attenuation"`

}

type XsdGoPkgHasAttr_Value_TglBlendEnum_One struct {
	Value TglBlendEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "ONE"
func (me XsdGoPkgHasAttr_Value_TglBlendEnum_One) ValueDefault () TglBlendEnum { return TglBlendEnum("ONE") }

type TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglBlendEnum_One

}

type XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ struct {
	Src *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc `xml:"http://www.collada.org/2008/03/COLLADASchema src"`

}

type XsdGoPkgHasAttr_Value_TglBlendEnum_Zero struct {
	Value TglBlendEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "ZERO"
func (me XsdGoPkgHasAttr_Value_TglBlendEnum_Zero) ValueDefault () TglBlendEnum { return TglBlendEnum("ZERO") }

type TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest struct {
	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_ struct {
	Dest *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest `xml:"http://www.collada.org/2008/03/COLLADASchema dest"`

}

type TxsdGlesPipelineSettingsGroupChoiceBlendFunc struct {
	XsdGoPkgHasElem_srcsequenceblend_funcchoicegles_pipeline_settings_groupschema_Src_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc_

	XsdGoPkgHasElem_destsequenceblend_funcchoicegles_pipeline_settings_groupschema_Dest_TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest_

}

type XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_ struct {
	BlendFunc *TxsdGlesPipelineSettingsGroupChoiceBlendFunc `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func"`

}

type XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_ struct {
	StencilTestEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_test_enable"`

}

type XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_ struct {
	LightQuadraticAttenuation *TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_quadratic_attenuation"`

}

type XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_ struct {
	DepthMask *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_mask"`

}

type XsdGoPkgHasAttr_Value_Tbool4Type_ struct {
	Value Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGlesPipelineSettingsGroupChoiceColorMask struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tbool4Type_

}

type XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_ struct {
	ColorMask *TxsdGlesPipelineSettingsGroupChoiceColorMask `xml:"http://www.collada.org/2008/03/COLLADASchema color_mask"`

}

type XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_ struct {
	LightingEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema lighting_enable"`

}

type TxsdGlesPipelineSettingsGroupChoiceClipPlane struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglesMaxClipPlanesIndexType_

	XsdGoPkgHasAttr_Value_Tbool4Type_

}

type XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_ struct {
	ClipPlane *TxsdGlesPipelineSettingsGroupChoiceClipPlane `xml:"http://www.collada.org/2008/03/COLLADASchema clip_plane"`

}

type XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_ struct {
	NormalizeEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema normalize_enable"`

}

type XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_ struct {
	DitherEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema dither_enable"`

}

type XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_ struct {
	DepthFunc *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema depth_func"`

}

type XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_ struct {
	FogStart *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess `xml:"http://www.collada.org/2008/03/COLLADASchema fog_start"`

}

type XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_ struct {
	PointSizeMin *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_min"`

}

type TxsdGlesPipelineSettingsGroupChoiceMaterialEmission struct {
	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_ struct {
	MaterialEmission *TxsdGlesPipelineSettingsGroupChoiceMaterialEmission `xml:"http://www.collada.org/2008/03/COLLADASchema material_emission"`

}

//	Defines a set of texturing commands that will be converted into multitexturing operations using glTexEnv in regular and combiner mode.
//	Defines a texture_pipeline command. This is a combiner-mode texturing operation.
type TglesTexcombinerSourceEnum xsdt.Token

//	Returns true if the value of this enumerated TglesTexcombinerSourceEnum is "CONSTANT".
func (me TglesTexcombinerSourceEnum) IsConstant () bool { return me == "CONSTANT" }

//	Returns true if the value of this enumerated TglesTexcombinerSourceEnum is "TEXTURE".
func (me TglesTexcombinerSourceEnum) IsTexture () bool { return me == "TEXTURE" }

//	Returns true if the value of this enumerated TglesTexcombinerSourceEnum is "PRIMARY".
func (me TglesTexcombinerSourceEnum) IsPrimary () bool { return me == "PRIMARY" }

//	Since TglesTexcombinerSourceEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerSourceEnum) String () string { return xsdt.Token(me).String() }

//	This convenience method just performs a simple type conversion to TglesTexcombinerSourceEnum's alias type xsdt.Token.
func (me TglesTexcombinerSourceEnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TglesTexcombinerSourceEnum is "PREVIOUS".
func (me TglesTexcombinerSourceEnum) IsPrevious () bool { return me == "PREVIOUS" }

//	Since TglesTexcombinerSourceEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerSourceEnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Source_TglesTexcombinerSourceEnum_ struct {
	Source TglesTexcombinerSourceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema source,attr"`

}

type XsdGoPkgHasAttr_Sampler_XsdtNCName_ struct {
	Sampler xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema sampler,attr"`

}

type TglesTexcombinerOperandAlphaEnum TglBlendEnum

//	Returns true if the value of this enumerated TglesTexcombinerOperandAlphaEnum is "ONE_MINUS_SRC_ALPHA".
func (me TglesTexcombinerOperandAlphaEnum) IsOneMinusSrcAlpha () bool { return me == "ONE_MINUS_SRC_ALPHA" }

//	Since TglesTexcombinerOperandAlphaEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerOperandAlphaEnum) String () string { return TglBlendEnum(me).String() }

//	Since TglesTexcombinerOperandAlphaEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerOperandAlphaEnum) SetFromString (s string)  { (*TglBlendEnum)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesTexcombinerOperandAlphaEnum is "SRC_ALPHA".
func (me TglesTexcombinerOperandAlphaEnum) IsSrcAlpha () bool { return me == "SRC_ALPHA" }

//	This convenience method just performs a simple type conversion to TglesTexcombinerOperandAlphaEnum's alias type TglBlendEnum.
func (me TglesTexcombinerOperandAlphaEnum) ToTglBlendEnum () TglBlendEnum { return TglBlendEnum(me) }

type XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandAlphaEnum_SrcAlpha struct {
	Operand TglesTexcombinerOperandAlphaEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operand,attr"`

}

//	Returns the default value for Operand -- "SRC_ALPHA"
func (me XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandAlphaEnum_SrcAlpha) OperandDefault () TglesTexcombinerOperandAlphaEnum { return TglesTexcombinerOperandAlphaEnum("SRC_ALPHA") }

type TglesTexcombinerArgumentAlphaType struct {
	XsdGoPkgHasAttr_Source_TglesTexcombinerSourceEnum_

	XsdGoPkgHasAttr_Sampler_XsdtNCName_

	XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandAlphaEnum_SrcAlpha

}

type XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_ struct {
	Arguments []*TglesTexcombinerArgumentAlphaType `xml:"http://www.collada.org/2008/03/COLLADASchema argument"`

}

type XsdGoPkgHasAttr_Scale_XsdtFloat_ struct {
	Scale xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema scale,attr"`

}

type TglesTexcombinerOperatorAlphaEnum xsdt.Token

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "REPLACE".
func (me TglesTexcombinerOperatorAlphaEnum) IsReplace () bool { return me == "REPLACE" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "ADD".
func (me TglesTexcombinerOperatorAlphaEnum) IsAdd () bool { return me == "ADD" }

//	This convenience method just performs a simple type conversion to TglesTexcombinerOperatorAlphaEnum's alias type xsdt.Token.
func (me TglesTexcombinerOperatorAlphaEnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "SUBTRACT".
func (me TglesTexcombinerOperatorAlphaEnum) IsSubtract () bool { return me == "SUBTRACT" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "ADD_SIGNED".
func (me TglesTexcombinerOperatorAlphaEnum) IsAddSigned () bool { return me == "ADD_SIGNED" }

//	Since TglesTexcombinerOperatorAlphaEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerOperatorAlphaEnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "INTERPOLATE".
func (me TglesTexcombinerOperatorAlphaEnum) IsInterpolate () bool { return me == "INTERPOLATE" }

//	Since TglesTexcombinerOperatorAlphaEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerOperatorAlphaEnum) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorAlphaEnum is "MODULATE".
func (me TglesTexcombinerOperatorAlphaEnum) IsModulate () bool { return me == "MODULATE" }

type XsdGoPkgHasAttr_Operator_TglesTexcombinerOperatorAlphaEnum_ struct {
	Operator TglesTexcombinerOperatorAlphaEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operator,attr"`

}

type TglesTexcombinerCommandAlphaType struct {
	XsdGoPkgHasAttr_Operator_TglesTexcombinerOperatorAlphaEnum_

	XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_alpha_typeschema_Argument_TglesTexcombinerArgumentAlphaType_

	XsdGoPkgHasAttr_Scale_XsdtFloat_

}

type XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_ struct {
	Alpha *TglesTexcombinerCommandAlphaType `xml:"http://www.collada.org/2008/03/COLLADASchema alpha"`

}

type XsdGoPkgHasAttr_Value_Tfloat4Type_ struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TglesTextureConstantType struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_

}

type XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_ struct {
	Constant *TglesTextureConstantType `xml:"http://www.collada.org/2008/03/COLLADASchema constant"`

}

//	Defines the RGB portion of a texture_pipeline command. This is a combiner-mode texturing operation.
type TglesTexcombinerOperandRgbEnum TglBlendEnum

//	Returns true if the value of this enumerated TglesTexcombinerOperandRgbEnum is "ONE_MINUS_SRC_ALPHA".
func (me TglesTexcombinerOperandRgbEnum) IsOneMinusSrcAlpha () bool { return me == "ONE_MINUS_SRC_ALPHA" }

//	Since TglesTexcombinerOperandRgbEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerOperandRgbEnum) String () string { return TglBlendEnum(me).String() }

//	Returns true if the value of this enumerated TglesTexcombinerOperandRgbEnum is "SRC_COLOR".
func (me TglesTexcombinerOperandRgbEnum) IsSrcColor () bool { return me == "SRC_COLOR" }

//	Returns true if the value of this enumerated TglesTexcombinerOperandRgbEnum is "ONE_MINUS_SRC_COLOR".
func (me TglesTexcombinerOperandRgbEnum) IsOneMinusSrcColor () bool { return me == "ONE_MINUS_SRC_COLOR" }

//	Returns true if the value of this enumerated TglesTexcombinerOperandRgbEnum is "SRC_ALPHA".
func (me TglesTexcombinerOperandRgbEnum) IsSrcAlpha () bool { return me == "SRC_ALPHA" }

//	This convenience method just performs a simple type conversion to TglesTexcombinerOperandRgbEnum's alias type TglBlendEnum.
func (me TglesTexcombinerOperandRgbEnum) ToTglBlendEnum () TglBlendEnum { return TglBlendEnum(me) }

//	Since TglesTexcombinerOperandRgbEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerOperandRgbEnum) SetFromString (s string)  { (*TglBlendEnum)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandRgbEnum_SrcColor struct {
	Operand TglesTexcombinerOperandRgbEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operand,attr"`

}

//	Returns the default value for Operand -- "SRC_COLOR"
func (me XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandRgbEnum_SrcColor) OperandDefault () TglesTexcombinerOperandRgbEnum { return TglesTexcombinerOperandRgbEnum("SRC_COLOR") }

type TglesTexcombinerArgumentRgbType struct {
	XsdGoPkgHasAttr_Operand_TglesTexcombinerOperandRgbEnum_SrcColor

	XsdGoPkgHasAttr_Source_TglesTexcombinerSourceEnum_

	XsdGoPkgHasAttr_Sampler_XsdtNCName_

}

type XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_ struct {
	Arguments []*TglesTexcombinerArgumentRgbType `xml:"http://www.collada.org/2008/03/COLLADASchema argument"`

}

type TglesTexcombinerOperatorRgbEnum xsdt.Token

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "ADD".
func (me TglesTexcombinerOperatorRgbEnum) IsAdd () bool { return me == "ADD" }

//	Since TglesTexcombinerOperatorRgbEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexcombinerOperatorRgbEnum) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "MODULATE".
func (me TglesTexcombinerOperatorRgbEnum) IsModulate () bool { return me == "MODULATE" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "SUBTRACT".
func (me TglesTexcombinerOperatorRgbEnum) IsSubtract () bool { return me == "SUBTRACT" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "DOT3_RGBA".
func (me TglesTexcombinerOperatorRgbEnum) IsDot3Rgba () bool { return me == "DOT3_RGBA" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "INTERPOLATE".
func (me TglesTexcombinerOperatorRgbEnum) IsInterpolate () bool { return me == "INTERPOLATE" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "DOT3_RGB".
func (me TglesTexcombinerOperatorRgbEnum) IsDot3Rgb () bool { return me == "DOT3_RGB" }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "REPLACE".
func (me TglesTexcombinerOperatorRgbEnum) IsReplace () bool { return me == "REPLACE" }

//	Since TglesTexcombinerOperatorRgbEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexcombinerOperatorRgbEnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TglesTexcombinerOperatorRgbEnum is "ADD_SIGNED".
func (me TglesTexcombinerOperatorRgbEnum) IsAddSigned () bool { return me == "ADD_SIGNED" }

//	This convenience method just performs a simple type conversion to TglesTexcombinerOperatorRgbEnum's alias type xsdt.Token.
func (me TglesTexcombinerOperatorRgbEnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

type XsdGoPkgHasAttr_Operator_TglesTexcombinerOperatorRgbEnum_ struct {
	Operator TglesTexcombinerOperatorRgbEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operator,attr"`

}

type TglesTexcombinerCommandRgbType struct {
	XsdGoPkgHasElems_argumentsequencegles_texcombiner_command_rgb_typeschema_Argument_TglesTexcombinerArgumentRgbType_

	XsdGoPkgHasAttr_Operator_TglesTexcombinerOperatorRgbEnum_

	XsdGoPkgHasAttr_Scale_XsdtFloat_

}

type XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_ struct {
	Rgb *TglesTexcombinerCommandRgbType `xml:"http://www.collada.org/2008/03/COLLADASchema RGB"`

}

type TglesTexcombinerCommandType struct {
	XsdGoPkgHasElem_alphasequencegles_texcombiner_command_typeschema_Alpha_TglesTexcombinerCommandAlphaType_

	XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_

	XsdGoPkgHasElem_RGBsequencegles_texcombiner_command_typeschema_Rgb_TglesTexcombinerCommandRgbType_

}

type XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_ struct {
//	Defines a texture_pipeline command. This is a combiner-mode texturing operation.
	Texcombiners []*TglesTexcombinerCommandType `xml:"http://www.collada.org/2008/03/COLLADASchema texcombiner"`

}

//	Defines a texture_pipeline command. It is a simple noncombiner mode of texturing operations.
type TglesTexenvModeEnum xsdt.Token

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "REPLACE".
func (me TglesTexenvModeEnum) IsReplace () bool { return me == "REPLACE" }

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "BLEND".
func (me TglesTexenvModeEnum) IsBlend () bool { return me == "BLEND" }

//	This convenience method just performs a simple type conversion to TglesTexenvModeEnum's alias type xsdt.Token.
func (me TglesTexenvModeEnum) ToXsdtToken () xsdt.Token { return xsdt.Token(me) }

//	Since TglesTexenvModeEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglesTexenvModeEnum) SetFromString (s string)  { (*xsdt.Token)(me).SetFromString(s) }

//	Since TglesTexenvModeEnum is just a simple String type, this merely returns the current string value.
func (me TglesTexenvModeEnum) String () string { return xsdt.Token(me).String() }

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "DECAL".
func (me TglesTexenvModeEnum) IsDecal () bool { return me == "DECAL" }

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "ADD".
func (me TglesTexenvModeEnum) IsAdd () bool { return me == "ADD" }

//	Returns true if the value of this enumerated TglesTexenvModeEnum is "MODULATE".
func (me TglesTexenvModeEnum) IsModulate () bool { return me == "MODULATE" }

type XsdGoPkgHasAttr_Operator_TglesTexenvModeEnum_ struct {
	Operator TglesTexenvModeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema operator,attr"`

}

type TglesTexenvCommandType struct {
	XsdGoPkgHasAttr_Operator_TglesTexenvModeEnum_

	XsdGoPkgHasAttr_Sampler_XsdtNCName_

	XsdGoPkgHasElem_constantsequencegles_texcombiner_command_typeschema_Constant_TglesTextureConstantType_

}

type XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_ struct {
//	Defines a texture_pipeline command. It is a simple noncombiner mode of texturing operations.
	Texenvs []*TglesTexenvCommandType `xml:"http://www.collada.org/2008/03/COLLADASchema texenv"`

}

type TglesTexturePipelineType struct {
//	Defines a texture_pipeline command. It is a simple noncombiner mode of texturing operations.
	XsdGoPkgHasElems_texenvchoicegles_texture_pipeline_typeschema_Texenv_TglesTexenvCommandType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The extra element may appear any number of times.
//	OpenGL ES extensions may be used here.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Defines a texture_pipeline command. This is a combiner-mode texturing operation.
	XsdGoPkgHasElems_texcombinerchoicegles_texture_pipeline_typeschema_Texcombiner_TglesTexcombinerCommandType_

}

type XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_ struct {
	Value *TglesTexturePipelineType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type TxsdGlesPipelineSettingsGroupChoiceTexturePipeline struct {
	XsdGoPkgHasElem_valuesequencetexture_pipelinechoicegles_pipeline_settings_groupschema_Value_TglesTexturePipelineType_

}

type XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_ struct {
	TexturePipeline *TxsdGlesPipelineSettingsGroupChoiceTexturePipeline `xml:"http://www.collada.org/2008/03/COLLADASchema texture_pipeline"`

}

type TxsdGlesPipelineSettingsGroupChoiceLightEnable struct {
	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_ struct {
	LightEnable *TxsdGlesPipelineSettingsGroupChoiceLightEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_enable"`

}

type XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_ struct {
	AlphaTestEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema alpha_test_enable"`

}

type XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_ struct {
	LineWidth *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema line_width"`

}

type XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001 struct {
	Value Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"
func (me XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001) ValueDefault () Tfloat4X4Type { return Tfloat4X4Type("1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1") }

type TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix struct {
	XsdGoPkgHasAttr_Value_Tfloat4X4Type_1000010000100001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_ struct {
	ModelViewMatrix *TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix `xml:"http://www.collada.org/2008/03/COLLADASchema model_view_matrix"`

}

type XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_ struct {
	PointFadeThresholdSize *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_fade_threshold_size"`

}

type XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_ struct {
	PolygonOffsetFillEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_fill_enable"`

}

type XsdGoPkgHasAttr_Value_Tfloat2Type_01 struct {
	Value Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 1"
func (me XsdGoPkgHasAttr_Value_Tfloat2Type_01) ValueDefault () Tfloat2Type { return Tfloat2Type("0 1") }

type TxsdGlesPipelineSettingsGroupChoiceDepthRange struct {
	XsdGoPkgHasAttr_Value_Tfloat2Type_01

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_ struct {
	DepthRange *TxsdGlesPipelineSettingsGroupChoiceDepthRange `xml:"http://www.collada.org/2008/03/COLLADASchema depth_range"`

}

type XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_ struct {
	ProjectionMatrix *TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix `xml:"http://www.collada.org/2008/03/COLLADASchema projection_matrix"`

}

type XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_ struct {
	FogDensity *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema fog_density"`

}

type XsdGoPkgHasAttr_Value_Tfloat4Type_0010 struct {
	Value Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0 1 0"
func (me XsdGoPkgHasAttr_Value_Tfloat4Type_0010) ValueDefault () Tfloat4Type { return Tfloat4Type("0 0 1 0") }

type TxsdGlesPipelineSettingsGroupChoiceLightPosition struct {
	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0010

}

type XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_ struct {
	LightPosition *TxsdGlesPipelineSettingsGroupChoiceLightPosition `xml:"http://www.collada.org/2008/03/COLLADASchema light_position"`

}

type XsdGoPkgHasAttr_Value_Tfloat2Type_00 struct {
	Value Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0"
func (me XsdGoPkgHasAttr_Value_Tfloat2Type_00) ValueDefault () Tfloat2Type { return Tfloat2Type("0 0") }

type TxsdGlesPipelineSettingsGroupChoicePolygonOffset struct {
	XsdGoPkgHasAttr_Value_Tfloat2Type_00

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_ struct {
	PolygonOffset *TxsdGlesPipelineSettingsGroupChoicePolygonOffset `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset"`

}

type XsdGoPkgHasAttr_Value_XsdtBoolean_True struct {
	Value xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- true
func (me XsdGoPkgHasAttr_Value_XsdtBoolean_True) ValueDefault () xsdt.Boolean { return xsdt.Boolean(true) }

type TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_True

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_ struct {
	ColorMaterialEnable *TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable `xml:"http://www.collada.org/2008/03/COLLADASchema color_material_enable"`

}

type XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ struct {
	SampleAlphaToCoverageEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_coverage_enable"`

}

type TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_0

	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

}

type XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_ struct {
	LightSpotExponent *TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_exponent"`

}

type XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_ struct {
	MaterialSpecular *TxsdGlesPipelineSettingsGroupChoiceMaterialEmission `xml:"http://www.collada.org/2008/03/COLLADASchema material_specular"`

}

type XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_ struct {
	BlendEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema blend_enable"`

}

type XsdGoPkgHasAttr_Value_Tfloat3Type_001 struct {
	Value Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "0 0 -1"
func (me XsdGoPkgHasAttr_Value_Tfloat3Type_001) ValueDefault () Tfloat3Type { return Tfloat3Type("0 0 -1") }

type TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection struct {
	XsdGoPkgHasAttr_Index_TglesMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_Tfloat3Type_001

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_ struct {
	LightSpotDirection *TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_direction"`

}

type XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_ struct {
	DepthTestEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_test_enable"`

}

type XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_ struct {
	MultisampleEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema multisample_enable"`

}

type XsdGoPkgHasAttr_Value_TglFaceEnum_Back struct {
	Value TglFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "BACK"
func (me XsdGoPkgHasAttr_Value_TglFaceEnum_Back) ValueDefault () TglFaceEnum { return TglFaceEnum("BACK") }

type TxsdGlesPipelineSettingsGroupChoiceCullFace struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFaceEnum_Back

}

type XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_ struct {
	CullFace *TxsdGlesPipelineSettingsGroupChoiceCullFace `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face"`

}

type XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_ struct {
	SampleCoverageEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_coverage_enable"`

}

type XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_ struct {
	CullFaceEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face_enable"`

}

type XsdGoPkgHasGroup_GlesPipelineSettingsGroup struct {
	XsdGoPkgHasElem_material_shininesschoicegles_pipeline_settings_groupschema_MaterialShininess_TxsdGlesPipelineSettingsGroupChoiceMaterialShininess_

	XsdGoPkgHasElem_light_diffusechoicegles_pipeline_settings_groupschema_LightDiffuse_TxsdGlesPipelineSettingsGroupChoiceLightDiffuse_

	XsdGoPkgHasElem_material_ambientchoicegles_pipeline_settings_groupschema_MaterialAmbient_TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient_

	XsdGoPkgHasElem_light_spot_cutoffchoicegles_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlesPipelineSettingsGroupChoiceLightSpotCutoff_

	XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable_

	XsdGoPkgHasElem_fog_colorchoicegles_pipeline_settings_groupschema_FogColor_TxsdGlesPipelineSettingsGroupChoiceFogColor_

	XsdGoPkgHasElem_scissorchoicegles_pipeline_settings_groupschema_Scissor_TxsdGlesPipelineSettingsGroupChoiceScissor_

	XsdGoPkgHasElem_shade_modelchoicegles_pipeline_settings_groupschema_ShadeModel_TxsdGlesPipelineSettingsGroupChoiceShadeModel_

	XsdGoPkgHasElem_point_sizechoicegles_pipeline_settings_groupschema_PointSize_TxsdGlesPipelineSettingsGroupChoicePointSize_

	XsdGoPkgHasElem_point_size_maxchoicegles_pipeline_settings_groupschema_PointSizeMax_TxsdGlesPipelineSettingsGroupChoicePointSizeMax_

	XsdGoPkgHasElem_stencil_funcchoicegles_pipeline_settings_groupschema_StencilFunc_TxsdGlesPipelineSettingsGroupChoiceStencilFunc_

	XsdGoPkgHasElem_light_model_two_side_enablechoicegles_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlesPipelineSettingsGroupChoiceLightModelTwoSideEnable_

	XsdGoPkgHasElem_clip_plane_enablechoicegles_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlesPipelineSettingsGroupChoiceClipPlaneEnable_

	XsdGoPkgHasElem_fog_enablechoicegles_pipeline_settings_groupschema_FogEnable_TxsdGlesPipelineSettingsGroupChoiceFogEnable_

	XsdGoPkgHasElem_point_smooth_enablechoicegles_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlesPipelineSettingsGroupChoicePointSmoothEnable_

	XsdGoPkgHasElem_color_logic_op_enablechoicegles_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlesPipelineSettingsGroupChoiceColorLogicOpEnable_

	XsdGoPkgHasElem_light_model_ambientchoicegles_pipeline_settings_groupschema_LightModelAmbient_TxsdGlesPipelineSettingsGroupChoiceLightModelAmbient_

	XsdGoPkgHasElem_light_ambientchoicegles_pipeline_settings_groupschema_LightAmbient_TxsdGlesPipelineSettingsGroupChoiceLightAmbient_

	XsdGoPkgHasElem_alpha_funcchoicegles_pipeline_settings_groupschema_AlphaFunc_TxsdGlesPipelineSettingsGroupChoiceAlphaFunc_

	XsdGoPkgHasElem_point_distance_attenuationchoicegles_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation_

	XsdGoPkgHasElem_stencil_maskchoicegles_pipeline_settings_groupschema_StencilMask_TxsdGlesPipelineSettingsGroupChoiceStencilMask_

	XsdGoPkgHasElem_rescale_normal_enablechoicegles_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlesPipelineSettingsGroupChoiceRescaleNormalEnable_

	XsdGoPkgHasElem_stencil_opchoicegles_pipeline_settings_groupschema_StencilOp_TxsdGlesPipelineSettingsGroupChoiceStencilOp_

	XsdGoPkgHasElem_light_constant_attenuationchoicegles_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightConstantAttenuation_

	XsdGoPkgHasElem_light_specularchoicegles_pipeline_settings_groupschema_LightSpecular_TxsdGlesPipelineSettingsGroupChoiceLightSpecular_

	XsdGoPkgHasElem_line_smooth_enablechoicegles_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlesPipelineSettingsGroupChoiceLineSmoothEnable_

	XsdGoPkgHasElem_fog_endchoicegles_pipeline_settings_groupschema_FogEnd_TxsdGlesPipelineSettingsGroupChoiceFogEnd_

	XsdGoPkgHasElem_scissor_test_enablechoicegles_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlesPipelineSettingsGroupChoiceScissorTestEnable_

	XsdGoPkgHasElem_fog_modechoicegles_pipeline_settings_groupschema_FogMode_TxsdGlesPipelineSettingsGroupChoiceFogMode_

	XsdGoPkgHasElem_material_diffusechoicegles_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse_

	XsdGoPkgHasElem_logic_opchoicegles_pipeline_settings_groupschema_LogicOp_TxsdGlesPipelineSettingsGroupChoiceLogicOp_

	XsdGoPkgHasElem_front_facechoicegles_pipeline_settings_groupschema_FrontFace_TxsdGlesPipelineSettingsGroupChoiceFrontFace_

	XsdGoPkgHasElem_light_linear_attenuationchoicegles_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightLinearAttenuation_

	XsdGoPkgHasElem_blend_funcchoicegles_pipeline_settings_groupschema_BlendFunc_TxsdGlesPipelineSettingsGroupChoiceBlendFunc_

	XsdGoPkgHasElem_stencil_test_enablechoicegles_pipeline_settings_groupschema_StencilTestEnable_TxsdGlesPipelineSettingsGroupChoiceStencilTestEnable_

	XsdGoPkgHasElem_light_quadratic_attenuationchoicegles_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlesPipelineSettingsGroupChoiceLightQuadraticAttenuation_

	XsdGoPkgHasElem_depth_maskchoicegles_pipeline_settings_groupschema_DepthMask_TxsdGlesPipelineSettingsGroupChoiceDepthMask_

	XsdGoPkgHasElem_color_maskchoicegles_pipeline_settings_groupschema_ColorMask_TxsdGlesPipelineSettingsGroupChoiceColorMask_

	XsdGoPkgHasElem_lighting_enablechoicegles_pipeline_settings_groupschema_LightingEnable_TxsdGlesPipelineSettingsGroupChoiceLightingEnable_

	XsdGoPkgHasElem_clip_planechoicegles_pipeline_settings_groupschema_ClipPlane_TxsdGlesPipelineSettingsGroupChoiceClipPlane_

	XsdGoPkgHasElem_normalize_enablechoicegles_pipeline_settings_groupschema_NormalizeEnable_TxsdGlesPipelineSettingsGroupChoiceNormalizeEnable_

	XsdGoPkgHasElem_dither_enablechoicegles_pipeline_settings_groupschema_DitherEnable_TxsdGlesPipelineSettingsGroupChoiceDitherEnable_

	XsdGoPkgHasElem_depth_funcchoicegles_pipeline_settings_groupschema_DepthFunc_TxsdGlesPipelineSettingsGroupChoiceDepthFunc_

	XsdGoPkgHasElem_fog_startchoicegles_pipeline_settings_groupschema_FogStart_TxsdGlesPipelineSettingsGroupChoiceFogStart_

	XsdGoPkgHasElem_point_size_minchoicegles_pipeline_settings_groupschema_PointSizeMin_TxsdGlesPipelineSettingsGroupChoicePointSizeMin_

	XsdGoPkgHasElem_material_emissionchoicegles_pipeline_settings_groupschema_MaterialEmission_TxsdGlesPipelineSettingsGroupChoiceMaterialEmission_

	XsdGoPkgHasElem_texture_pipelinechoicegles_pipeline_settings_groupschema_TexturePipeline_TxsdGlesPipelineSettingsGroupChoiceTexturePipeline_

	XsdGoPkgHasElem_light_enablechoicegles_pipeline_settings_groupschema_LightEnable_TxsdGlesPipelineSettingsGroupChoiceLightEnable_

	XsdGoPkgHasElem_alpha_test_enablechoicegles_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlesPipelineSettingsGroupChoiceAlphaTestEnable_

	XsdGoPkgHasElem_line_widthchoicegles_pipeline_settings_groupschema_LineWidth_TxsdGlesPipelineSettingsGroupChoiceLineWidth_

	XsdGoPkgHasElem_model_view_matrixchoicegles_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix_

	XsdGoPkgHasElem_point_fade_threshold_sizechoicegles_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlesPipelineSettingsGroupChoicePointFadeThresholdSize_

	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlesPipelineSettingsGroupChoicePolygonOffsetFillEnable_

	XsdGoPkgHasElem_depth_rangechoicegles_pipeline_settings_groupschema_DepthRange_TxsdGlesPipelineSettingsGroupChoiceDepthRange_

	XsdGoPkgHasElem_projection_matrixchoicegles_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlesPipelineSettingsGroupChoiceProjectionMatrix_

	XsdGoPkgHasElem_fog_densitychoicegles_pipeline_settings_groupschema_FogDensity_TxsdGlesPipelineSettingsGroupChoiceFogDensity_

	XsdGoPkgHasElem_light_positionchoicegles_pipeline_settings_groupschema_LightPosition_TxsdGlesPipelineSettingsGroupChoiceLightPosition_

	XsdGoPkgHasElem_polygon_offsetchoicegles_pipeline_settings_groupschema_PolygonOffset_TxsdGlesPipelineSettingsGroupChoicePolygonOffset_

	XsdGoPkgHasElem_color_material_enablechoicegles_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable_

	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_

	XsdGoPkgHasElem_light_spot_exponentchoicegles_pipeline_settings_groupschema_LightSpotExponent_TxsdGlesPipelineSettingsGroupChoiceLightSpotExponent_

	XsdGoPkgHasElem_material_specularchoicegles_pipeline_settings_groupschema_MaterialSpecular_TxsdGlesPipelineSettingsGroupChoiceMaterialSpecular_

	XsdGoPkgHasElem_blend_enablechoicegles_pipeline_settings_groupschema_BlendEnable_TxsdGlesPipelineSettingsGroupChoiceBlendEnable_

	XsdGoPkgHasElem_light_spot_directionchoicegles_pipeline_settings_groupschema_LightSpotDirection_TxsdGlesPipelineSettingsGroupChoiceLightSpotDirection_

	XsdGoPkgHasElem_depth_test_enablechoicegles_pipeline_settings_groupschema_DepthTestEnable_TxsdGlesPipelineSettingsGroupChoiceDepthTestEnable_

	XsdGoPkgHasElem_multisample_enablechoicegles_pipeline_settings_groupschema_MultisampleEnable_TxsdGlesPipelineSettingsGroupChoiceMultisampleEnable_

	XsdGoPkgHasElem_cull_facechoicegles_pipeline_settings_groupschema_CullFace_TxsdGlesPipelineSettingsGroupChoiceCullFace_

	XsdGoPkgHasElem_sample_coverage_enablechoicegles_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlesPipelineSettingsGroupChoiceSampleCoverageEnable_

	XsdGoPkgHasElem_cull_face_enablechoicegles_pipeline_settings_groupschema_CullFaceEnable_TxsdGlesPipelineSettingsGroupChoiceCullFaceEnable_

}

type TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates struct {
	XsdGoPkgHasGroup_GlesPipelineSettingsGroup

}

type XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_ struct {
	States *TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates `xml:"http://www.collada.org/2008/03/COLLADASchema states"`

}

//	volume depth
type XsdGoPkgHasAttr_Slice_XsdtNonNegativeInteger_0 struct {
//	volume depth
	Slice xsdt.NonNegativeInteger `xml:"http://www.collada.org/2008/03/COLLADASchema slice,attr"`

}

//	Returns the default value for Slice -- 0
func (me XsdGoPkgHasAttr_Slice_XsdtNonNegativeInteger_0) SliceDefault () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(0) }

type XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_ struct {
	Param *TkinematicsParamType `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	array index
type XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0 struct {
//	array index
	Index xsdt.NonNegativeInteger `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

//	Returns the default value for Index -- 0
func (me XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0) IndexDefault () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(0) }

//	cube face
type XsdGoPkgHasAttr_Face_TimageFaceEnum_PositiveX struct {
//	cube face
	Face TimageFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema face,attr"`

}

//	Returns the default value for Face -- "POSITIVE_X"
func (me XsdGoPkgHasAttr_Face_TimageFaceEnum_PositiveX) FaceDefault () TimageFaceEnum { return TimageFaceEnum("POSITIVE_X") }

//	mip level
type XsdGoPkgHasAttr_Mip_XsdtNonNegativeInteger_0 struct {
//	mip level
	Mip xsdt.NonNegativeInteger `xml:"http://www.collada.org/2008/03/COLLADASchema mip,attr"`

}

//	Returns the default value for Mip -- 0
func (me XsdGoPkgHasAttr_Mip_XsdtNonNegativeInteger_0) MipDefault () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(0) }

type TfxRendertargetType struct {
//	volume depth
	XsdGoPkgHasAttr_Slice_XsdtNonNegativeInteger_0

	XsdGoPkgHasElem_paramchoicefx_rendertarget_typeschema_Param_TxsdFxRendertargetTypeChoiceParam_

//	array index
	XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0

	XsdGoPkgHasElem_instance_imagesequencefx_sampler_typeschema_InstanceImage_TinstanceImageType_

//	cube face
	XsdGoPkgHasAttr_Face_TimageFaceEnum_PositiveX

//	mip level
	XsdGoPkgHasAttr_Mip_XsdtNonNegativeInteger_0

}

type TfxColortargetType struct {
	TfxRendertargetType

}

type XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_ struct {
	ColorTargets []*TfxColortargetType `xml:"http://www.collada.org/2008/03/COLLADASchema color_target"`

}

type TfxDepthtargetType struct {
	TfxRendertargetType

}

type XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_ struct {
	DepthTargets []*TfxDepthtargetType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_target"`

}

//	? GEOMETRY: [default] The geometry associated with this instance_geometry or nstance_material.
//	? SCENE_GEOMETRY: Draw the entire scene's geometry but with this effect, not the effects or
//	materials already associated with the geometry. This is for techniques such as shadow-buffer
//	generation, where you might be interested only in extracting the Z value from the light. This is
//	without regard to ordering on the assumption that ZBuffer handles order.
//	? SCENE_IMAGE: Draw the entire scene naturally into the render targets. Hense producing an image
//	of the scene.  When used more then once, the later uses must include what has been rendered so far
//	to the backbuffer since the first render.  This is for effects that need an accurate image of the scene
//	to work on for effects such as postprocessing blurs.
//	? FULL_SCREEN_QUAD: Positions are 0,0 to 1,1 and the UVs match.
type TfxDrawType xsdt.String

//	Since TfxDrawType is just a simple String type, this merely returns the current string value.
func (me TfxDrawType) String () string { return xsdt.String(me).String() }

//	Since TfxDrawType is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxDrawType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TfxDrawType's alias type xsdt.String.
func (me TfxDrawType) ToXsdtString () xsdt.String { return xsdt.String(me) }

type XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_ struct {
	Draw TfxDrawType `xml:"http://www.collada.org/2008/03/COLLADASchema draw"`

}

type TfxClearstencilType struct {
	XsdGoPkgValue xsdt.Byte `xml:",chardata"`

	XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0

}

type XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_ struct {
	StencilClears []*TfxClearstencilType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_clear"`

}

type TfxCleardepthType struct {
	XsdGoPkgValue TfloatType `xml:",chardata"`

	XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0

}

type XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_ struct {
	DepthClears []*TfxCleardepthType `xml:"http://www.collada.org/2008/03/COLLADASchema depth_clear"`

}

type TfxStenciltargetType struct {
	TfxRendertargetType

}

type XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_ struct {
	StencilTargets []*TfxStenciltargetType `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_target"`

}

type TfxClearcolorType struct {
	XsdGoPkgValue TfxColorType `xml:",chardata"`

	XsdGoPkgHasAttr_Index_XsdtNonNegativeInteger_0

}

type XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_ struct {
	ColorClears []*TfxClearcolorType `xml:"http://www.collada.org/2008/03/COLLADASchema color_clear"`

}

type TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate struct {
	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_

	XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_

	XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_

	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_

	XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_

	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_

	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_

}

type XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_ struct {
	Evaluate *TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate"`

}

type TxsdProfileGlesTypeSequenceTechniqueSequencePass struct {
	XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Evaluate_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceEvaluate_

	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_gles_typeschema_States_TxsdProfileGlesTypeSequenceTechniqueSequencePassSequenceStates_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_ struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	Passes []*TxsdProfileGlesTypeSequenceTechniqueSequencePass `xml:"http://www.collada.org/2008/03/COLLADASchema pass"`

}

type TxsdProfileGlesTypeSequenceTechnique struct {
	XsdGoPkgHasAttr_Id_XsdtId_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles_typeschema_Pass_TxsdProfileGlesTypeSequenceTechniqueSequencePass_

	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

}

type XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Techniques []*TxsdProfileGlesTypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

type TprofileGlesType struct {
//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	XsdGoPkgHasAttr_Platform_XsdtNCName_Pc

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElems_techniquesequenceprofile_gles_typeschema_Technique_TxsdProfileGlesTypeSequenceTechnique_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElems_newparamsequenceprofile_gles_typeschema_Newparam_TglesNewparamType_

}

type XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_ struct {
	ProfileGles *TprofileGlesType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_GLES"`

}

//	Bridge COLLADA FX to an external FX framework such as NVIDIA's CgFX or Microsoft's Direct3D FX
type TprofileBridgeType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	XsdGoPkgHasAttr_Platform_XsdtNCName_

	XsdGoPkgHasAttr_Id_XsdtId_

//	The url to the file which we are bridging too
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

}

type XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_ struct {
	ProfileBridge *TprofileBridgeType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_BRIDGE"`

}

//	Opens a block of CG platform-specific data types and technique declarations.
//	The include element is used to import source code or precompiled binary shaders into the FX Runtime by referencing an external resource.
type TfxIncludeType struct {
//	The url attribute refers to resource.  This may refer to a local resource using a relative URL
//	fragment identifier that begins with the "#" character. The url attribute may refer to an external
//	resource using an absolute or relative URL.
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_ struct {
	Includes []*TfxIncludeType `xml:"http://www.collada.org/2008/03/COLLADASchema include"`

}

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
//	Declare and prepare a shader for execution in the rendering pipeline of a pass.
//	collect the sources together for the shader.  Use concat to make the final string.
//	this is allows you to include some code right here....like a #define for an uber shader that is imported
type XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_ struct {
//	this is allows you to include some code right here....like a #define for an uber shader that is imported
	Inlines []xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema inline"`

}

//	Ref attribute identifies the sid of a code or include element
type XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_ struct {
//	Ref attribute identifies the sid of a code or include element
	Imports []*TkinematicsParamType `xml:"http://www.collada.org/2008/03/COLLADASchema import"`

}

type TfxSourcesType struct {
//	this is allows you to include some code right here....like a #define for an uber shader that is imported
	XsdGoPkgHasElems_inlinechoicesequencefx_sources_typeschema_Inline_XsdtString_

//	Ref attribute identifies the sid of a code or include element
	XsdGoPkgHasElems_importchoicesequencefx_sources_typeschema_Import_TxsdFxSourcesTypeSequenceChoiceImport_

}

//	entry function name for this shader
type XsdGoPkgHasAttr_Entry_XsdtToken_ struct {
//	entry function name for this shader
	Entry xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema entry,attr"`

}

type TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources struct {
//	entry function name for this shader
	XsdGoPkgHasAttr_Entry_XsdtToken_

	TfxSourcesType

}

type XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_ struct {
//	collect the sources together for the shader.  Use concat to make the final string.
	Sources *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources `xml:"http://www.collada.org/2008/03/COLLADASchema sources"`

}

//	Binds values to uniform inputs of a shader.
//	A group that specifies the allowable types for CG profile parameters.
type XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_ struct {
	Fixed TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema fixed"`

}

type XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_ struct {
	Half2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2x1"`

}

type XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_ struct {
	Bool3X1 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3x1"`

}

type Tint3X4Type TlistOfIntsType

//	This convenience method just performs a simple type conversion to Tint3X4Type's alias type TlistOfIntsType.
func (me Tint3X4Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint3X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint3X4Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint3X4Type is just a simple String type, this merely returns the current string value.
func (me Tint3X4Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_ struct {
	Int3X4 Tint3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3x4"`

}

type Tbool3X3Type TlistOfBoolsType

//	This convenience method just performs a simple type conversion to Tbool3X3Type's alias type TlistOfBoolsType.
func (me Tbool3X3Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool3X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool3X3Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool3X3Type is just a simple String type, this merely returns the current string value.
func (me Tbool3X3Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_ struct {
	Bool3X3 Tbool3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3x3"`

}

type XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_ struct {
	Half3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3x3"`

}

type Tbool4X4Type TlistOfBoolsType

//	Since Tbool4X4Type is just a simple String type, this merely returns the current string value.
func (me Tbool4X4Type) String () string { return TlistOfBoolsType(me).String() }

//	Since Tbool4X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool4X4Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool4X4Type's alias type TlistOfBoolsType.
func (me Tbool4X4Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

type XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_ struct {
	Bool4X4 Tbool4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4x4"`

}

type TglFogCoordSrcEnum xsdt.String

//	Since TglFogCoordSrcEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglFogCoordSrcEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Since TglFogCoordSrcEnum is just a simple String type, this merely returns the current string value.
func (me TglFogCoordSrcEnum) String () string { return xsdt.String(me).String() }

//	This convenience method just performs a simple type conversion to TglFogCoordSrcEnum's alias type xsdt.String.
func (me TglFogCoordSrcEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglFogCoordSrcEnum is "FOG_COORDINATE".
func (me TglFogCoordSrcEnum) IsFogCoordinate () bool { return me == "FOG_COORDINATE" }

//	Returns true if the value of this enumerated TglFogCoordSrcEnum is "FRAGMENT_DEPTH".
func (me TglFogCoordSrcEnum) IsFragmentDepth () bool { return me == "FRAGMENT_DEPTH" }

type TglBlendEquationEnum xsdt.String

//	Returns true if the value of this enumerated TglBlendEquationEnum is "MAX".
func (me TglBlendEquationEnum) IsMax () bool { return me == "MAX" }

//	Since TglBlendEquationEnum is just a simple String type, this merely returns the current string value.
func (me TglBlendEquationEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "FUNC_REVERSE_SUBTRACT".
func (me TglBlendEquationEnum) IsFuncReverseSubtract () bool { return me == "FUNC_REVERSE_SUBTRACT" }

//	Since TglBlendEquationEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TglBlendEquationEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglBlendEquationEnum's alias type xsdt.String.
func (me TglBlendEquationEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "FUNC_ADD".
func (me TglBlendEquationEnum) IsFuncAdd () bool { return me == "FUNC_ADD" }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "MIN".
func (me TglBlendEquationEnum) IsMin () bool { return me == "MIN" }

//	Returns true if the value of this enumerated TglBlendEquationEnum is "FUNC_SUBTRACT".
func (me TglBlendEquationEnum) IsFuncSubtract () bool { return me == "FUNC_SUBTRACT" }

type TglEnumerationType xsdt.String

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFogCoordSrcEnum, but keep in mind the actual value may or may not be a valid TglFogCoordSrcEnum value.
func (me TglEnumerationType) ToTglFogCoordSrcEnum () TglFogCoordSrcEnum { return TglFogCoordSrcEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglLogicOpEnum, but keep in mind the actual value may or may not be a valid TglLogicOpEnum value.
func (me TglEnumerationType) ToTglLogicOpEnum () TglLogicOpEnum { return TglLogicOpEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFogEnum, but keep in mind the actual value may or may not be a valid TglFogEnum value.
func (me TglEnumerationType) ToTglFogEnum () TglFogEnum { return TglFogEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglPolygonModeEnum, but keep in mind the actual value may or may not be a valid TglPolygonModeEnum value.
func (me TglEnumerationType) ToTglPolygonModeEnum () TglPolygonModeEnum { return TglPolygonModeEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFuncEnum, but keep in mind the actual value may or may not be a valid TglFuncEnum value.
func (me TglEnumerationType) ToTglFuncEnum () TglFuncEnum { return TglFuncEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglMaterialEnum, but keep in mind the actual value may or may not be a valid TglMaterialEnum value.
func (me TglEnumerationType) ToTglMaterialEnum () TglMaterialEnum { return TglMaterialEnum(me) }

//	Since TglEnumerationType is just a simple String type, this merely returns the current string value.
func (me TglEnumerationType) String () string { return xsdt.String(me).String() }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFrontFaceEnum, but keep in mind the actual value may or may not be a valid TglFrontFaceEnum value.
func (me TglEnumerationType) ToTglFrontFaceEnum () TglFrontFaceEnum { return TglFrontFaceEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglStencilOpEnum, but keep in mind the actual value may or may not be a valid TglStencilOpEnum value.
func (me TglEnumerationType) ToTglStencilOpEnum () TglStencilOpEnum { return TglStencilOpEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglShadeModelEnum, but keep in mind the actual value may or may not be a valid TglShadeModelEnum value.
func (me TglEnumerationType) ToTglShadeModelEnum () TglShadeModelEnum { return TglShadeModelEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglBlendEquationEnum, but keep in mind the actual value may or may not be a valid TglBlendEquationEnum value.
func (me TglEnumerationType) ToTglBlendEquationEnum () TglBlendEquationEnum { return TglBlendEquationEnum(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglBlendEnum, but keep in mind the actual value may or may not be a valid TglBlendEnum value.
func (me TglEnumerationType) ToTglBlendEnum () TglBlendEnum { return TglBlendEnum(me) }

//	Since TglEnumerationType is just a simple String type, this merely sets the current value from the specified string.
func (me *TglEnumerationType) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglFaceEnum, but keep in mind the actual value may or may not be a valid TglFaceEnum value.
func (me TglEnumerationType) ToTglFaceEnum () TglFaceEnum { return TglFaceEnum(me) }

//	This convenience method just performs a simple type conversion to TglEnumerationType's alias type xsdt.String.
func (me TglEnumerationType) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	TglEnumerationType is an XSD union-type of several types. This is a simple type conversion to TglLightModelColorControlEnum, but keep in mind the actual value may or may not be a valid TglLightModelColorControlEnum value.
func (me TglEnumerationType) ToTglLightModelColorControlEnum () TglLightModelColorControlEnum { return TglLightModelColorControlEnum(me) }

type XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_ struct {
	Enum TglEnumerationType `xml:"http://www.collada.org/2008/03/COLLADASchema enum"`

}

type Tbool4X2Type TlistOfBoolsType

//	Since Tbool4X2Type is just a simple String type, this merely returns the current string value.
func (me Tbool4X2Type) String () string { return TlistOfBoolsType(me).String() }

//	This convenience method just performs a simple type conversion to Tbool4X2Type's alias type TlistOfBoolsType.
func (me Tbool4X2Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool4X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool4X2Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_ struct {
	Bool4X2 Tbool4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4x2"`

}

type XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_ struct {
	Half3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3"`

}

//	Creates an instance of a structured class.
//	Use a series of these to set the members by name.  The ref attribute will be relative to the usertype you are in right now.
//	Assigns a new value to a previously defined parameter.
type TcgSetparamType struct {
	XsdGoPkgHasAttr_Ref_XsdtToken_

	XsdGoPkgHasGroup_CgParamGroup

}

type XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_ struct {
//	Use a series of these to set the members by name.  The ref attribute will be relative to the usertype you are in right now.
	Setparams []*TcgSetparamType `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

type XsdGoPkgHasAttr_Typename_XsdtToken_ struct {
	Typename xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema typename,attr"`

}

//	Reference a code or include element which defines the usertype
type XsdGoPkgHasAttr_Source_XsdtNCName_ struct {
//	Reference a code or include element which defines the usertype
	Source xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema source,attr"`

}

type TcgUserType struct {
	XsdGoPkgHasAttr_Typename_XsdtToken_

//	Reference a code or include element which defines the usertype
	XsdGoPkgHasAttr_Source_XsdtNCName_

//	Some usertypes do not have data.  They may be used only to implement interface functions.
//	Use a series of these to set the members by name.  The ref attribute will be relative to the usertype you are in right now.
	XsdGoPkgHasElems_setparamsequencecg_user_typeschema_Setparam_TcgSetparamType_

}

type XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_ struct {
	Usertype *TcgUserType `xml:"http://www.collada.org/2008/03/COLLADASchema usertype"`

}

//	Creates a parameter of a one-dimensional array type.
//	The array may be resized when changed because it is connected to a Cg unsized array.
type XsdGoPkgHasAttr_Resizable_XsdtBoolean_False struct {
//	The array may be resized when changed because it is connected to a Cg unsized array.
	Resizable xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema resizable,attr"`

}

//	Returns the default value for Resizable -- false
func (me XsdGoPkgHasAttr_Resizable_XsdtBoolean_False) ResizableDefault () xsdt.Boolean { return xsdt.Boolean(false) }

type TcgArrayType struct {
//	The length attribute specifies the length of the array.
	XsdGoPkgHasAttr_Length_XsdtPositiveInteger_

//	First element types the array.  If more than one then init entire array and must match length attribute.  If only one then repeat based on length attribute.
	XsdGoPkgHasGroup_CgParamGroup

//	The array may be resized when changed because it is connected to a Cg unsized array.
	XsdGoPkgHasAttr_Resizable_XsdtBoolean_False

}

type XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_ struct {
	Array *TcgArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

type Tint2X2Type TlistOfIntsType

//	Since Tint2X2Type is just a simple String type, this merely returns the current string value.
func (me Tint2X2Type) String () string { return TlistOfIntsType(me).String() }

//	Since Tint2X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint2X2Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tint2X2Type's alias type TlistOfIntsType.
func (me Tint2X2Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

type XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_ struct {
	Int2X2 Tint2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2x2"`

}

type XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_ struct {
	Fixed2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2x4"`

}

type XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_ struct {
	Half4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4x4"`

}

type Tbool2X3Type TlistOfBoolsType

//	Since Tbool2X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool2X3Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool2X3Type is just a simple String type, this merely returns the current string value.
func (me Tbool2X3Type) String () string { return TlistOfBoolsType(me).String() }

//	This convenience method just performs a simple type conversion to Tbool2X3Type's alias type TlistOfBoolsType.
func (me Tbool2X3Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

type XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_ struct {
	Bool2X3 Tbool2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2x3"`

}

type XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_ struct {
	Fixed4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4x2"`

}

type XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_ struct {
	Half4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4"`

}

type Tint4X2Type TlistOfIntsType

//	Since Tint4X2Type is just a simple String type, this merely returns the current string value.
func (me Tint4X2Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint4X2Type's alias type TlistOfIntsType.
func (me Tint4X2Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint4X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint4X2Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_ struct {
	Int4X2 Tint4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4x2"`

}

type XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_ struct {
	Half4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4x3"`

}

type XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_ struct {
	Int3X1 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3x1"`

}

type XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_ struct {
	Fixed4X4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4x4"`

}

type Tbool4X3Type TlistOfBoolsType

//	This convenience method just performs a simple type conversion to Tbool4X3Type's alias type TlistOfBoolsType.
func (me Tbool4X3Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool4X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool4X3Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool4X3Type is just a simple String type, this merely returns the current string value.
func (me Tbool4X3Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_ struct {
	Bool4X3 Tbool4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4x3"`

}

type Tint2X3Type TlistOfIntsType

//	This convenience method just performs a simple type conversion to Tint2X3Type's alias type TlistOfIntsType.
func (me Tint2X3Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint2X3Type is just a simple String type, this merely returns the current string value.
func (me Tint2X3Type) String () string { return TlistOfIntsType(me).String() }

//	Since Tint2X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint2X3Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_ struct {
	Int2X3 Tint2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2x3"`

}

type XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_ struct {
	Fixed4X3 Tfloat4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4x3"`

}

type Tbool3X2Type TlistOfBoolsType

//	Since Tbool3X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool3X2Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool3X2Type's alias type TlistOfBoolsType.
func (me Tbool3X2Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool3X2Type is just a simple String type, this merely returns the current string value.
func (me Tbool3X2Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_ struct {
	Bool3X2 Tbool3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3x2"`

}

type XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_ struct {
	Half3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3x4"`

}

type XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_ struct {
	Half2X4 Tfloat2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2x4"`

}

type XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_ struct {
	Fixed4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4"`

}

type XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_ struct {
	Half3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3x1"`

}

type XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_ struct {
	Fixed3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3"`

}

type XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_ struct {
	Bool4X1 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool4x1"`

}

type XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_ struct {
	Fixed2X1 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2x1"`

}

type XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_ struct {
	Half4X2 Tfloat4X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4x2"`

}

type Tint3X2Type TlistOfIntsType

//	Since Tint3X2Type is just a simple String type, this merely returns the current string value.
func (me Tint3X2Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint3X2Type's alias type TlistOfIntsType.
func (me Tint3X2Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint3X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint3X2Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_ struct {
	Int3X2 Tint3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3x2"`

}

type XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_ struct {
	Fixed2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2"`

}

type XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_ struct {
	Half4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema half4x1"`

}

type XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_ struct {
	Fixed4X1 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed4x1"`

}

type XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_ struct {
	Half2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2"`

}

type XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_ struct {
	Fixed3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3x2"`

}

type XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_ struct {
	Half3X2 Tfloat3X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half3x2"`

}

type Tbool2X2Type TlistOfBoolsType

//	Since Tbool2X2Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool2X2Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool2X2Type's alias type TlistOfBoolsType.
func (me Tbool2X2Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool2X2Type is just a simple String type, this merely returns the current string value.
func (me Tbool2X2Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_ struct {
	Bool2X2 Tbool2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2x2"`

}

type XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_ struct {
	Fixed3X3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3x3"`

}

type Tint2X4Type TlistOfIntsType

//	Since Tint2X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint2X4Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	Since Tint2X4Type is just a simple String type, this merely returns the current string value.
func (me Tint2X4Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint2X4Type's alias type TlistOfIntsType.
func (me Tint2X4Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

type XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_ struct {
	Int2X4 Tint2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2x4"`

}

type XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_ struct {
	Fixed2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2x2"`

}

type Tbool3X4Type TlistOfBoolsType

//	Since Tbool3X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool3X4Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tbool3X4Type's alias type TlistOfBoolsType.
func (me Tbool3X4Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool3X4Type is just a simple String type, this merely returns the current string value.
func (me Tbool3X4Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_ struct {
	Bool3X4 Tbool3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool3x4"`

}

type XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_ struct {
	Half2X2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2x2"`

}

type Tint4X3Type TlistOfIntsType

//	Since Tint4X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint4X3Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tint4X3Type's alias type TlistOfIntsType.
func (me Tint4X3Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint4X3Type is just a simple String type, this merely returns the current string value.
func (me Tint4X3Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_ struct {
	Int4X3 Tint4X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4x3"`

}

type Tint4X4Type TlistOfIntsType

//	Since Tint4X4Type is just a simple String type, this merely returns the current string value.
func (me Tint4X4Type) String () string { return TlistOfIntsType(me).String() }

//	This convenience method just performs a simple type conversion to Tint4X4Type's alias type TlistOfIntsType.
func (me Tint4X4Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint4X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint4X4Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

type XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_ struct {
	Int4X4 Tint4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4x4"`

}

type XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_ struct {
	Int4X1 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema int4x1"`

}

type XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_ struct {
	Bool2X1 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2x1"`

}

type Tbool2X4Type TlistOfBoolsType

//	This convenience method just performs a simple type conversion to Tbool2X4Type's alias type TlistOfBoolsType.
func (me Tbool2X4Type) ToTlistOfBoolsType () TlistOfBoolsType { return TlistOfBoolsType(me) }

//	Since Tbool2X4Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tbool2X4Type) SetFromString (s string)  { (*TlistOfBoolsType)(me).SetFromString(s) }

//	Since Tbool2X4Type is just a simple String type, this merely returns the current string value.
func (me Tbool2X4Type) String () string { return TlistOfBoolsType(me).String() }

type XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_ struct {
	Bool2X4 Tbool2X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bool2x4"`

}

type XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_ struct {
	Half2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema half2x3"`

}

type XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_ struct {
	Half TfloatType `xml:"http://www.collada.org/2008/03/COLLADASchema half"`

}

type Tint3X3Type TlistOfIntsType

//	Since Tint3X3Type is just a simple String type, this merely sets the current value from the specified string.
func (me *Tint3X3Type) SetFromString (s string)  { (*TlistOfIntsType)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to Tint3X3Type's alias type TlistOfIntsType.
func (me Tint3X3Type) ToTlistOfIntsType () TlistOfIntsType { return TlistOfIntsType(me) }

//	Since Tint3X3Type is just a simple String type, this merely returns the current string value.
func (me Tint3X3Type) String () string { return TlistOfIntsType(me).String() }

type XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_ struct {
	Int3X3 Tint3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema int3x3"`

}

type XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_ struct {
	Fixed3X4 Tfloat3X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3x4"`

}

type XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_ struct {
	Fixed3X1 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed3x1"`

}

type XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_ struct {
	Int2X1 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema int2x1"`

}

type XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_ struct {
	Fixed2X3 Tfloat2X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema fixed2x3"`

}

type XsdGoPkgHasGroup_CgParamGroup struct {
	XsdGoPkgHasElem_float4x2choicefx_setparam_groupschema_Float4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_int2x1choicecg_param_groupschema_Int2X1_Tint2Type_

	XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_fixed2x3choicecg_param_groupschema_Fixed2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_fixedchoicecg_param_groupschema_Fixed_TfloatType_

	XsdGoPkgHasElem_half2x1choicecg_param_groupschema_Half2X1_Tfloat2Type_

	XsdGoPkgHasElem_bool3x1choicecg_param_groupschema_Bool3X1_Tbool3Type_

	XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_int3x4choicecg_param_groupschema_Int3X4_Tint3X4Type_

	XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_bool3x3choicecg_param_groupschema_Bool3X3_Tbool3X3Type_

	XsdGoPkgHasElem_half3x3choicecg_param_groupschema_Half3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_bool4x4choicecg_param_groupschema_Bool4X4_Tbool4X4Type_

	XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_

	XsdGoPkgHasElem_bool4x2choicecg_param_groupschema_Bool4X2_Tbool4X2Type_

	XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_half3choicecg_param_groupschema_Half3_Tfloat3Type_

	XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_

	XsdGoPkgHasElem_float2x3choicefx_setparam_groupschema_Float2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_usertypechoicecg_param_groupschema_Usertype_TcgUserType_

	XsdGoPkgHasElem_arraychoicecg_param_groupschema_Array_TcgArrayType_

	XsdGoPkgHasElem_int2x2choicecg_param_groupschema_Int2X2_Tint2X2Type_

	XsdGoPkgHasElem_float4x1choicefx_setparam_groupschema_Float4X1_Tfloat4Type_

	XsdGoPkgHasElem_fixed2x4choicecg_param_groupschema_Fixed2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_half4x4choicecg_param_groupschema_Half4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_bool2x3choicecg_param_groupschema_Bool2X3_Tbool2X3Type_

	XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_fixed4x2choicecg_param_groupschema_Fixed4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_half4choicecg_param_groupschema_Half4_Tfloat4Type_

	XsdGoPkgHasElem_float3x1choicefx_setparam_groupschema_Float3X1_Tfloat3Type_

	XsdGoPkgHasElem_int4x2choicecg_param_groupschema_Int4X2_Tint4X2Type_

	XsdGoPkgHasElem_half4x3choicecg_param_groupschema_Half4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_int3x1choicecg_param_groupschema_Int3X1_Tint3Type_

	XsdGoPkgHasElem_fixed4x4choicecg_param_groupschema_Fixed4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_bool4x3choicecg_param_groupschema_Bool4X3_Tbool4X3Type_

	XsdGoPkgHasElem_int2x3choicecg_param_groupschema_Int2X3_Tint2X3Type_

	XsdGoPkgHasElem_fixed4x3choicecg_param_groupschema_Fixed4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_bool3x2choicecg_param_groupschema_Bool3X2_Tbool3X2Type_

	XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_float3x4choicefx_setparam_groupschema_Float3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_half3x4choicecg_param_groupschema_Half3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_half2x4choicecg_param_groupschema_Half2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_fixed4choicecg_param_groupschema_Fixed4_Tfloat4Type_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_half3x1choicecg_param_groupschema_Half3X1_Tfloat3Type_

	XsdGoPkgHasElem_float4x3choicefx_setparam_groupschema_Float4X3_Tfloat4X3Type_

	XsdGoPkgHasElem_float2x1choicefx_setparam_groupschema_Float2X1_Tfloat2Type_

	XsdGoPkgHasElem_fixed3choicecg_param_groupschema_Fixed3_Tfloat3Type_

	XsdGoPkgHasElem_bool4x1choicecg_param_groupschema_Bool4X1_Tbool4Type_

	XsdGoPkgHasElem_fixed2x1choicecg_param_groupschema_Fixed2X1_Tfloat2Type_

	XsdGoPkgHasElem_half4x2choicecg_param_groupschema_Half4X2_Tfloat4X2Type_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_int3x2choicecg_param_groupschema_Int3X2_Tint3X2Type_

	XsdGoPkgHasElem_fixed2choicecg_param_groupschema_Fixed2_Tfloat2Type_

	XsdGoPkgHasElem_half4x1choicecg_param_groupschema_Half4X1_Tfloat4Type_

	XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_

	XsdGoPkgHasElem_fixed4x1choicecg_param_groupschema_Fixed4X1_Tfloat4Type_

	XsdGoPkgHasElem_half2choicecg_param_groupschema_Half2_Tfloat2Type_

	XsdGoPkgHasElem_fixed3x2choicecg_param_groupschema_Fixed3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_half3x2choicecg_param_groupschema_Half3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_bool2x2choicecg_param_groupschema_Bool2X2_Tbool2X2Type_

	XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_

	XsdGoPkgHasElem_fixed3x3choicecg_param_groupschema_Fixed3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_int2x4choicecg_param_groupschema_Int2X4_Tint2X4Type_

	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_

	XsdGoPkgHasElem_fixed2x2choicecg_param_groupschema_Fixed2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_float2x4choicefx_setparam_groupschema_Float2X4_Tfloat2X4Type_

	XsdGoPkgHasElem_bool3x4choicecg_param_groupschema_Bool3X4_Tbool3X4Type_

	XsdGoPkgHasElem_half2x2choicecg_param_groupschema_Half2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_int4x3choicecg_param_groupschema_Int4X3_Tint4X3Type_

	XsdGoPkgHasElem_int4x4choicecg_param_groupschema_Int4X4_Tint4X4Type_

	XsdGoPkgHasElem_int4x1choicecg_param_groupschema_Int4X1_Tint4Type_

	XsdGoPkgHasElem_stringchoicefx_annotate_groupschema_String_XsdtString_

	XsdGoPkgHasElem_bool2x1choicecg_param_groupschema_Bool2X1_Tbool2Type_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_bool2x4choicecg_param_groupschema_Bool2X4_Tbool2X4Type_

	XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_half2x3choicecg_param_groupschema_Half2X3_Tfloat2X3Type_

	XsdGoPkgHasElem_halfchoicecg_param_groupschema_Half_TfloatType_

	XsdGoPkgHasElem_float3x2choicefx_setparam_groupschema_Float3X2_Tfloat3X2Type_

	XsdGoPkgHasElem_int3x3choicecg_param_groupschema_Int3X3_Tint3X3Type_

	XsdGoPkgHasElem_fixed3x4choicecg_param_groupschema_Fixed3X4_Tfloat3X4Type_

	XsdGoPkgHasElem_fixed3x1choicecg_param_groupschema_Fixed3X1_Tfloat3Type_

	XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_

}

//	References a predefined parameter in shader binding declarations.
type TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam struct {
	XsdGoPkgHasAttr_Ref_XsdtNCName_

}

type XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_ struct {
//	References a predefined parameter in shader binding declarations.
	Param *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

type TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform struct {
//	The identifier for a uniform input parameter to the shader (a formal function parameter or in-scope
//	global) that will be bound to an external resource.
	XsdGoPkgHasAttr_Symbol_XsdtNCName_

	XsdGoPkgHasGroup_CgParamGroup

//	References a predefined parameter in shader binding declarations.
	XsdGoPkgHasElem_paramchoicebind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_Param_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam_

}

type XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_ struct {
//	Binds values to uniform inputs of a shader.
	BindUniforms []*TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform `xml:"http://www.collada.org/2008/03/COLLADASchema bind_uniform"`

}

//	GPU Pipeline stage for this programmable shader. Current standards are VERTEX (vertex shader), FRAGMENT (pixel or fragment shader).  These are recognized by both GLSL and CG
type TfxPipelineStageEnum xsdt.String

//	Since TfxPipelineStageEnum is just a simple String type, this merely returns the current string value.
func (me TfxPipelineStageEnum) String () string { return xsdt.String(me).String() }

//	Returns true if the value of this enumerated TfxPipelineStageEnum is "VERTEX".
func (me TfxPipelineStageEnum) IsVertex () bool { return me == "VERTEX" }

//	This convenience method just performs a simple type conversion to TfxPipelineStageEnum's alias type xsdt.String.
func (me TfxPipelineStageEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Since TfxPipelineStageEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxPipelineStageEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxPipelineStageEnum is "GEOMETRY".
func (me TfxPipelineStageEnum) IsGeometry () bool { return me == "GEOMETRY" }

//	Returns true if the value of this enumerated TfxPipelineStageEnum is "TESSELLATION".
func (me TfxPipelineStageEnum) IsTessellation () bool { return me == "TESSELLATION" }

//	Returns true if the value of this enumerated TfxPipelineStageEnum is "FRAGMENT".
func (me TfxPipelineStageEnum) IsFragment () bool { return me == "FRAGMENT" }

type XsdGoPkgHasAttr_Stage_TfxPipelineStageEnum_ struct {
//	GPU Pipeline stage for this programmable shader. Current standards are VERTEX (vertex shader), FRAGMENT (pixel or fragment shader).  These are recognized by both GLSL and CG
	Stage TfxPipelineStageEnum `xml:"http://www.collada.org/2008/03/COLLADASchema stage,attr"`

}

//	identify the platform_sku and compiler options to build a binary
//	compiler or linker results symbol.  Ex arbvp1, arbfp1, glslv, glslf, hlslv, hlslf, vs_3_0, ps_3_0
type XsdGoPkgHasAttr_Target_XsdtString_ struct {
//	compiler or linker results symbol.  Ex arbvp1, arbfp1, glslv, glslf, hlslv, hlslf, vs_3_0, ps_3_0
	Target xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema target,attr"`

}

//	contains a sequence of hexadecimal encoded binary
type XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_ struct {
//	contains a sequence of hexadecimal encoded binary
	Hex *TxsdImageSourceTypeChoiceHex `xml:"http://www.collada.org/2008/03/COLLADASchema hex"`

}

type TxsdFxTargetTypeSequenceBinary struct {
//	contains a sequence of hexadecimal encoded binary
	XsdGoPkgHasElem_hexchoicebinarysequencefx_target_typeschema_Hex_TxsdFxTargetTypeSequenceBinaryChoiceHex_

	XsdGoPkgHasElem_refchoiceimage_source_typeschema_Ref_XsdtAnyURI_

}

type XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_ struct {
	Binary *TxsdFxTargetTypeSequenceBinary `xml:"http://www.collada.org/2008/03/COLLADASchema binary"`

}

//	compiler or linker options
type XsdGoPkgHasAttr_Options_XsdtString_ struct {
//	compiler or linker options
	Options xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema options,attr"`

}

//	Name of sub-platform.  May be identical to the platform_series
type XsdGoPkgHasAttr_Platform_XsdtString_ struct {
//	Name of sub-platform.  May be identical to the platform_series
	Platform xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema platform,attr"`

}

type TfxTargetType struct {
	XsdGoPkgHasElem_binarysequencefx_target_typeschema_Binary_TxsdFxTargetTypeSequenceBinary_

//	compiler or linker options
	XsdGoPkgHasAttr_Options_XsdtString_

//	Name of sub-platform.  May be identical to the platform_series
	XsdGoPkgHasAttr_Platform_XsdtString_

//	compiler or linker results symbol.  Ex arbvp1, arbfp1, glslv, glslf, hlslv, hlslf, vs_3_0, ps_3_0
	XsdGoPkgHasAttr_Target_XsdtString_

}

type XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_ struct {
	Compilers []*TfxTargetType `xml:"http://www.collada.org/2008/03/COLLADASchema compiler"`

}

type TxsdCgPassTypeSequenceProgramSequenceShader struct {
	XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_

//	collect the sources together for the shader.  Use concat to make the final string.
	XsdGoPkgHasElem_sourcessequenceshadersequenceprogramsequencecg_pass_typeschema_Sources_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceSources_

//	Binds values to uniform inputs of a shader.
	XsdGoPkgHasElems_bind_uniformsequenceshadersequenceprogramsequencecg_pass_typeschema_BindUniform_TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniform_

//	In which pipeline stage this programmable shader is designed to execute, for example, VERTEX, FRAGMENT, etc.
	XsdGoPkgHasAttr_Stage_TfxPipelineStageEnum_

}

type XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_ struct {
//	Declare and prepare a shader for execution in the rendering pipeline of a pass.
	Shaders []*TxsdCgPassTypeSequenceProgramSequenceShader `xml:"http://www.collada.org/2008/03/COLLADASchema shader"`

}

type TxsdCgPassTypeSequenceProgram struct {
//	Declare and prepare a shader for execution in the rendering pipeline of a pass.
	XsdGoPkgHasElems_shadersequenceprogramsequencecg_pass_typeschema_Shader_TxsdCgPassTypeSequenceProgramSequenceShader_

}

type XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_ struct {
	Program *TxsdCgPassTypeSequenceProgram `xml:"http://www.collada.org/2008/03/COLLADASchema program"`

}

type TxsdCgPassTypeSequenceEvaluate struct {
	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_

	XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_

	XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_

	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_

	XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_

	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_

	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_

}

type XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_ struct {
	Evaluate *TxsdCgPassTypeSequenceEvaluate `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate"`

}

//	A group that defines all of the renderstates used for the CG and GLSL profiles.
type XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_ struct {
	MaterialSpecular *TxsdGlesPipelineSettingsGroupChoiceMaterialEmission `xml:"http://www.collada.org/2008/03/COLLADASchema material_specular"`

}

type TglMaxTextureImageUnitsIndexType xsdt.NonNegativeInteger

//	Returns a string representation of this TglMaxTextureImageUnitsIndexType's current non-string scalar value.
func (me TglMaxTextureImageUnitsIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	Since TglMaxTextureImageUnitsIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglMaxTextureImageUnitsIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

//	This convenience method just performs a simple type conversion to TglMaxTextureImageUnitsIndexType's alias type xsdt.NonNegativeInteger.
func (me TglMaxTextureImageUnitsIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

type XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_ struct {
	Index TglMaxTextureImageUnitsIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceTexture2DEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_ struct {
	Texture2DEnable *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema texture2D_enable"`

}

type XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_ struct {
	CullFace *TxsdGlesPipelineSettingsGroupChoiceCullFace `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face"`

}

type XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_ struct {
	DepthRange *TxsdGlesPipelineSettingsGroupChoiceDepthRange `xml:"http://www.collada.org/2008/03/COLLADASchema depth_range"`

}

type XsdGoPkgHasAttr_Value_XsdtString_ struct {
	Value xsdt.String `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceTextureEnvMode struct {
	XsdGoPkgHasAttr_Value_XsdtString_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_ struct {
	TextureEnvMode *TxsdGlPipelineSettingsGroupChoiceTextureEnvMode `xml:"http://www.collada.org/2008/03/COLLADASchema texture_env_mode"`

}

type XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_ struct {
	LineStippleEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema line_stipple_enable"`

}

type XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_ struct {
	MaterialAmbient *TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema material_ambient"`

}

type XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_ struct {
	CullFaceEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face_enable"`

}

type XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_ struct {
	MaterialDiffuse *TxsdGlesPipelineSettingsGroupChoiceMaterialDiffuse `xml:"http://www.collada.org/2008/03/COLLADASchema material_diffuse"`

}

type XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_ struct {
	LogicOp *TxsdGlesPipelineSettingsGroupChoiceLogicOp `xml:"http://www.collada.org/2008/03/COLLADASchema logic_op"`

}

type TglMaxClipPlanesIndexType xsdt.NonNegativeInteger

//	This convenience method just performs a simple type conversion to TglMaxClipPlanesIndexType's alias type xsdt.NonNegativeInteger.
func (me TglMaxClipPlanesIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

//	Returns a string representation of this TglMaxClipPlanesIndexType's current non-string scalar value.
func (me TglMaxClipPlanesIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	Since TglMaxClipPlanesIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglMaxClipPlanesIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Index_TglMaxClipPlanesIndexType_ struct {
	Index TglMaxClipPlanesIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Index_TglMaxClipPlanesIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_ struct {
	ClipPlaneEnable *TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema clip_plane_enable"`

}

type XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_ struct {
	ColorLogicOpEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema color_logic_op_enable"`

}

type XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_ struct {
	LightingEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema lighting_enable"`

}

type XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_ struct {
	PointFadeThresholdSize *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_fade_threshold_size"`

}

type XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_ struct {
	LightModelLocalViewerEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_local_viewer_enable"`

}

type TglMaxLightsIndexType xsdt.NonNegativeInteger

//	This convenience method just performs a simple type conversion to TglMaxLightsIndexType's alias type xsdt.NonNegativeInteger.
func (me TglMaxLightsIndexType) ToXsdtNonNegativeInteger () xsdt.NonNegativeInteger { return xsdt.NonNegativeInteger(me) }

//	Returns a string representation of this TglMaxLightsIndexType's current non-string scalar value.
func (me TglMaxLightsIndexType) String () string { return xsdt.NonNegativeInteger(me).String() }

//	Since TglMaxLightsIndexType is a non-string scalar type (either boolean or numeric), sets the current value obtained from parsing the specified string.
func (me *TglMaxLightsIndexType) SetFromString (s string)  { (*xsdt.NonNegativeInteger)(me).SetFromString(s) }

type XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_ struct {
	Index TglMaxLightsIndexType `xml:"http://www.collada.org/2008/03/COLLADASchema index,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_ struct {
	LightConstantAttenuation *TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema light_constant_attenuation"`

}

type XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_ struct {
	Src *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc `xml:"http://www.collada.org/2008/03/COLLADASchema src"`

}

type XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_ struct {
	Dest *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest `xml:"http://www.collada.org/2008/03/COLLADASchema dest"`

}

type TxsdGlPipelineSettingsGroupChoiceBlendFunc struct {
	XsdGoPkgHasElem_destsequenceblend_funcchoicegl_pipeline_settings_groupschema_Dest_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceDest_

	XsdGoPkgHasElem_srcsequenceblend_funcchoicegl_pipeline_settings_groupschema_Src_TxsdGlPipelineSettingsGroupChoiceBlendFuncSequenceSrc_

}

type XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_ struct {
	BlendFunc *TxsdGlPipelineSettingsGroupChoiceBlendFunc `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func"`

}

type XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep struct {
	Value TglStencilOpEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "KEEP"
func (me XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep) ValueDefault () TglStencilOpEnum { return TglStencilOpEnum("KEEP") }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

type XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ struct {
	Zpass *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

type XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ struct {
	Fail *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

type XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack struct {
	Value TglFaceEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "FRONT_AND_BACK"
func (me XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack) ValueDefault () TglFaceEnum { return TglFaceEnum("FRONT_AND_BACK") }

type TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack

}

type XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ struct {
	Face *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

type XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ struct {
	Zfail *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

type TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate struct {
	XsdGoPkgHasElem_failsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_

	XsdGoPkgHasElem_facesequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_

	XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_

	XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_

}

type XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_ struct {
	StencilOpSeparate *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op_separate"`

}

type XsdGoPkgHasAttr_Value_TglLightModelColorControlEnum_SingleColor struct {
	Value TglLightModelColorControlEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "SINGLE_COLOR"
func (me XsdGoPkgHasAttr_Value_TglLightModelColorControlEnum_SingleColor) ValueDefault () TglLightModelColorControlEnum { return TglLightModelColorControlEnum("SINGLE_COLOR") }

type TxsdGlPipelineSettingsGroupChoiceLightModelColorControl struct {
	XsdGoPkgHasAttr_Value_TglLightModelColorControlEnum_SingleColor

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_ struct {
	LightModelColorControl *TxsdGlPipelineSettingsGroupChoiceLightModelColorControl `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_color_control"`

}

type XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_ struct {
	StencilTestEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_test_enable"`

}

type XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_ struct {
	Scissor *TxsdGlesPipelineSettingsGroupChoiceScissor `xml:"http://www.collada.org/2008/03/COLLADASchema scissor"`

}

type XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_ struct {
	ProjectionMatrix *TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix `xml:"http://www.collada.org/2008/03/COLLADASchema projection_matrix"`

}

type XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_ struct {
	FogColor *TxsdGlesPipelineSettingsGroupChoiceFogColor `xml:"http://www.collada.org/2008/03/COLLADASchema fog_color"`

}

type XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_ struct {
	FogStart *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess `xml:"http://www.collada.org/2008/03/COLLADASchema fog_start"`

}

type TxsdGlPipelineSettingsGroupChoiceLightSpotExponent struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_0

}

type XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_ struct {
	LightSpotExponent *TxsdGlPipelineSettingsGroupChoiceLightSpotExponent `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_exponent"`

}

type XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_ struct {
	MaterialEmission *TxsdGlesPipelineSettingsGroupChoiceMaterialEmission `xml:"http://www.collada.org/2008/03/COLLADASchema material_emission"`

}

type XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_ struct {
	Value *TfxSampler3DType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_ struct {
	Param xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

type TxsdGlPipelineSettingsGroupChoiceTexture3D struct {
	XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

	XsdGoPkgHasElem_valuechoicetexture3Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler3DType_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

}

type XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_ struct {
	Texture3D *TxsdGlPipelineSettingsGroupChoiceTexture3D `xml:"http://www.collada.org/2008/03/COLLADASchema texture3D"`

}

type TxsdGlPipelineSettingsGroupChoiceTextureEnvColor struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

}

type XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_ struct {
	TextureEnvColor *TxsdGlPipelineSettingsGroupChoiceTextureEnvColor `xml:"http://www.collada.org/2008/03/COLLADASchema texture_env_color"`

}

type XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_ struct {
	PolygonOffsetFillEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_fill_enable"`

}

type TxsdGlPipelineSettingsGroupChoiceLightEnable struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

}

type XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_ struct {
	LightEnable *TxsdGlPipelineSettingsGroupChoiceLightEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_enable"`

}

type XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_ struct {
	TextureCUBEEnable *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema textureCUBE_enable"`

}

type XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_ struct {
	PolygonOffset *TxsdGlesPipelineSettingsGroupChoicePolygonOffset `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset"`

}

type TxsdGlPipelineSettingsGroupChoiceLightSpotDirection struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat3Type_001

	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

}

type XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_ struct {
	LightSpotDirection *TxsdGlPipelineSettingsGroupChoiceLightSpotDirection `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_direction"`

}

type XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_ struct {
	LogicOpEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema logic_op_enable"`

}

type XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_ struct {
	PointDistanceAttenuation *TxsdGlesPipelineSettingsGroupChoicePointDistanceAttenuation `xml:"http://www.collada.org/2008/03/COLLADASchema point_distance_attenuation"`

}

type XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_ struct {
	Ref *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

type XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_ struct {
	Func *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

type XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_ struct {
	Mask *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

type TxsdGlPipelineSettingsGroupChoiceStencilFunc struct {
	XsdGoPkgHasElem_refsequencestencil_funcchoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceRef_

	XsdGoPkgHasElem_funcsequencestencil_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceFunc_

	XsdGoPkgHasElem_masksequencestencil_funcchoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSequenceMask_

}

type XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_ struct {
	StencilFunc *TxsdGlPipelineSettingsGroupChoiceStencilFunc `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func"`

}

type XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_ struct {
	LineSmoothEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema line_smooth_enable"`

}

type XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_ struct {
	MultisampleEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema multisample_enable"`

}

type XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_ struct {
	DepthTestEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_test_enable"`

}

type TxsdGlPipelineSettingsGroupChoiceLightSpecular struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_ struct {
	LightSpecular *TxsdGlPipelineSettingsGroupChoiceLightSpecular `xml:"http://www.collada.org/2008/03/COLLADASchema light_specular"`

}

type XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_ struct {
	LightQuadraticAttenuation *TxsdGlPipelineSettingsGroupChoiceLightSpotExponent `xml:"http://www.collada.org/2008/03/COLLADASchema light_quadratic_attenuation"`

}

type XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_ struct {
	FogMode *TxsdGlesPipelineSettingsGroupChoiceFogMode `xml:"http://www.collada.org/2008/03/COLLADASchema fog_mode"`

}

type XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_ struct {
	Texture3DEnable *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema texture3D_enable"`

}

type XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_ struct {
	StencilMask *TxsdGlesPipelineSettingsGroupChoiceStencilMask `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask"`

}

type XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_ struct {
	LineWidth *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema line_width"`

}

type XsdGoPkgHasAttr_Value_Tfloat2Type_ struct {
	Value Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGlPipelineSettingsGroupChoiceDepthBounds struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat2Type_

}

type XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_ struct {
	DepthBounds *TxsdGlPipelineSettingsGroupChoiceDepthBounds `xml:"http://www.collada.org/2008/03/COLLADASchema depth_bounds"`

}

type XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_ struct {
	ScissorTestEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema scissor_test_enable"`

}

type XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_ struct {
	Value *TfxSampler2DType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type TxsdGlPipelineSettingsGroupChoiceTexture2D struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_valuechoicetexture2Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler2DType_

	XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

}

type XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_ struct {
	Texture2D *TxsdGlPipelineSettingsGroupChoiceTexture2D `xml:"http://www.collada.org/2008/03/COLLADASchema texture2D"`

}

type XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_ struct {
	DepthClampEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_clamp_enable"`

}

type XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_ struct {
	FogEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema fog_enable"`

}

type XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd struct {
	Value TglBlendEquationEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "FUNC_ADD"
func (me XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd) ValueDefault () TglBlendEquationEnum { return TglBlendEquationEnum("FUNC_ADD") }

type TxsdGlPipelineSettingsGroupChoiceBlendEquation struct {
	XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_ struct {
	BlendEquation *TxsdGlPipelineSettingsGroupChoiceBlendEquation `xml:"http://www.collada.org/2008/03/COLLADASchema blend_equation"`

}

type XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_ struct {
	FrontFace *TxsdGlesPipelineSettingsGroupChoiceFrontFace `xml:"http://www.collada.org/2008/03/COLLADASchema front_face"`

}

type XsdGoPkgHasAttr_Value_TglMaterialEnum_AmbientAndDiffuse struct {
	Value TglMaterialEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "AMBIENT_AND_DIFFUSE"
func (me XsdGoPkgHasAttr_Value_TglMaterialEnum_AmbientAndDiffuse) ValueDefault () TglMaterialEnum { return TglMaterialEnum("AMBIENT_AND_DIFFUSE") }

type TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TglMaterialEnum_AmbientAndDiffuse

}

type XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_ struct {
	Mode *TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode `xml:"http://www.collada.org/2008/03/COLLADASchema mode"`

}

type XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_ struct {
	Face *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

type TxsdGlPipelineSettingsGroupChoiceColorMaterial struct {
	XsdGoPkgHasElem_modesequencecolor_materialchoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceMode_

	XsdGoPkgHasElem_facesequencecolor_materialchoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceColorMaterialSequenceFace_

}

type XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_ struct {
	ColorMaterial *TxsdGlPipelineSettingsGroupChoiceColorMaterial `xml:"http://www.collada.org/2008/03/COLLADASchema color_material"`

}

type XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_ struct {
	Value *TfxSamplerRECTType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type TxsdGlPipelineSettingsGroupChoiceTextureRECT struct {
	XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

	XsdGoPkgHasElem_valuechoicetextureRECTchoicegl_pipeline_settings_groupschema_Value_TfxSamplerRECTType_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

}

type XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_ struct {
	TextureRECT *TxsdGlPipelineSettingsGroupChoiceTextureRECT `xml:"http://www.collada.org/2008/03/COLLADASchema textureRECT"`

}

type XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ struct {
	SampleAlphaToCoverageEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_coverage_enable"`

}

type XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ struct {
	Back *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema back"`

}

type XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ struct {
	Front *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema front"`

}

type XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ struct {
	Mask *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

type XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ struct {
	Ref *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

type TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate struct {
	XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Front_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_

	XsdGoPkgHasElem_masksequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_

	XsdGoPkgHasElem_refsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Ref_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_

	XsdGoPkgHasElem_backsequencestencil_func_separatechoicegl_pipeline_settings_groupschema_Back_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_

}

type XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_ struct {
	StencilFuncSeparate *TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func_separate"`

}

type XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_ struct {
	Value *TfxSamplerDEPTHType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type TxsdGlPipelineSettingsGroupChoiceTextureDEPTH struct {
	XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_valuechoicetextureDEPTHchoicegl_pipeline_settings_groupschema_Value_TfxSamplerDEPTHType_

}

type XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_ struct {
	TextureDEPTH *TxsdGlPipelineSettingsGroupChoiceTextureDEPTH `xml:"http://www.collada.org/2008/03/COLLADASchema textureDEPTH"`

}

type XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_ struct {
	Fail *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

type XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_ struct {
	Zfail *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

type XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_ struct {
	Zpass *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

type TxsdGlPipelineSettingsGroupChoiceStencilOp struct {
	XsdGoPkgHasElem_failsequencestencil_opchoicegl_pipeline_settings_groupschema_Fail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceFail_

	XsdGoPkgHasElem_zfailsequencestencil_opchoicegl_pipeline_settings_groupschema_Zfail_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZfail_

	XsdGoPkgHasElem_zpasssequencestencil_opchoicegl_pipeline_settings_groupschema_Zpass_TxsdGlPipelineSettingsGroupChoiceStencilOpSequenceZpass_

}

type XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_ struct {
	StencilOp *TxsdGlPipelineSettingsGroupChoiceStencilOp `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op"`

}

type XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_ struct {
	BlendEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema blend_enable"`

}

type XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_ struct {
	LightModelAmbient *TxsdGlesPipelineSettingsGroupChoiceMaterialAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_ambient"`

}

type XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_ struct {
	PolygonOffsetPointEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_point_enable"`

}

type TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_TfloatType_180

}

type XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_ struct {
	LightSpotCutoff *TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff `xml:"http://www.collada.org/2008/03/COLLADASchema light_spot_cutoff"`

}

type XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_ struct {
	SampleCoverageEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_coverage_enable"`

}

type XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_ struct {
	DitherEnable *TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable `xml:"http://www.collada.org/2008/03/COLLADASchema dither_enable"`

}

type XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_ struct {
	LightLinearAttenuation *TxsdGlPipelineSettingsGroupChoiceLightSpotExponent `xml:"http://www.collada.org/2008/03/COLLADASchema light_linear_attenuation"`

}

type XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ struct {
	DestRgb *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest `xml:"http://www.collada.org/2008/03/COLLADASchema dest_rgb"`

}

type XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ struct {
	SrcRgb *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc `xml:"http://www.collada.org/2008/03/COLLADASchema src_rgb"`

}

type XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ struct {
	SrcAlpha *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceSrc `xml:"http://www.collada.org/2008/03/COLLADASchema src_alpha"`

}

type XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ struct {
	DestAlpha *TxsdGlesPipelineSettingsGroupChoiceBlendFuncSequenceDest `xml:"http://www.collada.org/2008/03/COLLADASchema dest_alpha"`

}

type TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate struct {
	XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_

	XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcRgb_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_

	XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_SrcAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_

	XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegl_pipeline_settings_groupschema_DestAlpha_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_

}

type XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_ struct {
	BlendFuncSeparate *TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func_separate"`

}

type XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_ struct {
	PolygonStippleEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_stipple_enable"`

}

type XsdGoPkgHasAttr_Value_TglFogCoordSrcEnum_FogCoordinate struct {
	Value TglFogCoordSrcEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "FOG_COORDINATE"
func (me XsdGoPkgHasAttr_Value_TglFogCoordSrcEnum_FogCoordinate) ValueDefault () TglFogCoordSrcEnum { return TglFogCoordSrcEnum("FOG_COORDINATE") }

type TxsdGlPipelineSettingsGroupChoiceFogCoordSrc struct {
	XsdGoPkgHasAttr_Value_TglFogCoordSrcEnum_FogCoordinate

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_ struct {
	FogCoordSrc *TxsdGlPipelineSettingsGroupChoiceFogCoordSrc `xml:"http://www.collada.org/2008/03/COLLADASchema fog_coord_src"`

}

type XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_ struct {
	FogDensity *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema fog_density"`

}

type XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_ struct {
	FogEnd *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema fog_end"`

}

type XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_ struct {
	Texture1DEnable *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema texture1D_enable"`

}

type XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_ struct {
	PolygonOffsetLineEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_line_enable"`

}

type XsdGoPkgHasAttr_Value_Tint2Type_165536 struct {
	Value Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "1 65536"
func (me XsdGoPkgHasAttr_Value_Tint2Type_165536) ValueDefault () Tint2Type { return Tint2Type("1 65536") }

type TxsdGlPipelineSettingsGroupChoiceLineStipple struct {
	XsdGoPkgHasAttr_Value_Tint2Type_165536

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_ struct {
	LineStipple *TxsdGlPipelineSettingsGroupChoiceLineStipple `xml:"http://www.collada.org/2008/03/COLLADASchema line_stipple"`

}

type XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_ struct {
	DepthFunc *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema depth_func"`

}

type XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_ struct {
	MaterialShininess *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess `xml:"http://www.collada.org/2008/03/COLLADASchema material_shininess"`

}

type XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ struct {
	Mask *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

type XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ struct {
	Face *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

type TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate struct {
	XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Mask_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_

	XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_

}

type XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_ struct {
	StencilMaskSeparate *TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask_separate"`

}

type XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_ struct {
	PointSize *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_size"`

}

type XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_ struct {
	ShadeModel *TxsdGlesPipelineSettingsGroupChoiceShadeModel `xml:"http://www.collada.org/2008/03/COLLADASchema shade_model"`

}

type XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_ struct {
	TextureDEPTHEnable *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema textureDEPTH_enable"`

}

type XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ struct {
	Rgb *TxsdGlPipelineSettingsGroupChoiceBlendEquation `xml:"http://www.collada.org/2008/03/COLLADASchema rgb"`

}

type XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ struct {
	Alpha *TxsdGlPipelineSettingsGroupChoiceBlendEquation `xml:"http://www.collada.org/2008/03/COLLADASchema alpha"`

}

type TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate struct {
	XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Alpha_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_

	XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegl_pipeline_settings_groupschema_Rgb_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_

}

type XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_ struct {
	BlendEquationSeparate *TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema blend_equation_separate"`

}

type XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_ struct {
	AlphaTestEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema alpha_test_enable"`

}

type XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_ struct {
	PolygonSmoothEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_smooth_enable"`

}

type XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_ struct {
	LightModelTwoSideEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema light_model_two_side_enable"`

}

type XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_ struct {
	PointSizeMin *TxsdGlesPipelineSettingsGroupChoiceMaterialShininess `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_min"`

}

type XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_ struct {
	SampleAlphaToOneEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_one_enable"`

}

type XsdGoPkgHasAttr_Value_Tbool4Type_TrueTrueTrueTrue struct {
	Value Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "true true true true"
func (me XsdGoPkgHasAttr_Value_Tbool4Type_TrueTrueTrueTrue) ValueDefault () Tbool4Type { return Tbool4Type("true true true true") }

type TxsdGlPipelineSettingsGroupChoiceColorMask struct {
	XsdGoPkgHasAttr_Value_Tbool4Type_TrueTrueTrueTrue

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_ struct {
	ColorMask *TxsdGlPipelineSettingsGroupChoiceColorMask `xml:"http://www.collada.org/2008/03/COLLADASchema color_mask"`

}

type XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_ struct {
	BlendColor *TxsdGlesPipelineSettingsGroupChoiceFogColor `xml:"http://www.collada.org/2008/03/COLLADASchema blend_color"`

}

type TxsdGlPipelineSettingsGroupChoiceClipPlane struct {
	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

	XsdGoPkgHasAttr_Index_TglMaxClipPlanesIndexType_

}

type XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_ struct {
	ClipPlane *TxsdGlPipelineSettingsGroupChoiceClipPlane `xml:"http://www.collada.org/2008/03/COLLADASchema clip_plane"`

}

type XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_ struct {
	Func *TxsdGlesPipelineSettingsGroupChoiceStencilFuncSequenceFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

type XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_ struct {
	Value *TxsdGlesPipelineSettingsGroupChoiceAlphaFuncSequenceValue `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type TxsdGlPipelineSettingsGroupChoiceAlphaFunc struct {
	XsdGoPkgHasElem_valuesequencealpha_funcchoicegl_pipeline_settings_groupschema_Value_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceValue_

	XsdGoPkgHasElem_funcsequencealpha_funcchoicegl_pipeline_settings_groupschema_Func_TxsdGlPipelineSettingsGroupChoiceAlphaFuncSequenceFunc_

}

type XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_ struct {
	AlphaFunc *TxsdGlPipelineSettingsGroupChoiceAlphaFunc `xml:"http://www.collada.org/2008/03/COLLADASchema alpha_func"`

}

type XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_ struct {
	ColorMaterialEnable *TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable `xml:"http://www.collada.org/2008/03/COLLADASchema color_material_enable"`

}

type XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_ struct {
	Value *TfxSampler1DType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type TxsdGlPipelineSettingsGroupChoiceTexture1D struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

	XsdGoPkgHasElem_valuechoicetexture1Dchoicegl_pipeline_settings_groupschema_Value_TfxSampler1DType_

}

type XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_ struct {
	Texture1D *TxsdGlPipelineSettingsGroupChoiceTexture1D `xml:"http://www.collada.org/2008/03/COLLADASchema texture1D"`

}

type TxsdGlPipelineSettingsGroupChoiceLightAmbient struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0001

}

type XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_ struct {
	LightAmbient *TxsdGlPipelineSettingsGroupChoiceLightAmbient `xml:"http://www.collada.org/2008/03/COLLADASchema light_ambient"`

}

type XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_ struct {
	DepthMask *TxsdGlesPipelineSettingsGroupChoiceColorMaterialEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_mask"`

}

type XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_ struct {
	PointSmoothEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema point_smooth_enable"`

}

type XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_ struct {
	TextureRECTEnable *TxsdGlPipelineSettingsGroupChoiceTexture2DEnable `xml:"http://www.collada.org/2008/03/COLLADASchema textureRECT_enable"`

}

type XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_ struct {
	LightDiffuse *TxsdGlPipelineSettingsGroupChoiceLightSpecular `xml:"http://www.collada.org/2008/03/COLLADASchema light_diffuse"`

}

type XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_ struct {
	Value *TfxSamplerCUBEType `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type TxsdGlPipelineSettingsGroupChoiceTextureCUBE struct {
	XsdGoPkgHasAttr_Index_TglMaxTextureImageUnitsIndexType_

	XsdGoPkgHasElem_paramchoicetexture3Dchoicegl_pipeline_settings_groupschema_Param_XsdtNCName_

	XsdGoPkgHasElem_valuechoicetextureCUBEchoicegl_pipeline_settings_groupschema_Value_TfxSamplerCUBEType_

}

type XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_ struct {
	TextureCUBE *TxsdGlPipelineSettingsGroupChoiceTextureCUBE `xml:"http://www.collada.org/2008/03/COLLADASchema textureCUBE"`

}

type XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_ struct {
	ModelViewMatrix *TxsdGlesPipelineSettingsGroupChoiceModelViewMatrix `xml:"http://www.collada.org/2008/03/COLLADASchema model_view_matrix"`

}

type XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_ struct {
	Face *TxsdGlPipelineSettingsGroupChoiceStencilOpSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

type XsdGoPkgHasAttr_Value_TglPolygonModeEnum_Fill struct {
	Value TglPolygonModeEnum `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

//	Returns the default value for Value -- "FILL"
func (me XsdGoPkgHasAttr_Value_TglPolygonModeEnum_Fill) ValueDefault () TglPolygonModeEnum { return TglPolygonModeEnum("FILL") }

type TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode struct {
	XsdGoPkgHasAttr_Value_TglPolygonModeEnum_Fill

	XsdGoPkgHasAttr_Param_XsdtNCName_

}

type XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_ struct {
	Mode *TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode `xml:"http://www.collada.org/2008/03/COLLADASchema mode"`

}

type TxsdGlPipelineSettingsGroupChoicePolygonMode struct {
	XsdGoPkgHasElem_facesequencepolygon_modechoicegl_pipeline_settings_groupschema_Face_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceFace_

	XsdGoPkgHasElem_modesequencepolygon_modechoicegl_pipeline_settings_groupschema_Mode_TxsdGlPipelineSettingsGroupChoicePolygonModeSequenceMode_

}

type XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_ struct {
	PolygonMode *TxsdGlPipelineSettingsGroupChoicePolygonMode `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_mode"`

}

type XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_ struct {
	DepthBoundsEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_bounds_enable"`

}

type TxsdGlPipelineSettingsGroupChoiceLightPosition struct {
	XsdGoPkgHasAttr_Index_TglMaxLightsIndexType_

	XsdGoPkgHasAttr_Param_XsdtNCName_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0010

}

type XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_ struct {
	LightPosition *TxsdGlPipelineSettingsGroupChoiceLightPosition `xml:"http://www.collada.org/2008/03/COLLADASchema light_position"`

}

type XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_ struct {
	NormalizeEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema normalize_enable"`

}

type XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_ struct {
	RescaleNormalEnable *TxsdGlesPipelineSettingsGroupChoiceSampleAlphaToOneEnable `xml:"http://www.collada.org/2008/03/COLLADASchema rescale_normal_enable"`

}

type XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_ struct {
	PointSizeMax *TxsdGlesPipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_max"`

}

type XsdGoPkgHasGroup_GlPipelineSettingsGroup struct {
	XsdGoPkgHasElem_material_diffusechoicegl_pipeline_settings_groupschema_MaterialDiffuse_TxsdGlPipelineSettingsGroupChoiceMaterialDiffuse_

	XsdGoPkgHasElem_logic_opchoicegl_pipeline_settings_groupschema_LogicOp_TxsdGlPipelineSettingsGroupChoiceLogicOp_

	XsdGoPkgHasElem_clip_plane_enablechoicegl_pipeline_settings_groupschema_ClipPlaneEnable_TxsdGlPipelineSettingsGroupChoiceClipPlaneEnable_

	XsdGoPkgHasElem_color_logic_op_enablechoicegl_pipeline_settings_groupschema_ColorLogicOpEnable_TxsdGlPipelineSettingsGroupChoiceColorLogicOpEnable_

	XsdGoPkgHasElem_lighting_enablechoicegl_pipeline_settings_groupschema_LightingEnable_TxsdGlPipelineSettingsGroupChoiceLightingEnable_

	XsdGoPkgHasElem_point_fade_threshold_sizechoicegl_pipeline_settings_groupschema_PointFadeThresholdSize_TxsdGlPipelineSettingsGroupChoicePointFadeThresholdSize_

	XsdGoPkgHasElem_light_model_local_viewer_enablechoicegl_pipeline_settings_groupschema_LightModelLocalViewerEnable_TxsdGlPipelineSettingsGroupChoiceLightModelLocalViewerEnable_

	XsdGoPkgHasElem_light_constant_attenuationchoicegl_pipeline_settings_groupschema_LightConstantAttenuation_TxsdGlPipelineSettingsGroupChoiceLightConstantAttenuation_

	XsdGoPkgHasElem_blend_funcchoicegl_pipeline_settings_groupschema_BlendFunc_TxsdGlPipelineSettingsGroupChoiceBlendFunc_

	XsdGoPkgHasElem_stencil_op_separatechoicegl_pipeline_settings_groupschema_StencilOpSeparate_TxsdGlPipelineSettingsGroupChoiceStencilOpSeparate_

	XsdGoPkgHasElem_light_model_color_controlchoicegl_pipeline_settings_groupschema_LightModelColorControl_TxsdGlPipelineSettingsGroupChoiceLightModelColorControl_

	XsdGoPkgHasElem_stencil_test_enablechoicegl_pipeline_settings_groupschema_StencilTestEnable_TxsdGlPipelineSettingsGroupChoiceStencilTestEnable_

	XsdGoPkgHasElem_scissorchoicegl_pipeline_settings_groupschema_Scissor_TxsdGlPipelineSettingsGroupChoiceScissor_

	XsdGoPkgHasElem_projection_matrixchoicegl_pipeline_settings_groupschema_ProjectionMatrix_TxsdGlPipelineSettingsGroupChoiceProjectionMatrix_

	XsdGoPkgHasElem_fog_colorchoicegl_pipeline_settings_groupschema_FogColor_TxsdGlPipelineSettingsGroupChoiceFogColor_

	XsdGoPkgHasElem_fog_startchoicegl_pipeline_settings_groupschema_FogStart_TxsdGlPipelineSettingsGroupChoiceFogStart_

	XsdGoPkgHasElem_light_spot_exponentchoicegl_pipeline_settings_groupschema_LightSpotExponent_TxsdGlPipelineSettingsGroupChoiceLightSpotExponent_

	XsdGoPkgHasElem_material_emissionchoicegl_pipeline_settings_groupschema_MaterialEmission_TxsdGlPipelineSettingsGroupChoiceMaterialEmission_

	XsdGoPkgHasElem_texture3Dchoicegl_pipeline_settings_groupschema_Texture3D_TxsdGlPipelineSettingsGroupChoiceTexture3D_

	XsdGoPkgHasElem_texture_env_colorchoicegl_pipeline_settings_groupschema_TextureEnvColor_TxsdGlPipelineSettingsGroupChoiceTextureEnvColor_

	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetFillEnable_

	XsdGoPkgHasElem_light_enablechoicegl_pipeline_settings_groupschema_LightEnable_TxsdGlPipelineSettingsGroupChoiceLightEnable_

	XsdGoPkgHasElem_textureCUBE_enablechoicegl_pipeline_settings_groupschema_TextureCUBEEnable_TxsdGlPipelineSettingsGroupChoiceTextureCUBEEnable_

	XsdGoPkgHasElem_polygon_offsetchoicegl_pipeline_settings_groupschema_PolygonOffset_TxsdGlPipelineSettingsGroupChoicePolygonOffset_

	XsdGoPkgHasElem_light_spot_directionchoicegl_pipeline_settings_groupschema_LightSpotDirection_TxsdGlPipelineSettingsGroupChoiceLightSpotDirection_

	XsdGoPkgHasElem_logic_op_enablechoicegl_pipeline_settings_groupschema_LogicOpEnable_TxsdGlPipelineSettingsGroupChoiceLogicOpEnable_

	XsdGoPkgHasElem_point_distance_attenuationchoicegl_pipeline_settings_groupschema_PointDistanceAttenuation_TxsdGlPipelineSettingsGroupChoicePointDistanceAttenuation_

	XsdGoPkgHasElem_stencil_funcchoicegl_pipeline_settings_groupschema_StencilFunc_TxsdGlPipelineSettingsGroupChoiceStencilFunc_

	XsdGoPkgHasElem_line_smooth_enablechoicegl_pipeline_settings_groupschema_LineSmoothEnable_TxsdGlPipelineSettingsGroupChoiceLineSmoothEnable_

	XsdGoPkgHasElem_multisample_enablechoicegl_pipeline_settings_groupschema_MultisampleEnable_TxsdGlPipelineSettingsGroupChoiceMultisampleEnable_

	XsdGoPkgHasElem_depth_test_enablechoicegl_pipeline_settings_groupschema_DepthTestEnable_TxsdGlPipelineSettingsGroupChoiceDepthTestEnable_

	XsdGoPkgHasElem_light_specularchoicegl_pipeline_settings_groupschema_LightSpecular_TxsdGlPipelineSettingsGroupChoiceLightSpecular_

	XsdGoPkgHasElem_light_quadratic_attenuationchoicegl_pipeline_settings_groupschema_LightQuadraticAttenuation_TxsdGlPipelineSettingsGroupChoiceLightQuadraticAttenuation_

	XsdGoPkgHasElem_fog_modechoicegl_pipeline_settings_groupschema_FogMode_TxsdGlPipelineSettingsGroupChoiceFogMode_

	XsdGoPkgHasElem_texture3D_enablechoicegl_pipeline_settings_groupschema_Texture3DEnable_TxsdGlPipelineSettingsGroupChoiceTexture3DEnable_

	XsdGoPkgHasElem_stencil_maskchoicegl_pipeline_settings_groupschema_StencilMask_TxsdGlPipelineSettingsGroupChoiceStencilMask_

	XsdGoPkgHasElem_line_widthchoicegl_pipeline_settings_groupschema_LineWidth_TxsdGlPipelineSettingsGroupChoiceLineWidth_

	XsdGoPkgHasElem_depth_boundschoicegl_pipeline_settings_groupschema_DepthBounds_TxsdGlPipelineSettingsGroupChoiceDepthBounds_

	XsdGoPkgHasElem_scissor_test_enablechoicegl_pipeline_settings_groupschema_ScissorTestEnable_TxsdGlPipelineSettingsGroupChoiceScissorTestEnable_

	XsdGoPkgHasElem_texture2Dchoicegl_pipeline_settings_groupschema_Texture2D_TxsdGlPipelineSettingsGroupChoiceTexture2D_

	XsdGoPkgHasElem_depth_clamp_enablechoicegl_pipeline_settings_groupschema_DepthClampEnable_TxsdGlPipelineSettingsGroupChoiceDepthClampEnable_

	XsdGoPkgHasElem_fog_enablechoicegl_pipeline_settings_groupschema_FogEnable_TxsdGlPipelineSettingsGroupChoiceFogEnable_

	XsdGoPkgHasElem_blend_equationchoicegl_pipeline_settings_groupschema_BlendEquation_TxsdGlPipelineSettingsGroupChoiceBlendEquation_

	XsdGoPkgHasElem_front_facechoicegl_pipeline_settings_groupschema_FrontFace_TxsdGlPipelineSettingsGroupChoiceFrontFace_

	XsdGoPkgHasElem_color_materialchoicegl_pipeline_settings_groupschema_ColorMaterial_TxsdGlPipelineSettingsGroupChoiceColorMaterial_

	XsdGoPkgHasElem_textureRECTchoicegl_pipeline_settings_groupschema_TextureRECT_TxsdGlPipelineSettingsGroupChoiceTextureRECT_

	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_

	XsdGoPkgHasElem_stencil_func_separatechoicegl_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGlPipelineSettingsGroupChoiceStencilFuncSeparate_

	XsdGoPkgHasElem_textureDEPTHchoicegl_pipeline_settings_groupschema_TextureDEPTH_TxsdGlPipelineSettingsGroupChoiceTextureDEPTH_

	XsdGoPkgHasElem_stencil_opchoicegl_pipeline_settings_groupschema_StencilOp_TxsdGlPipelineSettingsGroupChoiceStencilOp_

	XsdGoPkgHasElem_blend_enablechoicegl_pipeline_settings_groupschema_BlendEnable_TxsdGlPipelineSettingsGroupChoiceBlendEnable_

	XsdGoPkgHasElem_light_model_ambientchoicegl_pipeline_settings_groupschema_LightModelAmbient_TxsdGlPipelineSettingsGroupChoiceLightModelAmbient_

	XsdGoPkgHasElem_polygon_offset_point_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetPointEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetPointEnable_

	XsdGoPkgHasElem_light_spot_cutoffchoicegl_pipeline_settings_groupschema_LightSpotCutoff_TxsdGlPipelineSettingsGroupChoiceLightSpotCutoff_

	XsdGoPkgHasElem_sample_coverage_enablechoicegl_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGlPipelineSettingsGroupChoiceSampleCoverageEnable_

	XsdGoPkgHasElem_dither_enablechoicegl_pipeline_settings_groupschema_DitherEnable_TxsdGlPipelineSettingsGroupChoiceDitherEnable_

	XsdGoPkgHasElem_light_linear_attenuationchoicegl_pipeline_settings_groupschema_LightLinearAttenuation_TxsdGlPipelineSettingsGroupChoiceLightLinearAttenuation_

	XsdGoPkgHasElem_blend_func_separatechoicegl_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGlPipelineSettingsGroupChoiceBlendFuncSeparate_

	XsdGoPkgHasElem_polygon_stipple_enablechoicegl_pipeline_settings_groupschema_PolygonStippleEnable_TxsdGlPipelineSettingsGroupChoicePolygonStippleEnable_

	XsdGoPkgHasElem_fog_coord_srcchoicegl_pipeline_settings_groupschema_FogCoordSrc_TxsdGlPipelineSettingsGroupChoiceFogCoordSrc_

	XsdGoPkgHasElem_fog_densitychoicegl_pipeline_settings_groupschema_FogDensity_TxsdGlPipelineSettingsGroupChoiceFogDensity_

	XsdGoPkgHasElem_fog_endchoicegl_pipeline_settings_groupschema_FogEnd_TxsdGlPipelineSettingsGroupChoiceFogEnd_

	XsdGoPkgHasElem_texture1D_enablechoicegl_pipeline_settings_groupschema_Texture1DEnable_TxsdGlPipelineSettingsGroupChoiceTexture1DEnable_

	XsdGoPkgHasElem_polygon_offset_line_enablechoicegl_pipeline_settings_groupschema_PolygonOffsetLineEnable_TxsdGlPipelineSettingsGroupChoicePolygonOffsetLineEnable_

	XsdGoPkgHasElem_line_stipplechoicegl_pipeline_settings_groupschema_LineStipple_TxsdGlPipelineSettingsGroupChoiceLineStipple_

	XsdGoPkgHasElem_depth_funcchoicegl_pipeline_settings_groupschema_DepthFunc_TxsdGlPipelineSettingsGroupChoiceDepthFunc_

	XsdGoPkgHasElem_material_shininesschoicegl_pipeline_settings_groupschema_MaterialShininess_TxsdGlPipelineSettingsGroupChoiceMaterialShininess_

	XsdGoPkgHasElem_stencil_mask_separatechoicegl_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGlPipelineSettingsGroupChoiceStencilMaskSeparate_

	XsdGoPkgHasElem_point_sizechoicegl_pipeline_settings_groupschema_PointSize_TxsdGlPipelineSettingsGroupChoicePointSize_

	XsdGoPkgHasElem_shade_modelchoicegl_pipeline_settings_groupschema_ShadeModel_TxsdGlPipelineSettingsGroupChoiceShadeModel_

	XsdGoPkgHasElem_textureDEPTH_enablechoicegl_pipeline_settings_groupschema_TextureDEPTHEnable_TxsdGlPipelineSettingsGroupChoiceTextureDEPTHEnable_

	XsdGoPkgHasElem_blend_equation_separatechoicegl_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGlPipelineSettingsGroupChoiceBlendEquationSeparate_

	XsdGoPkgHasElem_alpha_test_enablechoicegl_pipeline_settings_groupschema_AlphaTestEnable_TxsdGlPipelineSettingsGroupChoiceAlphaTestEnable_

	XsdGoPkgHasElem_polygon_smooth_enablechoicegl_pipeline_settings_groupschema_PolygonSmoothEnable_TxsdGlPipelineSettingsGroupChoicePolygonSmoothEnable_

	XsdGoPkgHasElem_light_model_two_side_enablechoicegl_pipeline_settings_groupschema_LightModelTwoSideEnable_TxsdGlPipelineSettingsGroupChoiceLightModelTwoSideEnable_

	XsdGoPkgHasElem_point_size_minchoicegl_pipeline_settings_groupschema_PointSizeMin_TxsdGlPipelineSettingsGroupChoicePointSizeMin_

	XsdGoPkgHasElem_sample_alpha_to_one_enablechoicegl_pipeline_settings_groupschema_SampleAlphaToOneEnable_TxsdGlPipelineSettingsGroupChoiceSampleAlphaToOneEnable_

	XsdGoPkgHasElem_color_maskchoicegl_pipeline_settings_groupschema_ColorMask_TxsdGlPipelineSettingsGroupChoiceColorMask_

	XsdGoPkgHasElem_blend_colorchoicegl_pipeline_settings_groupschema_BlendColor_TxsdGlPipelineSettingsGroupChoiceBlendColor_

	XsdGoPkgHasElem_clip_planechoicegl_pipeline_settings_groupschema_ClipPlane_TxsdGlPipelineSettingsGroupChoiceClipPlane_

	XsdGoPkgHasElem_alpha_funcchoicegl_pipeline_settings_groupschema_AlphaFunc_TxsdGlPipelineSettingsGroupChoiceAlphaFunc_

	XsdGoPkgHasElem_color_material_enablechoicegl_pipeline_settings_groupschema_ColorMaterialEnable_TxsdGlPipelineSettingsGroupChoiceColorMaterialEnable_

	XsdGoPkgHasElem_texture1Dchoicegl_pipeline_settings_groupschema_Texture1D_TxsdGlPipelineSettingsGroupChoiceTexture1D_

	XsdGoPkgHasElem_light_ambientchoicegl_pipeline_settings_groupschema_LightAmbient_TxsdGlPipelineSettingsGroupChoiceLightAmbient_

	XsdGoPkgHasElem_depth_maskchoicegl_pipeline_settings_groupschema_DepthMask_TxsdGlPipelineSettingsGroupChoiceDepthMask_

	XsdGoPkgHasElem_point_smooth_enablechoicegl_pipeline_settings_groupschema_PointSmoothEnable_TxsdGlPipelineSettingsGroupChoicePointSmoothEnable_

	XsdGoPkgHasElem_textureRECT_enablechoicegl_pipeline_settings_groupschema_TextureRECTEnable_TxsdGlPipelineSettingsGroupChoiceTextureRECTEnable_

	XsdGoPkgHasElem_light_diffusechoicegl_pipeline_settings_groupschema_LightDiffuse_TxsdGlPipelineSettingsGroupChoiceLightDiffuse_

	XsdGoPkgHasElem_textureCUBEchoicegl_pipeline_settings_groupschema_TextureCUBE_TxsdGlPipelineSettingsGroupChoiceTextureCUBE_

	XsdGoPkgHasElem_model_view_matrixchoicegl_pipeline_settings_groupschema_ModelViewMatrix_TxsdGlPipelineSettingsGroupChoiceModelViewMatrix_

	XsdGoPkgHasElem_polygon_modechoicegl_pipeline_settings_groupschema_PolygonMode_TxsdGlPipelineSettingsGroupChoicePolygonMode_

	XsdGoPkgHasElem_depth_bounds_enablechoicegl_pipeline_settings_groupschema_DepthBoundsEnable_TxsdGlPipelineSettingsGroupChoiceDepthBoundsEnable_

	XsdGoPkgHasElem_light_positionchoicegl_pipeline_settings_groupschema_LightPosition_TxsdGlPipelineSettingsGroupChoiceLightPosition_

	XsdGoPkgHasElem_normalize_enablechoicegl_pipeline_settings_groupschema_NormalizeEnable_TxsdGlPipelineSettingsGroupChoiceNormalizeEnable_

	XsdGoPkgHasElem_rescale_normal_enablechoicegl_pipeline_settings_groupschema_RescaleNormalEnable_TxsdGlPipelineSettingsGroupChoiceRescaleNormalEnable_

	XsdGoPkgHasElem_point_size_maxchoicegl_pipeline_settings_groupschema_PointSizeMax_TxsdGlPipelineSettingsGroupChoicePointSizeMax_

	XsdGoPkgHasElem_material_specularchoicegl_pipeline_settings_groupschema_MaterialSpecular_TxsdGlPipelineSettingsGroupChoiceMaterialSpecular_

	XsdGoPkgHasElem_texture2D_enablechoicegl_pipeline_settings_groupschema_Texture2DEnable_TxsdGlPipelineSettingsGroupChoiceTexture2DEnable_

	XsdGoPkgHasElem_cull_facechoicegl_pipeline_settings_groupschema_CullFace_TxsdGlPipelineSettingsGroupChoiceCullFace_

	XsdGoPkgHasElem_depth_rangechoicegl_pipeline_settings_groupschema_DepthRange_TxsdGlPipelineSettingsGroupChoiceDepthRange_

	XsdGoPkgHasElem_texture_env_modechoicegl_pipeline_settings_groupschema_TextureEnvMode_TxsdGlPipelineSettingsGroupChoiceTextureEnvMode_

	XsdGoPkgHasElem_line_stipple_enablechoicegl_pipeline_settings_groupschema_LineStippleEnable_TxsdGlPipelineSettingsGroupChoiceLineStippleEnable_

	XsdGoPkgHasElem_material_ambientchoicegl_pipeline_settings_groupschema_MaterialAmbient_TxsdGlPipelineSettingsGroupChoiceMaterialAmbient_

	XsdGoPkgHasElem_cull_face_enablechoicegl_pipeline_settings_groupschema_CullFaceEnable_TxsdGlPipelineSettingsGroupChoiceCullFaceEnable_

}

type TxsdCgPassTypeSequenceStates struct {
	XsdGoPkgHasGroup_GlPipelineSettingsGroup

}

type XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_ struct {
	States *TxsdCgPassTypeSequenceStates `xml:"http://www.collada.org/2008/03/COLLADASchema states"`

}

type TcgPassType struct {
	XsdGoPkgHasElem_statessequencecg_pass_typeschema_States_TxsdCgPassTypeSequenceStates_

	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_programsequencecg_pass_typeschema_Program_TxsdCgPassTypeSequenceProgram_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_evaluatesequencecg_pass_typeschema_Evaluate_TxsdCgPassTypeSequenceEvaluate_

}

type XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_ struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	Passes []*TcgPassType `xml:"http://www.collada.org/2008/03/COLLADASchema pass"`

}

type TxsdProfileCgTypeSequenceTechnique struct {
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The technique element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_cg_typeschema_Pass_TcgPassType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Techniques []*TxsdProfileCgTypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

//	The fx_code_common type allows you to specify an inline block of source code.
type TfxCodeType struct {
	XsdGoPkgValue xsdt.String `xml:",chardata"`

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_ struct {
	Codes []*TfxCodeType `xml:"http://www.collada.org/2008/03/COLLADASchema code"`

}

//	Create a new, named param object in the CG Runtime, assign it a type, an initial value, and additional attributes at declaration time.
type TcgNewparamType struct {
//	The semantic element allows you to specify a semantic for this new param.
	XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_

	XsdGoPkgHasAttr_Sid_TsidType_

//	The modifier element allows you to specify a modifier for this new param.
	XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_

//	The annotate element allows you to specify an annotation for this new param.
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasGroup_CgParamGroup

}

type XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_ struct {
	Newparams []*TcgNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

type TprofileCgType struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElems_techniquesequenceprofile_cg_typeschema_Technique_TxsdProfileCgTypeSequenceTechnique_

	XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_

	XsdGoPkgHasElems_newparamsequenceprofile_cg_typeschema_Newparam_TcgNewparamType_

	XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_

//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	XsdGoPkgHasAttr_Platform_XsdtNCName_Pc

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_ struct {
	ProfileCg *TprofileCgType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_CG"`

}

//	Opens a block of GLSL platform-specific data types and technique declarations.
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
type XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_ struct {
	States *TxsdCgPassTypeSequenceStates `xml:"http://www.collada.org/2008/03/COLLADASchema states"`

}

type TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate struct {
	XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_

	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_

	XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_

	XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_

	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_

	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_

	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_

}

type XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_ struct {
	Evaluate *TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate"`

}

//	a program is one or more shaders linked together
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
//	shader variable name
type XsdGoPkgHasAttr_Symbol_XsdtToken_ struct {
//	shader variable name
	Symbol xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema symbol,attr"`

}

//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
type XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_ struct {
//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
	Semantic xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema semantic"`

}

type TxsdGlslProgramTypeSequenceBindAttribute struct {
//	shader variable name
	XsdGoPkgHasAttr_Symbol_XsdtToken_

//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
	XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_

}

type XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_ struct {
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
	BindAttributes []*TxsdGlslProgramTypeSequenceBindAttribute `xml:"http://www.collada.org/2008/03/COLLADASchema bind_attribute"`

}

//	Bind uniforms and samplers
//	Bind uniforms to parameters
type XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_ struct {
//	Bind uniforms to parameters
	Param *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

//	A group that specifies the allowable types for GLSL profile parameters.
//	The glsl_newarray_type element is used to creates a parameter of a one-dimensional array type.
type TglslArrayType struct {
//	First element types the array.  If more than one then init entire array and must match length attribute.  If only one then repeat based on length attribute.
	XsdGoPkgHasGroup_GlslValueGroup

//	The length attribute specifies the length of the array.
	XsdGoPkgHasAttr_Length_XsdtPositiveInteger_

}

type XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_ struct {
	Array *TglslArrayType `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

type XsdGoPkgHasGroup_GlslValueGroup struct {
	XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_sampler1Dchoicefx_newparam_groupschema_Sampler1D_TfxSampler1DType_

	XsdGoPkgHasElem_float4x4choicefx_setparam_groupschema_Float4X4_Tfloat4X4Type_

	XsdGoPkgHasElem_float3x3choicefx_setparam_groupschema_Float3X3_Tfloat3X3Type_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_samplerRECTchoicefx_newparam_groupschema_SamplerRECT_TfxSamplerRECTType_

	XsdGoPkgHasElem_bool4choicefx_setparam_groupschema_Bool4_Tbool4Type_

	XsdGoPkgHasElem_int4choicefx_setparam_groupschema_Int4_Tint4Type_

	XsdGoPkgHasElem_bool3choicefx_setparam_groupschema_Bool3_Tbool3Type_

	XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_

	XsdGoPkgHasElem_int3choicefx_setparam_groupschema_Int3_Tint3Type_

	XsdGoPkgHasElem_float2x2choicefx_setparam_groupschema_Float2X2_Tfloat2X2Type_

	XsdGoPkgHasElem_bool2choicefx_setparam_groupschema_Bool2_Tbool2Type_

	XsdGoPkgHasElem_int2choicefx_setparam_groupschema_Int2_Tint2Type_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_arraychoiceglsl_value_groupschema_Array_TglslArrayType_

	XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

}

type TxsdGlslProgramTypeSequenceBindUniform struct {
	XsdGoPkgHasGroup_GlslValueGroup

//	shader variable name
	XsdGoPkgHasAttr_Symbol_XsdtToken_

//	Bind uniforms to parameters
	XsdGoPkgHasElem_paramchoicebind_uniformsequenceglsl_program_typeschema_Param_TxsdGlslProgramTypeSequenceBindUniformChoiceParam_

}

type XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_ struct {
//	Bind uniforms and samplers
	BindUniforms []*TxsdGlslProgramTypeSequenceBindUniform `xml:"http://www.collada.org/2008/03/COLLADASchema bind_uniform"`

}

//	compile shader stages
//	Identify code fragments and bind their parameters to effect parameters to identify how their values will be filled in
//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
type XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_ struct {
//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
	Sources *TfxSourcesType `xml:"http://www.collada.org/2008/03/COLLADASchema sources"`

}

type TglslShaderType struct {
//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
	XsdGoPkgHasElem_sourcessequenceglsl_shader_typeschema_Sources_TfxSourcesType_

//	GPU Pipeline stage for this programmable shader. Current standards are VERTEX (vertex shader), FRAGMENT (pixel or fragment shader).  These are recognized by both GLSL and CG
	XsdGoPkgHasAttr_Stage_TfxPipelineStageEnum_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_ struct {
//	compile shader stages
	Shaders []*TglslShaderType `xml:"http://www.collada.org/2008/03/COLLADASchema shader"`

}

type TglslProgramType struct {
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
	XsdGoPkgHasElems_bind_attributesequenceglsl_program_typeschema_BindAttribute_TxsdGlslProgramTypeSequenceBindAttribute_

//	Bind uniforms and samplers
	XsdGoPkgHasElems_bind_uniformsequenceglsl_program_typeschema_BindUniform_TxsdGlslProgramTypeSequenceBindUniform_

//	compile shader stages
	XsdGoPkgHasElems_shadersequenceglsl_program_typeschema_Shader_TglslShaderType_

}

type XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_ struct {
	Program *TglslProgramType `xml:"http://www.collada.org/2008/03/COLLADASchema program"`

}

type TxsdProfileGlslTypeSequenceTechniqueSequencePass struct {
//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_programsequencepasssequencetechniquesequenceprofile_glsl_typeschema_Program_TglslProgramType_

	XsdGoPkgHasElem_statessequencepasssequencetechniquesequenceprofile_glsl_typeschema_States_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceStates_

	XsdGoPkgHasElem_evaluatesequencepasssequencetechniquesequenceprofile_glsl_typeschema_Evaluate_TxsdProfileGlslTypeSequenceTechniqueSequencePassSequenceEvaluate_

}

type XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_ struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	Passes []*TxsdProfileGlslTypeSequenceTechniqueSequencePass `xml:"http://www.collada.org/2008/03/COLLADASchema pass"`

}

type TxsdProfileGlslTypeSequenceTechnique struct {
//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_glsl_typeschema_Pass_TxsdProfileGlslTypeSequenceTechniqueSequencePass_

	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Techniques []*TxsdProfileGlslTypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

type TglslNewparamType struct {
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_

	XsdGoPkgHasGroup_GlslValueGroup

	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_

}

type XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_ struct {
	Newparams []*TglslNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

type TprofileGlslType struct {
	XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_

	XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_

	XsdGoPkgHasElems_newparamsequenceprofile_glsl_typeschema_Newparam_TglslNewparamType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElems_techniquesequenceprofile_glsl_typeschema_Technique_TxsdProfileGlslTypeSequenceTechnique_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The type of platform. This is a vendor-defined character string that indicates the platform or capability target for the technique. Optional
	XsdGoPkgHasAttr_Platform_XsdtNCName_Pc

}

type XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_ struct {
	ProfileGlsl *TprofileGlslType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_GLSL"`

}

//	Opens a block of COMMON platform-specific data types and technique declarations.
type TfxCommonNewparamType struct {
	XsdGoPkgHasElem_float4choicefx_setparam_groupschema_Float4_Tfloat4Type_

	XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElem_float2choicefx_setparam_groupschema_Float2_Tfloat2Type_

	XsdGoPkgHasElem_float3choicefx_setparam_groupschema_Float3_Tfloat3Type_

	XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_

}

type XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_ struct {
	Newparams []*TfxCommonNewparamType `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
type TfxOpaqueEnum xsdt.String

//	Returns true if the value of this enumerated TfxOpaqueEnum is "RGB_ZERO".
func (me TfxOpaqueEnum) IsRgbZero () bool { return me == "RGB_ZERO" }

//	Returns true if the value of this enumerated TfxOpaqueEnum is "A_ONE".
func (me TfxOpaqueEnum) IsAOne () bool { return me == "A_ONE" }

//	This convenience method just performs a simple type conversion to TfxOpaqueEnum's alias type xsdt.String.
func (me TfxOpaqueEnum) ToXsdtString () xsdt.String { return xsdt.String(me) }

//	Returns true if the value of this enumerated TfxOpaqueEnum is "RGB_ONE".
func (me TfxOpaqueEnum) IsRgbOne () bool { return me == "RGB_ONE" }

//	Since TfxOpaqueEnum is just a simple String type, this merely sets the current value from the specified string.
func (me *TfxOpaqueEnum) SetFromString (s string)  { (*xsdt.String)(me).SetFromString(s) }

//	Returns true if the value of this enumerated TfxOpaqueEnum is "A_ZERO".
func (me TfxOpaqueEnum) IsAZero () bool { return me == "A_ZERO" }

//	Since TfxOpaqueEnum is just a simple String type, this merely returns the current string value.
func (me TfxOpaqueEnum) String () string { return xsdt.String(me).String() }

type XsdGoPkgHasAttr_Opaque_TfxOpaqueEnum_AOne struct {
	Opaque TfxOpaqueEnum `xml:"http://www.collada.org/2008/03/COLLADASchema opaque,attr"`

}

//	Returns the default value for Opaque -- "A_ONE"
func (me XsdGoPkgHasAttr_Opaque_TfxOpaqueEnum_AOne) OpaqueDefault () TfxOpaqueEnum { return TfxOpaqueEnum("A_ONE") }

type XsdGoPkgHasAttr_Texture_XsdtNCName_ struct {
	Texture xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema texture,attr"`

}

type XsdGoPkgHasAttr_Texcoord_XsdtNCName_ struct {
	Texcoord xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema texcoord,attr"`

}

type TxsdFxCommonColorOrTextureTypeChoiceTexture struct {
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasAttr_Texcoord_XsdtNCName_

	XsdGoPkgHasAttr_Texture_XsdtNCName_

}

type XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_ struct {
	Texture *TxsdFxCommonColorOrTextureTypeChoiceTexture `xml:"http://www.collada.org/2008/03/COLLADASchema texture"`

}

type XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_ struct {
	Param *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

type TxsdFxCommonColorOrTextureTypeChoiceColor struct {
	XsdGoPkgValue TfxColorType `xml:",chardata"`

	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_ struct {
	Color *TxsdFxCommonColorOrTextureTypeChoiceColor `xml:"http://www.collada.org/2008/03/COLLADASchema color"`

}

type TfxCommonColorOrTextureType struct {
	XsdGoPkgHasElem_paramchoicefx_common_color_or_texture_typeschema_Param_TxsdFxCommonColorOrTextureTypeChoiceParam_

	XsdGoPkgHasElem_colorchoicefx_common_color_or_texture_typeschema_Color_TxsdFxCommonColorOrTextureTypeChoiceColor_

	XsdGoPkgHasElem_texturechoicefx_common_color_or_texture_typeschema_Texture_TxsdFxCommonColorOrTextureTypeChoiceTexture_

}

type TfxCommonTransparentType struct {
	XsdGoPkgHasAttr_Opaque_TfxOpaqueEnum_AOne

	TfxCommonColorOrTextureType

}

type XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_ struct {
	Transparent *TfxCommonTransparentType `xml:"http://www.collada.org/2008/03/COLLADASchema transparent"`

}

type XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_ struct {
	Float *TtargetableFloatType `xml:"http://www.collada.org/2008/03/COLLADASchema float"`

}

type XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_ struct {
	Param *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

type TfxCommonFloatOrParamType struct {
	XsdGoPkgHasElem_paramchoicefx_common_float_or_param_typeschema_Param_TxsdFxCommonFloatOrParamTypeChoiceParam_

	XsdGoPkgHasElem_floatchoicefx_common_float_or_param_typeschema_Float_TxsdFxCommonFloatOrParamTypeChoiceFloat_

}

type XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_ struct {
	IndexOfRefraction *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema index_of_refraction"`

}

type XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_ struct {
	Ambient *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema ambient"`

}

type XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_ struct {
	Emission *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema emission"`

}

type XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_ struct {
	Shininess *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema shininess"`

}

type XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_ struct {
	Specular *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema specular"`

}

type XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_ struct {
	Reflective *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema reflective"`

}

type XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_ struct {
	Transparency *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema transparency"`

}

type XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_ struct {
	Diffuse *TfxCommonColorOrTextureType `xml:"http://www.collada.org/2008/03/COLLADASchema diffuse"`

}

type XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_ struct {
	Reflectivity *TfxCommonFloatOrParamType `xml:"http://www.collada.org/2008/03/COLLADASchema reflectivity"`

}

type TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn struct {
	XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_

	XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_

}

type XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_ struct {
	Blinn *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn `xml:"http://www.collada.org/2008/03/COLLADASchema blinn"`

}

type TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong struct {
	XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_shininesssequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Shininess_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_

	XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_specularsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Specular_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_

}

type XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_ struct {
	Phong *TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong `xml:"http://www.collada.org/2008/03/COLLADASchema phong"`

}

type TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert struct {
	XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_

	XsdGoPkgHasElem_diffusesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Diffuse_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_ambientsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Ambient_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_

}

type XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_ struct {
	Lambert *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert `xml:"http://www.collada.org/2008/03/COLLADASchema lambert"`

}

type TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant struct {
	XsdGoPkgHasElem_emissionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Emission_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_index_of_refractionsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_IndexOfRefraction_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivitysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflectivity_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_reflectivesequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Reflective_TfxCommonColorOrTextureType_

	XsdGoPkgHasElem_transparencysequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparency_TfxCommonFloatOrParamType_

	XsdGoPkgHasElem_transparentsequenceblinnchoicesequencetechniquesequenceprofile_common_typeschema_Transparent_TfxCommonTransparentType_

}

type XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_ struct {
	Constant *TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant `xml:"http://www.collada.org/2008/03/COLLADASchema constant"`

}

type TxsdProfileCommonTypeSequenceTechnique struct {
	XsdGoPkgHasElem_blinnchoicesequencetechniquesequenceprofile_common_typeschema_Blinn_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceBlinn_

	XsdGoPkgHasElem_phongchoicesequencetechniquesequenceprofile_common_typeschema_Phong_TxsdProfileCommonTypeSequenceTechniqueSequenceChoicePhong_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElem_lambertchoicesequencetechniquesequenceprofile_common_typeschema_Lambert_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceLambert_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_constantchoicesequencetechniquesequenceprofile_common_typeschema_Constant_TxsdProfileCommonTypeSequenceTechniqueSequenceChoiceConstant_

//	The technique element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Technique *TxsdProfileCommonTypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

type TprofileCommonType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_newparamsequenceprofile_common_typeschema_Newparam_TfxCommonNewparamType_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElem_techniquesequenceprofile_common_typeschema_Technique_TxsdProfileCommonTypeSequenceTechnique_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_ struct {
	ProfileCommon *TprofileCommonType `xml:"http://www.collada.org/2008/03/COLLADASchema profile_COMMON"`

}

//	FX for OpenGL ES 2.0
//	Declare a new parameter in the profile to be bound to the pipeline state or shaders
//	New parameters may choose to type themselves by value, providing a default.
type XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_ struct {
	Ivec4 Tint4Type `xml:"http://www.collada.org/2008/03/COLLADASchema ivec4"`

}

type XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_ struct {
	Ivec3 Tint3Type `xml:"http://www.collada.org/2008/03/COLLADASchema ivec3"`

}

type XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_ struct {
	Vec2 Tfloat2Type `xml:"http://www.collada.org/2008/03/COLLADASchema vec2"`

}

type XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_ struct {
	Vec4 Tfloat4Type `xml:"http://www.collada.org/2008/03/COLLADASchema vec4"`

}

type XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_ struct {
	Mat3 Tfloat3X3Type `xml:"http://www.collada.org/2008/03/COLLADASchema mat3"`

}

type XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_ struct {
	Vec3 Tfloat3Type `xml:"http://www.collada.org/2008/03/COLLADASchema vec3"`

}

type XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_ struct {
	Bvec2 Tbool2Type `xml:"http://www.collada.org/2008/03/COLLADASchema bvec2"`

}

type XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_ struct {
	Mat2 Tfloat2X2Type `xml:"http://www.collada.org/2008/03/COLLADASchema mat2"`

}

type XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_ struct {
	Bvec4 Tbool4Type `xml:"http://www.collada.org/2008/03/COLLADASchema bvec4"`

}

//	Use a series of these to set the members by name.  The ref attribute will be relative to the struct you are in right now.
type TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam struct {
	XsdGoPkgHasGroup_Gles2ValueGroup

//	Symbol name of the member
	XsdGoPkgHasAttr_Ref_XsdtToken_

}

type XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_ struct {
//	Use a series of these to set the members by name.  The ref attribute will be relative to the struct you are in right now.
	Setparams []*TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam `xml:"http://www.collada.org/2008/03/COLLADASchema setparam"`

}

type TxsdGles2ValueGroupChoiceUsertype struct {
//	Symbol for type or structure in shader code.   This aids in type-checking, resolution of bindings, and support interfaces
	XsdGoPkgHasAttr_Typename_XsdtToken_

//	Use a series of these to set the members by name.  The ref attribute will be relative to the struct you are in right now.
	XsdGoPkgHasElems_setparamsequenceusertypechoicegles2_value_groupschema_Setparam_TxsdGles2ValueGroupChoiceUsertypeSequenceSetparam_

}

type XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_ struct {
	Usertype *TxsdGles2ValueGroupChoiceUsertype `xml:"http://www.collada.org/2008/03/COLLADASchema usertype"`

}

type XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_ struct {
	Bvec3 Tbool3Type `xml:"http://www.collada.org/2008/03/COLLADASchema bvec3"`

}

type XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_ struct {
	Mat4 Tfloat4X4Type `xml:"http://www.collada.org/2008/03/COLLADASchema mat4"`

}

type XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_ struct {
	Ivec2 Tint2Type `xml:"http://www.collada.org/2008/03/COLLADASchema ivec2"`

}

type TxsdGles2ValueGroupChoiceArray struct {
	XsdGoPkgHasGroup_Gles2ValueGroup

//	Enable applications to validate element count without shader having been compiled
	XsdGoPkgHasAttr_Length_XsdtPositiveInteger_

}

type XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_ struct {
	Array *TxsdGles2ValueGroupChoiceArray `xml:"http://www.collada.org/2008/03/COLLADASchema array"`

}

type XsdGoPkgHasGroup_Gles2ValueGroup struct {
	XsdGoPkgHasElem_mat4choicegles2_value_groupschema_Mat4_Tfloat4X4Type_

	XsdGoPkgHasElem_ivec2choicegles2_value_groupschema_Ivec2_Tint2Type_

	XsdGoPkgHasElem_arraychoicegles2_value_groupschema_Array_TxsdGles2ValueGroupChoiceArray_

	XsdGoPkgHasElem_ivec4choicegles2_value_groupschema_Ivec4_Tint4Type_

	XsdGoPkgHasElem_ivec3choicegles2_value_groupschema_Ivec3_Tint3Type_

	XsdGoPkgHasElem_samplerCUBEchoicefx_newparam_groupschema_SamplerCUBE_TfxSamplerCUBEType_

	XsdGoPkgHasElem_floatchoiceformula_setparam_typeschema_Float_TfloatType_

	XsdGoPkgHasElem_vec2choicegles2_value_groupschema_Vec2_Tfloat2Type_

	XsdGoPkgHasElem_sampler2Dchoicefx_newparam_groupschema_Sampler2D_TfxSampler2DType_

	XsdGoPkgHasElem_vec4choicegles2_value_groupschema_Vec4_Tfloat4Type_

//	not in baseline spec but probably available in extensions
	XsdGoPkgHasElem_samplerDEPTHchoicefx_newparam_groupschema_SamplerDEPTH_TfxSamplerDEPTHType_

	XsdGoPkgHasElem_mat3choicegles2_value_groupschema_Mat3_Tfloat3X3Type_

	XsdGoPkgHasElem_vec3choicegles2_value_groupschema_Vec3_Tfloat3Type_

	XsdGoPkgHasElem_boolchoiceformula_setparam_typeschema_Bool_XsdtBoolean_

	XsdGoPkgHasElem_intchoiceformula_setparam_typeschema_Int_TintType_

	XsdGoPkgHasElem_bvec2choicegles2_value_groupschema_Bvec2_Tbool2Type_

	XsdGoPkgHasElem_mat2choicegles2_value_groupschema_Mat2_Tfloat2X2Type_

	XsdGoPkgHasElem_enumchoicecg_param_groupschema_Enum_TglEnumerationType_

	XsdGoPkgHasElem_bvec4choicegles2_value_groupschema_Bvec4_Tbool4Type_

//	not in baseline spec but probably available in extensions
	XsdGoPkgHasElem_sampler3Dchoicefx_newparam_groupschema_Sampler3D_TfxSampler3DType_

	XsdGoPkgHasElem_usertypechoicegles2_value_groupschema_Usertype_TxsdGles2ValueGroupChoiceUsertype_

	XsdGoPkgHasElem_bvec3choicegles2_value_groupschema_Bvec3_Tbool3Type_

}

type Tgles2NewparamType struct {
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElem_modifiersequencefx_newparam_typeschema_Modifier_TfxModifierEnum_

//	The semantic element allows you to specify a semantic for this new param.
	XsdGoPkgHasElem_semanticsequencefx_newparam_typeschema_Semantic_XsdtNCName_

	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasGroup_Gles2ValueGroup

}

type TxsdProfileGles2TypeSequenceNewparam struct {
	Tgles2NewparamType

}

type XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_ struct {
	Newparams []*TxsdProfileGles2TypeSequenceNewparam `xml:"http://www.collada.org/2008/03/COLLADASchema newparam"`

}

//	Support for multiple OpenGL ES 2.0 platforms
type XsdGoPkgHasAttr_Platforms_TlistOfNamesType_ struct {
//	Support for multiple OpenGL ES 2.0 platforms
	Platforms TlistOfNamesType `xml:"http://www.collada.org/2008/03/COLLADASchema platforms,attr"`

}

//	Shading language that will be used.  This is not an enum to support future languages.  Current known languages at this time are GLSL-ES, CG
type XsdGoPkgHasAttr_Language_XsdtNCName_ struct {
//	Shading language that will be used.  This is not an enum to support future languages.  Current known languages at this time are GLSL-ES, CG
	Language xsdt.NCName `xml:"http://www.collada.org/2008/03/COLLADASchema language,attr"`

}

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
//	Set up pipeline state and shaders for rendering
//	A vertex_shader and fragment_shader are linked together to produce a OpenGL ES 2 program.
//	a program is one or more shaders linked together
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
type TxsdGles2ProgramTypeSequenceBindAttribute struct {
//	Bind attributes to semantics to enable semantic association to attributes that are not redeclared as parameters.  Without this, the semantic is the same as the attribute's name.
	XsdGoPkgHasElem_semanticchoicebind_attributesequenceglsl_program_typeschema_Semantic_XsdtToken_

//	shader variable name
	XsdGoPkgHasAttr_Symbol_XsdtToken_

}

type XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_ struct {
//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
	BindAttributes []*TxsdGles2ProgramTypeSequenceBindAttribute `xml:"http://www.collada.org/2008/03/COLLADASchema bind_attribute"`

}

//	Bind uniforms and samplers
//	Bind uniforms to parameters
type XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_ struct {
//	Bind uniforms to parameters
	Param *TxsdCgPassTypeSequenceProgramSequenceShaderSequenceBindUniformChoiceParam `xml:"http://www.collada.org/2008/03/COLLADASchema param"`

}

type TxsdGles2ProgramTypeSequenceBindUniform struct {
//	shader variable name
	XsdGoPkgHasAttr_Symbol_XsdtToken_

	XsdGoPkgHasGroup_Gles2ValueGroup

//	Bind uniforms to parameters
	XsdGoPkgHasElem_paramchoicebind_uniformsequencegles2_program_typeschema_Param_TxsdGles2ProgramTypeSequenceBindUniformChoiceParam_

}

type XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_ struct {
//	Bind uniforms and samplers
	BindUniforms []*TxsdGles2ProgramTypeSequenceBindUniform `xml:"http://www.collada.org/2008/03/COLLADASchema bind_uniform"`

}

//	compile shader stages
//	Identify code fragments and bind their parameters to effect parameters to identify how their values will be filled in
//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
//	Not used by GLSL.  Some languages require functional entry points.  GLSL always uses "main".  CG requires an entry point
type XsdGoPkgHasAttr_Entry_XsdtToken_Main struct {
//	Not used by GLSL.  Some languages require functional entry points.  GLSL always uses "main".  CG requires an entry point
	Entry xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema entry,attr"`

}

//	Returns the default value for Entry -- "main"
func (me XsdGoPkgHasAttr_Entry_XsdtToken_Main) EntryDefault () xsdt.Token { return xsdt.Token("main") }

type TxsdGles2ShaderTypeSequenceSources struct {
	TfxSourcesType

//	Not used by GLSL.  Some languages require functional entry points.  GLSL always uses "main".  CG requires an entry point
	XsdGoPkgHasAttr_Entry_XsdtToken_Main

}

type XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_ struct {
//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
	Sources *TxsdGles2ShaderTypeSequenceSources `xml:"http://www.collada.org/2008/03/COLLADASchema sources"`

}

type Tgles2ShaderType struct {
//	GPU Pipeline stage for this programmable shader. Current standards are VERTEX (vertex shader), FRAGMENT (pixel or fragment shader).  These are recognized by both GLSL and CG
	XsdGoPkgHasAttr_Stage_TfxPipelineStageEnum_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Not used by GLSL.  This identifies a very specific binary target format for such things as a specific generation of GPU.  Ex. NV4x
	XsdGoPkgHasElems_compilersequenceshadersequenceprogramsequencecg_pass_typeschema_Compiler_TfxTargetType_

//	sid of the code or include element which provides the source for this shader.  Code may come from local or library_code.
	XsdGoPkgHasElem_sourcessequencegles2_shader_typeschema_Sources_TxsdGles2ShaderTypeSequenceSources_

}

type XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_ struct {
//	compile shader stages
	Shaders []*Tgles2ShaderType `xml:"http://www.collada.org/2008/03/COLLADASchema shader"`

}

//	link shaders into program
type XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_ struct {
//	link shaders into program
	Linkers []*TfxTargetType `xml:"http://www.collada.org/2008/03/COLLADASchema linker"`

}

type Tgles2ProgramType struct {
//	compile shader stages
	XsdGoPkgHasElems_shadersequencegles2_program_typeschema_Shader_Tgles2ShaderType_

//	link shaders into program
	XsdGoPkgHasElems_linkersequencegles2_program_typeschema_Linker_TfxTargetType_

//	Bind attributes.  If not bound then it is assumed to be the same semantic as the variable name.  If the variable name is prefixed with "gl_" or "sv_" then the prefix may be ignored.
	XsdGoPkgHasElems_bind_attributesequencegles2_program_typeschema_BindAttribute_TxsdGles2ProgramTypeSequenceBindAttribute_

//	Bind uniforms and samplers
	XsdGoPkgHasElems_bind_uniformsequencegles2_program_typeschema_BindUniform_TxsdGles2ProgramTypeSequenceBindUniform_

}

type XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_ struct {
//	A vertex_shader and fragment_shader are linked together to produce a OpenGL ES 2 program.
	Program *Tgles2ProgramType `xml:"http://www.collada.org/2008/03/COLLADASchema program"`

}

//	API state
//	All of the pass state settings for OpenGL ES 2 API
type XsdGoPkgHasAttr_Param_XsdtToken_ struct {
	Param xsdt.Token `xml:"http://www.collada.org/2008/03/COLLADASchema param,attr"`

}

type TxsdGles2PipelineSettingsGroupChoicePointSize struct {
	XsdGoPkgHasAttr_Value_TfloatType_1

	XsdGoPkgHasAttr_Param_XsdtToken_

}

type XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_ struct {
	PointSize *TxsdGles2PipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema point_size"`

}

type XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_ struct {
	LineWidth *TxsdGles2PipelineSettingsGroupChoicePointSize `xml:"http://www.collada.org/2008/03/COLLADASchema line_width"`

}

type TxsdGles2PipelineSettingsGroupChoiceDepthMask struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_True

	XsdGoPkgHasAttr_Param_XsdtToken_

}

type XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_ struct {
	DepthMask *TxsdGles2PipelineSettingsGroupChoiceDepthMask `xml:"http://www.collada.org/2008/03/COLLADASchema depth_mask"`

}

type TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtBoolean_False

}

type XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_ struct {
	ScissorTestEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema scissor_test_enable"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglStencilOpEnum_Keep

}

type XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_ struct {
	Fail *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

type XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_ struct {
	Zpass *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

type XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_ struct {
	Zfail *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglFaceEnum_FrontAndBack

}

type XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_ struct {
	Face *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate struct {
	XsdGoPkgHasElem_zfailsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZfail_

	XsdGoPkgHasElem_facesequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace_

	XsdGoPkgHasElem_failsequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail_

	XsdGoPkgHasElem_zpasssequencestencil_op_separatechoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceZpass_

}

type XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_ struct {
	StencilOpSeparate *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op_separate"`

}

type XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_ struct {
	DepthTestEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema depth_test_enable"`

}

type TxsdGles2PipelineSettingsGroupChoiceScissor struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_Tint4Type_

}

type XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_ struct {
	Scissor *TxsdGles2PipelineSettingsGroupChoiceScissor `xml:"http://www.collada.org/2008/03/COLLADASchema scissor"`

}

type XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_ struct {
	BlendEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema blend_enable"`

}

type TxsdGles2PipelineSettingsGroupChoicePolygonOffset struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_Tfloat2Type_00

}

type XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_ struct {
	PolygonOffset *TxsdGles2PipelineSettingsGroupChoicePolygonOffset `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset"`

}

type XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_ struct {
	SampleCoverageEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_coverage_enable"`

}

type XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_ struct {
	SampleAlphaToCoverageEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema sample_alpha_to_coverage_enable"`

}

type TxsdGles2PipelineSettingsGroupChoiceBlendEquation struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglBlendEquationEnum_FuncAdd

}

type XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_ struct {
	BlendEquation *TxsdGles2PipelineSettingsGroupChoiceBlendEquation `xml:"http://www.collada.org/2008/03/COLLADASchema blend_equation"`

}

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglBlendEnum_Zero

}

type XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_ struct {
	DestRgb *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb `xml:"http://www.collada.org/2008/03/COLLADASchema dest_rgb"`

}

type XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_ struct {
	DestAlpha *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb `xml:"http://www.collada.org/2008/03/COLLADASchema dest_alpha"`

}

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha struct {
	XsdGoPkgHasAttr_Value_TglBlendEnum_One

	XsdGoPkgHasAttr_Param_XsdtToken_

}

type XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_ struct {
	SrcAlpha *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema src_alpha"`

}

type XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_ struct {
	SrcRgb *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema src_rgb"`

}

type TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate struct {
	XsdGoPkgHasElem_src_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha_

	XsdGoPkgHasElem_src_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_SrcRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcRgb_

	XsdGoPkgHasElem_dest_rgbsequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestRgb_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb_

	XsdGoPkgHasElem_dest_alphasequenceblend_func_separatechoicegles2_pipeline_settings_groupschema_DestAlpha_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestAlpha_

}

type XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_ struct {
	BlendFuncSeparate *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func_separate"`

}

type XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_ struct {
	PolygonOffsetFillEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema polygon_offset_fill_enable"`

}

type TxsdGles2PipelineSettingsGroupChoiceBlendColor struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_Tfloat4Type_0000

}

type XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_ struct {
	BlendColor *TxsdGles2PipelineSettingsGroupChoiceBlendColor `xml:"http://www.collada.org/2008/03/COLLADASchema blend_color"`

}

type XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_ struct {
	Zfail *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema zfail"`

}

type XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_ struct {
	Zpass *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema zpass"`

}

type XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_ struct {
	Fail *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFail `xml:"http://www.collada.org/2008/03/COLLADASchema fail"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilOp struct {
	XsdGoPkgHasElem_zfailsequencestencil_opchoicegles2_pipeline_settings_groupschema_Zfail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZfail_

	XsdGoPkgHasElem_zpasssequencestencil_opchoicegles2_pipeline_settings_groupschema_Zpass_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceZpass_

	XsdGoPkgHasElem_failsequencestencil_opchoicegles2_pipeline_settings_groupschema_Fail_TxsdGles2PipelineSettingsGroupChoiceStencilOpSequenceFail_

}

type XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_ struct {
	StencilOp *TxsdGles2PipelineSettingsGroupChoiceStencilOp `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_op"`

}

type XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_ struct {
	CullFaceEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face_enable"`

}

type TxsdGles2PipelineSettingsGroupChoiceDepthRange struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_Tfloat2Type_01

}

type XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_ struct {
	DepthRange *TxsdGles2PipelineSettingsGroupChoiceDepthRange `xml:"http://www.collada.org/2008/03/COLLADASchema depth_range"`

}

type TxsdGles2PipelineSettingsGroupChoiceDepthFunc struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_TglFuncEnum_Always

}

type XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_ struct {
	DepthFunc *TxsdGles2PipelineSettingsGroupChoiceDepthFunc `xml:"http://www.collada.org/2008/03/COLLADASchema depth_func"`

}

type TxsdGles2PipelineSettingsGroupChoiceColorMask struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_Tbool4Type_TrueTrueTrueTrue

}

type XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_ struct {
	ColorMask *TxsdGles2PipelineSettingsGroupChoiceColorMask `xml:"http://www.collada.org/2008/03/COLLADASchema color_mask"`

}

type XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_ struct {
	DitherEnable *TxsdGles2PipelineSettingsGroupChoiceDepthMask `xml:"http://www.collada.org/2008/03/COLLADASchema dither_enable"`

}

type XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_ struct {
	Src *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceSrcAlpha `xml:"http://www.collada.org/2008/03/COLLADASchema src"`

}

type XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_ struct {
	Dest *TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparateSequenceDestRgb `xml:"http://www.collada.org/2008/03/COLLADASchema dest"`

}

type TxsdGles2PipelineSettingsGroupChoiceBlendFunc struct {
	XsdGoPkgHasElem_srcsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Src_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceSrc_

	XsdGoPkgHasElem_destsequenceblend_funcchoicegles2_pipeline_settings_groupschema_Dest_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSequenceDest_

}

type XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_ struct {
	BlendFunc *TxsdGles2PipelineSettingsGroupChoiceBlendFunc `xml:"http://www.collada.org/2008/03/COLLADASchema blend_func"`

}

type TxsdGles2PipelineSettingsGroupChoiceCullFace struct {
	XsdGoPkgHasAttr_Value_TglFaceEnum_Back

	XsdGoPkgHasAttr_Param_XsdtToken_

}

type XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_ struct {
	CullFace *TxsdGles2PipelineSettingsGroupChoiceCullFace `xml:"http://www.collada.org/2008/03/COLLADASchema cull_face"`

}

type XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_ struct {
	Face *TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparateSequenceFace `xml:"http://www.collada.org/2008/03/COLLADASchema face"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_255

}

type XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_ struct {
	Mask *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate struct {
	XsdGoPkgHasElem_facesequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Face_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceFace_

	XsdGoPkgHasElem_masksequencestencil_mask_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask_

}

type XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_ struct {
	StencilMaskSeparate *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask_separate"`

}

type XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_ struct {
	PointSizeEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema point_size_enable"`

}

type XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_ struct {
	Alpha *TxsdGles2PipelineSettingsGroupChoiceBlendEquation `xml:"http://www.collada.org/2008/03/COLLADASchema alpha"`

}

type XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_ struct {
	Rgb *TxsdGles2PipelineSettingsGroupChoiceBlendEquation `xml:"http://www.collada.org/2008/03/COLLADASchema rgb"`

}

type TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate struct {
	XsdGoPkgHasElem_rgbsequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Rgb_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceRgb_

	XsdGoPkgHasElem_alphasequenceblend_equation_separatechoicegles2_pipeline_settings_groupschema_Alpha_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparateSequenceAlpha_

}

type XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_ struct {
	BlendEquationSeparate *TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema blend_equation_separate"`

}

type XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_ struct {
	StencilTestEnable *TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_test_enable"`

}

type XsdGoPkgHasAttr_Value_XsdtFloat_ struct {
	Value xsdt.Float `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue struct {
	XsdGoPkgHasAttr_Value_XsdtFloat_

	XsdGoPkgHasAttr_Param_XsdtToken_

}

type XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_ struct {
	Value *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue `xml:"http://www.collada.org/2008/03/COLLADASchema value"`

}

type XsdGoPkgHasAttr_Value_XsdtBoolean_ struct {
	Value xsdt.Boolean `xml:"http://www.collada.org/2008/03/COLLADASchema value,attr"`

}

type TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert struct {
	XsdGoPkgHasAttr_Value_XsdtBoolean_

	XsdGoPkgHasAttr_Param_XsdtToken_

}

type XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_ struct {
	Invert *TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert `xml:"http://www.collada.org/2008/03/COLLADASchema invert"`

}

type TxsdGles2PipelineSettingsGroupChoiceSampleCoverage struct {
	XsdGoPkgHasElem_valuesequencesample_coveragechoicegles2_pipeline_settings_groupschema_Value_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceValue_

	XsdGoPkgHasElem_invertsequencesample_coveragechoicegles2_pipeline_settings_groupschema_Invert_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageSequenceInvert_

}

type XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_ struct {
	SampleCoverage *TxsdGles2PipelineSettingsGroupChoiceSampleCoverage `xml:"http://www.collada.org/2008/03/COLLADASchema sample_coverage"`

}

type TxsdGles2PipelineSettingsGroupChoiceFrontFace struct {
	XsdGoPkgHasAttr_Value_TglFrontFaceEnum_Ccw

	XsdGoPkgHasAttr_Param_XsdtToken_

}

type XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_ struct {
	FrontFace *TxsdGles2PipelineSettingsGroupChoiceFrontFace `xml:"http://www.collada.org/2008/03/COLLADASchema front_face"`

}

type XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_ struct {
	Mask *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

type XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_ struct {
	Back *TxsdGles2PipelineSettingsGroupChoiceDepthFunc `xml:"http://www.collada.org/2008/03/COLLADASchema back"`

}

type XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_ struct {
	Front *TxsdGles2PipelineSettingsGroupChoiceDepthFunc `xml:"http://www.collada.org/2008/03/COLLADASchema front"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef struct {
	XsdGoPkgHasAttr_Param_XsdtToken_

	XsdGoPkgHasAttr_Value_XsdtUnsignedByte_0

}

type XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_ struct {
	Ref *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate struct {
	XsdGoPkgHasElem_frontsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Front_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceFront_

	XsdGoPkgHasElem_refsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef_

	XsdGoPkgHasElem_masksequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceMask_

	XsdGoPkgHasElem_backsequencestencil_func_separatechoicegles2_pipeline_settings_groupschema_Back_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceBack_

}

type XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_ struct {
	StencilFuncSeparate *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func_separate"`

}

type XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_ struct {
	Mask *TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparateSequenceMask `xml:"http://www.collada.org/2008/03/COLLADASchema mask"`

}

type XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_ struct {
	Ref *TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparateSequenceRef `xml:"http://www.collada.org/2008/03/COLLADASchema ref"`

}

type XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_ struct {
	Func *TxsdGles2PipelineSettingsGroupChoiceDepthFunc `xml:"http://www.collada.org/2008/03/COLLADASchema func"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilFunc struct {
	XsdGoPkgHasElem_masksequencestencil_funcchoicegles2_pipeline_settings_groupschema_Mask_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceMask_

	XsdGoPkgHasElem_refsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Ref_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceRef_

	XsdGoPkgHasElem_funcsequencestencil_funcchoicegles2_pipeline_settings_groupschema_Func_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSequenceFunc_

}

type XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_ struct {
	StencilFunc *TxsdGles2PipelineSettingsGroupChoiceStencilFunc `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_func"`

}

type TxsdGles2PipelineSettingsGroupChoiceStencilMask struct {
	XsdGoPkgHasAttr_Value_TintType_4294967295

	XsdGoPkgHasAttr_Param_XsdtToken_

}

type XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_ struct {
	StencilMask *TxsdGles2PipelineSettingsGroupChoiceStencilMask `xml:"http://www.collada.org/2008/03/COLLADASchema stencil_mask"`

}

type XsdGoPkgHasGroup_Gles2PipelineSettingsGroup struct {
	XsdGoPkgHasElem_blend_equationchoicegles2_pipeline_settings_groupschema_BlendEquation_TxsdGles2PipelineSettingsGroupChoiceBlendEquation_

	XsdGoPkgHasElem_blend_func_separatechoicegles2_pipeline_settings_groupschema_BlendFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendFuncSeparate_

	XsdGoPkgHasElem_polygon_offset_fill_enablechoicegles2_pipeline_settings_groupschema_PolygonOffsetFillEnable_TxsdGles2PipelineSettingsGroupChoicePolygonOffsetFillEnable_

	XsdGoPkgHasElem_blend_colorchoicegles2_pipeline_settings_groupschema_BlendColor_TxsdGles2PipelineSettingsGroupChoiceBlendColor_

	XsdGoPkgHasElem_stencil_opchoicegles2_pipeline_settings_groupschema_StencilOp_TxsdGles2PipelineSettingsGroupChoiceStencilOp_

	XsdGoPkgHasElem_cull_face_enablechoicegles2_pipeline_settings_groupschema_CullFaceEnable_TxsdGles2PipelineSettingsGroupChoiceCullFaceEnable_

	XsdGoPkgHasElem_depth_rangechoicegles2_pipeline_settings_groupschema_DepthRange_TxsdGles2PipelineSettingsGroupChoiceDepthRange_

	XsdGoPkgHasElem_depth_funcchoicegles2_pipeline_settings_groupschema_DepthFunc_TxsdGles2PipelineSettingsGroupChoiceDepthFunc_

	XsdGoPkgHasElem_color_maskchoicegles2_pipeline_settings_groupschema_ColorMask_TxsdGles2PipelineSettingsGroupChoiceColorMask_

	XsdGoPkgHasElem_dither_enablechoicegles2_pipeline_settings_groupschema_DitherEnable_TxsdGles2PipelineSettingsGroupChoiceDitherEnable_

	XsdGoPkgHasElem_blend_funcchoicegles2_pipeline_settings_groupschema_BlendFunc_TxsdGles2PipelineSettingsGroupChoiceBlendFunc_

	XsdGoPkgHasElem_cull_facechoicegles2_pipeline_settings_groupschema_CullFace_TxsdGles2PipelineSettingsGroupChoiceCullFace_

	XsdGoPkgHasElem_stencil_mask_separatechoicegles2_pipeline_settings_groupschema_StencilMaskSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilMaskSeparate_

	XsdGoPkgHasElem_point_size_enablechoicegles2_pipeline_settings_groupschema_PointSizeEnable_TxsdGles2PipelineSettingsGroupChoicePointSizeEnable_

	XsdGoPkgHasElem_blend_equation_separatechoicegles2_pipeline_settings_groupschema_BlendEquationSeparate_TxsdGles2PipelineSettingsGroupChoiceBlendEquationSeparate_

	XsdGoPkgHasElem_stencil_test_enablechoicegles2_pipeline_settings_groupschema_StencilTestEnable_TxsdGles2PipelineSettingsGroupChoiceStencilTestEnable_

	XsdGoPkgHasElem_sample_coveragechoicegles2_pipeline_settings_groupschema_SampleCoverage_TxsdGles2PipelineSettingsGroupChoiceSampleCoverage_

	XsdGoPkgHasElem_front_facechoicegles2_pipeline_settings_groupschema_FrontFace_TxsdGles2PipelineSettingsGroupChoiceFrontFace_

	XsdGoPkgHasElem_stencil_func_separatechoicegles2_pipeline_settings_groupschema_StencilFuncSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilFuncSeparate_

	XsdGoPkgHasElem_stencil_funcchoicegles2_pipeline_settings_groupschema_StencilFunc_TxsdGles2PipelineSettingsGroupChoiceStencilFunc_

	XsdGoPkgHasElem_stencil_maskchoicegles2_pipeline_settings_groupschema_StencilMask_TxsdGles2PipelineSettingsGroupChoiceStencilMask_

	XsdGoPkgHasElem_point_sizechoicegles2_pipeline_settings_groupschema_PointSize_TxsdGles2PipelineSettingsGroupChoicePointSize_

	XsdGoPkgHasElem_line_widthchoicegles2_pipeline_settings_groupschema_LineWidth_TxsdGles2PipelineSettingsGroupChoiceLineWidth_

	XsdGoPkgHasElem_depth_maskchoicegles2_pipeline_settings_groupschema_DepthMask_TxsdGles2PipelineSettingsGroupChoiceDepthMask_

	XsdGoPkgHasElem_scissor_test_enablechoicegles2_pipeline_settings_groupschema_ScissorTestEnable_TxsdGles2PipelineSettingsGroupChoiceScissorTestEnable_

	XsdGoPkgHasElem_stencil_op_separatechoicegles2_pipeline_settings_groupschema_StencilOpSeparate_TxsdGles2PipelineSettingsGroupChoiceStencilOpSeparate_

	XsdGoPkgHasElem_depth_test_enablechoicegles2_pipeline_settings_groupschema_DepthTestEnable_TxsdGles2PipelineSettingsGroupChoiceDepthTestEnable_

	XsdGoPkgHasElem_scissorchoicegles2_pipeline_settings_groupschema_Scissor_TxsdGles2PipelineSettingsGroupChoiceScissor_

	XsdGoPkgHasElem_blend_enablechoicegles2_pipeline_settings_groupschema_BlendEnable_TxsdGles2PipelineSettingsGroupChoiceBlendEnable_

	XsdGoPkgHasElem_polygon_offsetchoicegles2_pipeline_settings_groupschema_PolygonOffset_TxsdGles2PipelineSettingsGroupChoicePolygonOffset_

	XsdGoPkgHasElem_sample_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleCoverageEnable_

	XsdGoPkgHasElem_sample_alpha_to_coverage_enablechoicegles2_pipeline_settings_groupschema_SampleAlphaToCoverageEnable_TxsdGles2PipelineSettingsGroupChoiceSampleAlphaToCoverageEnable_

}

type TxsdGles2PassTypeSequenceStates struct {
	XsdGoPkgHasGroup_Gles2PipelineSettingsGroup

}

type XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_ struct {
//	API state
	States *TxsdGles2PassTypeSequenceStates `xml:"http://www.collada.org/2008/03/COLLADASchema states"`

}

//	runtime execution helpers
type TxsdGles2PassTypeSequenceEvaluate struct {
//	Identify that this pass is intended to render it's stencil bits into a surface parameter
	XsdGoPkgHasElems_stencil_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilTarget_TfxStenciltargetType_

//	The indexed depth render target is supposed to be cleared to this color
	XsdGoPkgHasElems_depth_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthClear_TfxCleardepthType_

//	Identify that this pass is intended to render it's depthinto a surface parameter
	XsdGoPkgHasElems_depth_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_DepthTarget_TfxDepthtargetType_

//	The indexed color render target is supposed to be cleared to this color
	XsdGoPkgHasElems_color_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorClear_TfxClearcolorType_

//	Identify what type of goemetry should be drawn durring this pass.  See comments in fx_draw_common for a list of common strings.
	XsdGoPkgHasElem_drawsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_Draw_TfxDrawType_

//	Identify that this pass is intended to render it's colors into a surface parameter
	XsdGoPkgHasElems_color_targetsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_ColorTarget_TfxColortargetType_

//	The indexed stencil bits render target is supposed to be cleared to this color
	XsdGoPkgHasElems_stencil_clearsequenceevaluatesequencepasssequencetechniquesequenceprofile_gles_typeschema_StencilClear_TfxClearstencilType_

}

type XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_ struct {
//	runtime execution helpers
	Evaluate *TxsdGles2PassTypeSequenceEvaluate `xml:"http://www.collada.org/2008/03/COLLADASchema evaluate"`

}

type Tgles2PassType struct {
//	A vertex_shader and fragment_shader are linked together to produce a OpenGL ES 2 program.
	XsdGoPkgHasElem_programsequencegles2_pass_typeschema_Program_Tgles2ProgramType_

//	API state
	XsdGoPkgHasElem_statessequencegles2_pass_typeschema_States_TxsdGles2PassTypeSequenceStates_

//	runtime execution helpers
	XsdGoPkgHasElem_evaluatesequencegles2_pass_typeschema_Evaluate_TxsdGles2PassTypeSequenceEvaluate_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Add metadata to this pass that may be used by games or tools to make decisions
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

}

type XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_ struct {
//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	Passes []*Tgles2PassType `xml:"http://www.collada.org/2008/03/COLLADASchema pass"`

}

type TxsdProfileGles2TypeSequenceTechnique struct {
//	Add metadata to this pass that may be used by games or tools to make decisions
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

	XsdGoPkgHasAttr_Id_XsdtId_

//	A static declaration of all the render states, shaders, and settings for one rendering pipeline.
	XsdGoPkgHasElems_passsequencetechniquesequenceprofile_gles2_typeschema_Pass_Tgles2PassType_

//	The sid attribute is a text string value containing the sub-identifier of this element.
//	This value must be unique within the scope of the parent element. Optional attribute.
	XsdGoPkgHasAttr_Sid_TsidType_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

}

type XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_ struct {
//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	Techniques []*TxsdProfileGles2TypeSequenceTechnique `xml:"http://www.collada.org/2008/03/COLLADASchema technique"`

}

type TprofileGles2Type struct {
	XsdGoPkgHasElems_newparamsequenceprofile_gles2_typeschema_Newparam_TxsdProfileGles2TypeSequenceNewparam_

//	Unique identifier for referencing
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	Support for multiple OpenGL ES 2.0 platforms
	XsdGoPkgHasAttr_Platforms_TlistOfNamesType_

//	Shading language that will be used.  This is not an enum to support future languages.  Current known languages at this time are GLSL-ES, CG
	XsdGoPkgHasAttr_Language_XsdtNCName_

	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.
	XsdGoPkgHasElems_techniquesequenceprofile_gles2_typeschema_Technique_TxsdProfileGles2TypeSequenceTechnique_

//	The fx_code_profile type allows you to specify an inline block of source code.  It is HIGHLY recommended to use a CDATA block inside to avoid issues with
	XsdGoPkgHasElems_codechoicesequenceprofile_cg_typeschema_Code_TfxCodeType_

//	Include shader code from a remote URI.  If binary, assume raw.
	XsdGoPkgHasElems_includechoicesequenceprofile_cg_typeschema_Include_TfxIncludeType_

}

type XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_ struct {
	ProfileGles2 *TprofileGles2Type `xml:"http://www.collada.org/2008/03/COLLADASchema profile_GLES2"`

}

type XsdGoPkgHasGroup_FxProfileGroup struct {
	XsdGoPkgHasElem_profile_GLESchoicefx_profile_groupschema_ProfileGles_TprofileGlesType_

	XsdGoPkgHasElem_profile_BRIDGEchoicefx_profile_groupschema_ProfileBridge_TprofileBridgeType_

	XsdGoPkgHasElem_profile_CGchoicefx_profile_groupschema_ProfileCg_TprofileCgType_

	XsdGoPkgHasElem_profile_GLSLchoicefx_profile_groupschema_ProfileGlsl_TprofileGlslType_

	XsdGoPkgHasElem_profile_COMMONchoicefx_profile_groupschema_ProfileCommon_TprofileCommonType_

	XsdGoPkgHasElem_profile_GLES2choicefx_profile_groupschema_ProfileGles2_TprofileGles2Type_

}

type TeffectType struct {
//	The annotate element allows you to specify an annotation on this effect.
	XsdGoPkgHasElems_annotatesequenceeffect_typeschema_Annotate_TfxAnnotateType_

//	The effect element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The newparam element allows you to create new effect parameters which can be shared by multipe profiles.
	XsdGoPkgHasElems_newparamsequenceeffect_typeschema_Newparam_TfxNewparamType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

	XsdGoPkgHasGroup_FxProfileGroup

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

}

type XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_ struct {
//	There must be at least one effect element.
	Effects []*TeffectType `xml:"http://www.collada.org/2008/03/COLLADASchema effect"`

}

type TlibraryEffectsType struct {
//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	There must be at least one effect element.
	XsdGoPkgHasElems_effectsequencelibrary_effects_typeschema_Effect_TeffectType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The library_effects element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

}

type XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_ struct {
//	The COLLADA element may contain any
//	number of library_effects elements.
	LibraryEffectses []*TlibraryEffectsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_effects"`

}

//	The COLLADA element may contain any
//	number of library_nodes elements.
//	The library_nodes element declares a module of node elements.
type TlibraryNodesType struct {
//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The library_nodes element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

//	There must be at least one node element.
	XsdGoPkgHasElems_nodesequencevisual_scene_typeschema_Node_TnodeType_

}

type XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_ struct {
//	The COLLADA element may contain any
//	number of library_nodes elements.
	LibraryNodeses []*TlibraryNodesType `xml:"http://www.collada.org/2008/03/COLLADASchema library_nodes"`

}

//	The COLLADA element may contain any
//	number of library_materials elements.
//	The library_physics_materials element declares a module of physics_material elements.
//	There must be at least one physics_material element.
type XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_ struct {
//	There must be at least one physics_material element.
	PhysicsMaterials []*TphysicsMaterialType `xml:"http://www.collada.org/2008/03/COLLADASchema physics_material"`

}

type TlibraryPhysicsMaterialsType struct {
//	The name attribute is the text string name of this element. Optional attribute.
	XsdGoPkgHasAttr_Name_XsdtToken_

//	There must be at least one physics_material element.
	XsdGoPkgHasElems_physics_materialsequencelibrary_physics_materials_typeschema_PhysicsMaterial_TphysicsMaterialType_

//	The library_physics_materials element may contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

//	The id attribute is a text string containing the unique identifier of this element.
//	This value must be unique within the instance document. Optional attribute.
	XsdGoPkgHasAttr_Id_XsdtId_

}

type XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_ struct {
//	The COLLADA element may contain any
//	number of library_materials elements.
	LibraryPhysicsMaterialses []*TlibraryPhysicsMaterialsType `xml:"http://www.collada.org/2008/03/COLLADASchema library_physics_materials"`

}

type TxsdCollada struct {
//	The COLLADA element may contain any
//	number of library_materials elements.
	XsdGoPkgHasElems_library_physics_materialschoicesequenceCOLLADAschema_LibraryPhysicsMaterials_TlibraryPhysicsMaterialsType_

//	The COLLADA element may contain any
//	number of library_animation_clips
//	elements.
	XsdGoPkgHasElems_library_animation_clipschoicesequenceCOLLADAschema_LibraryAnimationClips_TlibraryAnimationClipsType_

//	The COLLADA element may contain any
//	number of library_materials elements.
	XsdGoPkgHasElems_library_materialschoicesequenceCOLLADAschema_LibraryMaterials_TlibraryMaterialsType_

//	The COLLADA element may contain any
//	number of library_images elements.
	XsdGoPkgHasElems_library_imageschoicesequenceCOLLADAschema_LibraryImages_TlibraryImagesType_

	XsdGoPkgHasElems_library_kinematics_sceneschoicesequenceCOLLADAschema_LibraryKinematicsScenes_TlibraryKinematicsScenesType_

//	The COLLADA element may contain any
//	number of library_animations elements.
	XsdGoPkgHasElems_library_animationschoicesequenceCOLLADAschema_LibraryAnimations_TlibraryAnimationsType_

//	The version attribute is the COLLADA schema revision with which the instance document
//	conforms. Required Attribute.
	XsdGoPkgHasAttr_Version_TversionEnum_

//	The COLLADA element may contain any
//	number of library_controllerss elements.
	XsdGoPkgHasElems_library_controllerschoicesequenceCOLLADAschema_LibraryControllers_TlibraryControllersType_

//	The COLLADA element may contain any
//	number of library_visual_scenes
//	elements.
	XsdGoPkgHasElems_library_visual_sceneschoicesequenceCOLLADAschema_LibraryVisualScenes_TlibraryVisualScenesType_

//	The xml:base attribute allows you to define the base URI for this COLLADA document. See
//	http://www.w3.org/TR/xmlbase/ for more information.
	xml.XsdGoPkgHasAttr_Base

//	The COLLADA element may contain any
//	number of library_lights elements.
	XsdGoPkgHasElems_library_lightschoicesequenceCOLLADAschema_LibraryLights_TlibraryLightsType_

//	The COLLADA element may contain any
//	number of library_cameras elements.
	XsdGoPkgHasElems_library_cameraschoicesequenceCOLLADAschema_LibraryCameras_TlibraryCamerasType_

//	The COLLADA element must contain an asset element.
	XsdGoPkgHasElem_assetsequencelibrary_animation_clips_typeschema_Asset_TassetType_

//	The scene embodies the entire set of information that can be visualized from the
//	contents of a COLLADA resource. The scene element declares the base of the scene
//	hierarchy or scene graph. The scene contains elements that comprise much of the
//	visual and transformational information content as created by the authoring tools.
	XsdGoPkgHasElem_scenesequenceCOLLADAschema_Scene_TxsdColladaSequenceScene_

	XsdGoPkgHasElems_library_articulated_systemschoicesequenceCOLLADAschema_LibraryArticulatedSystems_TlibraryArticulatedSystemsType_

//	The COLLADA element may contain any
//	number of library_geometriess elements.
	XsdGoPkgHasElems_library_geometrieschoicesequenceCOLLADAschema_LibraryGeometries_TlibraryGeometriesType_

//	The extra element may appear any number of times.
	XsdGoPkgHasElems_extrasequenceasset_typeschema_Extra_TextraType_

	XsdGoPkgHasElems_library_kinematics_modelschoicesequenceCOLLADAschema_LibraryKinematicsModels_TlibraryKinematicsModelsType_

//	The COLLADA element may contain any
//	number of library_force_fields elements.
	XsdGoPkgHasElems_library_force_fieldschoicesequenceCOLLADAschema_LibraryForceFields_TlibraryForceFieldsType_

	XsdGoPkgHasElems_library_jointschoicesequenceCOLLADAschema_LibraryJoints_TlibraryJointsType_

	XsdGoPkgHasElems_library_formulaschoicesequenceCOLLADAschema_LibraryFormulas_TlibraryFormulasType_

//	The COLLADA element may contain any
//	number of library_physics_scenes
//	elements.
	XsdGoPkgHasElems_library_physics_sceneschoicesequenceCOLLADAschema_LibraryPhysicsScenes_TlibraryPhysicsScenesType_

//	The COLLADA element may contain any
//	number of library_physics_models
//	elements.
	XsdGoPkgHasElems_library_physics_modelschoicesequenceCOLLADAschema_LibraryPhysicsModels_TlibraryPhysicsModelsType_

//	The COLLADA element may contain any
//	number of library_effects elements.
	XsdGoPkgHasElems_library_effectschoicesequenceCOLLADAschema_LibraryEffects_TlibraryEffectsType_

//	The COLLADA element may contain any
//	number of library_nodes elements.
	XsdGoPkgHasElems_library_nodeschoicesequenceCOLLADAschema_LibraryNodes_TlibraryNodesType_

}

type XsdGoPkgHasElems_Collada struct {
//	The COLLADA element declares the root of the document that comprises some of the content
//	in the COLLADA schema.
	Colladas []*TxsdCollada `xml:"http://www.collada.org/2008/03/COLLADASchema COLLADA"`

}

//	The COLLADA element declares the root of the document that comprises some of the content
//	in the COLLADA schema.
type XsdGoPkgHasElem_Collada struct {
//	The COLLADA element declares the root of the document that comprises some of the content
//	in the COLLADA schema.
	Collada *TxsdCollada `xml:"http://www.collada.org/2008/03/COLLADASchema COLLADA"`

}
